{"version":3,"sources":["types/index.tsx","redux/actions/index.tsx","redux/reducers/addOrg.ts","redux/reducers/editOrg.ts","redux/reducers/viewOrg.ts","redux/reducers/searchOrgs.ts","redux/reducers/auth.ts","redux/reducers/app.ts","redux/reducers/index.tsx","components/Organizations.tsx","containers/Organizations.tsx","components/Header.tsx","components/OrganizationsBrowser.tsx","data/userProfile.ts","data/groups.tsx","data/workspace.ts","data/model.ts","redux/actions/viewOrg.ts","redux/actions/searchOrgs.ts","containers/OrganizationsBrowser.tsx","redux/actions/addOrg.ts","components/NewOrganization.tsx","containers/NewOrganization.tsx","components/ViewOrganization.tsx","containers/ViewOrganization.tsx","redux/actions/editOrg.ts","components/EditOrganization.tsx","containers/EditOrganization.tsx","components/Auth.tsx","data/auth.ts","redux/actions/auth.ts","containers/Auth.tsx","lib/windowChannel.ts","lib/IFrameSimulator.ts","lib/IFrameIntegration.ts","redux/actions/app.ts","components/KBaseIntegration.tsx","containers/KBaseIntegration.tsx","redux/state.tsx","App.tsx","index.tsx"],"names":["UIErrorType","UserRelationToOrganization","AuthState","EditOrgState","SyncState","EditState","SaveState","ValidationState","FieldState","ViewOrgState","AppState","SortDirection","ActionFlag","reducer","state","action","type","ADD_ORG_START","Object","objectSpread","addOrg","saveState","SAVING","addOrgStart","ADD_ORG_SUCCESS","editState","UNEDITED","SAVED","addOrgSuccess","ADD_ORG_ERROR","SAVE_ERROR","error","addOrgError","ADD_ORG_EDIT_START","validationState","NONE","NEW","newOrganization","id","value","status","name","gravatarHash","description","addOrgEditStart","ADD_ORG_EDIT_FINISH","addOrgEditFinish","ADD_ORG_UPDATE_NAME_SUCCESS","EDITED","EDITED_OK","addOrgUpdateNameSuccess","ADD_ORG_UPDATE_NAME_ERROR","EDITED_ERROR","addOrgUpdateNameError","ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","addOrgUpdateGravatarHashSuccess","ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR","addOrgUpdateGravatarHashError","ADD_ORG_UPDATE_ID_SUCCESS","addOrgUpdateIdSuccess","ADD_ORG_UPDATE_ID_ERROR","addOrgUpdateIdError","ADD_ORG_UPDATE_DESCRIPTION_SUCCESS","addOrgUpdateDescriptionSuccess","ADD_ORG_UPDATE_DESCRIPTION_ERROR","addOrgUpdateDescriptionError","ADD_ORG_EVALUATE_OK","VALID","addOrgEvaluateOk","ADD_ORG_EVALUATE_ERRORS","INVALID","addOrgEvaluateErrors","EDIT_ORG_EDIT_START","editOrg","organizationId","editedOrganization","editOrgEditStart","EDIT_ORG_EDIT_SUCCESS","editOrgEditSuccess","EDIT_ORG_SAVE_START","editOrgSaveStart","EDIT_ORG_SAVE_SUCCESS","editOrgSaveSuccess","EDIT_ORG_SAVE_ERROR","editOrgSaveError","EDIT_ORG_UPDATE_NAME_SUCCESS","editOrgUpdateNameSuccess","EDIT_ORG_UPDATE_NAME_ERROR","editOrgUpdateNameError","EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","editOrgUpdateGravatarHashSuccess","EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR","editOrgUpdateGravatarHashError","EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS","editOrgUpdateDescriptionSuccess","EDIT_ORG_UPDATE_DESCRIPTION_ERROR","editOrgUpdateDescriptionError","EDIT_ORG_EVALUATE_OK","editOrgEvaluateOk","EDIT_ORG_EVALUATE_ERRORS","editOrgEvaluateErrors","VIEW_ORG_FETCH_START","viewOrg","types","FETCHING","viewOrgStart","VIEW_ORG_FETCH_SUCCESS","READY","organization","viewOrgSuccess","VIEW_ORG_FETCH_ERROR","ERROR","viewOrgError","VIEW_ORG_STOP","viewOrgStop","SEARCH_ORGS_START","_state$browseOrgs","browseOrgs","filter","sortBy","sortDirection","searchTerms","auth","authorization","username","searching","searchOrgsStart","SEARCH_ORGS_SUCCESS","organizations","totalCount","filteredCount","length","searchOrgsSuccess","SEARCH_ORGS_ERROR","searchOrgsError","SORT_ORGS_START","_state$browseOrgs2","sortOrgsStart","FILTER_ORGS_START","filterOrgsStart","AUTH_CHECK_START","CHECKING","message","token","realname","roles","authCheckStart","AUTH_AUTHORIZED","AUTHORIZED","authAuthorized","AUTH_UNAUTHORIZED","UNAUTHORIZED","authUnauthorized","AUTH_CHECK_ERROR","authCheckError","APP_SUCCESS","app","config","appSuccess","addOrgReducer","editOrgReducer","searchOrgsReducer","viewOrgReducer","authReducer","appReducer","Organizations","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","org","react","style","width","height","src","getAvatarUrl","relation","icon","VIEW","tooltip","placement","mouseEnterDelay","title","MEMBER","ADMIN","OWNER","theme","index","className","String","NavLink","to","concat","renderAvatar","href","owner","target","renderRelation","_this2","map","renderOrg","es_alert","maxWidth","margin","renderOrgs","React","connect","Header","children","fa","verticalAlign","marginLeft","marginRight","flex","data-test","display","flexDirection","alignItems","buildSeparator","OrganizationsBrowser","searchInput","searchButton","showInfo","onSearchOrgs","Modal","info","content","current","split","currentSearchInputValue","setState","e","preventDefault","doSearch","onSortOrgs","onFilterOrgs","onSearchInputChange","renderSortArea","renderFilterArea","group_default","a","onChange","onSortByChange","bind","es_radio","marginTop","onSortDirectionChange","ASCENDING","DESCENDING","onFilterChange","onSubmit","placeholder","autoFocus","ref","es_button","disabled","haveSearchInput","form","htmlType","renderSearchIcon","onClick","onClearSearch","src_components_Header","fontWeight","fontStyle","renderSearchFeedback","justifyContent","shape","onShowInfo","es_select","onSortByChange2","defaultValue","dropdownMatchSelectWidth","Option","onSortDirectionChange2","onFilterChange2","renderHeader","renderSearchBar","renderSearchFilter","containers_Organizations","UserProfileClient","_ref","url","method","param","version","Math","random","slice","params","fetch","mode","cache","headers","Authorization","Content-Type","Accept","body","JSON","stringify","makeEmptyPayload","then","response","Error","statusText","json","makePayload","result","usernames","GroupsClient","exists","_ref2","newGroup","custom","gravatarhash","groupUpdate","WorkspaceClient","Model","group","profile","createdate","moddate","user","city","userdata","country","avatarOption","synced","gravatarDefault","createdAt","Date","modifiedAt","groups","profiles","briefGroupToBriefOrg","get","query","groupsServiceURL","userProfileClient","userProfileServiceURL","workspaceServiceURL","getGroups","owners","reduce","set","Map","keys","getUserProfiles","Array","from","profileMap","groupsToOrgs","orgs","direction","sort","b","localeCompare","console","warn","applySort","searchTermsRe","term","RegExp","every","termRe","test","applyOrgSearch","applyFilter","total","_this3","getGroupById","getUserProfile","userProfile","Promise","reject","groupExists","newOrg","_this4","createGroup","groupToOrg","orgUpdate","updateGroup","Validation","validateOrgId","validateOrgName","validateOrgDescription","match","StaticData","viewOrgFetch","dispatch","getState","_getState","_getState$auth$author","services","Groups","UserProfile","Workspace","getOrg","catch","err","code","searchOrgs","_getState$browseOrgs","queryOrgs","sortOrgs","_getState2","_getState2$browseOrgs","_getState2$auth$autho","filterOrgs","_getState3","_getState3$browseOrgs","_getState3$auth$autho","_ref3","actions","AddOrgEvaluateErrors","addOrgEdit","addOrgEvaluate","model","addOrgUpdateName","_Validation$validateO","_Validation$validateO2","slicedToArray","validatedName","addOrgUpdateGravatarHash","_Validation$validateO3","validateOrgGravatarHash","_Validation$validateO4","validateGravatarHash","addOrgUpdateId","_Validation$validateO5","_Validation$validateO6","validatedId","_state$auth$authoriza","newModelFromState","addOrgUpdateDescription","_getState4","_getState4$auth$autho","_model$validateOrgDes","_model$validateOrgDes2","validatedDescription","NewOrganization","cancelToBrowser","gravatarEmail","origin","document","location","onAddOrgEdit","email","hashed","md5","onUpdateGravatarHash","isModified","confirm","onOk","onCancel","okText","cancelText","onAddOrg","persist","onUpdateName","onUpdateDescription","onUpdateId","onNameChange","color","marginBottom","onGravatarEmailSync","onGravatarHashChange","onIdChange","minHeight","maxHeight","onDescriptionChange","getOrgAvatarUrl","renderOrgAvatar","dangerouslySetInnerHTML","__html","marked","_this$props","label","orgName","canSave","onClickCancelToBrowser","Redirect","push","renderForm","renderPreview","renderLoadingHeader","_ref$addOrg","ViewOrganization","onViewOrg","renderEditRow","textAlign","avatarUrl","Intl","DateTimeFormat","month","day","year","format","renderEditButton","renderUserRelationship","renderInfo","_ref$viewOrg","EditOrgEvaluateErrors","editOrgEdit","editableOrg","UNEDITED_OK","EDIT_ORG_EDIT_ERROR","editOrgSave","_getState2$editOrg","update","updateOrg","editOrgEvaluate","editOrgUpdateName","editOrgUpdateGravatarHash","editOrgUpdateDescription","_getState5","_getState5$auth$autho","EditOrganization","cancelToViewer","onEditOrgEdit","onEditOrgSave","onClickCancelToViewer","_ref$editOrg","Auth","tokenRef","checkAuth","onRemoveAuthorization","onAddAuthorization","onLoginClick","onLogoutClick","buildAuthToolbar","buildAuthForm","hosted","buildAuthProd","buildAuthDev","endpoints","AuthClient","path","join","makePath","Cookies","all","getTokenInfo","getMe","account","desc","_ref4","_ref5","_ref6","Listener","onSuccess","onError","WaitingListener","started","timeout","Message","payload","channel","uuidv4","created","envelope","Channel","window","host","channelId","awaitingResponse","waitingListeners","listeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","messageEvent","data","has","delete","handler","ex","awaiting","forEach","listener","messageId","success","listen","postMessage","getMessage","sendMessage","resolve","sendRequest","setTimeout","now","getTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","elapsed","_iterator","entries","Symbol","iterator","next","done","return","size","startMonitor","listenOnce","sent","received","_this5","receiveMessage","addEventListener","removeEventListener","IFrameSimulator","frameId","uuid","parentHost","IFrameIntegration","frameElement","hasAttribute","getAttribute","parse","decodeURIComponent","KBaseIntegration","onAppStart","iframeParams","getParamsFromIFrame","baseUrl","fakeIframeParams","StateInstances","rawOrganizations","selectedOrganizationId","makeEmptyEditableOrganization","pending","library","add","faSpinner","faSearch","initialState","makeInitialState","store","createStore","theReducer","compose","applyMiddleware","thunk","App","react_default","createElement","es","containers_Auth","containers_KBaseIntegration","HashRouter","basename","Route","component","containers_ViewOrganization","containers_EditOrganization","exact","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.907b55eb.chunk.js","sourcesContent":["import { ViewOrganizationState } from \"../components/ViewOrganization\";\nimport { types } from \"util\";\n\n/* Types from the organization service (approximately) */\n\n/*\n    Organization\n*/\n\nexport interface OrganizationUpdate {\n    name: string\n    gravatarHash: string | null\n    description: string\n}\n\nexport enum UIErrorType {\n    NONE = 0,\n    INFO,\n    WARNING,\n    ERROR\n}\n\nexport interface UIError {\n    type: UIErrorType,\n    message?: string\n}\n\nexport interface EditableOrganization {\n    id: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    name: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    gravatarHash: {\n        value: string | null\n        status: FieldState\n        error: UIError\n    }\n    description: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n}\n\nexport interface Owner {\n    username: string\n    realname: string\n    organization: string\n    city: string\n    state: string\n    country: string\n    avatarOption: string\n    gravatarHash: string\n    gravatarDefault: string\n}\n\nexport enum UserRelationToOrganization {\n    NONE = 0,\n    VIEW,\n    MEMBER,\n    ADMIN,\n    OWNER\n}\n\nexport interface BriefOrganization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    owner: {\n        username: string\n        realname: string\n    },\n    relation: UserRelationToOrganization,\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface Organization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    description: string\n    owner: Owner\n    relation: UserRelationToOrganization\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface EditedOrganization {\n    id: {\n        value: string,\n        error?: UIError\n    }\n    name: {\n        value: string,\n        error?: UIError\n    }\n    description: {\n        value: string,\n        error?: UIError\n    }\n}\n\n/*\n    Collection of organizations\n*/\n\nexport type Organizations = Array<Organization>\n\n\n/* REDUX */\n\nexport enum AuthState {\n    NONE = 0,\n    CHECKING,\n    AUTHORIZED,\n    UNAUTHORIZED,\n    ERROR\n}\n\nexport interface UserAuthorization {\n    token: string,\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\n\nexport interface Authorization {\n    status: AuthState,\n    message: string,\n    authorization: UserAuthorization\n}\n\n// export enum Filter {\n//     All = 1,\n//     Yours\n// }\n\n\nexport enum EditOrgState {\n    NONE = 0,\n    FETCHING,\n    READY,\n    EDITING_CAN_SAVE,\n    EDITING_ERRORS,\n    SAVING,\n    SAVED,\n    ERROR\n}\n\n// export enum AddOrgState {\n//     NONE = 0,\n//     READY,\n//     UNEDITED_OK,\n//     UNEDITED_\n//     EDITED_OK,\n//     EDITED_ERRORS,\n//     SAVING,\n//     SAVED,\n//     ERROR\n// }\n\nexport enum SyncState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    DIRTY = 'DIRTY',\n    CLEAN = 'CLEAN'\n}\n\nexport enum EditState {\n    NONE = 'NONE',\n    UNEDITED = 'UNEDITED',\n    EDITED = 'EDITED'\n}\n\n// TODO: or CLEAN to replace new and saved\nexport enum SaveState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    READY = 'READY',\n    SAVING = 'SAVING',\n    SAVED = 'SAVED',\n    SAVE_ERROR = 'SAVE_ERROR'\n}\n\nexport enum ValidationState {\n    NONE = 'NONE',\n    VALID = 'VALID',\n    INVALID = 'INVALID'\n}\n\nexport enum FieldState {\n    NONE = 0,\n    UNEDITED_OK,\n    UNEDITED_ERROR,\n    EDITED_OK,\n    EDITED_ERROR,\n    EDITED_WARNING\n}\n\nexport enum ViewOrgState {\n    NONE = 0,\n    INITIAL,\n    FETCHING,\n    READY,\n    ERROR\n}\n\nexport enum AppState {\n    NONE = 0,\n    LOADING,\n    READY,\n    ERROR\n}\n\nexport enum SortDirection {\n    ASCENDING = 'asc',\n    DESCENDING = 'desc'\n}\n\n\nexport interface StoreState {\n    browseOrgs: {\n        rawOrganizations: Array<BriefOrganization>\n        organizations: Array<BriefOrganization>\n        totalCount: number\n        filteredCount: number\n        sortBy: string\n        sortDirection: SortDirection\n        filter: string\n        searchTerms: Array<string>\n        selectedOrganizationId: string | null\n        searching: boolean\n    }\n\n    auth: Authorization\n    error: AppError | null\n\n    app: {\n        status: AppState,\n        config: AppConfig,\n        error?: AppError\n    },\n    addOrg: {\n        editState: EditState,\n        saveState: SaveState,\n        validationState: ValidationState,\n        newOrganization: EditableOrganization\n        error?: AppError\n    }\n    updateOrg: {\n        pending: boolean\n    }\n    viewOrg: {\n        state: ViewOrgState\n        organization?: Organization\n        error?: AppError\n    }\n    editOrg: {\n        organizationId: string,\n        editState: EditState,\n        saveState: SaveState,\n        validationState: ValidationState,\n        editedOrganization: EditableOrganization\n        error?: AppError\n    }\n}\n\n/* COMPONENT PROPS */\n\n\n\n\n// ADD ORG\n\n\n\n\n// export interface EditOrganizationProps {\n//     id: string,\n//     state: EditOrgState\n//     organization?: Organization\n//     editedOrganization?: EditedOrganization\n//     error?: AppError\n//     onEditOrg: (id: string) => void\n//     onUpdateOrg: () => void\n//     onUpdateName: (name: string) => void,\n//     onUpdateDescription: (description: string) => void\n// }\n\n\nexport interface AppError {\n    code: string,\n    message: string\n}\n\nexport interface AppConfig {\n    baseUrl: string,\n    services: {\n        Groups: {\n            url: string\n        },\n        UserProfile: {\n            url: string\n        },\n        Workspace: {\n            url: string\n        }\n    }\n}\n\nexport interface AuthProps {\n    authorization: Authorization,\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n    hosted: boolean,\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport * as types from '../../types';\nimport { Model } from '../../data/model'\n\nexport enum ActionFlag {\n    APP = 1,\n    APP_START,\n    APP_SUCCESS,\n    // APP_SUCCESS_IFRAME,\n    // APP_SUCCESS_SOLO,\n    APP_ERROR,\n\n    SORT_ORGS,\n    SORT_ORGS_START,\n\n    FILTER_ORGS,\n    FILTER_ORGS_START,\n\n    SEARCH_ORGS,\n    SEARCH_ORGS_START,\n    SEARCH_ORGS_SUCCESS,\n    SEARCH_ORGS_ERROR,\n\n    UPDATE_ORG,\n    UPDATE_ORG_START,\n    UPDATE_ORG_SUCCESS,\n    UPDATE_ORG_ERROR,\n\n    // viewing org\n    VIEW_ORG_FETCH,\n    VIEW_ORG_FETCH_START,\n    VIEW_ORG_FETCH_SUCCESS,\n    VIEW_ORG_FETCH_ERROR,\n    VIEW_ORG_STOP,\n\n\n    // add org fields\n    ADD_ORG_EDIT,\n    ADD_ORG_EDIT_START,\n    ADD_ORG_EDIT_FINISH,\n\n    ADD_ORG_UPDATE_NAME,\n    ADD_ORG_UPDATE_NAME_SUCCESS,\n    ADD_ORG_UPDATE_NAME_ERROR,\n\n    ADD_ORG_UPDATE_GRAVATAR_HASH,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    ADD_ORG_UPDATE_ID,\n    ADD_ORG_UPDATE_ID_SUCCESS,\n    ADD_ORG_UPDATE_ID_ERROR,\n\n    ADD_ORG_UPDATE_DESCRIPTION,\n    ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    ADD_ORG_EVALUATE,\n    ADD_ORG_EVALUATE_OK,\n    ADD_ORG_EVALUATE_ERRORS,\n\n    ADD_ORG,\n    ADD_ORG_START,\n    ADD_ORG_SUCCESS,\n    ADD_ORG_ERROR,\n\n    // editing org\n    EDIT_ORG_EDIT,\n    EDIT_ORG_EDIT_START,\n    EDIT_ORG_EDIT_SUCCESS,\n    EDIT_ORG_EDIT_ERROR,\n\n    EDIT_ORG_SAVE,\n    EDIT_ORG_SAVE_START,\n    EDIT_ORG_SAVE_SUCCESS,\n    EDIT_ORG_SAVE_ERROR,\n\n    // edit org, field level updates\n    EDIT_ORG_UPDATE_NAME,\n    EDIT_ORG_UPDATE_NAME_SUCCESS,\n    EDIT_ORG_UPDATE_NAME_ERROR,\n\n    EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    EDIT_ORG_UPDATE_DESCRIPTION,\n    EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    EDIT_ORG_EVALUATE,\n    EDIT_ORG_EVALUATE_OK,\n    EDIT_ORG_EVALUATE_ERRORS,\n\n    // Auth\n    AUTH_CHECK,\n    AUTH_CHECK_START,\n    AUTH_CHECK_ERROR,\n    AUTH_AUTHORIZED,\n    AUTH_UNAUTHORIZED,\n    AUTH_REMOVE_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION_ERROR\n}\n\n\n","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    AddOrgEditStart, AddOrgEditFinish,\n    AddOrgUpdateNameSuccess, AddOrgUpdateNameError,\n    AddOrgUpdateIdSuccess, AddOrgUpdateIdError,\n    AddOrgUpdateDescriptionSuccess, AddOrgUpdateDescriptionError,\n    AddOrgError, AddOrgStart, AddOrgSuccess, AddOrgEvaluateOK, AddOrgEvaluateErrors, AddOrgUpdateGravatarHashError, AddOrgUpdateGravatarHashSuccess\n} from '../actions/addOrg'\n\n// ADD ORG\n\nexport function addOrgStart(state: StoreState, action: AddOrgStart): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function addOrgSuccess(state: StoreState, action: AddOrgSuccess): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function addOrgError(state: StoreState, action: AddOrgError): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function addOrgEvaluateOk(state: StoreState, action: AddOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function addOrgEvaluateErrors(state: StoreState, action: AddOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\nexport function addOrgEditStart(state: StoreState, action: AddOrgEditStart) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            newOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEditFinish(state: StoreState, action: AddOrgEditFinish) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// Name\nexport function addOrgUpdateNameSuccess(state: StoreState, action: AddOrgUpdateNameSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateNameError(state: StoreState, action: AddOrgUpdateNameError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function addOrgUpdateGravatarHashSuccess(state: StoreState, action: AddOrgUpdateGravatarHashSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(state: StoreState, action: AddOrgUpdateGravatarHashError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\nexport function addOrgUpdateIdSuccess(state: StoreState, action: AddOrgUpdateIdSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateIdError(state: StoreState, action: AddOrgUpdateIdError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(state: StoreState, action: AddOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionError(state: StoreState, action: AddOrgUpdateDescriptionError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.ADD_ORG_START:\n            return addOrgStart(state, action as AddOrgStart)\n        case ActionFlag.ADD_ORG_SUCCESS:\n            return addOrgSuccess(state, action as AddOrgSuccess)\n        case ActionFlag.ADD_ORG_ERROR:\n            return addOrgError(state, action as AddOrgError)\n        case ActionFlag.ADD_ORG_EDIT_START:\n            return addOrgEditStart(state, action as AddOrgEditStart)\n        case ActionFlag.ADD_ORG_EDIT_FINISH:\n            return addOrgEditFinish(state, action as AddOrgEditFinish)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS:\n            return addOrgUpdateNameSuccess(state, action as AddOrgUpdateNameSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_ERROR:\n            return addOrgUpdateNameError(state, action as AddOrgUpdateNameError)\n\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return addOrgUpdateGravatarHashSuccess(state, action as AddOrgUpdateGravatarHashSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return addOrgUpdateGravatarHashError(state, action as AddOrgUpdateGravatarHashError)\n\n        case ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS:\n            return addOrgUpdateIdSuccess(state, action as AddOrgUpdateIdSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_ID_ERROR:\n            return addOrgUpdateIdError(state, action as AddOrgUpdateIdError)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return addOrgUpdateDescriptionSuccess(state, action as AddOrgUpdateDescriptionSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR:\n            return addOrgUpdateDescriptionError(state, action as AddOrgUpdateDescriptionError)\n        case ActionFlag.ADD_ORG_EVALUATE_OK:\n            return addOrgEvaluateOk(state, action as AddOrgEvaluateOK)\n        case ActionFlag.ADD_ORG_EVALUATE_ERRORS:\n            return addOrgEvaluateErrors(state, action as AddOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    EditOrgEditStart, EditOrgEditSuccess, EditOrgEditError,\n    EditOrgEvaluateOK, EditOrgEvaluateErrors,\n    EditOrgSave, EditOrgSaveStart, EditOrgSaveError, EditOrgSaveSuccess,\n    EditOrgUpdateNameSuccess, EditOrgUpdateNameError,\n    // EditOrgUpdateIdSuccess, EditOrgUpdateIdError,\n    EditOrgUpdateDescriptionSuccess, EditOrgUpdateDescriptionError,\n    EditOrgUpdateGravatarHashError, EditOrgUpdateGravatarHashSuccess\n} from '../actions/editOrg'\n\n\n\n// EDIT ORG\n\n// Edit session loading\n\nexport function editOrgEditStart(state: StoreState, action: EditOrgEditStart) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            // TODO: get rid of this...\n            organizationId: action.id,\n            editedOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgEditSuccess(state: StoreState, action: EditOrgEditSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editedOrganization: action.editedOrganization,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// save\n\nexport function editOrgSaveStart(state: StoreState, action: EditOrgSaveStart): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function editOrgSaveSuccess(state: StoreState, action: EditOrgSaveSuccess): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function editOrgSaveError(state: StoreState, action: EditOrgSaveError): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\n// Evaluate edit session\n\nexport function editOrgEvaluateOk(state: StoreState, action: EditOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function editOrgEvaluateErrors(state: StoreState, action: EditOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\n\n\n// Name\nexport function editOrgUpdateNameSuccess(state: StoreState, action: EditOrgUpdateNameSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateNameError(state: StoreState, action: EditOrgUpdateNameError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function editOrgUpdateGravatarHashSuccess(state: StoreState, action: EditOrgUpdateGravatarHashSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(state: StoreState, action: EditOrgUpdateGravatarHashError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\n// export function editOrgUpdateIdSuccess(state: StoreState, action: EditOrgUpdateIdSuccess) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_OK,\n//                     error: {\n//                         type: UIErrorType.NONE\n//                     }\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// export function editOrgUpdateIdError(state: StoreState, action: EditOrgUpdateIdError) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_ERROR,\n//                     error: action.error\n//                 }\n//             }\n//         }\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(state: StoreState, action: EditOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateDescriptionError(state: StoreState, action: EditOrgUpdateDescriptionError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.EDIT_ORG_EDIT_START:\n            return editOrgEditStart(state, action as EditOrgEditStart)\n        case ActionFlag.EDIT_ORG_EDIT_SUCCESS:\n            return editOrgEditSuccess(state, action as EditOrgEditSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_START:\n            return editOrgSaveStart(state, action as EditOrgSaveStart)\n        case ActionFlag.EDIT_ORG_SAVE_SUCCESS:\n            return editOrgSaveSuccess(state, action as EditOrgSaveSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_ERROR:\n            return editOrgSaveError(state, action as EditOrgSaveError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS:\n            return editOrgUpdateNameSuccess(state, action as EditOrgUpdateNameSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR:\n            return editOrgUpdateNameError(state, action as EditOrgUpdateNameError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return editOrgUpdateGravatarHashSuccess(state, action as EditOrgUpdateGravatarHashSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return editOrgUpdateGravatarHashError(state, action as EditOrgUpdateGravatarHashError)\n\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS:\n        //     return editOrgUpdateIdSuccess(state, action as EditOrgUpdateIdSuccess)\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_ERROR:\n        //     return editOrgUpdateIdError(state, action as EditOrgUpdateIdError)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return editOrgUpdateDescriptionSuccess(state, action as EditOrgUpdateDescriptionSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR:\n            return editOrgUpdateDescriptionError(state, action as EditOrgUpdateDescriptionError)\n        case ActionFlag.EDIT_ORG_EVALUATE_OK:\n            return editOrgEvaluateOk(state, action as EditOrgEvaluateOK)\n        case ActionFlag.EDIT_ORG_EVALUATE_ERRORS:\n            return editOrgEvaluateErrors(state, action as EditOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/viewOrg'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\n\nexport function viewOrgStart(state: types.StoreState,\n    action: actions.ViewOrgStart): types.StoreState {\n    return {\n        ...state,\n        viewOrg: { ...state.viewOrg, state: types.ViewOrgState.FETCHING }\n    }\n}\n\nexport function viewOrgSuccess(state: types.StoreState,\n    action: actions.ViewOrgSuccess): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.READY,\n            organization: action.organization\n        }\n    }\n}\n\nexport function viewOrgError(state: types.StoreState,\n    action: actions.ViewOrgError): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function viewOrgStop(state: types.StoreState, action: actions.ViewOrgStop): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            state: types.ViewOrgState.NONE\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_FETCH_START:\n            return viewOrgStart(state, action as actions.ViewOrgStart)\n        case ActionFlag.VIEW_ORG_FETCH_SUCCESS:\n            return viewOrgSuccess(state, action as actions.ViewOrgSuccess)\n        case ActionFlag.VIEW_ORG_FETCH_ERROR:\n            return viewOrgError(state, action as actions.ViewOrgError)\n        case ActionFlag.VIEW_ORG_STOP:\n            return viewOrgStop(state, action as actions.ViewOrgStop)\n        default:\n            return null\n    }\n}\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/searchOrgs'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\nexport function applyOrgSearch(orgs: Organizations, searchTerms: Array<string>) {\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTerms.every((term) => {\n            // todo : make more efficient!!!\n            return (new RegExp(term, 'i').test(org.name));\n        })\n    })\n\n    return {\n        organizations: filteredOrgs,\n        totalCount: orgs.length,\n        filteredCount: filteredOrgs.length\n    }\n}\n\n// TODO:\n// dispatch the start of the request\n// do the request\n// dispatch the success (will be same for all queries?)\n// dispatch the error\n// FOR NOW:\n// do it here...\nexport function searchOrgsStart(state: types.StoreState, action: actions.SearchOrgsStart): types.StoreState {\n\n    const { browseOrgs: { filter, sortBy, sortDirection } } = state\n    const query: Query = {\n        searchTerms: action.searchTerms,\n        filter: filter,\n        sortBy: sortBy,\n        sortDirection: sortDirection,\n        username: state.auth.authorization.username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        // organizations: result.organizations, \n        // totalCount: result.total, \n        // filteredCount: result.organizations.length,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            searchTerms: action.searchTerms\n        }\n    }\n}\n\nexport function searchOrgsSuccess(state: types.StoreState, action: actions.SearchOrgsSuccess): types.StoreState {\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: false,\n            organizations: action.organizations,\n            totalCount: action.totalCount,\n            filteredCount: action.organizations.length\n        }\n\n    }\n}\n\nexport function searchOrgsError(state: types.StoreState, action: actions.SearchOrgsError): types.StoreState {\n    return { ...state, error: action.error }\n}\n\n\nexport function sortOrgsStart(state: types.StoreState, action: actions.SortOrgsStart): types.StoreState {\n    const {\n        browseOrgs: { searchTerms, filter },\n        auth: { authorization: { username } }\n    } = state\n    const query: Query = {\n        searchTerms: searchTerms,\n        filter: filter,\n        sortBy: action.sortBy,\n        sortDirection: action.sortDirection,\n        username: username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            sortBy: action.sortBy,\n            sortDirection: action.sortDirection\n        }\n    }\n}\n\n\ninterface Query {\n    searchTerms: Array<string>,\n    username: string,\n    sortBy: string,\n    sortDirection: types.SortDirection,\n    filter: string\n}\n\ninterface QueryResults {\n    organizations: Organizations,\n    total: number\n}\n\nexport function filterOrgsStart(state: types.StoreState,\n    action: actions.FilterOrgsStart): types.StoreState {\n    const { filter } = action\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            filter\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.SEARCH_ORGS_START:\n            return searchOrgsStart(state, action as actions.SearchOrgsStart)\n        case ActionFlag.SEARCH_ORGS_SUCCESS:\n            return searchOrgsSuccess(state, action as actions.SearchOrgsSuccess)\n        case ActionFlag.SEARCH_ORGS_ERROR:\n            return searchOrgsError(state, action as actions.SearchOrgsError)\n        // case ActionFlag.SORT_ORGS_STAR:\n        //     return sortOrgs(state, action as actions.SortOrgs)\n        case ActionFlag.SORT_ORGS_START:\n            return sortOrgsStart(state, action as actions.SortOrgsStart)\n        case ActionFlag.FILTER_ORGS_START:\n            return filterOrgsStart(state, action as actions.FilterOrgsStart)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\n\nimport { ActionFlag } from '../actions'\nimport { StoreState, AuthState } from '../../types'\nimport { AuthCheckStart, AuthAuthorized, AuthUnauthorized, AuthCheckError } from '../actions/auth';\n\nexport function authCheckStart(state: StoreState, action: AuthCheckStart): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.CHECKING,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authCheckError(state: StoreState, action: AuthCheckError): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.ERROR,\n            message: action.error.message,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authAuthorized(state: StoreState, action: AuthAuthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.AUTHORIZED,\n            message: '',\n            authorization: {\n                token: action.token,\n                username: action.username,\n                realname: action.realname,\n                roles: action.roles\n            }\n        }\n    }\n}\n\nexport function authUnauthorized(state: StoreState, action: AuthUnauthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.UNAUTHORIZED,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.AUTH_CHECK_START:\n            return authCheckStart(state, action as AuthCheckStart)\n        case ActionFlag.AUTH_AUTHORIZED:\n            return authAuthorized(state, action as AuthAuthorized)\n        case ActionFlag.AUTH_UNAUTHORIZED:\n            return authUnauthorized(state, action as AuthUnauthorized)\n        case ActionFlag.AUTH_CHECK_ERROR:\n            return authCheckError(state, action as AuthCheckError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { ActionFlag } from '../actions'\nimport { AppSuccess } from '../actions/app';\nimport { StoreState, AppState } from '../../types';\n\nexport function appSuccess(state: StoreState, action: AppSuccess): StoreState {\n    return {\n        ...state,\n        app: {\n            status: AppState.READY,\n            config: action.config\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.APP_SUCCESS:\n            return appSuccess(state, action as AppSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState } from '../../types'\nimport addOrgReducer from './addOrg'\nimport editOrgReducer from './editOrg'\nimport viewOrgReducer from './viewOrg'\nimport searchOrgsReducer from './searchOrgs'\nimport authReducer from './auth'\nimport appReducer from './app'\n\n\nexport function reducer(state: StoreState, action: Action): StoreState {\n    return addOrgReducer(state, action) ||\n        editOrgReducer(state, action) ||\n        searchOrgsReducer(state, action) ||\n        viewOrgReducer(state, action) ||\n        authReducer(state, action) ||\n        appReducer(state, action) ||\n        state;\n}\n\nexport default reducer","import * as React from 'react';\nimport './Organizations.css';\nimport * as types from '../types';\nimport { NavLink } from 'react-router-dom';\nimport { Alert, Icon, Tooltip } from 'antd';\nimport { BriefOrganization } from '../types';\n\n// TODO: need more ergonomic way to resolve the common issue of data types interfering with \n// component types.\n\nexport interface OrganizationsProps {\n    organizations: Array<BriefOrganization>\n}\n\nexport interface OrganizationsState {\n    searchTerms: Array<string>\n}\n\nexport class Organizations extends React.Component<OrganizationsProps, OrganizationsState> {\n\n    constructor(props: OrganizationsProps) {\n        super(props)\n\n        this.state = {\n            searchTerms: []\n        }\n    }\n\n    getAvatarUrl(org: BriefOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderAvatar(org: BriefOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getAvatarUrl(org)} />\n        )\n    }\n\n    renderRelation(org: BriefOrganization) {\n        switch (org.relation) {\n            case (types.UserRelationToOrganization.NONE):\n                return (\n                    <span><Icon type=\"stop\" />None</span>\n                )\n            case (types.UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org, but you may access it; you may request membership\"\n                    >\n                        <span><Icon type=\"eye\" />View</span>\n                    </Tooltip>\n                )\n            case (types.UserRelationToOrganization.MEMBER):\n                return (<span><Icon type=\"user\" />Member</span>)\n            case (types.UserRelationToOrganization.ADMIN):\n                return (<span><Icon type=\"unlock\" />Admin</span>)\n            case (types.UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You own this org\"\n                    >\n                        <span><Icon type=\"unlock\" theme=\"filled\" />Owner</span>\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderOrg(org: BriefOrganization, index: Number) {\n        return (\n            <div className=\"row\" key={String(index)}>\n                <div className=\"col2\">\n                    <NavLink to={`/viewOrganization/${org.id}`}>\n                        {this.renderAvatar(org)}\n                    </NavLink>\n                </div>\n                <div className=\"col1\">\n                    <div className=\"orgName\">\n                        <NavLink to={`/viewOrganization/${org.id}`}>\n                            {org.name}\n                        </NavLink>\n                    </div>\n                    <div className=\"orgOwner\">\n                        <span className=\"field-label\">owner</span>\n                        <a href={\"/#people/\" + org.owner.username} target=\"_blank\">{org.owner.realname} ❨{org.owner.username}❩</a>\n                    </div>\n                    <div className=\"relation\">\n                        {this.renderRelation(org)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderOrgs() {\n        if (this.props.organizations.length > 0) {\n            return (\n                this.props.organizations.map((org: BriefOrganization, index) => {\n                    return (\n                        this.renderOrg(org, index)\n                    )\n                })\n            )\n        } else {\n            return (\n                <Alert type=\"warning\"\n                    style={{ maxWidth: '20em', margin: '20px auto 0 auto' }}\n                    message=\"Sorry, no organizations were found.\" />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Organizations\">\n                {this.renderOrgs()}\n            </div>\n        )\n    }\n}\n\nexport default Organizations;","import { Organizations, OrganizationsProps } from '../components/Organizations';\nimport { StoreState } from '../types';\nimport { connect } from 'react-redux';\n\nexport function mapStateToProps(state: StoreState): OrganizationsProps {\n    const { browseOrgs: { organizations } } = state;\n    return {\n        organizations\n    }\n}\n\nexport default connect(mapStateToProps)(Organizations);","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './Header.css';\nimport { FaUsers, FaChevronRight } from 'react-icons/fa'\n\nexport interface HeaderProps {\n}\n\nclass Header extends React.Component<HeaderProps, object> {\n\n    buildSeparator() {\n        if (this.props.children) {\n            return (\n                <FaChevronRight style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Header\">\n                <div style={{ flex: '0 0 auto' }}>\n                    <NavLink to=\"/organizations\">\n                        <FaUsers style={{ verticalAlign: 'middle' }} />\n                        {' '}\n                        <span data-test=\"orgs-label\">Orgs</span>\n                    </NavLink>\n                </div>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {this.buildSeparator()}\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Organizations from '../containers/Organizations';\nimport { SortDirection } from '../types';\n\nimport './OrganizationsBrowser.css';\nimport { Button, Icon, Radio, Select, Modal } from 'antd'\nimport Header from './Header';\nimport RadioGroup from 'antd/lib/radio/group';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nexport interface OrganizationsBrowserProps {\n    totalCount: number;\n    filteredCount: number;\n    sortBy: string;\n    sortDirection: SortDirection;\n    filter: string;\n    searching: boolean;\n    onSearchOrgs: (searchTerms: Array<string>) => void;\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void;\n    onFilterOrgs: (filter: string) => void;\n}\n\nexport interface OrganizationsBrowserState {\n    searchInput: string\n    showInfo: boolean\n}\nclass OrganizationsBrowser extends React.Component<OrganizationsBrowserProps, OrganizationsBrowserState> {\n\n    searchInput: React.RefObject<HTMLInputElement>;\n    searchButton: React.RefObject<Button>;\n\n    constructor(props: OrganizationsBrowserProps) {\n        super(props)\n\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.state = {\n            searchInput: '',\n            showInfo: false\n        }\n\n        this.props.onSearchOrgs([])\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'Organizations Browser Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations browser...</p>\n                </div>\n            )\n        })\n    }\n\n    doSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        const searchTerms = this.searchInput.current.value.split(/[\\s+]/)\n        // dispatch the search event\n        this.props.onSearchOrgs(searchTerms);\n    }\n\n    haveSearchInput() {\n        if (this.state.searchInput && this.state.searchInput.length > 0) {\n            return true\n        }\n        return false\n    }\n\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.setState({ searchInput: currentSearchInputValue })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.doSearch()\n    }\n\n    onSortByChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(e.target.value, this.props.sortDirection)\n    }\n\n    onSortByChange2(value: string) {\n        this.props.onSortOrgs(value, this.props.sortDirection)\n    }\n\n\n    onSortDirectionChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(this.props.sortBy, e.target.value)\n    }\n\n    onSortDirectionChange2(value: string) {\n        this.props.onSortOrgs(this.props.sortBy, value as SortDirection)\n    }\n\n    onFilterChange(e: RadioChangeEvent) {\n        this.props.onFilterOrgs(e.target.value)\n    }\n\n    onFilterChange2(value: string) {\n        this.props.onFilterOrgs(value)\n    }\n\n    onClearSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        this.searchInput.current.value = ''\n        this.onSearchInputChange()\n        // this.searchButton.current!.handleClick(new MouseEvent<HTMLButtonElement>('click'))\n        // const event = new Event('change', { bubbles: true })\n        // this.searchInput.current.dispatchEvent(event)\n        this.doSearch()\n    }\n\n    renderControlArea() {\n        return (\n            <div className=\"OrganizationsBrowser-controlArea\">\n                {/* {this.renderSortArea()} */}\n                {this.renderSortArea()}\n                {this.renderFilterArea()}\n            </div>\n        )\n    }\n\n    renderSortArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    sort\n                </div>\n                <RadioGroup onChange={this.onSortByChange.bind(this)} value={this.props.sortBy}>\n                    <Radio className=\"radio\" value=\"name\">Org name</Radio>\n                    <Radio className=\"radio\" value=\"owner\">Owner</Radio>\n                </RadioGroup>\n\n                <div style={{ marginTop: '10px' }}>\n                    <RadioGroup onChange={this.onSortDirectionChange.bind(this)} value={this.props.sortDirection}>\n                        <Radio className=\"radio\" value={SortDirection.ASCENDING}><Icon type=\"sort-ascending\" /> Ascending</Radio>\n                        <Radio className=\"radio\" value={SortDirection.DESCENDING}><Icon type=\"sort-descending\" /> Descending</Radio>\n                    </RadioGroup>\n                </div>\n            </div>\n        )\n    }\n\n    renderFilterArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    filter\n                </div>\n                <RadioGroup onChange={this.onFilterChange.bind(this)} value={this.props.filter}>\n                    <Radio className=\"radio\" value=\"all\">All</Radio>\n                    <Radio className=\"radio\" value=\"owned\">Owned by you</Radio>\n                    <Radio className=\"radio\" value=\"notOwned\">Owned by others</Radio>\n                </RadioGroup>\n            </div>\n        )\n    }\n\n    renderSearchFeedback() {\n        if (this.props.totalCount === 0) {\n            return (\n                <span>\n                    No organizations in the system\n                </span>\n            )\n        }\n        if (this.props.filteredCount === 0) {\n            return (\n                <span>\n                    No organizations found out of\n                    {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    available.\n                </span>\n            )\n\n        }\n        if (this.props.totalCount === this.props.filteredCount) {\n            return (\n                <span>\n                    Showing all\n                {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    organizations\n                </span>\n            )\n        }\n\n        return (\n            <span>\n                Showing\n                {' '}\n                {this.props.filteredCount}\n                {' '}\n                out of\n                {' '}\n                {this.props.totalCount}\n                {' '}\n                organizations\n            </span>\n        )\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchBar() {\n        return (\n            <form id=\"searchForm\" className=\"OrganizationsBrowser-searchBar\" onSubmit={this.onSubmit.bind(this)}>\n                <input\n                    placeholder=\"Search Organizations\"\n                    onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                    ref={this.searchInput}></input>\n                {/* <Tooltip\n                    title=\"Enter one or more words to search organizations by name or owner\">\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{ alignSelf: 'end' }} />\n                </Tooltip> */}\n                <Button\n                    disabled={!this.haveSearchInput()}\n                    ref={this.searchButton}\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                    {/* Search */}\n                </Button>\n                <Button\n                    onClick={this.onClearSearch.bind(this)}\n                    disabled={!this.haveSearchInput()}\n                    icon=\"close\"\n                >\n\n                    {/* Show all */}\n                </Button>\n                {/* <div className=\"message\">\n                    {this.renderSearchFeedback()}\n                </div> */}\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Browse and Search Organizations\n                        </span>\n                        <Icon type=\"right\" style={{ margin: '0 4px' }} />\n                        <span style={{ fontWeight: 'normal', fontStyle: 'italic' }}>\n                            {this.renderSearchFeedback()}\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <NavLink to=\"/newOrganization\"><Button icon=\"plus-circle\">Create Organization</Button></NavLink>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n\n                </div>\n            </Header>\n        )\n    }\n\n    renderSearchFilter() {\n        return (\n            <div>\n                <span className=\"field-label\">sort by</span>\n                <Select onChange={this.onSortByChange2.bind(this)}\n                    defaultValue={this.props.sortBy}\n                    style={{ width: '8em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"name\" key=\"name\">Org name</Select.Option>\n                    <Select.Option value=\"owner\" key=\"owner\">Owner</Select.Option>\n                </Select>\n                <Select onChange={this.onSortDirectionChange2.bind(this)}\n                    style={{ width: '10em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortDirection}>\n                    <Select.Option value={SortDirection.ASCENDING} key=\"name\"><Icon type=\"sort-ascending\" />Ascending</Select.Option>\n                    <Select.Option value={SortDirection.DESCENDING} key=\"owner\"><Icon type=\"sort-descending\" />Descending</Select.Option>\n                </Select>\n                <span className=\"field-label\" style={{ marginLeft: '10px' }}>filter</span>\n                <Select onChange={this.onFilterChange2.bind(this)}\n                    defaultValue={this.props.filter}\n                    style={{ width: '12em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"all\" key=\"all\">All</Select.Option>\n                    <Select.Option value=\"owned\" key=\"owned\">Owned by you</Select.Option>\n                    <Select.Option value=\"notOwned\" key=\"nowtOwned\">Not owned by you</Select.Option>\n                </Select>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationsBrowser\">\n                {this.renderHeader()}\n                <div className=\"searchBarRow\">\n                    <div className=\"searchBarCol\">\n                        {this.renderSearchBar()}\n                    </div>\n                    <div className=\"sortCol\">\n                        {this.renderSearchFilter()}\n                    </div>\n                </div>\n                <div className=\"bodyRow\">\n\n                    <div className=\"col2\">\n                        <Organizations />\n                    </div>\n                    {/* <div className=\"col1\">\n                        {this.renderControlArea()}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OrganizationsBrowser","\nexport interface User {\n    username: string,\n    realname: string,\n    thumbnail: string\n}\n\nexport interface UserProfile {\n    user: User,\n    profile: {\n        synced: {\n            gravatarHash: string\n        },\n        userdata: {\n            organization: string\n            city: string\n            state: string\n            country: string\n            avatarOption: string\n            gravatarDefault: string\n        }\n    }\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class UserProfileClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('version'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    getUserProfile(username: string): Promise<UserProfile> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0][0] as UserProfile\n            })\n    }\n\n    getUserProfiles(usernames: Array<string>): Promise<Array<UserProfile>> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', usernames))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0] as Array<UserProfile>\n            })\n    }\n}","import { string } from \"prop-types\";\n\nexport interface GroupsServiceInfo {\n    servname: string;\n    version: string;\n    servertime: number;\n    gitcommithash: string\n}\n\nexport interface BriefGroup {\n    id: string;\n    name: string;\n    custom: {\n        gravatarhash?: string\n    }\n    owner: string;\n    type: string;\n    // createdAt: number;\n    // modifiedAt: number\n}\n\nexport type GroupList = Array<BriefGroup>\n\nexport type Username = string;\n\nexport interface WorkspaceInfo {\n    wsid: number\n    name: string\n    narrname: string\n    public: boolean\n    admin: boolean\n}\n\nexport interface Group {\n    id: string\n    name: string\n    owner: Username\n    type: string\n    admins: Array<Username>\n    members: Array<Username>\n    description: string\n    createdate: number\n    moddate: number\n    workspaces: Array<WorkspaceInfo>\n    custom: {\n        gravatarhash?: string\n    }\n}\n\nexport interface NewGroup {\n    id: string\n    name: string\n    gravatarhash: string | null\n    type: string\n    description: string\n}\n\nexport interface GroupUpdate {\n    name: string\n    gravatarhash: string | null\n    description: string\n}\n\nexport interface Request {\n    id: string\n    groupid: string\n    requester: Username\n    type: string\n    status: string\n    targetuser: Username\n    targetws: number\n    createddate: number\n    expireddate: number\n    moddate: number\n}\n\nexport interface ErrorInfo {\n    appcode: number\n    apperror: string\n    callid: string\n    httpcode: number\n    httpstatus: string\n    message: string\n    time: number\n}\n\nexport interface ErrorResult {\n    error: ErrorInfo\n}\n\n// Error types: (appcode)\n// 10000\tAuthentication failed\n// 10010\tNo authentication token\n// 10020\tInvalid token\n// 20000\tUnauthorized\n// 30000\tMissing input parameter\n// 30001\tIllegal input parameter\n// 30010\tIllegal user name\n// 40000\tGroup already exists\n// 40010\tRequest already exists\n// 40020\tUser already group member\n// 40030\tWorkspace already in group\n// 50000\tNo such group\n// 50010\tNo such request\n// 50020\tNo such user\n// 50030\tNo such workspace\n// 60000\tUnsupported operation\n\nexport interface GroupExists {\n    exists: boolean\n}\nexport class GroupsClient {\n    token: string;\n    url: string;\n\n    constructor({ token, url }: { token: string, url: string }) {\n        this.token = token\n        this.url = url\n    }\n\n    getInfo(): Promise<GroupsServiceInfo> {\n        return fetch(this.url + '/', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((result) => {\n                return result as GroupsServiceInfo;\n            });\n    }\n\n    groupExists(id: string): Promise<GroupExists> {\n        return fetch(this.url + '/group/' + id + '/exists')\n            .then((response) => {\n                return response.json()\n            })\n            .then((exists) => {\n                return exists as GroupExists\n            })\n    }\n\n    getGroups(): Promise<GroupList> {\n        return fetch(this.url + '/group', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result: GroupList) => {\n                return result.filter(({ type }) => type === 'Organization')\n            })\n    }\n\n    getGroupById(id: string): Promise<Group> {\n        return fetch(this.url + '/group/' + id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    return null\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    createGroup(newGroup: NewGroup): Promise<Group> {\n        return fetch(this.url + '/group/' + newGroup.id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n            body: JSON.stringify({\n                name: newGroup.name,\n                custom: {\n                    gravatarhash: newGroup.gravatarhash\n                },\n                type: newGroup.type,\n                description: newGroup.description\n            })\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    updateGroup(id: string, groupUpdate: GroupUpdate): Promise<void> {\n        return fetch(this.url + '/group/' + id + '/update', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n\n            // TODO: build more intelligently\n            body: JSON.stringify({\n                name: groupUpdate.name,\n                custom: {\n                    gravatarhash: groupUpdate.gravatarhash\n                },\n                type: 'Organization',\n                description: groupUpdate.description\n            })\n        })\n            .then((response) => {\n                // response is an empty body.\n                if (response.status === 204) {\n                    return\n                }\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n            })\n    }\n}","\n// export interface User {\n//     username: string,\n//     realname: string,\n//     thumbnail: string\n// }\n\n// export interface UserProfile {\n//     user: User,\n//     profile: any\n// }\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class WorkspaceClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('ver'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n}","import {\n    Organization, BriefOrganization, OrganizationUpdate,\n    UIError,\n    UIErrorType,\n    SortDirection,\n    FieldState,\n    EditableOrganization,\n    UserRelationToOrganization\n} from '../types';\n// import { organizations } from './data';\nimport { UserProfileClient, UserProfile, User } from './userProfile'\nimport { GroupsClient, Group, GroupList, BriefGroup } from './groups'\nimport { WorkspaceClient } from './workspace';\nimport { types } from 'util';\n\nexport function applyOrgSearch(orgs: Array<BriefOrganization>, searchTerms: Array<string>): Array<BriefOrganization> {\n    const searchTermsRe = searchTerms.map((term) => {\n        return new RegExp(term, 'i')\n    })\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTermsRe.every((termRe) => {\n            return termRe.test(org.name) ||\n                termRe.test(org.owner.username) ||\n                termRe.test(org.owner.realname)\n        })\n    })\n\n    return filteredOrgs\n}\n\nfunction applySort(organizations: Array<BriefOrganization>, sortBy: string, sortDirection: SortDirection): Array<BriefOrganization> {\n    const direction = sortDirection === SortDirection.ASCENDING ? 1 : -1\n    switch (sortBy) {\n        // case 'createdAt':\n        //     return  organizations.slice().sort((a, b) => {\n        //         return direction * (a.createdAt.getTime() - b.createdAt.getTime())\n        //     })\n        // case 'modifiedAt':\n        //     return organizations.slice().sort((a, b) => {\n        //         return direction * (a.modifiedAt.getTime() - b.modifiedAt.getTime())\n        //     })\n        case 'name':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.name.localeCompare(b.name)\n            })\n        case 'owner':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.owner.username.localeCompare(b.owner.username)\n            })\n        default:\n            console.warn('unimplemented sort field: ' + sortBy)\n            return organizations;\n    }\n}\n\nfunction applyFilter(organizations: Array<BriefOrganization>, filter: string, username: string): Array<BriefOrganization> {\n    switch (filter) {\n        case 'all':\n            return organizations\n            break\n        case 'owned':\n            return organizations.filter((org) => (org.owner.username === username))\n        case 'notOwned':\n            return organizations.filter((org) => (org.owner.username !== username))\n        default:\n            console.warn('unknown filter : ' + filter)\n            return organizations\n    }\n}\n\nexport interface Query {\n    searchTerms: Array<string>\n    username: string\n    sortBy: string\n    sortDirection: SortDirection\n    filter: string\n}\n\nexport interface QueryResults {\n    organizations: Array<BriefOrganization>\n    total: number\n}\n\nfunction wait(timeout: number) {\n    return new Promise((resolve) => {\n        window.setTimeout(() => {\n            resolve(true)\n        }, timeout)\n    })\n}\n\n// export function newOrg(state: StoreState, action: actions.AddOrg): StoreState {\n//     const {organizations, auth:{username}} = state;\n//     const org: Organization = {\n//         ...action.newOrg,\n//         createdAt: new Date(),\n//         modifiedAt: new Date(),\n//         owner: username\n//     }\n//     organizations.push(org)\n//     return {...state, organizations}\n// }\n\ninterface ModelParams {\n    token: string,\n    username: string,\n    groupsServiceURL: string,\n    userProfileServiceURL: string,\n    workspaceServiceURL: string\n}\n\nexport class Model {\n    // organizations: Organizations\n    // token: string\n    // groupsServiceURL: string\n    // userProfileServiceURL: string\n    // workspaceServiceURL: string\n    params: ModelParams\n\n\n    constructor(params: ModelParams) {\n        // this.organizations = organizations;\n        this.params = params;\n    }\n\n    groupToOrg(group: Group, username: string, profile: UserProfile): Organization {\n        const { id, name, owner, description, createdate, moddate } = group\n        let relation: UserRelationToOrganization\n        // TODO: when we have access to members, admins, and group publication status, we can \n        // flesh out all user relations.\n        if (username === group.owner) {\n            relation = UserRelationToOrganization.OWNER\n        } else {\n            relation = UserRelationToOrganization.VIEW\n        }\n        return {\n            id: id,\n            name: name,\n            gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n            description: description,\n            owner: {\n                username: owner,\n                realname: profile.user.realname,\n                city: profile.profile.userdata.city,\n                state: profile.profile.userdata.state,\n                country: profile.profile.userdata.country,\n                organization: profile.profile.userdata.organization,\n                avatarOption: profile.profile.userdata.avatarOption,\n                gravatarHash: profile.profile.synced.gravatarHash,\n                gravatarDefault: profile.profile.userdata.gravatarDefault\n            },\n            relation: relation,\n            createdAt: new Date(createdate),\n            modifiedAt: new Date(moddate)\n        }\n    }\n\n    briefGroupToBriefOrg(group: BriefGroup, username: string, profile: UserProfile): BriefOrganization {\n        const { id, name, owner, custom: { gravatarhash } } = group\n        let relation: UserRelationToOrganization\n        // TODO: when we have access to members, admins, and group publication status, we can \n        // flesh out all user relations.\n        if (username === group.owner) {\n            relation = UserRelationToOrganization.OWNER\n        } else {\n            relation = UserRelationToOrganization.VIEW\n        }\n        return {\n            id, name,\n            gravatarHash: gravatarhash || null,\n            owner: { username: owner, realname: profile.user.realname },\n            createdAt: new Date(),\n            modifiedAt: new Date(),\n            relation: relation\n        }\n    }\n\n    groupsToOrgs(groups: GroupList, username: string, profiles: Map<string, UserProfile>): Array<BriefOrganization> {\n        return groups.map((group) => {\n            return this.briefGroupToBriefOrg(group, username, profiles.get(group.owner)!)\n        })\n    }\n\n    queryOrgs(query: Query): Promise<QueryResults> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        const workspaceClient = new WorkspaceClient({\n            url: this.params.workspaceServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroups()\n            .then((groups) => {\n                // Add user profiles to groups.\n                // We do it here so that search can extend into user real names and possibly\n                // other user profile attributes \n                const owners = groups.reduce((owners, group) => {\n                    owners.set(group.owner, true)\n                    return owners;\n                }, new Map<string, boolean>()).keys()\n                return userProfileClient.getUserProfiles(Array.from(owners))\n                    .then((profiles) => {\n                        const profileMap = profiles.reduce((profileMap, profile) => {\n                            profileMap.set(profile.user.username, profile)\n                            return profileMap\n                        }, new Map<string, UserProfile>())\n                        return this.groupsToOrgs(groups, query.username, profileMap)\n                    })\n            })\n            .then((orgs) => {\n                const filtered = applyFilter(orgs, query.filter, query.username)\n                const searched = applyOrgSearch(filtered, query.searchTerms)\n                const sorted = applySort(searched, query.sortBy, query.sortDirection)\n\n                return {\n                    organizations: sorted,\n                    total: orgs.length\n                }\n            })\n    }\n\n    getOrg(id: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        let relation: UserRelationToOrganization\n                        // TODO: when we have access to members, admins, and group publication status, we can \n                        // flesh out all user relations.\n                        if (this.params.username === group.owner) {\n                            relation = UserRelationToOrganization.OWNER\n                        } else {\n                            relation = UserRelationToOrganization.VIEW\n                        }\n                        return {\n                            id: group.id,\n                            name: group.name,\n                            gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n                            description: group.description,\n                            createdAt: new Date(group.createdate),\n                            modifiedAt: new Date(group.moddate),\n                            owner: {\n                                username: group.owner,\n                                realname: userProfile.user.realname,\n                                city: userProfile.profile.userdata.city,\n                                state: userProfile.profile.userdata.state,\n                                country: userProfile.profile.userdata.country,\n                                organization: userProfile.profile.userdata.organization,\n                                avatarOption: userProfile.profile.userdata.avatarOption,\n                                gravatarHash: userProfile.profile.synced.gravatarHash,\n                                gravatarDefault: userProfile.profile.userdata.gravatarDefault\n                            },\n                            relation: relation\n                        }\n                    })\n\n            })\n    }\n\n    getGroup(id: string): Promise<Group> {\n        if (id.length === 0) {\n            return Promise.reject(new Error('Group id may not be an empty string'))\n        }\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return group\n            })\n    }\n\n    groupExists(id: string): Promise<boolean> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groups.groupExists(id)\n            .then(({ exists }) => {\n                return exists\n            })\n    }\n\n    addOrg(newOrg: EditableOrganization, username: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n        if ((newOrg.id.error && newOrg.id.error.type === UIErrorType.ERROR) ||\n            (newOrg.name.error && newOrg.name.error.type === UIErrorType.ERROR) ||\n            (newOrg.gravatarHash.error && newOrg.gravatarHash.error.type === UIErrorType.ERROR) ||\n            (newOrg.description.error && newOrg.description.error.type === UIErrorType.ERROR)) {\n            return Promise.reject(new Error('One or more fields are invalid'))\n        }\n\n        return groups.createGroup({\n            id: newOrg.id.value,\n            name: newOrg.name.value,\n            gravatarhash: newOrg.gravatarHash.value,\n            description: newOrg.description.value,\n            type: 'Organization'\n        })\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        return this.groupToOrg(group, username, userProfile)\n                    })\n            })\n    }\n\n    // TODO this is fake until update is implemented on the back end\n    updateOrg(id: string, orgUpdate: OrganizationUpdate): Promise<void> {\n\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n\n\n        return groups.updateGroup(id, {\n            name: orgUpdate.name,\n            gravatarhash: orgUpdate.gravatarHash,\n            description: orgUpdate.description\n        })\n    }\n\n    validateOrgId(id: string): [string, UIError] {\n        return Validation.validateOrgId(id);\n    }\n\n    validateOrgName(name: string): [string, UIError] {\n        return Validation.validateOrgName(name)\n    }\n\n    validateOrgDescription(description: string): [string, UIError] {\n        return Validation.validateOrgDescription(description);\n    }\n}\n\nexport class Validation {\n    static validateOrgId(id: string): [string, UIError] {\n        // May not be empty\n        if (id.length === 0) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be empty'\n                }]\n        }\n        // No spaces\n        if (id.match(/\\s/)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not contain a space'\n                }]\n        }\n        // May not exceed maximum size\n        // todo: what is the real limit?\n        if (id.length > 100) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be longer than 100 characters'\n                }]\n        }\n\n        // May not contain non-alphanumeric and underscore\n        const alphaRe = /^[a-zA-Z0-9_]+$/\n        if (!id.match(alphaRe)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may only contain alphanumeric (a-z, A-Z, 0-9) and underscore (_)'\n                }\n            ]\n        }\n\n        return [id, {\n            type: UIErrorType.NONE\n        }]\n    }\n\n    static validateOrgName(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be empty'\n                }]\n        }\n        if (name.length > 256) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 256 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgGravatarHash(gravatarHash: string): [string, UIError] {\n        if (gravatarHash.length === 0) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.NONE\n                }]\n        }\n        if (gravatarHash.length > 32) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization gravatar hash may not be longer than 32 characters'\n                }]\n        }\n        return [\n            gravatarHash, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgDescription(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization description may not be empty'\n                }]\n        }\n        // TODO: Is there really a limit?\n        if (name.length > 4096) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 4,096 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n}\n\nexport class StaticData {\n    static makeEmptyEditableOrganization(): EditableOrganization {\n        return {\n            id: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            name: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            gravatarHash: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            description: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            }\n        }\n    }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\n\n\n// VIEW ORG\n\nexport interface ViewOrgStart extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_START\n}\n\nexport function viewOrgStart() {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_START\n    }\n}\n\nexport interface ViewOrgStop extends Action {\n    type: ActionFlag.VIEW_ORG_STOP\n}\n\nexport function viewOrgStop(): ViewOrgStop {\n    return {\n        type: ActionFlag.VIEW_ORG_STOP\n    }\n}\n\nexport interface ViewOrgSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n    organization: Organization\n}\n\nexport function viewOrgSuccess(org: Organization): ViewOrgSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n        organization: org\n    }\n}\n\nexport interface ViewOrgError extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n    error: AppError\n}\nexport function viewOrgError(error: AppError): ViewOrgError {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n        error: error\n    }\n}\n\nexport interface ViewOrgFetch extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH,\n    id: string\n}\n\nexport function viewOrgFetch(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(id)\n            .then((org) => {\n                dispatch(viewOrgSuccess(org))\n            })\n            .catch((err) => {\n                dispatch(viewOrgError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\nimport { viewOrgStop } from './viewOrg'\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n\n// SEARCH (FETCH) ORGS\n\n\n\n// Called upon the start of a search call\n// Sets the ui state to enable a spinner\n// and also search query data to be reflected in the ui\nexport interface SearchOrgsStart extends Action<ActionFlag.SEARCH_ORGS_START> {\n    type: ActionFlag.SEARCH_ORGS_START,\n    searchTerms: Array<string>\n}\n\nexport function searchOrgsStart(searchTerms: Array<string>): SearchOrgsStart {\n    return {\n        type: ActionFlag.SEARCH_ORGS_START,\n        searchTerms: searchTerms\n    }\n}\n\n// Called upon successful completion of a search\n// Sets the organizations found\nexport interface SearchOrgsSuccess extends Action<ActionFlag.SEARCH_ORGS_SUCCESS> {\n    type: ActionFlag.SEARCH_ORGS_SUCCESS,\n    organizations: Array<BriefOrganization>,\n    totalCount: number\n}\n\nexport function searchOrgsSuccess(organizations: Array<BriefOrganization>, totalCount: number): SearchOrgsSuccess {\n    return {\n        type: ActionFlag.SEARCH_ORGS_SUCCESS,\n        organizations: organizations,\n        totalCount: totalCount\n    }\n}\n\n// Called upon a search error\n// Sets error state\nexport interface SearchOrgsError extends Action<ActionFlag.SEARCH_ORGS_ERROR> {\n    type: ActionFlag.SEARCH_ORGS_ERROR,\n    error: AppError\n}\n\nexport function searchOrgsError(error: AppError): SearchOrgsError {\n    return {\n        type: ActionFlag.SEARCH_ORGS_ERROR,\n        error: error\n    }\n}\n\n\nexport interface SearchOrgs extends Action<ActionFlag.SEARCH_ORGS> {\n    type: ActionFlag.SEARCH_ORGS,\n    searchTerms: Array<string>\n}\n\n// TODO: proper typing here \nexport function searchOrgs(searchTerms: Array<string>) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchOrgsStart(searchTerms))\n        dispatch(viewOrgStop())\n\n        const {\n            browseOrgs: { sortBy, sortDirection, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms: searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function sortOrgs(sortBy: string, sortDirection: SortDirection) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sortOrgsStart(sortBy, sortDirection))\n\n        const {\n            browseOrgs: { searchTerms, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function filterOrgs(filter: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(filterOrgsStart(filter))\n\n        const {\n            browseOrgs: { searchTerms, sortBy, sortDirection },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\n\n\n\n// Filter orgs\nexport interface FilterOrgs extends Action<ActionFlag.FILTER_ORGS> {\n    type: ActionFlag.FILTER_ORGS,\n    filter: string\n}\n\nexport interface FilterOrgsStart extends Action<ActionFlag.FILTER_ORGS_START> {\n    type: ActionFlag.FILTER_ORGS_START,\n    filter: string\n}\n\nexport function filterOrgsStart(filter: string): FilterOrgsStart {\n    return {\n        type: ActionFlag.FILTER_ORGS_START,\n        filter: filter\n    }\n}\n\n","import OrganizationsBrowser from '../components/OrganizationsBrowser'\nimport { StoreState, SortDirection } from '../types'\nimport * as actions from '../redux/actions/searchOrgs'\nimport { Dispatch } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { Model, Query } from '../data/model'\n//\n// Typing for the mapState and mapDispatch\n//\nexport interface LinkStateProps {\n    totalCount: number,\n    filteredCount: number\n    sortBy: string,\n    sortDirection: SortDirection,\n    filter: string,\n    searching: boolean\n}\n\nexport interface LinkDispatchProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void,\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void,\n    onFilterOrgs: (filter: string) => void\n}\n\n\n// note second arg is the component props, but we don't have any component props to merge in.\nexport function mapStateToProps(state: StoreState): LinkStateProps {\n    const { browseOrgs: { totalCount, filteredCount, sortBy, sortDirection, filter, searching } } = state\n    return {\n        totalCount,\n        filteredCount,\n        sortBy,\n        sortDirection,\n        filter,\n        searching\n    }\n}\n\n// function onSortOrgs(sortBy: string, sortDescending: boolean) : Dispatch<actions.SortOrgs> {\n//     dispatch(actions.sortOrgs(sortBy, sortDescending))\n// }\n\n// note second arg is the component props, but we don't have any to merge in.\n// export function mapDispatchToProps(dispatch: actions.SearchOrgs | Dispatch<actions.SortOrgs> | Dispatch<actions.FilterOrgs>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n\n//             dispatch(actions.searchOrgs(searchTerms))\n\n\n\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         },\n//         onFilterOrgs: (filter) => {\n//             dispatch(actions.filterOrgs(filter))\n//         }\n//     }\n// }\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.SearchOrgs | actions.SortOrgs | actions.FilterOrgs>): LinkDispatchProps {\n    return {\n        onSearchOrgs: (searchTerms: Array<string>) => {\n            // TODO proper typing here\n            dispatch(actions.searchOrgs(searchTerms) as any)\n        },\n        onSortOrgs: (sortBy: string, sortDirection: SortDirection) => {\n            // TODO proper typing here\n            dispatch(actions.sortOrgs(sortBy, sortDirection) as any)\n        },\n        onFilterOrgs: (filter: string) => {\n            dispatch(actions.filterOrgs(filter) as any)\n        }\n    }\n}\n\n// export function mapDispatchToProps(dispatch: Dispatch<any>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n//             dispatch(actions.searchOrgs(searchTerms))\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationsBrowser)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\nexport interface AddOrg extends Action {\n    type: ActionFlag.ADD_ORG\n}\n\nexport interface AddOrgStart extends Action {\n    type: ActionFlag.ADD_ORG_START\n}\n\nexport interface AddOrgSuccess extends Action {\n    type: ActionFlag.ADD_ORG_SUCCESS,\n    organization: Organization\n}\n\nexport interface AddOrgError extends Action<ActionFlag.ADD_ORG_ERROR> {\n    type: ActionFlag.ADD_ORG_ERROR,\n    error: AppError\n}\n\n// Editing\n\nexport interface AddOrgEdit extends Action<ActionFlag.ADD_ORG_EDIT> {\n    type: ActionFlag.ADD_ORG_EDIT;\n}\n\nexport interface AddOrgEditStart {\n    type: ActionFlag.ADD_ORG_EDIT_START\n}\n\nexport interface AddOrgEditFinish {\n    type: ActionFlag.ADD_ORG_EDIT_FINISH\n}\n\n// Evaluating state of form \n\nexport interface AddOrgEvaluate extends Action<ActionFlag.ADD_ORG_EVALUATE> {\n    type: ActionFlag.ADD_ORG_EVALUATE\n}\n\nexport interface AddOrgEvaluateOK extends Action<ActionFlag.ADD_ORG_EVALUATE_OK> {\n    type: ActionFlag.ADD_ORG_EVALUATE_OK\n}\n\nexport interface AddOrgEvaluateErrors extends Action<ActionFlag.ADD_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n}\n\n// Updating name field\n\nexport interface AddOrgUpdateName extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface AddOrgUpdateNameSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface AddOrgUpdateNameError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface AddOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface AddOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface AddOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\nexport interface AddOrgUpdateId extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID,\n    id: string\n}\n\nexport interface AddOrgUpdateIdSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n    id: string\n}\n\nexport interface AddOrgUpdateIdError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n    id: string,\n    error: UIError\n}\n\n// Updating description field\n\nexport interface AddOrgUpdateDescription extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function addOrgStart(): AddOrgStart {\n    return {\n        type: ActionFlag.ADD_ORG_START\n    }\n}\n\nexport function addOrgSuccess(org: Organization): AddOrgSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_SUCCESS,\n        organization: org\n    }\n}\n\nexport function addOrgError(error: AppError): AddOrgError {\n    return {\n        type: ActionFlag.ADD_ORG_ERROR,\n        error: error\n    }\n}\n\nexport function addOrgEditStart() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_START\n    }\n}\n\nexport function addOrgEditFinish() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_FINISH\n    }\n}\n\n// Evaluate\n\nexport function addOrgEvaluateOk(): AddOrgEvaluateOK {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_OK\n    }\n}\n\nexport function AddOrgEvaluateErrors(): AddOrgEvaluateErrors {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Update Name\n\nexport function addOrgUpdateNameSuccess(name: string): AddOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function addOrgUpdateNameError(name: string, error: UIError): AddOrgUpdateNameError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\nexport function addOrgUpdateIdSuccess(id: string): AddOrgUpdateIdSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n        id: id\n    }\n}\n\n// Update Gravatar Hash\n\nexport function addOrgUpdateGravatarHashSuccess(gravatarHash: string): AddOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): AddOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\nexport function addOrgUpdateIdError(id: string, error: UIError): AddOrgUpdateIdError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n        id: id,\n        error: error\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(description: string): AddOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function addOrgUpdateDescriptionError(description: string, error: UIError): AddOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function addOrgEdit() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgEditStart())\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrg() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            addOrg: { newOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!newOrganization) {\n            dispatch(addOrgError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        model.addOrg(newOrganization, username)\n            .then((org: Organization) => {\n                dispatch(addOrgSuccess(org))\n            })\n            .catch((error) => {\n                console.error('error adding', newOrganization, error)\n                dispatch(addOrgError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function addOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { addOrg: { newOrganization } } = getState()\n\n        const { addOrg: editState } = getState()\n\n        if (!newOrganization) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.name.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.id.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.gravatarHash.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.description.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(addOrgEvaluateOk())\n    }\n}\n\nfunction newModelFromState(state: StoreState) {\n    const { auth: { authorization: { token, username } },\n        app: { config } } = state\n    return new Model({\n        token, username,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url,\n        workspaceServiceURL: config.services.Workspace.url\n    })\n}\n\nexport function addOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(addOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(addOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateId(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const [validatedId, error] = Validation.validateOrgId(id)\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateIdError(validatedId, error))\n            dispatch(addOrgEvaluate())\n            return\n        }\n        const model = newModelFromState(getState())\n        model.groupExists(validatedId)\n            .then((exists) => {\n                if (exists) {\n                    dispatch(addOrgUpdateIdError(validatedId, {\n                        type: UIErrorType.ERROR,\n                        message: 'This org id is already in use'\n                    }))\n                } else {\n                    dispatch(addOrgUpdateIdSuccess(validatedId))\n                }\n\n                dispatch(addOrgEvaluate())\n            })\n    }\n}\n\nexport function addOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(addOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon, Modal } from 'antd';\nimport md5 from 'md5'\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './NewOrganization.css'\n\nimport Header from './Header';\n\nexport interface NewOrganizationProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    newOrganization: EditableOrganization,\n    onAddOrgEdit: () => void,\n    onAddOrg: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface NewOrganizationState {\n    cancelToBrowser: boolean;\n}\n\nclass NewOrganization extends React.Component<NewOrganizationProps, NewOrganizationState> {\n\n    origin: string;\n    gravatarEmail: React.RefObject<HTMLInputElement>\n\n    constructor(props: NewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false\n        }\n\n        this.gravatarEmail = React.createRef()\n\n        this.origin = document.location!.origin\n\n        this.props.onAddOrgEdit()\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'New Organization Editor Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the new organizations editor...</p>\n                </div>\n            )\n        })\n    }\n\n    onGravatarEmailSync() {\n        let email;\n        if (this.gravatarEmail.current) {\n            email = this.gravatarEmail.current.value\n        } else {\n            email = 'n/a'\n        }\n        const hashed = md5(email)\n        this.props.onUpdateGravatarHash(hashed);\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have entered information for this new organization.</p>\n\n                    <p>If you leave the editor without first saving, the new organization <i>will not be created</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onAddOrg();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateId(e.target.value);\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.saveState === SaveState.NEW\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"newOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.newOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <div style={{ display: 'flex', flexDirection: 'row', marginBottom: '4px' }}>\n                            <div style={{ flex: '1 1 0px' }}>\n                                <input ref={this.gravatarEmail} placeholder=\"Provide your gravatar-linked email address, if any\" />\n                            </div>\n                            <div style={{ flex: '0 0 auto' }}>\n                                <Button\n                                    icon=\"arrow-down\"\n                                    style={{ height: '100%' }}\n                                    onClick={this.onGravatarEmailSync.bind(this)} />\n                            </div>\n                        </div>\n                        <input value={this.props.newOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.newOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.newOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.newOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.newOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.newOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.newOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.newOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.newOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.newOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.newOrganization!.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"plus-circle\" />\n                            {' '}\n                            Adding a New Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"newOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToBrowser.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs Browser\n                        </Button>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading New Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        // TODO: this is just a prop for today.\n        if (this.props.saveState === SaveState.SAVED) {\n            return <Redirect push to={\"/editOrganization/\" + this.props.newOrganization.id.value} />\n        }\n\n        if (!this.props.newOrganization) {\n            return (\n                <div className=\"NewOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState } from '../types';\nimport {\n    AddOrg, addOrg,\n    addOrgUpdateName, addOrgUpdateId, addOrgUpdateDescription, addOrgEdit, addOrgUpdateGravatarHash\n} from '../redux/actions/addOrg';\n\nimport NewOrganization from '../components/NewOrganization';\n\ninterface OwnProps {\n}\n\nexport interface StateProps {\n}\n\nexport interface DispatchProps {\n    onAddOrg: () => void,\n    onAddOrgEdit: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ addOrg: { editState, saveState, validationState, newOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        newOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<AddOrg>): DispatchProps {\n    return {\n        onAddOrgEdit: () => {\n            dispatch(addOrgEdit() as any)\n        },\n        onAddOrg: () => {\n            dispatch(addOrg() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(addOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(addOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        onUpdateId: (id) => {\n            dispatch(addOrgUpdateId(id) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(addOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(NewOrganization)","import * as React from 'react'\nimport marked from 'marked'\nimport { NavLink } from 'react-router-dom'\n\nimport './ViewOrganization.css'\n\nimport { ViewOrgState, Organization, AppError, UserRelationToOrganization } from '../types'\nimport { Button, Modal, Icon, Tooltip } from 'antd';\nimport Header from './Header';\nimport { types } from 'util';\n\nexport interface ViewOrganizationState {\n    showInfo: boolean\n}\n\nexport interface ViewOrganizationProps {\n    state: ViewOrgState\n    id: string,\n    organization?: Organization\n    error?: AppError\n    username: string,\n    onViewOrg: (id: string) => void\n}\n\nclass ViewOrganization extends React.Component<ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: ViewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            showInfo: false\n        }\n\n        this.props.onViewOrg(this.props.id)\n    }\n\n    onShowInfo() {\n        // this.setState({ showInfo: true })\n        Modal.info({\n            title: 'View Organization Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations viewer...</p>\n                </div>\n            )\n        })\n    }\n\n    buildFooter() {\n        return (\n            <div>\n                {this.renderEditRow()}\n                {/* <p style={{ textAlign: 'center' }}>\n                    You may also  <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink> to the organizations browser.\n                </p> */}\n            </div>\n        )\n    }\n\n    renderEditRow() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <p style={{ textAlign: 'center' }}>\n                    As the owner of this group, you may <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink> it.\n                </p>\n            )\n        }\n    }\n\n    renderEditButton() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink>\n            )\n        }\n    }\n\n    renderOrg() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <div className=\"org\">\n                <div className=\"nameAndLogo\">\n                    <div className=\"avatar\">\n                        {this.renderOrgAvatar(this.props.organization)}\n                    </div>\n                    <div className=\"nameAndLink\">\n                        <div className=\"name\">\n                            {this.props.organization.name}\n                        </div>\n                        <div className=\"id\">\n                            <span className=\"label\">permalink</span>{' '}\n                            <span className=\"permalinkBase\">https://narrative.kbase.us#orgs/</span>{this.props.organization.id}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"description\"\n                    dangerouslySetInnerHTML={({ __html: marked(this.props.organization.description || '') })}\n                />\n\n            </div>\n        )\n    }\n\n    getOrgAvatarUrl(org: Organization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: Organization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    getAvatarUrl() {\n        if (!this.props.organization) {\n            return\n        }\n        switch (this.props.organization.owner.avatarOption || 'gravatar') {\n            case 'gravatar':\n                const gravatarDefault = this.props.organization.owner.gravatarDefault || 'identicon';\n                const gravatarHash = this.props.organization.owner.gravatarHash;\n                if (gravatarHash) {\n                    return 'https://www.gravatar.com/avatar/' + gravatarHash + '?s=60&amp;r=pg&d=' + gravatarDefault;\n                } else {\n                    return './nouserpic.png';\n                }\n            case 'silhouette':\n            case 'mysteryman':\n            default:\n                return './nouserpic.png';\n        }\n    }\n\n    renderAvatar() {\n        const avatarUrl = this.getAvatarUrl()\n        return (\n            <img\n                src={avatarUrl}\n                style={{ width: 60 }}\n            />\n        )\n    }\n\n    renderRelation(org: Organization) {\n        switch (org.relation) {\n            case (UserRelationToOrganization.NONE):\n                return (\n                    <span><Icon type=\"stop\" />None</span>\n                )\n            case (UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org, but you may access it; you may request membership\"\n                    >\n                        <span><Icon type=\"eye\" style={{ marginRight: '4px' }} />Viewer</span>\n                    </Tooltip>\n                )\n            case (UserRelationToOrganization.MEMBER):\n                return (<span><Icon type=\"user\" />Member</span>)\n            case (UserRelationToOrganization.ADMIN):\n                return (<span><Icon type=\"unlock\" />Admin</span>)\n            case (UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You own this org\"\n                    >\n                        <span><Icon type=\"unlock\" theme=\"filled\" style={{ marginRight: '4px' }} />Owner</span>\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderInfo() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col0\">\n                        <div>\n                            <div className=\"label\">proprietor</div>\n                        </div>\n                        <div className=\"ownerTable\">\n                            <div className=\"avatarCol\">\n                                {this.renderAvatar()}\n                            </div>\n                            <div className=\"proprietorCol\">\n\n                                <div className=\"owner\">\n                                    <a href=\"#people/{org.owner.username}\" target=\"_blank\">{this.props.organization.owner.realname}</a>\n                                    {' '}\n                                    ❨{this.props.organization.owner.username}❩\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.organization}\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.city} {this.props.organization.owner.state}, {this.props.organization.owner.country}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">established</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"createdAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.createdAt)}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">last updated</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"modifiedAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.modifiedAt)}\n                        </div>\n                    </div>\n                </div>\n\n            </form>\n        )\n    }\n\n    renderUserRelationship() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">your relation</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"relation\">\n                            {this.renderRelation(this.props.organization)}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Viewing Org \"\n                            {this.props.organization && this.props.organization.name}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        {this.renderEditButton()}\n                        <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (typeof this.props.organization !== 'undefined') {\n            return (\n                <div className=\"ViewOrganization\">\n                    {this.renderHeader()}\n                    <div className=\"mainRow\">\n                        <div className=\"mainColumn\">\n                            {this.renderOrg()}\n                        </div>\n                        <div className=\"infoColumn\">\n                            <div className=\"infoBox\">\n                                {this.renderUserRelationship()}\n                            </div>\n                            <div className=\"infoBox\">\n                                {this.renderInfo()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"ViewOrganization\">\n                {this.renderLoadingHeader()}\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default ViewOrganization","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/viewOrg'\n\nimport ViewOrganization from '../components/ViewOrganization'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n    id: string\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    id: string,\n    state: types.ViewOrgState\n    organization?: types.Organization\n    error?: types.AppError,\n    username: string\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onViewOrg: (id: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\n\nfunction mapStateToProps({ viewOrg: { state, organization, error }, auth: { authorization: { username } } }: types.StoreState,\n    { id }: OwnProps): StateProps {\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        id, state, organization, error, username\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.ViewOrgFetch>): DispatchProps {\n    return {\n        onViewOrg: (id: string) => {\n            dispatch(actions.viewOrgFetch(id) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ViewOrganization) \n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState, EditableOrganization } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\n// Loading the editor\nexport interface EditOrgEdit extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT,\n    id: string\n}\n\nexport interface EditOrgEditStart extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_START,\n    id: string\n}\n\nexport interface EditOrgEditSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n    editedOrganization: EditableOrganization\n}\n\nexport interface EditOrgEditError extends Action<ActionFlag.EDIT_ORG_EDIT_ERROR> {\n    type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n    error: AppError\n}\n\n// Evaluating state of form \n\nexport interface EditOrgEvaluate extends Action<ActionFlag.EDIT_ORG_EVALUATE> {\n    type: ActionFlag.EDIT_ORG_EVALUATE\n}\n\nexport interface EditOrgEvaluateOK extends Action<ActionFlag.EDIT_ORG_EVALUATE_OK> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_OK\n}\n\nexport interface EditOrgEvaluateErrors extends Action<ActionFlag.EDIT_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n}\n\n// Saving\n\nexport interface EditOrgSave extends Action<ActionFlag.EDIT_ORG_SAVE> {\n    type: ActionFlag.EDIT_ORG_SAVE\n}\n\nexport interface EditOrgSaveStart extends Action<ActionFlag.EDIT_ORG_SAVE_START> {\n    type: ActionFlag.EDIT_ORG_SAVE_START\n}\n\nexport interface EditOrgSaveSuccess extends Action<ActionFlag.EDIT_ORG_SAVE_SUCCESS> {\n    type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n}\n\nexport interface EditOrgSaveError extends Action<ActionFlag.EDIT_ORG_SAVE_ERROR> {\n    type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Updating name field\n\nexport interface EditOrgUpdateName extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface EditOrgUpdateNameSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface EditOrgUpdateNameError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface EditOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface EditOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface EditOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\n// export interface EditOrgUpdateId extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdSuccess {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdError extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//     id: string,\n//     error: UIError\n// }\n\n// Updating description field\n\nexport interface EditOrgUpdateDescription extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function editOrgStart(id: string): EditOrgEditStart {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START,\n        id: id\n    }\n}\n\nexport function editOrgEditStart() {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START\n    }\n}\n\nexport function editOrgEditSuccess(editedOrganization: EditableOrganization) {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n        editedOrganization: editedOrganization\n    }\n}\n\nexport function editOrgEditError(error: AppError): EditOrgEditError {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n        error: error\n    }\n}\n\n// Evaluate\n\nexport function editOrgEvaluateOk(): EditOrgEvaluateOK {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_OK\n    }\n}\n\nexport function EditOrgEvaluateErrors(): EditOrgEvaluateErrors {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Save\n\n// export function editOrgSave(): EditOrgSave {\n//     return {\n//         type: ActionFlag.EDIT_ORG_SAVE\n//     }\n// }\n\nexport function editOrgSaveStart(): EditOrgSaveStart {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_START\n    }\n}\n\nexport function editOrgSaveSuccess(): EditOrgSaveSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n    }\n}\n\nexport function editOrgSaveError(error: AppError): EditOrgSaveError {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n// Update Name\n\nexport function editOrgUpdateNameSuccess(name: string): EditOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function editOrgUpdateNameError(name: string, error: UIError): EditOrgUpdateNameError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\n// export function editOrgUpdateIdSuccess(id: string): EditOrgUpdateIdSuccess {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//         id: id\n//     }\n// }\n\n// Update Gravatar Hash\n\nexport function editOrgUpdateGravatarHashSuccess(gravatarHash: string): EditOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): EditOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\n// export function editOrgUpdateIdError(id: string, error: UIError): EditOrgUpdateIdError {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//         id: id,\n//         error: error\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(description: string): EditOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function editOrgUpdateDescriptionError(description: string, error: UIError): EditOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function editOrgEdit(organizationId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgStart(organizationId))\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(organizationId)\n            .then((org) => {\n                const editableOrg: EditableOrganization = {\n                    id: {\n                        value: org.id,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    name: {\n                        value: org.name,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    gravatarHash: {\n                        value: org.gravatarHash,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    description: {\n                        value: org.description,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    }\n                }\n                dispatch(editOrgEditSuccess(editableOrg))\n            })\n            .catch((err) => {\n                console.error('load org error', err)\n                dispatch(editOrgEditError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\nexport function editOrgSave() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgSaveStart())\n\n        const { auth: { authorization: { token, username } },\n            editOrg: { organizationId, editedOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!editedOrganization) {\n            dispatch(editOrgSaveError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        const update = {\n            name: editedOrganization.name.value,\n            gravatarHash: editedOrganization.gravatarHash.value,\n            description: editedOrganization.description.value\n        }\n\n        model.updateOrg(organizationId, update)\n            .then(() => {\n                dispatch(editOrgSaveSuccess())\n            })\n            .catch((error) => {\n                console.error('error adding', editedOrganization, error)\n                dispatch(editOrgSaveError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function editOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { editOrg: { editedOrganization } } = getState()\n\n        const { editOrg: editState } = getState()\n\n        if (!editedOrganization) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.name.status === FieldState.EDITED_OK ||\n            editedOrganization.name.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        // if (editedOrganization.id.status !== FieldState.EDITED_OK) {\n        //     dispatch(EditOrgEvaluateErrors())\n        //     return\n        // }\n\n        if (!(editedOrganization.gravatarHash.status === FieldState.EDITED_OK ||\n            editedOrganization.gravatarHash.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.description.status === FieldState.EDITED_OK ||\n            editedOrganization.description.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(editOrgEvaluateOk())\n    }\n}\n\nexport function editOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(editOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function editOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(editOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function editOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(editOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon, Modal } from 'antd';\nimport md5 from 'md5'\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './EditOrganization.css'\n\nimport Header from './Header';\n\nexport interface EditOrganizationProps {\n    id: string,\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization,\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface EditOrganizationState {\n    cancelToBrowser: boolean;\n    cancelToViewer: boolean;\n}\n\nclass EditOrganization extends React.Component<EditOrganizationProps, EditOrganizationState> {\n\n    origin: string;\n\n    gravatarEmail: React.RefObject<HTMLInputElement>\n\n    constructor(props: EditOrganizationProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false,\n            cancelToViewer: false\n        }\n\n        this.gravatarEmail = React.createRef()\n\n        this.origin = document.location!.origin\n\n        this.props.onEditOrgEdit(this.props.id)\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'Organization Editor Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations editor...</p>\n                </div>\n            )\n        })\n    }\n\n\n    onGravatarEmailSync() {\n        let email;\n        if (this.gravatarEmail.current) {\n            email = this.gravatarEmail.current.value\n        } else {\n            email = 'n/a'\n        }\n        const hashed = md5(email)\n        this.props.onUpdateGravatarHash(hashed);\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onClickCancelToViewer() {\n        if (!this.isModified()) {\n            this.setState({ cancelToViewer: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToViewer: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onEditOrgSave();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        // this.props.onUpdateId(e.target.value);\n        console.warn('no updating id, naughty!')\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY)\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"editOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.editedOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <div style={{ display: 'flex', flexDirection: 'row', marginBottom: '4px' }}>\n                            <div style={{ flex: '1 1 0px' }}>\n                                <input ref={this.gravatarEmail} placeholder=\"Provide your gravatar-linked email address, if any\" />\n                            </div>\n                            <div style={{ flex: '0 0 auto' }}>\n                                <Button\n                                    icon=\"arrow-down\"\n                                    style={{ height: '100%' }}\n                                    onClick={this.onGravatarEmailSync.bind(this)} />\n                            </div>\n                        </div>\n\n                        <input value={this.props.editedOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.editedOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.editedOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.editedOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.editedOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.editedOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.editedOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.editedOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.editedOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.editedOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.editedOrganization.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"edit\" />\n                            {' '}\n                            Editing Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"editOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToViewer.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to this Org\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToBrowser.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs Browser\n                        </Button>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    // renderFooter() {\n    //     return (\n    //         <div className=\"footerRow\">\n    //             <div className=\"editorColumn\">\n    //                 <div className=\"row\">\n    //                     <div className=\"col1\">\n    //                     </div>\n    //                     <div className=\"col2\">\n    //                         <div className=\"footer\">\n    //                             <Button form=\"editOrganizationForm\"\n    //                                 key=\"submit\"\n    //                                 htmlType=\"submit\">Save</Button>\n    //                             <Button type=\"danger\"\n    //                                 onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //             <div className=\"previewColumn\">\n\n    //             </div>\n    //         </div>\n    //     )\n    // }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        if (this.state.cancelToViewer) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.id} />\n        }\n\n        // // TODO: this is just a prop for today.\n        // if (this.props.saveState === SaveState.SAVED) {\n        //     return <Redirect push to={\"/editOrganization/\" + this.props.editedOrganization.id.value} />\n        // }\n\n        if (!this.props.editedOrganization) {\n            return (\n                <div className=\"EditOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"EditOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n                {/* {this.renderFooter()} */}\n            </div>\n        )\n    }\n}\n\nexport default EditOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, EditableOrganization, EditState, SaveState, ValidationState } from '../types';\nimport {\n    EditOrgEdit, editOrgSave,\n    editOrgUpdateName,\n    // editOrgUpdateId, \n    editOrgUpdateDescription, editOrgEdit, editOrgUpdateGravatarHash\n} from '../redux/actions/editOrg';\n\nimport EditOrganization from '../components/EditOrganization';\n\ninterface OwnProps {\n    id: string\n}\n\nexport interface StateProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization\n}\n\nexport interface DispatchProps {\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ editOrg: { editState, saveState, validationState, editedOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        editedOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<EditOrgEdit>): DispatchProps {\n    return {\n        onEditOrgEdit: (id: string) => {\n            dispatch(editOrgEdit(id) as any)\n        },\n        onEditOrgSave: () => {\n            dispatch(editOrgSave() as any)\n        },\n        onUpdateName: (name: string) => {\n            dispatch(editOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(editOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        // onUpdateId: (id) => {\n        //     dispatch(editOrgUpdateId(id) as any)\n        // },\n        onUpdateDescription: (description) => {\n            dispatch(editOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(EditOrganization)","import * as React from 'react'\nimport './Auth.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\n\n\nexport interface AuthState {\n\n}\n\nclass Auth extends React.Component<types.AuthProps, AuthState> {\n\n    tokenRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: types.AuthProps) {\n        super(props)\n\n        this.tokenRef = React.createRef()\n\n        this.props.checkAuth()\n    }\n\n    onLogoutClick() {\n        this.props.onRemoveAuthorization()\n    }\n\n    onLoginClick() {\n        if (this.tokenRef.current === null) {\n            return\n        }\n        const token = this.tokenRef.current.value\n        if (token.length === 0) {\n            return\n        }\n        this.props.onAddAuthorization(token)\n    }\n\n    buildAuthForm() {\n        return (\n            <div className=\"Auth-form\">\n                Token: <input ref={this.tokenRef} />\n                <Button\n                    icon=\"save\"\n                    htmlType=\"submit\"\n                    onClick={this.onLoginClick.bind(this)} >\n                    Assign Token\n                </Button>\n            </div>\n        )\n    }\n\n    buildAuthToolbar() {\n        return (\n            <div className=\"Auth-toolbar\">\n                Logged in as <b><span>{this.props.authorization.authorization.realname}</span> (<span>{this.props.authorization.authorization.username}</span></b>)\n                {' '}\n                <Button icon=\"logout\" onClick={this.onLogoutClick.bind(this)}>Sign out</Button>\n            </div>\n        )\n    }\n\n    buildAuthDev() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.buildAuthToolbar()}\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized! Enter a user token below</p>\n                        {this.buildAuthForm()}\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Error</p>\n                        {this.props.authorization.message}\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    buildAuthProd() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized!</p>\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-error\">\n                        <p>Error: ??</p>\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"Auth\">\n                {this.props.hosted ? this.buildAuthProd() : this.buildAuthDev()}\n            </div>\n        )\n\n    }\n}\n\nexport default Auth","\nexport interface RootInfo {\n    version: string,\n    servertime: number\n}\n\ninterface AuthEndpoints {\n    root: string,\n    tokenInfo: string,\n    apiMe: string,\n    me: string,\n    loginStart: string,\n    loginChoice: string,\n    loginCreate: string,\n    loginUsernameSuggest: string,\n    loginPick: string,\n    loginCancel: string,\n    logout: string,\n    linkStart: string,\n    linkCancel: string,\n    linkChoice: string,\n    linkPick: string,\n    linkRemove: string,\n    tokens: string,\n    tokensRevoke: string,\n    tokensRevokeAll: string,\n    userSearch: string,\n    adminUserSearch: string,\n    adminUser: string\n}\n\nconst endpoints: AuthEndpoints = {\n    root: '',\n    tokenInfo: 'api/V2/token',\n    apiMe: 'api/V2/me',\n    me: 'me',\n    loginStart: 'login/start',\n    logout: 'logout',\n    loginChoice: 'login/choice',\n    loginCreate: 'login/create',\n    loginUsernameSuggest: 'login/suggestname',\n    loginPick: 'login/pick',\n    loginCancel: 'login/cancel',\n    linkStart: 'link/start',\n    linkCancel: 'link/cancel',\n    linkChoice: 'link/choice',\n    linkPick: 'link/pick',\n    linkRemove: 'me/unlink',\n    tokens: 'tokens',\n    tokensRevoke: 'tokens/revoke',\n    tokensRevokeAll: 'tokens/revokeall',\n    userSearch: 'api/V2/users/search',\n    adminUserSearch: 'api/V2/admin/search',\n    adminUser: 'api/V2/admin/user'\n}\n\nexport interface TokenInfo {\n    created: number,\n    expires: number,\n    id: string,\n    name: string | null,\n    token: string,\n    type: string,\n    user: string,\n    cachefor: number\n}\n\nexport interface Identity {\n    id: string,\n    provider: string,\n    username: string\n}\n\nexport interface Role {\n    id: string,\n    desc: string\n}\n\nexport interface Account {\n    created: number,\n    customroles: Array<string>,\n    display: string,\n    email: string,\n    idents: Array<Identity>,\n    lastLogin: number,\n    local: boolean,\n    roles: Array<Role>,\n    user: string\n}\nexport class AuthClient {\n    url: string;\n\n    constructor({ url }: { url: string }) {\n        this.url = url\n    }\n\n    makePath(path: Array<string> | string): string {\n        if (typeof path === 'string') {\n            return [this.url].concat([path]).join('/');\n        }\n        return [this.url].concat(path).join('/');\n    }\n\n\n    root(): Promise<RootInfo> {\n        return fetch(this.makePath([endpoints.root]), {\n            headers: {\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as RootInfo\n            })\n    }\n\n    getTokenInfo(token: string): Promise<TokenInfo> {\n        return fetch(this.makePath([endpoints.tokenInfo]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as TokenInfo\n            })\n    }\n\n    getMe(token: string): Promise<Account> {\n        return fetch(this.makePath([endpoints.apiMe]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Account\n            })\n    }\n\n\n    // getInfo() : Promise<GroupsServiceInfo> {\n    //     return fetch(this.url + '/', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json();\n    //         })\n    //         .then((result) => {\n    //             return result as GroupsServiceInfo;\n    //         });\n    // }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport * as Cookies from 'es-cookie'\n\nimport { ActionFlag } from './index'\nimport { AppError, StoreState } from '../../types';\nimport { AuthClient, TokenInfo, Account } from '../../data/auth';\n\n// Action Definitions\n\nexport interface AuthCheck extends Action {\n    type: ActionFlag.AUTH_CHECK\n}\n\nexport interface AuthCheckStart extends Action {\n    type: ActionFlag.AUTH_CHECK_START\n}\n\nexport interface AuthCheckError extends Action {\n    type: ActionFlag.AUTH_CHECK_ERROR,\n    error: AppError\n}\n\nexport interface AuthAuthorized extends Action {\n    type: ActionFlag.AUTH_AUTHORIZED,\n    token: string\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface AuthUnauthorized extends Action {\n    type: ActionFlag.AUTH_UNAUTHORIZED\n}\n\nexport interface AuthRemoveAuthorization extends Action {\n    type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n}\n\nexport interface AuthAddAuthorization extends Action {\n    type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n    token: string\n}\n\n// Action Creators\n\n\nexport function authCheckStart(): AuthCheckStart {\n    return {\n        type: ActionFlag.AUTH_CHECK_START\n    }\n}\n\nexport function authCheckError(error: AppError): AuthCheckError {\n    return {\n        type: ActionFlag.AUTH_CHECK_ERROR,\n        error\n    }\n}\n\nexport function authAuthorized(token: string, username: string, realname: string, roles: Array<string>): AuthAuthorized {\n    return {\n        type: ActionFlag.AUTH_AUTHORIZED,\n        token, username, realname, roles\n    }\n}\n\nexport function authUnauthorized(): AuthUnauthorized {\n    return {\n        type: ActionFlag.AUTH_UNAUTHORIZED\n    }\n}\n\n// export function authRemoveAuthorization(): AuthRemoveAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n//     }\n// }\n\n// export function authAddAuthorization(token: string): AuthAddAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n//         token: token\n//     }\n// }\n\n// Action Thunks\n\nexport function checkAuth() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(authCheckStart())\n\n        // TODO: get the auth from the kbase-ui integration api, perhaps a postmessage call\n\n        const token = Cookies.get('kbase_session')\n        if (!token) {\n            dispatch(authUnauthorized())\n            return\n        }\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function authRemoveAuthorization() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // remove cookie\n        Cookies.remove('kbase_session')\n\n        // remove auth in state\n        dispatch(authUnauthorized())\n    }\n}\n\nexport function authAddAuthorization(token: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // add cookie\n        Cookies.set('kbase_session', token)\n\n        // TODO: get auth info\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, AuthState, Authorization } from '../types'\nimport Auth from '../components/Auth'\nimport * as actions from '../redux/actions/auth'\n\nexport interface OwnProps {\n    hosted: boolean\n}\n\ninterface StateProps {\n    authorization: Authorization\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n}\n\ninterface DispatchProps {\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const { auth } = state\n    return {\n        authorization: auth\n        // authStatus: status,\n        // token: authorization.token || null,\n        // username: authorization.username || null,\n        // realname: authorization.realname || null\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        checkAuth: () => {\n            dispatch(actions.checkAuth() as any)\n        },\n        onRemoveAuthorization: () => {\n            dispatch(actions.authRemoveAuthorization() as any)\n        },\n        onAddAuthorization: (token: string) => {\n            dispatch(actions.authAddAuthorization(token) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Auth)","\nimport uuidv4 from 'uuid/v4'\n\ninterface ListenerParams {\n    name: string,\n    onSuccess: (payload: Payload) => void,\n    onError: (error: Error) => void\n}\n\nclass Listener {\n    name: string;\n    onSuccess: (payload: Payload) => void;\n    onError: (error: Error) => void;\n\n    constructor({ name, onSuccess, onError }: ListenerParams) {\n        this.name = name;\n        this.onSuccess = onSuccess;\n        this.onError = onError;\n    }\n}\n\ntype Payload = any;\n\ninterface WaitingListenerParams extends ListenerParams {\n    timeout?: number\n}\n\nclass WaitingListener extends Listener {\n    started: Date;\n    timeout: number;\n\n    constructor(params: WaitingListenerParams) {\n        super(params);\n        this.started = new Date();\n        this.timeout = params.timeout || 5000;\n    }\n}\n\ninterface Envelope {\n    channelId: string\n    id: string\n}\n\nclass Message {\n    name: string;\n    payload: any;\n    id: string;\n    created: Date;\n    channel: any\n    envelope: Envelope | null\n\n    constructor({ name, payload, channel }: { name: string, payload: any, channel: any }) {\n        this.name = name\n        this.payload = payload\n        this.id = uuidv4()\n        this.created = new Date()\n        this.channel = channel\n        this.envelope = null;\n    }\n\n    getMessage() {\n        return {\n            envelope: {\n                id: this.id,\n                created: this.created,\n                channel: this.channel\n            },\n            name: this.name,\n            payload: this.payload\n        };\n    }\n}\n\ninterface Handler {\n    started: Date,\n    handler: (response: any) => any\n}\n\ninterface ChannelParams {\n    window: Window,\n    host: string,\n    channelId?: string\n}\n\nexport class Channel {\n    window: Window\n    host: string\n    id: string\n    awaitingResponse: Map<string, Handler>\n    waitingListeners: Map<string, Array<Listener>>\n    listeners: Map<string, Array<Listener>>\n    lastId: number\n    sentCount: number\n    receivedCount: number\n    unwelcomeReceivedCount: number\n    unwelcomeReceivedCountThreshhold: number\n    unwelcomeReceiptWarning: boolean\n    unwelcomeReceiptWarningCount: number\n    currentListener: ((message: MessageEvent) => void) | null\n\n    constructor(params: ChannelParams) {\n        // The given window upon which we will listen for messages.\n        this.window = params.window;\n\n        // The host for the window; required for postmessage\n        if (this.window.document === null) {\n            throw new Error('No document')\n        }\n        if (this.window.document.location === null) {\n            throw new Error('No location')\n        }\n        this.host = params.host || this.window.document.location.origin;\n\n        // The channel id. Used to filter all messages received to\n        // this channel.\n        this.id = params.channelId || uuidv4()\n\n\n        this.awaitingResponse = new Map<string, Handler>()\n        this.waitingListeners = new Map<string, Array<Listener>>()\n        this.listeners = new Map<string, Array<Listener>>()\n\n        this.lastId = 0\n        this.sentCount = 0\n        this.receivedCount = 0\n\n        this.unwelcomeReceivedCount = 0\n        this.unwelcomeReceivedCountThreshhold = 100\n        this.unwelcomeReceiptWarning = true\n        this.unwelcomeReceiptWarningCount = 0\n        this.currentListener = null\n    }\n\n    genId() {\n        this.lastId += 1;\n        return 'msg_' + String(this.lastId);\n    }\n\n    receiveMessage(messageEvent: MessageEvent) {\n        const message = messageEvent.data as Message;\n        if (!message) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message data; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!message.envelope) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!(message.envelope.channelId === this.id)) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('Message envelope does not match this channel\\'s id', messageEvent);\n            }\n            return;\n        }\n        if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n            this.unwelcomeReceiptWarning = false;\n            console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n        }\n\n        // A message sent as a request will have registered a response handler\n        // in the awaitingResponse hash, using a generated id as the key.\n        // TODO: to to rethink using the message id here. Perhaps somehting like a\n        // chain of ids, the root of which is the origination id, which is the one\n        // known here when it it is sent; the message \"id\" should be assigned whenver\n        // a message is sent, but a response  message would include the original\n        // message in the \"chain\"...\n\n        // We can also have awaiting responses without an originating request.\n        // These are useful for, e.g., a promise which awaits a message to be sent\n        // within some window...\n        if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n            try {\n                const response = this.awaitingResponse.get(message.envelope.id)\n                this.awaitingResponse.delete(message.envelope.id)\n                if (response) {\n                    response.handler(message.payload)\n                }\n            } catch (ex) {\n                console.error('Error handling response for message ', message, ex);\n            }\n        }\n\n        // and also awaiting by message name. Like a listener, but they are only used\n        // once.\n        if (this.waitingListeners.has(message.name)) {\n            const awaiting = this.waitingListeners.get(message.name)!\n            this.waitingListeners.delete(message.name)\n            awaiting.forEach((listener) => {\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n\n        // Otherwise, permanently registered handlers are found in the listeners for the\n        // message name.\n        if (this.listeners.has(message.name)) {\n            this.listeners.get(message.name)!.forEach((listener) => {\n                if (!listener.onSuccess) {\n                    console.warn('no handler for listener!', listener);\n                }\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n    }\n\n    listen(listener: Listener) {\n        if (!this.listeners.has(listener.name)) {\n            this.listeners.set(listener.name, [])\n        }\n        this.listeners.get(listener.name)!.push(listener)\n    }\n\n    on(messageId: string, success: (payload: any) => any, error: (error: Error) => void) {\n        this.listen(new Listener({\n            name: messageId,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    sendMessage(message: Message) {\n        this.window.postMessage(message.getMessage(), this.host);\n    }\n\n    send(name: string, payload: Payload) {\n        const message = new Message({ name, payload, channel: this.id });\n        this.sendMessage(message);\n    }\n\n    sendRequest(message: Message, handler: (response: any) => any) {\n        this.awaitingResponse.set('message.id', {\n            started: new Date(),\n            handler: handler\n        })\n\n        this.sendMessage(message);\n    }\n\n    request(name: string, payload: Payload) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.sendRequest(new Message({ name, payload, channel: this.id }), (response: any) => {\n                    resolve(response);\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    startMonitor() {\n        window.setTimeout(() => {\n            const now = new Date().getTime();\n\n            // first take care of listeners awaiting a message.\n            for (const [id, listeners] of this.waitingListeners.entries()) {\n                const newListeners = listeners.filter((listener) => {\n                    if (listener instanceof WaitingListener) {\n                        const elapsed = now - listener.started.getTime();\n                        if (elapsed > listener.timeout) {\n                            try {\n                                if (listener.onError) {\n                                    listener.onError(new Error('timout after ' + elapsed));\n                                }\n                            } catch (ex) {\n                                console.error('Error calling error handler', id, ex);\n                            }\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                });\n                if (newListeners.length === 0) {\n                    this.waitingListeners.delete(id)\n                }\n            }\n\n            if (this.waitingListeners.size > 0) {\n                this.startMonitor()\n            }\n        }, 100);\n    }\n\n    listenOnce(listener: WaitingListener) {\n        if (!this.waitingListeners.has(listener.name)) {\n            this.waitingListeners.set(listener.name, [])\n        }\n        this.waitingListeners.get(listener.name)!.push(listener);\n        if (listener.timeout) {\n            this.startMonitor();\n        }\n    }\n\n    once(name: string, success: (payload: Payload) => void, error: (error: Error) => void) {\n        this.listenOnce(new WaitingListener({\n            name: name,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    when(name: string, timeout: number) {\n        return new Promise((resolve, reject) => {\n            return this.listenOnce(new WaitingListener({\n                name: name,\n                timeout: timeout,\n                onSuccess: (payload) => {\n                    resolve(payload);\n                },\n                onError: (error) => {\n                    reject(error);\n                }\n            }));\n        });\n    }\n\n    stats() {\n        return {\n            sent: this.sentCount,\n            received: this.receivedCount\n        };\n    }\n\n    attach(window: Window) {\n        this.window = window;\n    }\n\n    start() {\n        this.currentListener = (message: MessageEvent) => {\n            this.receiveMessage(message);\n        };\n        this.window.addEventListener('message', this.currentListener, false);\n    }\n\n    stop() {\n        if (this.currentListener) {\n            this.window.removeEventListener('message', this.currentListener, false);\n        }\n    }\n}\n","import uuid from 'uuid/v4'\nimport { Channel } from './windowChannel'\nimport { runInThisContext } from 'vm';\n\nexport interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n/*\n channelId: \"3b33179e-8a6d-4ae9-bc95-af4c0492eaa6\"\nframeId: \"frame_kb_html_be553ee5-645c-4737-80ba-dcb642632f0c\"\nhostId: \"host_kb_html_9a3b5d5d-bb92-43ff-a443-73267aa31323\"\nparams: {}\nparentHost: \"https://ci.kbase.us\"\n\n*/\n\n/*\nIFrameSimulator\nThis little doozey allows us to create a simulated iframe. We can query it for\n the params placed on the iframe, and talk to it via the window channel -- it has \n its own window channel.\n Good thing we designed the channel for multiple channels per window.\n*/\nclass IFrameSimulator {\n    params: IFrameParams | null\n    channel: Channel\n\n    constructor() {\n        this.params = null\n\n        // create a window channel.\n\n        this.channel = new Channel({\n            window: window,\n            host: document.location!.origin\n        })\n\n    }\n\n    getParamsFromIFrame(): IFrameParams {\n        return {\n            channelId: this.channel.id,\n            frameId: uuid(),\n            params: {\n                groupsServiceURL: 'services/groups',\n                userProfileServiceURL: 'services/user_profile/rpc',\n                workspaceServiceURL: 'services/ws'\n            },\n            parentHost: document.location!.origin\n        }\n    }\n}\n\n\n\nexport default IFrameSimulator","export interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n\nexport class IFrameIntegration {\n    getParamsFromIFrame() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-params')) {\n            // throw new Error('No params found in window!!');\n            return null\n        }\n        const params = window.frameElement.getAttribute('data-params');\n        if (params === null) {\n            // throw new Error('No params found in window!')\n            return null\n        }\n        return JSON.parse(decodeURIComponent(params)) as IFrameParams\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as types from '../../types'\nimport IFrameSimulator, { IFrameParams } from '../../lib/IFrameSimulator';\nimport { IFrameIntegration } from '../../lib/IFrameIntegration';\n\n// Action Definitions\n\n// export interface AppStart extends Action {\n//     type: ActionFlag.APP_START,\n\n// }\n\nexport interface AppSuccess extends Action {\n    type: ActionFlag.APP_SUCCESS,\n    config: types.AppConfig\n}\n\nexport interface AppError extends Action {\n    type: ActionFlag.APP_ERROR,\n    error: AppError\n}\n\n// Action Creators\n\nexport function appSuccess(config: types.AppConfig): AppSuccess {\n    return {\n        type: ActionFlag.APP_SUCCESS,\n        config: config\n    }\n}\n\nexport function appError(error: AppError): AppError {\n    return {\n        type: ActionFlag.APP_ERROR,\n        error: error\n    }\n}\n\n// Action Thunks\n\nexport function appStart() {\n    return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState: () => types.StoreState) => {\n        // check and see if we are in an iframe\n        const iframeParams = new IFrameIntegration().getParamsFromIFrame()\n\n        if (iframeParams) {\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.userProfileServiceURL\n                    }\n                }\n            }))\n        } else {\n            const fakeIframeParams = new IFrameSimulator().getParamsFromIFrame()\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: fakeIframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: fakeIframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: fakeIframeParams.params.workspaceServiceURL\n                    }\n                }\n            }))\n        }\n\n\n        // if so, get the params\n\n        // if not, use the fake to get it\n    }\n}\n","import * as React from 'react'\nimport './KBaseIntegration.css'\n\nimport { AppState } from '../types'\nimport { } from '../lib/IFrameSimulator'\n\nexport interface KBaseIntegrationProps {\n    status: AppState,\n    onAppStart: () => void\n}\nclass KBaseIntegration extends React.Component<KBaseIntegrationProps, object> {\n    constructor(props: KBaseIntegrationProps) {\n        super(props)\n\n        // const params = this.getParamsFromIFrame()\n\n        this.props.onAppStart()\n    }\n\n    render() {\n        // TODO: some test like \n        // {this.props.env === 'dev' ? this.buildAuthDev() : this.buildAuthProd()}\n\n        if (this.props.status === AppState.NONE) {\n            return (\n                <div className=\"KBaseIntegration\">\n                    Loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"KBaseIntegration\">\n                    {this.props.children}\n                </div>\n            )\n        }\n    }\n\n    // getParamsFromIFrame() {\n    //     if (!window.frameElement) {\n    //         return null\n    //     }\n    //     if (!window.frameElement.hasAttribute('data-params')) {\n    //         // throw new Error('No params found in window!!');\n    //         return null\n    //     }\n    //     const params = window.frameElement.getAttribute('data-params');\n    //     if (params === null) {\n    //         // throw new Error('No params found in window!')\n    //         return null\n    //     }\n    //     return JSON.parse(decodeURIComponent(params));\n    // }\n}\n\nexport default KBaseIntegration","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/app'\n\nimport KBaseIntegration from '../components/KBaseIntegration'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n    status: types.AppState\n}\n\ninterface DispatchProps {\n    onAppStart: () => void\n}\n\nexport function mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const { app: { status } } = state\n    return {\n        status\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAppStart: () => {\n            dispatch(actions.appStart() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(KBaseIntegration)","import { StoreState, SortDirection, AuthState, AppState, EditState, SaveState, ValidationState, ViewOrgState, EditOrgState } from \"../types\";\nimport { StaticData } from \"../data/model\";\n\nexport class StateInstances {\n    static makeInitialState(): StoreState {\n        return {\n            browseOrgs: {\n                rawOrganizations: [],\n                organizations: [],\n                totalCount: 0,\n                filteredCount: 0,\n                sortBy: 'name',\n                sortDirection: SortDirection.ASCENDING,\n                filter: 'all',\n                searchTerms: [],\n                selectedOrganizationId: null,\n                searching: false,\n            },\n\n            auth: {\n                status: AuthState.NONE,\n                message: '',\n                authorization: {\n                    token: '',\n                    username: '',\n                    realname: '',\n                    roles: []\n                }\n            },\n            error: null,\n\n            app: {\n                status: AppState.NONE,\n                config: {\n                    baseUrl: '',\n                    services: {\n                        Groups: {\n                            url: ''\n                        },\n                        UserProfile: {\n                            url: ''\n                        },\n                        Workspace: {\n                            url: ''\n                        }\n                    }\n                }\n            },\n            addOrg: {\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                newOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n            updateOrg: {\n                pending: false\n            },\n            viewOrg: {\n                state: ViewOrgState.NONE\n            },\n            editOrg: {\n                organizationId: '',\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                editedOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n        }\n    }\n}","import React, { Component } from 'react'\nimport { Route } from 'react-router'\nimport { BrowserRouter, Redirect, HashRouter } from 'react-router-dom'\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport theReducer from './redux/reducers'\n\n// the app and subcomponents\nimport './App.css';\n\n// fontawesome setup\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner, faSearch } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSpinner, faSearch)\n\nimport OrganizationsBrowser from './containers/OrganizationsBrowser'\nimport NewOrganization from './containers/NewOrganization'\nimport ViewOrganization from './containers/ViewOrganization'\nimport EditOrganization from './containers/EditOrganization'\nimport Auth from './containers/Auth'\nimport KBaseIntegration from './containers/KBaseIntegration'\nimport { StateInstances } from './redux/state';\n\n// Put the redux store together\n// Just for prototyping --- This is super naive and will change!\n// import {organizations} from './data/temp';\n\n// TODO: determine the environment\n\nconst hosted = window.frameElement ? true : false\n\n// Set up initial state \n// TODO: move to own file\nconst initialState = StateInstances.makeInitialState()\n\n\n// TODO: remove the cast of reducer to any...\n// const middleware = [thunk]\n// const store = createStore<StoreState, SortOrgs, null, null>(theReducer as any, initialState, applyMiddleware(thunk));\nconst store = createStore(theReducer as any, initialState as any, compose(applyMiddleware(thunk)))\n\nclass App extends Component {\n  constructor(props: any) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Auth hosted={hosted}>\n          <KBaseIntegration>\n            <HashRouter basename=\"/orgs/\">\n              <div className=\"App\">\n                <div className=\"App-body\">\n                  <Route path=\"/organizations\" component={OrganizationsBrowser} />\n                  <Route path=\"/newOrganization\" component={NewOrganization} />\n                  {/* The destructuring below is ugly, but effective */}\n                  <Route path=\"/viewOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ViewOrganization id={id} />} />\n                  <Route path=\"/editOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <EditOrganization id={id} />} />\n                  <Redirect from=\"/\" to=\"/organizations\" exact={true} />\n                </div>\n              </div>\n            </HashRouter>\n          </KBaseIntegration>\n        </Auth>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'typeface-oxygen';\nimport 'normalize.css';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}