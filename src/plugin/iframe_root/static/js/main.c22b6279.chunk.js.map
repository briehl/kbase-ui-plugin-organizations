{"version":3,"sources":["types/index.tsx","redux/actions/index.tsx","redux/reducers/addOrg.ts","redux/reducers/editOrg.ts","redux/reducers/viewOrg.ts","redux/reducers/searchOrgs.ts","redux/reducers/auth.ts","redux/reducers/app.ts","redux/reducers/index.tsx","components/Organizations.tsx","containers/Organizations.tsx","components/Header.tsx","components/OrganizationsBrowser.tsx","data/userProfile.ts","data/groups.tsx","data/workspace.ts","data/model.ts","redux/actions/viewOrg.ts","redux/actions/searchOrgs.ts","containers/OrganizationsBrowser.tsx","redux/actions/addOrg.ts","components/NewOrganization.tsx","containers/NewOrganization.tsx","components/ViewOrganization.tsx","containers/ViewOrganization.tsx","redux/actions/editOrg.ts","components/EditOrganization.tsx","containers/EditOrganization.tsx","components/Auth.tsx","data/auth.ts","redux/actions/auth.ts","containers/Auth.tsx","lib/windowChannel.ts","lib/IFrameSimulator.ts","lib/IFrameIntegration.ts","redux/actions/app.ts","components/KBaseIntegration.tsx","containers/KBaseIntegration.tsx","App.tsx","index.tsx"],"names":["UIErrorType","AuthState","EditOrgState","EditState","SaveState","ValidationState","FieldState","ViewOrgState","AppState","SortDirection","ActionFlag","reducer","state","action","type","ADD_ORG_START","Object","objectSpread","addOrg","saveState","SAVING","addOrgStart","ADD_ORG_SUCCESS","editState","UNEDITED","SAVED","addOrgSuccess","ADD_ORG_ERROR","SAVE_ERROR","error","addOrgError","ADD_ORG_EDIT_START","validationState","NONE","NEW","newOrganization","id","value","status","name","description","addOrgEditStart","ADD_ORG_EDIT_FINISH","addOrgEditFinish","ADD_ORG_UPDATE_NAME_SUCCESS","EDITED","EDITED_OK","addOrgUpdateNameSuccess","ADD_ORG_UPDATE_NAME_ERROR","EDITED_ERROR","addOrgUpdateNameError","ADD_ORG_UPDATE_ID_SUCCESS","addOrgUpdateIdSuccess","ADD_ORG_UPDATE_ID_ERROR","addOrgUpdateIdError","ADD_ORG_UPDATE_DESCRIPTION_SUCCESS","addOrgUpdateDescriptionSuccess","ADD_ORG_UPDATE_DESCRIPTION_ERROR","addOrgUpdateDescriptionError","ADD_ORG_EVALUATE_OK","VALID","addOrgEvaluateOk","ADD_ORG_EVALUATE_ERRORS","INVALID","addOrgEvaluateErrors","EDIT_ORG_START","editOrg","FETCHING","editOrgStart","EDIT_ORG_SUCCESS","READY","editedOrganization","organization","editOrgSuccess","EDIT_ORG_ERROR","ERROR","editOrgError","EDIT_ORG_UPDATE_NAME_SUCCESS","console","log","updateNameSuccess","EDIT_ORG_UPDATE_NAME_ERROR","updateNameError","EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS","updateDescriptionSuccess","EDIT_ORG_UPDATE_DESCRIPTION_ERROR","updateDescriptionError","VIEW_ORG_FETCH_START","viewOrg","types","viewOrgStart","VIEW_ORG_FETCH_SUCCESS","viewOrgSuccess","VIEW_ORG_FETCH_ERROR","viewOrgError","VIEW_ORG_STOP","viewOrgStop","SEARCH_ORGS_START","searchTerms","filter","sortBy","sortDirection","auth","authorization","username","searching","searchOrgsStart","SEARCH_ORGS_SUCCESS","organizations","totalCount","filteredCount","length","searchOrgsSuccess","SEARCH_ORGS_ERROR","searchOrgsError","SORT_ORGS_START","sortOrgsStart","FILTER_ORGS_START","filterOrgsStart","AUTH_CHECK_START","CHECKING","token","realname","roles","authCheckStart","AUTH_AUTHORIZED","AUTHORIZED","authAuthorized","AUTH_UNAUTHORIZED","UNAUTHORIZED","authUnauthorized","AUTH_CHECK_ERROR","authCheckError","APP_SUCCESS","app","config","appSuccess","addOrgReducer","editOrgReducer","searchOrgsReducer","viewOrgReducer","authReducer","appReducer","Organizations","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","org","index","react","className","key","String","NavLink","to","concat","href","target","owner","_this2","map","renderOrg","es_alert","style","maxWidth","margin","message","renderOrgs","React","connect","Header","children","fa","verticalAlign","marginLeft","marginRight","title","flex","display","flexDirection","alignItems","buildSeparator","OrganizationsBrowser","searchInput","searchButton","onSearchOrgs","current","split","currentSearchInputValue","setState","e","preventDefault","doSearch","onSortOrgs","onFilterOrgs","onSearchInputChange","renderSortArea","renderFilterArea","group_default","a","onChange","onSortByChange","bind","es_radio","marginTop","onSortDirectionChange","ASCENDING","icon","DESCENDING","onFilterChange","onSubmit","placeholder","autoFocus","ref","es_button","disabled","haveSearchInput","form","htmlType","renderSearchIcon","onClick","onClearSearch","src_components_Header","fontWeight","fontStyle","renderSearchFeedback","justifyContent","es_select","onSortByChange2","defaultValue","width","dropdownMatchSelectWidth","Option","onSortDirectionChange2","onFilterChange2","renderHeader","renderSearchBar","renderSearchFilter","containers_Organizations","UserProfileClient","_ref","url","createClass","method","param","version","Math","random","slice","params","fetch","mode","cache","headers","Authorization","Content-Type","Accept","body","JSON","stringify","makeEmptyPayload","then","response","Error","statusText","json","info","makePayload","result","usernames","GroupsClient","_ref2","newGroup","WorkspaceClient","Model","group","profile","createdate","moddate","user","city","userdata","country","avatarOption","gravatarHash","synced","gravatarDefault","createdAt","Date","modifiedAt","groups","profiles","briefGroupToBriefOrg","get","query","groupsServiceURL","userProfileClient","userProfileServiceURL","workspaceServiceURL","getGroups","owners","reduce","set","Map","keys","getUserProfiles","Array","from","profileMap","groupsToOrgs","orgs","direction","sort","b","localeCompare","warn","applySort","searchTermsRe","term","RegExp","every","termRe","test","applyOrgSearch","applyFilter","total","getGroupById","getUserProfile","userProfile","Promise","reject","newOrg","_this3","createGroup","groupToOrg","orgUpdate","_this4","resolve","timeout","window","setTimeout","getOrg","Validation","validateOrgId","validateOrgName","validateOrgDescription","match","viewOrgFetch","dispatch","getState","_getState","services","Groups","UserProfile","Workspace","catch","err","code","searchOrgs","_getState$auth$author","queryOrgs","sortOrgs","_getState2","_getState2$auth$autho","filterOrgs","_getState3","_getState3$auth$autho","_ref3","actions","AddOrgEvaluateErrors","addOrgEdit","addOrgEvaluate","model","addOrgUpdateName","_Validation$validateO","_Validation$validateO2","slicedToArray","validatedName","addOrgUpdateId","_Validation$validateO3","_Validation$validateO4","validatedId","newModelFromState","getGroup","addOrgUpdateDescription","_getState4","_model$validateOrgDes","_model$validateOrgDes2","validatedDescription","NewOrganization","canceling","origin","document","location","onAddOrgEdit","onAddOrg","persist","onUpdateName","onUpdateDescription","onUpdateId","onNameChange","color","onIdChange","minHeight","maxHeight","onDescriptionChange","dangerouslySetInnerHTML","__html","marked","_this$props","label","orgName","canSave","onClickCancel","Redirect","push","renderForm","renderPreview","renderLoadingHeader","_ref$addOrg","ViewOrganization","onViewOrg","renderEditRow","textAlign","avatarUrl","getAvatarUrl","src","renderAvatar","Intl","DateTimeFormat","month","day","year","format","renderEditButton","renderInfo","_ref$viewOrg","editOrgSaveError","EDIT_ORG_SAVE_ERROR","editableOrg","editOrgUpdateName","_model$validateOrgNam","_model$validateOrgNam2","editOrgUpdateNameSuccess","editOrgUpdateNameError","editOrgUpdateDescription","orgDescription","editOrgUpdateDescriptionSuccess","editOrgUpdateDescriptionError","editOrgSave","EDIT_ORG_SAVE_START","organizationUpdate","updateOrg","EDIT_ORG_SAVE_SUCCESS","editOrgSaveSuccess","EditOrganization","onEditOrg","onUpdateOrg","tooltip","readOnly","_ref$editOrg","Auth","tokenRef","checkAuth","onRemoveAuthorization","onAddAuthorization","onLoginClick","onLogoutClick","authStatus","buildAuthToolbar","buildAuthForm","env","buildAuthDev","buildAuthProd2","endpoints","AuthClient","path","join","makePath","Cookies","all","getTokenInfo","getMe","account","desc","_state$auth","_ref4","_ref5","_ref6","Listener","onSuccess","onError","WaitingListener","started","Message","payload","channel","uuidv4","created","envelope","Channel","host","channelId","awaitingResponse","waitingListeners","listeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","messageEvent","data","has","delete","handler","ex","awaiting","forEach","listener","messageId","success","listen","postMessage","getMessage","sendMessage","sendRequest","now","getTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","elapsed","_iterator","entries","Symbol","iterator","next","done","return","size","startMonitor","listenOnce","sent","received","_this5","receiveMessage","addEventListener","removeEventListener","IFrameSimulator","frameId","uuid","parentHost","IFrameIntegration","frameElement","hasAttribute","getAttribute","parse","decodeURIComponent","KBaseIntegration","onAppStart","iframeParams","getParamsFromIFrame","baseUrl","fakeIframeParams","library","add","faSpinner","faSearch","initialState","rawOrganizations","selectedOrganizationId","pending","store","createStore","theReducer","compose","applyMiddleware","thunk","App","react_default","createElement","es","containers_Auth","containers_KBaseIntegration","HashRouter","basename","Route","component","containers_ViewOrganization","containers_EditOrganization","exact","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"uWAcYA,EAsFAC,EA0BAC,EAuBAC,EAOAC,EASAC,EAMAC,EASAC,EAQAC,EAOAC,iJArLAT,4GAsFAC,6JA0BAC,8OAuBAC,8EAOAC,8HASAC,0EAMAC,0NASAC,yIAQAC,8GAOAC,yDC7LAC,i4FC0PGC,MApCR,SAAiBC,EAAmBC,GAIvC,OAAQA,EAAOC,MACX,KAAKJ,EAAWK,cACZ,OArNL,SAAqBH,EAAmBC,GAC3C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EAAMM,OADP,CAEFC,UAAWf,EAAUgB,WAgNdC,CAAYT,GACvB,KAAKF,EAAWY,gBACZ,OA7ML,SAAuBV,EAAmBC,GAC7C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EAAMM,OADP,CAEFK,UAAWpB,EAAUqB,SACrBL,UAAWf,EAAUqB,UAuMdC,CAAcd,GACzB,KAAKF,EAAWiB,cACZ,OApML,SAAqBf,EAAmBC,GAC3C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EAAMM,OADP,CAEFC,UAAWf,EAAUwB,WACrBC,MAAOhB,EAAOgB,UA8LPC,CAAYlB,EAAOC,GAC9B,KAAKH,EAAWqB,mBACZ,OAvKL,SAAyBnB,EAAmBC,GAC/C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAUqB,SACrBQ,gBAAiB3B,EAAgB4B,KACjCd,UAAWf,EAAU8B,IACrBC,gBAAiB,CACbC,GAAI,CACAC,MAAO,GACPC,OAAQhC,EAAW2B,KACnBJ,MAAO,CACHf,KAAMd,EAAYiC,OAG1BM,KAAM,CACFF,MAAO,GACPC,OAAQhC,EAAW2B,KACnBJ,MAAO,CACHf,KAAMd,EAAYiC,OAG1BO,YAAa,CACTH,MAAO,GACPC,OAAQhC,EAAW2B,KACnBJ,MAAO,CACHf,KAAMd,EAAYiC,YA6IvBQ,CAAgB7B,GAC3B,KAAKF,EAAWgC,oBACZ,OAvIL,SAA0B9B,EAAmBC,GAChD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAUqB,aAmIdmB,CAAiB/B,GAC5B,KAAKF,EAAWkC,4BACZ,OA/HL,SAAiChC,EAAmBC,GAEvD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXI,KAAM,CACFF,MAAOxB,EAAO0B,KACdD,OAAQhC,EAAWwC,UACnBjB,MAAO,CACHf,KAAMd,EAAYiC,aAmHvBc,CAAwBnC,EAAOC,GAC1C,KAAKH,EAAWsC,0BACZ,OA7GL,SAA+BpC,EAAmBC,GACrD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXI,KAAM,CACFF,MAAOxB,EAAO0B,KACdD,OAAQhC,EAAW2C,aACnBpB,MAAOhB,EAAOgB,aAmGfqB,CAAsBtC,EAAOC,GACxC,KAAKH,EAAWyC,0BACZ,OA5FL,SAA+BvC,EAAmBC,GACrD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXC,GAAI,CACAC,MAAOxB,EAAOuB,GACdE,OAAQhC,EAAWwC,UACnBjB,MAAO,CACHf,KAAMd,EAAYiC,aAiFvBmB,CAAsBxC,EAAOC,GACxC,KAAKH,EAAW2C,wBACZ,OA3EL,SAA6BzC,EAAmBC,GACnD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXC,GAAI,CACAC,MAAOxB,EAAOuB,GACdE,OAAQhC,EAAW2C,aACnBpB,MAAOhB,EAAOgB,aAiEfyB,CAAoB1C,EAAOC,GACtC,KAAKH,EAAW6C,mCACZ,OA5DL,SAAwC3C,EAAmBC,GAC9D,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXK,YAAa,CACTH,MAAOxB,EAAO2B,YACdF,OAAQhC,EAAWwC,UACnBjB,MAAO,CACHf,KAAMd,EAAYiC,aAiDvBuB,CAA+B5C,EAAOC,GACjD,KAAKH,EAAW+C,iCACZ,OA3CL,SAAsC7C,EAAmBC,GAC5D,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CACcM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMM,OADG,CAEZK,UAAWpB,EAAU0C,OACrBV,gBAAgBnB,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAMM,OAAOiB,gBADL,CAEXK,YAAa,CACTH,MAAOxB,EAAO2B,YACdF,OAAQhC,EAAW2C,aACnBpB,MAAOhB,EAAOgB,aAiCf6B,CAA6B9C,EAAOC,GAC/C,KAAKH,EAAWiD,oBACZ,OA3ML,SAA0B/C,EAAmBC,GAChD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EAAMM,OADP,CAEFc,gBAAiB3B,EAAgBuD,UAsM1BC,CAAiBjD,GAC5B,KAAKF,EAAWoD,wBACZ,OAnML,SAA8BlD,EAAmBC,GACpD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIM,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EAAMM,OADP,CAEFc,gBAAiB3B,EAAgB0D,YA8L1BC,CAAqBpD,GAChC,QACI,OAAO,OCjHJD,MAzBf,SAAiBC,EAAmBC,GAIhC,OAAQA,EAAOC,MACX,KAAKJ,EAAWuD,eACZ,OAhHZ,SAAsBrD,EAAmBC,GACrC,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBsD,QAAS,CAAEtD,MAAOV,EAAaiE,YA+GnCC,CAAaxD,GACxB,KAAKF,EAAW2D,iBACZ,OA9GZ,SAAwBzD,EAAmBC,GACvC,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBsD,QAAS,CAAEtD,MAAOV,EAAaoE,MAAOC,mBAAoB1D,EAAO2D,gBA6GrEC,CAAe7D,EAAOC,GACjC,KAAKH,EAAWgE,eACZ,OA5GZ,SAAsB9D,EAAmBC,GACrC,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBsD,QAAS,CAAEtD,MAAOV,EAAayE,MAAO9C,MAAOhB,EAAOgB,SA2GxD+C,CAAahE,EAAOC,GAC/B,KAAKH,EAAWmE,6BACZ,OA9EZ,SAA2BjE,EAAmBC,GAG1C,OADAiE,QAAQC,IAAI,WAAYlE,EAAO0B,MACxBvB,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsD,QAAQlD,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAMsD,QADN,CAEHK,mBAAmBvD,OAAAC,EAAA,EAAAD,CAAA,GACZJ,EAAMsD,QAAQK,mBADH,CAEdhC,KAAM,CACFF,MAAOxB,EAAO0B,YAoEfyC,CAAkBpE,EAAOC,GACpC,KAAKH,EAAWuE,2BACZ,OA/DZ,SAAyBrE,EAAmBC,GACxC,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsD,QAAQlD,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAMsD,QADN,CAEHK,mBAAmBvD,OAAAC,EAAA,EAAAD,CAAA,GACZJ,EAAMsD,QAAQK,mBADH,CAEdhC,KAAM,CACFF,MAAOxB,EAAO0B,KACdV,MAAOhB,EAAOgB,aAsDfqD,CAAgBtE,EAAOC,GAClC,KAAKH,EAAWyE,oCACZ,OAjDZ,SAAkCvE,EAAmBC,GAGjD,OADAiE,QAAQC,IAAI,WAAYlE,EAAO2B,aACxBxB,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsD,QAAQlD,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAMsD,QADN,CAEHK,mBAAmBvD,OAAAC,EAAA,EAAAD,CAAA,GACZJ,EAAMsD,QAAQK,mBADH,CAEd/B,YAAa,CACTH,MAAOxB,EAAO2B,mBAuCf4C,CAAyBxE,EAAOC,GAC3C,KAAKH,EAAW2E,kCACZ,OAlCZ,SAAgCzE,EAAmBC,GAC/C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsD,QAAQlD,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAMsD,QADN,CAEHK,mBAAmBvD,OAAAC,EAAA,EAAAD,CAAA,GACZJ,EAAMsD,QAAQK,mBADH,CAEd/B,YAAa,CACTH,MAAOxB,EAAO2B,YACdX,MAAOhB,EAAOgB,aAyBfyD,CAAuB1E,EAAOC,GACzC,QACI,OAAO,OCnEJF,MAjBf,SAAiBC,EAAyBC,GAItC,OAAQA,EAAOC,MACX,KAAKJ,EAAW6E,qBACZ,OAhDL,SAAsB3E,EACzBC,GACA,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI4E,QAAQxE,OAAAC,EAAA,EAAAD,CAAA,GAAMJ,EAAM4E,QAAb,CAAsB5E,MAAO6E,EAAmBtB,aA4C5CuB,CAAa9E,GACxB,KAAKF,EAAWiF,uBACZ,OA1CL,SAAwB/E,EAC3BC,GACA,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI4E,QAAQxE,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAM4E,QADN,CAEH5E,MAAO6E,EAAmBnB,MAC1BE,aAAc3D,EAAO2D,iBAmCdoB,CAAehF,EAAOC,GACjC,KAAKH,EAAWmF,qBACZ,OAhCL,SAAsBjF,EACzBC,GACA,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI4E,QAAQxE,OAAAC,EAAA,EAAAD,CAAA,GACDJ,EAAM4E,QADN,CAEH5E,MAAO6E,EAAmBd,MAC1B9C,MAAOhB,EAAOgB,UAyBPiE,CAAalF,EAAOC,GAC/B,KAAKH,EAAWqF,cACZ,OAtBL,SAAqBnF,EAAyBC,GACjD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI4E,QAAS,CACL5E,MAAO6E,EAAmBxD,QAkBnB+D,CAAYpF,GACvB,QACI,OAAO,OCyEJD,MAtBf,SAAiBC,EAAyBC,GAItC,OAAQA,EAAOC,MACX,KAAKJ,EAAWuF,kBACZ,OAzFL,SAAyBrF,EAAyBC,GAWrD,OARiBA,EAAOqF,YACZtF,EAAMuF,OACNvF,EAAMwF,OACCxF,EAAMyF,cACXzF,EAAM0F,KAAKC,cAAcC,SAIhCxF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAKI6F,WAAW,EACXP,YAAarF,EAAOqF,cAwETQ,CAAgB9F,EAAOC,GAClC,KAAKH,EAAWiG,oBACZ,OAtEL,SAA2B/F,EAAyBC,GACvD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI6F,WAAW,EACXG,cAAe/F,EAAO+F,cACtBC,WAAYhG,EAAOgG,WACnBC,cAAejG,EAAO+F,cAAcG,SAgEzBC,CAAkBpG,EAAOC,GACpC,KAAKH,EAAWuG,kBACZ,OA9DL,SAAyBrG,EAAyBC,GACrD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBiB,MAAOhB,EAAOgB,QA6DlBqF,CAAgBtG,EAAOC,GAGlC,KAAKH,EAAWyG,gBACZ,OA7DL,SAAuBvG,EAAyBC,GAUnD,OARiBD,EAAMsF,YACXtF,EAAMuF,OACNtF,EAAOuF,OACAvF,EAAOwF,cACZzF,EAAM0F,KAAKC,cAAcC,SAIhCxF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAKI6F,WAAW,EACXL,OAAQvF,EAAOuF,OACfC,cAAexF,EAAOwF,gBA4CXe,CAAcxG,EAAOC,GAChC,KAAKH,EAAW2G,kBACZ,OA5BL,SAAyBzG,EAC5BC,GAAmD,IAC3CsF,EAAWtF,EAAXsF,OAER,OAAOnF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI6F,WAAW,EACXN,WAqBWmB,CAAgB1G,EAAOC,GAClC,QACI,OAAO,OCpDJF,MAff,SAAiBC,EAAmBC,GAChC,OAAQA,EAAOC,MACX,KAAKJ,EAAW6G,iBACZ,OA/DL,SAAwB3G,EAAmBC,GAC9C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI0F,KAAM,CACFhE,OAAQrC,EAAUuH,SAClBjB,cAAe,CACXkB,MAAO,GACPjB,SAAU,GACVkB,SAAU,GACVC,MAAO,OAsDJC,CAAehH,GAC1B,KAAKF,EAAWmH,gBACZ,OAnCL,SAAwBjH,EAAmBC,GAC9C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI0F,KAAM,CACFhE,OAAQrC,EAAU6H,WAClBvB,cAAe,CACXkB,MAAO5G,EAAO4G,MACdjB,SAAU3F,EAAO2F,SACjBkB,SAAU7G,EAAO6G,SACjBC,MAAO9G,EAAO8G,UA0BXI,CAAenH,EAAOC,GACjC,KAAKH,EAAWsH,kBACZ,OAtBL,SAA0BpH,EAAmBC,GAChD,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI0F,KAAM,CACFhE,OAAQrC,EAAUgI,aAClB1B,cAAe,CACXkB,MAAO,GACPjB,SAAU,GACVkB,SAAU,GACVC,MAAO,OAaJO,CAAiBtH,GAC5B,KAAKF,EAAWyH,iBACZ,OAtDL,SAAwBvH,EAAmBC,GAC9C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI0F,KAAM,CACFhE,OAAQrC,EAAU0E,MAClB4B,cAAe,CACXkB,MAAO,GACPjB,SAAU,GACVkB,SAAU,GACVC,MAAO,OA6CJS,CAAexH,GAC1B,QACI,OAAO,OCrDJD,MATf,SAAiBC,EAAmBC,GAChC,OAAQA,EAAOC,MACX,KAAKJ,EAAW2H,YACZ,OAbL,SAAoBzH,EAAmBC,GAC1C,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI0H,IAAK,CACDhG,OAAQ9B,EAAS8D,MACjBiE,OAAQ1H,EAAO0H,UAQRC,CAAW5H,EAAOC,GAC7B,QACI,OAAO,OCIJF,MAVR,SAAiBC,EAAyBC,GAC7C,OAAO4H,EAAc7H,EAAOC,IACxB6H,EAAe9H,EAAOC,IACtB8H,EAAkB/H,EAAOC,IACzB+H,EAAehI,EAAOC,IACtBgI,EAAYjI,EAAOC,IACnBiI,EAAWlI,EAAOC,IAClBD,wDCgEOmI,cAvEX,SAAAA,EAAYC,GAAiC,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAJ,IACzCE,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAA+H,GAAAO,KAAAH,KAAMH,KAEDpI,MAAQ,CACTsF,YAAa,IAJwB+C,yEAyBnCM,EAA8BC,GACpC,OACIC,EAAA,qBAAKC,UAAU,MAAMC,IAAKC,OAAOJ,IAC7BC,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,WACXD,EAAA,cAACI,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuBR,EAAInH,KAAOmH,EAAIhH,OAErDkH,EAAA,qBAAKC,UAAU,YACXD,EAAA,sBAAMC,UAAU,eAAhB,SACAD,EAAA,mBAAGO,KAAK,+BAA+BC,OAAO,UAAUV,EAAIW,MAAMxC,SAAlE,UAA8E6B,EAAIW,MAAM1D,SAAxF,YAGRiD,EAAA,qBAAKC,UAAU,+CAOd,IAAAS,EAAAhB,KACT,OAAIA,KAAKH,MAAMpC,cAAcG,OAAS,EAE9BoC,KAAKH,MAAMpC,cAAcwD,IAAI,SAACb,EAA8BC,GACxD,OACIW,EAAKE,UAAUd,EAAKC,KAM5BC,EAAA,cAACa,EAAA,EAAD,CAAOxJ,KAAK,UACRyJ,MAAO,CAAEC,SAAU,OAAQC,OAAQ,oBACnCC,QAAQ,yEAMpB,OACIjB,EAAA,qBAAKC,UAAU,iBACVP,KAAKwB,qBAnEMC,aCDbC,kBAPR,SAAyBjK,GAE5B,MAAO,CACHgG,cAFoBhG,EAAjBgG,gBAMIiE,CAAyB9B,gEC6BzB+B,2LA5BP,GAAI3B,KAAKH,MAAM+B,SACX,OACItB,EAAA,cAACuB,EAAA,EAAD,CAAgBT,MAAO,CAAEU,cAAe,SAAUC,WAAY,MAAOC,YAAa,0CAMxEhC,KAAKH,MAAfoC,MAER,OACI3B,EAAA,qBAAKC,UAAU,UACXD,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,cAACI,EAAA,EAAD,CAASC,GAAG,kBACRL,EAAA,cAACuB,EAAA,EAAD,CAAST,MAAO,CAAEU,cAAe,YAChC,IAFL,SAMJxB,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC7ErC,KAAKsC,iBACLtC,KAAKH,MAAM+B,kBAxBXH,8BCoTNc,cAzSX,SAAAA,EAAY1C,GAAwC,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAuC,IAChDzC,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAA0K,GAAApC,KAAAH,KAAMH,KAED2C,YAAcf,cACnB3B,EAAK2C,aAAehB,cAEpB3B,EAAKrI,MAAQ,CACT+K,YAAa,IAGjB1C,EAAKD,MAAM6C,aAAa,IAVwB5C,0EAchD,GAAiC,OAA7BE,KAAKwC,YAAYG,QAArB,CAGA,IAAM5F,EAAciD,KAAKwC,YAAYG,QAAQzJ,MAAM0J,MAAM,SAEzD5C,KAAKH,MAAM6C,aAAa3F,8CAIxB,SAAIiD,KAAKvI,MAAM+K,aAAexC,KAAKvI,MAAM+K,YAAY5E,OAAS,iDAQ9D,IAAIiF,EAEAA,EADA7C,KAAKwC,YAAYG,QACS3C,KAAKwC,YAAYG,QAAQzJ,MAEzB,GAE9B8G,KAAK8C,SAAS,CAAEN,YAAaK,qCAGxBE,GACLA,EAAEC,iBACFhD,KAAKiD,kDAGMF,GACX/C,KAAKH,MAAMqD,WAAWH,EAAEjC,OAAO5H,MAAO8G,KAAKH,MAAM3C,uDAGrChE,GACZ8G,KAAKH,MAAMqD,WAAWhK,EAAO8G,KAAKH,MAAM3C,6DAItB6F,GAClB/C,KAAKH,MAAMqD,WAAWlD,KAAKH,MAAM5C,OAAQ8F,EAAEjC,OAAO5H,sDAG/BA,GACnB8G,KAAKH,MAAMqD,WAAWlD,KAAKH,MAAM5C,OAAQ/D,0CAG9B6J,GACX/C,KAAKH,MAAMsD,aAAaJ,EAAEjC,OAAO5H,+CAGrBA,GACZ8G,KAAKH,MAAMsD,aAAajK,2CAIS,OAA7B8G,KAAKwC,YAAYG,UAGrB3C,KAAKwC,YAAYG,QAAQzJ,MAAQ,GACjC8G,KAAKoD,sBAILpD,KAAKiD,wDAIL,OACI3C,EAAA,qBAAKC,UAAU,oCAEVP,KAAKqD,iBACLrD,KAAKsD,6DAMd,OACIhD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,qBAAKC,UAAU,UAAf,QAGAD,EAAA,cAACiD,EAAAC,EAAD,CAAYC,SAAUzD,KAAK0D,eAAeC,KAAK3D,MAAO9G,MAAO8G,KAAKH,MAAM5C,QACpEqD,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAM,QAA/B,YACAoH,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAM,SAA/B,UAGJoH,EAAA,qBAAKc,MAAO,CAAEyC,UAAW,SACrBvD,EAAA,cAACiD,EAAAC,EAAD,CAAYC,SAAUzD,KAAK8D,sBAAsBH,KAAK3D,MAAO9G,MAAO8G,KAAKH,MAAM3C,eAC3EoD,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAOoD,EAAoByH,WAAWzD,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,mBAA1E,cACA2I,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAOoD,EAAoB2H,YAAY3D,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,oBAA3E,6DAQhB,OACI2I,EAAA,qBAAKC,UAAU,gBACXD,EAAA,qBAAKC,UAAU,UAAf,UAGAD,EAAA,cAACiD,EAAAC,EAAD,CAAYC,SAAUzD,KAAKkE,eAAeP,KAAK3D,MAAO9G,MAAO8G,KAAKH,MAAM7C,QACpEsD,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAM,OAA/B,OACAoH,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAM,SAA/B,gBACAoH,EAAA,cAACsD,EAAA,EAAD,CAAOrD,UAAU,QAAQrH,MAAM,YAA/B,oEAOZ,OAA8B,IAA1B8G,KAAKH,MAAMnC,WAEP4C,EAAA,4DAKyB,IAA7BN,KAAKH,MAAMlC,cAEP2C,EAAA,0DAEK,IACAN,KAAKH,MAAMnC,WACX,IAJL,cAUJsC,KAAKH,MAAMnC,aAAesC,KAAKH,MAAMlC,cAEjC2C,EAAA,wCAEC,IACIN,KAAKH,MAAMnC,WACX,IAJL,iBAWJ4C,EAAA,oCAEK,IACAN,KAAKH,MAAMlC,cACX,IAJL,SAMK,IACAqC,KAAKH,MAAMnC,WACX,IARL,4DAeJ,OAAIsC,KAAKH,MAAMvC,UACHgD,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,YAEf2I,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,qDAInB,OACI2I,EAAA,sBAAMrH,GAAG,aAAasH,UAAU,iCAAiC4D,SAAUnE,KAAKmE,SAASR,KAAK3D,OAC1FM,EAAA,uBACI8D,YAAY,uBACZX,SAAUzD,KAAKoD,oBAAoBO,KAAK3D,MACxCqE,WAAS,EACTC,IAAKtE,KAAKwC,cAKdlC,EAAA,cAACiE,EAAA,EAAD,CACIC,UAAWxE,KAAKyE,kBAChBH,IAAKtE,KAAKyC,aACViC,KAAK,aACLlE,IAAI,SACJmE,SAAS,UACR3E,KAAK4E,oBAGVtE,EAAA,cAACiE,EAAA,EAAD,CACIM,QAAS7E,KAAK8E,cAAcnB,KAAK3D,MACjCwE,UAAWxE,KAAKyE,kBAChBT,KAAK,kDAajB,OACI1D,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,6DAGAA,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,QAAQyJ,MAAO,CAAEE,OAAQ,WACpChB,EAAA,sBAAMc,MAAO,CAAE4D,WAAY,SAAUC,UAAW,WAC3CjF,KAAKkF,yBAGd5E,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAO+C,eAAgB,aAClF7E,EAAA,cAACI,EAAA,EAAD,CAASC,GAAG,oBAAmBL,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,eAAb,wEAS/C,OACI1D,EAAA,yBACIA,EAAA,sBAAMC,UAAU,eAAhB,WACAD,EAAA,cAAC8E,EAAA,EAAD,CAAQ3B,SAAUzD,KAAKqF,gBAAgB1B,KAAK3D,MACxCsF,aAActF,KAAKH,MAAM5C,OACzBmE,MAAO,CAAEmE,MAAO,OAChBC,0BAA0B,GAC1BlF,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAM,OAAOsH,IAAI,QAAhC,YACAF,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAM,QAAQsH,IAAI,SAAjC,UAEJF,EAAA,cAAC8E,EAAA,EAAD,CAAQ3B,SAAUzD,KAAK0F,uBAAuB/B,KAAK3D,MAC/CoB,MAAO,CAAEmE,MAAO,QAChBC,0BAA0B,EAC1BF,aAActF,KAAKH,MAAM3C,eACzBoD,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAOoD,EAAoByH,UAAWvD,IAAI,QAAOF,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,mBAA3E,aACA2I,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAOoD,EAAoB2H,WAAYzD,IAAI,SAAQF,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,oBAA7E,eAEJ2I,EAAA,sBAAMC,UAAU,cAAca,MAAO,CAAEW,WAAY,SAAnD,UACAzB,EAAA,cAAC8E,EAAA,EAAD,CAAQ3B,SAAUzD,KAAK2F,gBAAgBhC,KAAK3D,MACxCsF,aAActF,KAAKH,MAAM7C,OACzBoE,MAAO,CAAEmE,MAAO,QAChBC,0BAA0B,GAC1BlF,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAM,MAAMsH,IAAI,OAA/B,OACAF,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAM,QAAQsH,IAAI,SAAjC,gBACAF,EAAA,cAAC8E,EAAA,EAAOK,OAAR,CAAevM,MAAM,WAAWsH,IAAI,aAApC,uDAOZ,OACIF,EAAA,qBAAKC,UAAU,wBACVP,KAAK4F,eACNtF,EAAA,qBAAKC,UAAU,gBACXD,EAAA,qBAAKC,UAAU,gBACVP,KAAK6F,mBAEVvF,EAAA,qBAAKC,UAAU,WACVP,KAAK8F,uBAGdxF,EAAA,qBAAKC,UAAU,WAEXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,cAACyF,EAAD,gBAnSWtE,aCgBtBuE,EAAb,WAII,SAAAA,EAAAC,GAA4D,IAA9CC,EAA8CD,EAA9CC,IAAK5H,EAAyC2H,EAAzC3H,MAAyCzG,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAgG,GACxDhG,KAAKkG,IAAMA,EACXlG,KAAK1B,MAAQA,EANrB,OAAAzG,OAAAsO,EAAA,EAAAtO,CAAAmO,EAAA,EAAAxF,IAAA,cAAAtH,MAAA,SASgBkN,EAAgBC,GACxB,MAAO,CACHC,QAAS,MACTF,OAAQ,eAAiBA,EACzBnN,GAAIwH,OAAO8F,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,CAACL,MAdrB,CAAA7F,IAAA,mBAAAtH,MAAA,SAkBqBkN,GACb,MAAO,CACHE,QAAS,MACTF,OAAQ,eAAiBA,EACzBnN,GAAIwH,OAAO8F,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,MAvBpB,CAAAlG,IAAA,aAAAtH,MAAA,WA4BQ,OAAOyN,MAAM3G,KAAKkG,IAAK,CACnBE,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe/G,KAAK1B,MACpB0I,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUpH,KAAKqH,iBAAiB,cAE1CC,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASpO,OACT,MAAM,IAAIqO,MAAM,+BAAiCD,EAASpO,OAAS,KAAOoO,EAASE,YAEvF,OAAOF,EAASG,SAEnBJ,KAAK,SAACK,GACHhM,QAAQC,IAAI,OAAQ+L,OA9CpC,CAAAnH,IAAA,iBAAAtH,MAAA,SAkDmBmE,GACX,OAAOsJ,MAAM3G,KAAKkG,IAAK,CACnBE,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe/G,KAAK1B,MACpB0I,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUpH,KAAK4H,YAAY,mBAAoB,CAACvK,OAE1DiK,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASpO,OACT,MAAM,IAAIqO,MAAM,+BAAiCD,EAASpO,OAAS,KAAOoO,EAASE,YAEvF,OAAOF,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,EAAOA,OAAO,GAAG,OArExC,CAAArH,IAAA,kBAAAtH,MAAA,SAyEoB4O,GACZ,OAAOnB,MAAM3G,KAAKkG,IAAK,CACnBE,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe/G,KAAK1B,MACpB0I,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUpH,KAAK4H,YAAY,mBAAoBE,MAEzDR,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASpO,OACT,MAAM,IAAIqO,MAAM,+BAAiCD,EAASpO,OAAS,KAAOoO,EAASE,YAEvF,OAAOF,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,EAAOA,OAAO,SA5FrC7B,EAAA,GCgEa+B,EAAb,WAII,SAAAA,EAAA9B,GAA4D,IAA9C3H,EAA8C2H,EAA9C3H,MAAO4H,EAAuCD,EAAvCC,IAAuCrO,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA+H,GACxD/H,KAAK1B,MAAQA,EACb0B,KAAKkG,IAAMA,EANnB,OAAArO,OAAAsO,EAAA,EAAAtO,CAAAkQ,EAAA,EAAAvH,IAAA,UAAAtH,MAAA,WAUQ,OAAOyN,MAAM3G,KAAKkG,IAAM,IAAK,CACzBY,QAAS,CACLC,cAAe/G,KAAK1B,MACpB2I,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,MArBvB,CAAArH,IAAA,YAAAtH,MAAA,WA0BQ,OAAOyN,MAAM3G,KAAKkG,IAAM,SAAU,CAC9BY,QAAS,CACLC,cAAe/G,KAAK1B,MACpB2I,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,EAAO7K,OAAO,SAAAgL,GAAA,MAAuB,iBAAvBA,EAAGrQ,WArCxC,CAAA6I,IAAA,eAAAtH,MAAA,SAyCiBD,GACT,OAAO0N,MAAM3G,KAAKkG,IAAM,UAAYjN,EAAI,CACpC6N,QAAS,CACLC,cAAe/G,KAAK1B,MACpB2I,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAwB,MAApBA,EAASpO,OACF,KAEJoO,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,MAxDvB,CAAArH,IAAA,cAAAtH,MAAA,SA4DgB+O,GACR,OAAOtB,MAAM3G,KAAKkG,IAAM,UAAY+B,EAAShP,GAAI,CAC7C6N,QAAS,CACLC,cAAe/G,KAAK1B,MACpB2I,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,MACRc,KAAMC,KAAKC,UAAU,CACjBhO,KAAM6O,EAAS7O,KACfzB,KAAMsQ,EAAStQ,KACf0B,YAAa4O,EAAS5O,gBAGzBiO,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,QA/EvBE,EAAA,GC5EaG,GAAb,WAII,SAAAA,EAAAjC,GAA4D,IAA9CC,EAA8CD,EAA9CC,IAAK5H,EAAyC2H,EAAzC3H,MAAyCzG,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAkI,GACxDlI,KAAKkG,IAAMA,EACXlG,KAAK1B,MAAQA,EANrB,OAAAzG,OAAAsO,EAAA,EAAAtO,CAAAqQ,EAAA,EAAA1H,IAAA,cAAAtH,MAAA,SASgBkN,EAAgBC,GACxB,MAAO,CACHC,QAAS,MACTF,OAAQ,aAAeA,EACvBnN,GAAIwH,OAAO8F,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,CAACL,MAdrB,CAAA7F,IAAA,mBAAAtH,MAAA,SAkBqBkN,GACb,MAAO,CACHE,QAAS,MACTF,OAAQ,aAAeA,EACvBnN,GAAIwH,OAAO8F,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,MAvBpB,CAAAlG,IAAA,aAAAtH,MAAA,WA4BQ,OAAOyN,MAAM3G,KAAKkG,IAAK,CACnBE,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe/G,KAAK1B,MACpB0I,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUpH,KAAKqH,iBAAiB,UAE1CC,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASpO,OACT,MAAM,IAAIqO,MAAM,+BAAiCD,EAASpO,OAAS,KAAOoO,EAASE,YAEvF,OAAOF,EAASG,aA3ChCQ,EAAA,GC0FO,IAAMC,GAAb,WASI,SAAAA,EAAYzB,GAAsB7O,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAmI,GAE9BnI,KAAK0G,OAASA,EAXtB,OAAA7O,OAAAsO,EAAA,EAAAtO,CAAAsQ,EAAA,EAAA3H,IAAA,aAAAtH,MAAA,SAcekP,EAAcC,GAAoC,IACjDpP,EAAsDmP,EAAtDnP,GAAIG,EAAkDgP,EAAlDhP,KAAM2H,EAA4CqH,EAA5CrH,MAAO1H,EAAqC+O,EAArC/O,YAAaiP,EAAwBF,EAAxBE,WAAYC,EAAYH,EAAZG,QAClD,MAAO,CACHtP,GAAIA,EACJG,KAAMA,EACNC,YAAaA,EACb0H,MAAO,CACH1D,SAAU0D,EACVxC,SAAU8J,EAAQG,KAAKjK,SACvBkK,KAAMJ,EAAQA,QAAQK,SAASD,KAC/BhR,MAAO4Q,EAAQA,QAAQK,SAASjR,MAChCkR,QAASN,EAAQA,QAAQK,SAASC,QAClCtN,aAAcgN,EAAQA,QAAQK,SAASrN,aACvCuN,aAAcP,EAAQA,QAAQK,SAASE,aACvCC,aAAcR,EAAQA,QAAQS,OAAOD,aACrCE,gBAAiBV,EAAQA,QAAQK,SAASK,iBAE9CC,UAAW,IAAIC,KAAKX,GACpBY,WAAY,IAAID,KAAKV,MAhCjC,CAAA/H,IAAA,uBAAAtH,MAAA,SAoCyBkP,EAAmBC,GAEpC,MAAO,CAAEpP,GADmBmP,EAApBnP,GACKG,KADegP,EAAhBhP,KACO2H,MAAO,CAAE1D,SADA+K,EAAVrH,MAC2BxC,SAAU8J,EAAQG,KAAKjK,UAAYyK,UAAW,IAAIC,KAAQC,WAAY,IAAID,QAtC/H,CAAAzI,IAAA,eAAAtH,MAAA,SAyCiBiQ,EAAmBC,GAA8D,IAAAtJ,EAAAE,KAC1F,OAAOmJ,EAAOlI,IAAI,SAACmH,GACf,OAAOtI,EAAKuJ,qBAAqBjB,EAAOgB,EAASE,IAAIlB,EAAMrH,YA3CvE,CAAAP,IAAA,YAAAtH,MAAA,SA+CcqQ,GAAqC,IAAAvI,EAAAhB,KACrCmJ,EAAS,IAAIpB,EAAa,CAC5B7B,IAAKlG,KAAK0G,OAAO8C,iBACjBlL,MAAO0B,KAAK0G,OAAOpI,QAEjBmL,EAAoB,IAAIzD,EAAkB,CAC5CE,IAAKlG,KAAK0G,OAAOgD,sBACjBpL,MAAO0B,KAAK0G,OAAOpI,QAEC,IAAI4J,GAAgB,CACxChC,IAAKlG,KAAK0G,OAAOiD,oBACjBrL,MAAO0B,KAAK0G,OAAOpI,QAEvB,OAAO6K,EAAOS,YACTtC,KAAK,SAAC6B,GAIH,IAAMU,EAASV,EAAOW,OAAO,SAACD,EAAQzB,GAElC,OADAyB,EAAOE,IAAI3B,EAAMrH,OAAO,GACjB8I,GACR,IAAIG,KAAwBC,OAC/B,OAAOR,EAAkBS,gBAAgBC,MAAMC,KAAKP,IAC/CvC,KAAK,SAAC8B,GACH,IAAMiB,EAAajB,EAASU,OAAO,SAACO,EAAYhC,GAE5C,OADAgC,EAAWN,IAAI1B,EAAQG,KAAKnL,SAAUgL,GAC/BgC,GACR,IAAIL,KACP,OAAOhJ,EAAKsJ,aAAanB,EAAQkB,OAG5C/C,KAAK,SAACiD,GAKH,MAAO,CACH9M,cApKpB,SAAmBA,EAAyCR,EAAgBC,GACxE,IAAMsN,EAAYtN,IAAkB5F,EAAcyM,UAAY,GAAK,EACnE,OAAQ9G,GASJ,IAAK,OACD,OAAOQ,EAAcgJ,QAAQgE,KAAK,SAACjH,EAAGkH,GAClC,OAAOF,EAAYhH,EAAEpK,KAAKuR,cAAcD,EAAEtR,QAElD,IAAK,QACD,OAAOqE,EAAcgJ,QAAQgE,KAAK,SAACjH,EAAGkH,GAClC,OAAOF,EAAYhH,EAAEzC,MAAM1D,SAASsN,cAAcD,EAAE3J,MAAM1D,YAElE,QAEI,OADA1B,QAAQiP,KAAK,6BAA+B3N,GACrCQ,GA4IYoN,CAnLxB,SAAwBN,EAAgCxN,GAC3D,IAAM+N,EAAgB/N,EAAYkE,IAAI,SAAC8J,GACnC,OAAO,IAAIC,OAAOD,EAAM,OAa5B,OAXqBR,EAAKvN,OAAO,SAACoD,GAC9B,OAA2B,IAAvBrD,EAAYa,QAGTkN,EAAcG,MAAM,SAACC,GACxB,OAAOA,EAAOC,KAAK/K,EAAIhH,OACnB8R,EAAOC,KAAK/K,EAAIW,MAAM1D,WACtB6N,EAAOC,KAAK/K,EAAIW,MAAMxC,cAuKL6M,CAvIjC,SAAqB3N,EAAyCT,EAAgBK,GAC1E,OAAQL,GACJ,IAAK,MACD,OAAOS,EAEX,IAAK,QACD,OAAOA,EAAcT,OAAO,SAACoD,GAAD,OAAUA,EAAIW,MAAM1D,WAAaA,IACjE,IAAK,WACD,OAAOI,EAAcT,OAAO,SAACoD,GAAD,OAAUA,EAAIW,MAAM1D,WAAaA,IACjE,QAEI,OADA1B,QAAQiP,KAAK,oBAAsB5N,GAC5BS,GA2Hc4N,CAAYd,EAAMhB,EAAMvM,OAAQuM,EAAMlM,UACbkM,EAAMxM,aACbwM,EAAMtM,OAAQsM,EAAMrM,eAInDoO,MAAOf,EAAK3M,YArFhC,CAAA4C,IAAA,SAAAtH,MAAA,SA0FWD,GACH,IAAMkQ,EAAS,IAAIpB,EAAa,CAC5B7B,IAAKlG,KAAK0G,OAAO8C,iBACjBlL,MAAO0B,KAAK0G,OAAOpI,QAEjBmL,EAAoB,IAAIzD,EAAkB,CAC5CE,IAAKlG,KAAK0G,OAAOgD,sBACjBpL,MAAO0B,KAAK0G,OAAOpI,QAEvB,OAAO6K,EAAOoC,aAAatS,GACtBqO,KAAK,SAACc,GACH,OAAOqB,EAAkB+B,eAAepD,EAAMrH,OACzCuG,KAAK,SAACmE,GAEH,OADA9P,QAAQC,IAAI,eAAgB6P,GACrB,CACHxS,GAAImP,EAAMnP,GACVG,KAAMgP,EAAMhP,KACZC,YAAa+O,EAAM/O,YACnB2P,UAAW,IAAIC,KAAKb,EAAME,YAC1BY,WAAY,IAAID,KAAKb,EAAMG,SAC3BxH,MAAO,CACH1D,SAAU+K,EAAMrH,MAChBxC,SAAUkN,EAAYjD,KAAKjK,SAC3BkK,KAAMgD,EAAYpD,QAAQK,SAASD,KACnChR,MAAOgU,EAAYpD,QAAQK,SAASjR,MACpCkR,QAAS8C,EAAYpD,QAAQK,SAASC,QACtCtN,aAAcoQ,EAAYpD,QAAQK,SAASrN,aAC3CuN,aAAc6C,EAAYpD,QAAQK,SAASE,aAC3CC,aAAc4C,EAAYpD,QAAQS,OAAOD,aACzCE,gBAAiB0C,EAAYpD,QAAQK,SAASK,wBAvH9E,CAAAvI,IAAA,WAAAtH,MAAA,SA+HaD,GACL,OAAkB,IAAdA,EAAG2E,OACI8N,QAAQC,OAAO,IAAInE,MAAM,wCAErB,IAAIO,EAAa,CAC5B7B,IAAKlG,KAAK0G,OAAO8C,iBACjBlL,MAAO0B,KAAK0G,OAAOpI,QAETiN,aAAatS,GACtBqO,KAAK,SAACc,GACH,OAAOA,MAzIvB,CAAA5H,IAAA,SAAAtH,MAAA,SA6IW0S,EAAyBvO,GAAyC,IAAAwO,EAAA7L,KAC/DmJ,EAAS,IAAIpB,EAAa,CAC5B7B,IAAKlG,KAAK0G,OAAO8C,iBACjBlL,MAAO0B,KAAK0G,OAAOpI,QAGjBmL,EAAoB,IAAIzD,EAAkB,CAC5CE,IAAKlG,KAAK0G,OAAOgD,sBACjBpL,MAAO0B,KAAK0G,OAAOpI,QAIvB,OAAKsN,EAAO3S,GAAGP,OAASkT,EAAO3S,GAAGP,MAAMf,OAASd,EAAY2E,OACxDoQ,EAAOxS,KAAKV,OAASkT,EAAOxS,KAAKV,MAAMf,OAASd,EAAY2E,OAC5DoQ,EAAOvS,YAAYX,OAASkT,EAAOvS,YAAYX,MAAMf,OAASd,EAAY2E,MACpEkQ,QAAQC,OAAO,IAAInE,MAAM,mCAG7B2B,EAAO2C,YAAY,CACtB7S,GAAI2S,EAAO3S,GAAGC,MACdE,KAAMwS,EAAOxS,KAAKF,MAClBG,YAAauS,EAAOvS,YAAYH,MAChCvB,KAAM,iBAEL2P,KAAK,SAACc,GACH,OAAOqB,EAAkB+B,eAAepD,EAAMrH,OACzCuG,KAAK,SAACmE,GACH,OAAOI,EAAKE,WAAW3D,EAAOqD,SAxKtD,CAAAjL,IAAA,YAAAtH,MAAA,SA8KcD,EAAY+S,GAAsD,IAAAC,EAAAjM,KACxE,OAAO,IAAI0L,QAAsB,SAACQ,GAC9B,OA3MEC,EA2MU,IA1Mb,IAAIT,QAAQ,SAACQ,GAChBE,OAAOC,WAAW,WACdH,GAAQ,IACTC,MAwMM7E,KAAK,WACF,OAAO2E,EAAKK,OAAOrT,KA7MvC,IAAckT,MA2Bd,CAAA3L,IAAA,gBAAAtH,MAAA,SAuLkBD,GACV,OAAOsT,GAAWC,cAAcvT,KAxLxC,CAAAuH,IAAA,kBAAAtH,MAAA,SA2LoBE,GACZ,OAAOmT,GAAWE,gBAAgBrT,KA5L1C,CAAAoH,IAAA,yBAAAtH,MAAA,SA+L2BG,GACnB,OAAOkT,GAAWG,uBAAuBrT,OAhMjD8O,EAAA,GAoMaoE,GAAb,oBAAAA,IAAA1U,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAuM,GAAA,OAAA1U,OAAAsO,EAAA,EAAAtO,CAAA0U,EAAA,OAAA/L,IAAA,gBAAAtH,MAAA,SACyBD,GAEjB,GAAkB,IAAdA,EAAG2E,OACH,MAAO,CACH3E,EAAI,CACAtB,KAAMd,EAAY2E,MAClB+F,QAAS,qCAIrB,GAAItI,EAAG0T,MAAM,MACT,MAAO,CACH1T,EAAI,CACAtB,KAAMd,EAAY2E,MAClB+F,QAAS,4CAKrB,GAAItI,EAAG2E,OAAS,IACZ,MAAO,CACH3E,EAAI,CACAtB,KAAMd,EAAY2E,MAClB+F,QAAS,0DAMrB,OAAKtI,EAAG0T,MADQ,mBAUT,CAAC1T,EAAI,CACRtB,KAAMd,EAAYiC,OATX,CACHG,EAAI,CACAtB,KAAMd,EAAY2E,MAClB+F,QAAS,uFAlC7B,CAAAf,IAAA,kBAAAtH,MAAA,SA4C2BE,GACnB,OAAoB,IAAhBA,EAAKwE,OACE,CACHxE,EAAM,CACFzB,KAAMd,EAAY2E,MAClB+F,QAAS,uCAGjBnI,EAAKwE,OAAS,IACP,CACHxE,EAAM,CACFzB,KAAMd,EAAY2E,MAClB+F,QAAS,4DAGd,CACHnI,EAAM,CACFzB,KAAMd,EAAYiC,SA7DlC,CAAA0H,IAAA,yBAAAtH,MAAA,SAiEkCE,GAC1B,OAAoB,IAAhBA,EAAKwE,OACE,CACHxE,EAAM,CACFzB,KAAMd,EAAY2E,MAClB+F,QAAS,8CAIjBnI,EAAKwE,OAAS,KACP,CACHxE,EAAM,CACFzB,KAAMd,EAAY2E,MAClB+F,QAAS,8DAGd,CACHnI,EAAM,CACFzB,KAAMd,EAAYiC,WAnFlCyT,EAAA,GCpPO,SAASK,GAAa3T,GACzB,OAAO,SAAC4T,EAAmDC,GACvDD,EA7CG,CACHlV,KAAMJ,EAAW6E,uBA2CqE,IAAA2Q,EAI9DD,IADSxO,EAHqDyO,EAG9E5P,KAAQC,cAAiBkB,MACtBc,EAJ2E2N,EAIlF5N,IAAOC,OAQX,OAPc,IAAI+I,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGtCoG,OAAOrT,GACfqO,KAAK,SAAClH,GACHyM,EAtCT,SAAwBzM,GAC3B,MAAO,CACHzI,KAAMJ,EAAWiF,uBACjBnB,aAAc+E,GAmCG3D,CAAe2D,MAE3BgN,MAAM,SAACC,GA7Bb,IAAsB3U,EA8BbmU,GA9BanU,EA8BS,CAClB4U,KAAMD,EAAIjU,KACVmI,QAAS8L,EAAI9L,SA/BtB,CACH5J,KAAMJ,EAAWmF,qBACjBhE,MAAOA,QCOR,SAASmF,GAAkBJ,EAAyCC,GACvE,MAAO,CACH/F,KAAMJ,EAAWiG,oBACjBC,cAAeA,EACfC,WAAYA,GAWb,SAASK,GAAgBrF,GAC5B,MAAO,CACHf,KAAMJ,EAAWuG,kBACjBpF,MAAOA,GAWR,SAAS6U,GAAWxQ,GACvB,OAAO,SAAC8P,EAAmDC,GACvDD,EA9CD,SAAyB9P,GAC5B,MAAO,CACHpF,KAAMJ,EAAWuF,kBACjBC,YAAaA,GA2CJQ,CAAgBR,IACzB8P,ED/DG,CACHlV,KAAMJ,EAAWqF,gBC4DqE,IAAAmQ,EAM9DD,IAFhB7P,EAJ8E8P,EAI9E9P,OAAQC,EAJsE6P,EAItE7P,cAAeF,EAJuD+P,EAIvD/P,OAJuDwQ,EAAAT,EAKlF5P,KAAQC,cAAiBkB,EALyDkP,EAKzDlP,MAAOjB,EALkDmQ,EAKlDnQ,SACzB+B,EAN2E2N,EAMlF5N,IAAOC,OAQX,OAPc,IAAI+I,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGtCuH,UAAU,CACnB1Q,YAAaA,EACbE,SAAQC,gBAAeF,SAAQK,aAE9BiK,KAAK,SAAArB,GAA8B,IAA3BxI,EAA2BwI,EAA3BxI,cAAe6N,EAAYrF,EAAZqF,MAEpBuB,EAAShP,GAAkBJ,EAAe6N,MAE7C8B,MAAM,SAAC1U,GACJmU,EAAS9O,GAAgB,CACrBuP,KAAM5U,EAAMU,KACZmI,QAAS7I,EAAM6I,cAM5B,SAASmM,GAASzQ,EAAgBC,GACrC,OAAO,SAAC2P,EAAmDC,GACvDD,EAlGD,SAAuB5P,EAAgBC,GAC1C,MAAO,CACHvF,KAAMJ,EAAWyG,gBACjBf,OAAQA,EACRC,cAAeA,GA8FNe,CAAchB,EAAQC,IADuD,IAAAyQ,EAK9Db,IAFhB/P,EAH8E4Q,EAG9E5Q,YAAaC,EAHiE2Q,EAGjE3Q,OAHiE4Q,EAAAD,EAIlFxQ,KAAQC,cAAiBkB,EAJyDsP,EAIzDtP,MAAOjB,EAJkDuQ,EAIlDvQ,SACzB+B,EAL2EuO,EAKlFxO,IAAOC,OAQX,OAPc,IAAI+I,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGtCuH,UAAU,CACnB1Q,cACAE,SAAQC,gBAAeF,SAAQK,aAE9BiK,KAAK,SAAAU,GAA8B,IAA3BvK,EAA2BuK,EAA3BvK,cAAe6N,EAAYtD,EAAZsD,MAEpBuB,EAAShP,GAAkBJ,EAAe6N,MAE7C8B,MAAM,SAAC1U,GACJmU,EAAS9O,GAAgB,CACrBuP,KAAM5U,EAAMU,KACZmI,QAAS7I,EAAM6I,cAM5B,SAASsM,GAAW7Q,GACvB,OAAO,SAAC6P,EAAmDC,GACvDD,EA2CD,SAAyB7P,GAC5B,MAAO,CACHrF,KAAMJ,EAAW2G,kBACjBlB,OAAQA,GA9CCmB,CAAgBnB,IAD6D,IAAA8Q,EAK9DhB,IAFhB/P,EAH8E+Q,EAG9E/Q,YAAaE,EAHiE6Q,EAGjE7Q,OAAQC,EAHyD4Q,EAGzD5Q,cAHyD6Q,EAAAD,EAIlF3Q,KAAQC,cAAiBkB,EAJyDyP,EAIzDzP,MAAOjB,EAJkD0Q,EAIlD1Q,SACzB+B,EAL2E0O,EAKlF3O,IAAOC,OAQX,OAPc,IAAI+I,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGtCuH,UAAU,CACnB1Q,cACAE,SAAQC,gBAAeF,SAAQK,aAE9BiK,KAAK,SAAA0G,GAA8B,IAA3BvQ,EAA2BuQ,EAA3BvQ,cAAe6N,EAAY0C,EAAZ1C,MAEpBuB,EAAShP,GAAkBJ,EAAe6N,MAE7C8B,MAAM,SAAC1U,GACJmU,EAAS9O,GAAgB,CACrBuP,KAAM5U,EAAMU,KACZmI,QAAS7I,EAAM6I,cCvFpBG,mBA9DR,SAAAuE,GACH,MAAO,CACHvI,WAF6HuI,EAAnGvI,WAG1BC,cAH6HsI,EAAvFtI,cAItCV,OAJ6HgJ,EAAxEhJ,OAKrDC,cAL6H+I,EAAhE/I,cAM7DF,OAN6HiJ,EAAjDjJ,OAO5EM,UAP6H2I,EAAzC3I,YAkCrF,SAA4BuP,GAC/B,MAAO,CACHnK,aAAc,SAAC3F,GAEX8P,EAASoB,GAAmBlR,KAEhCmG,WAAY,SAACjG,EAAgBC,GAEzB2P,EAASoB,GAAiBhR,EAAQC,KAEtCiG,aAAc,SAACnG,GACX6P,EAASoB,GAAmBjR,OAiBzB0E,CAA6Ca,YCoCrD,SAAS5J,GAAYD,GACxB,MAAO,CACHf,KAAMJ,EAAWiB,cACjBE,MAAOA,GAwBR,SAASwV,KACZ,MAAO,CACHvW,KAAMJ,EAAWoD,yBA4BlB,SAASR,GAAoBlB,EAAYP,GAC5C,MAAO,CACHf,KAAMJ,EAAW2C,wBACjBjB,GAAIA,EACJP,MAAOA,GAqBR,SAASyV,KACZ,OAAO,SAACtB,EAAmDC,GACvDD,EA5EG,CACHlV,KAAMJ,EAAWqB,qBA4EjBiU,EAASuB,OAIV,SAASrW,KACZ,OAAO,SAAC8U,EAAmDC,GACvDD,EAvGG,CACHlV,KAAMJ,EAAWK,gBAqGqE,IAAAmV,EAK9DD,IAL8DU,EAAAT,EAG9E5P,KAAQC,cAAiBkB,EAHqDkP,EAGrDlP,MAAOjB,EAH8CmQ,EAG9CnQ,SAC1BrE,EAJwE+T,EAIlFhV,OAAUiB,gBACHoG,EAL2E2N,EAKlF5N,IAAOC,OACLiP,EAAQ,IAAIlG,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAG9ClN,EAQLqV,EAAMtW,OAAOiB,EAAiBqE,GACzBiK,KAAK,SAAClH,GACHzE,QAAQC,IAAI,QAASwE,GACrByM,EAzHT,SAAuBzM,GAC1B,MAAO,CACHzI,KAAMJ,EAAWY,gBACjBkD,aAAc+E,GAsHG7H,CAAc6H,MAE1BgN,MAAM,SAAC1U,GACJiD,QAAQjD,MAAM,eAAgBM,EAAiBN,GAC/CmU,EAASlU,GAAY,CACjB2U,KAAM,UACN/L,QAAS7I,EAAM6I,aAhBvBsL,EAASlU,GAAY,CACjB2U,KAAM,MACN/L,QAAS,mDAoBlB,SAAS6M,KACZ,OAAO,SAACvB,EAAmDC,GAA+B,IACpE9T,EAAsB8T,IAAhC/U,OAAUiB,gBAEY8T,IAAtB/U,OAEHiB,GAKDA,EAAgBI,KAAKD,SAAWhC,EAAWwC,WAK3CX,EAAgBC,GAAGE,SAAWhC,EAAWwC,WAKzCX,EAAgBK,YAAYF,SAAWhC,EAAWwC,UAKtDkT,EAlIG,CACHlV,KAAMJ,EAAWiD,sBA8GbqS,EAASqB,OAkCd,SAASI,GAAiBlV,GAC7B,OAAO,SAACyT,GAAsD,IAAA0B,EAC3BhC,GAAWE,gBAAgBrT,GADAoV,EAAA3W,OAAA4W,GAAA,EAAA5W,CAAA0W,EAAA,GACnDG,EADmDF,EAAA,GACpC9V,EADoC8V,EAAA,GAGtD9V,EAAMf,OAASd,EAAY2E,MAC3BqR,EAlIL,SAA+BzT,EAAcV,GAChD,MAAO,CACHf,KAAMJ,EAAWsC,0BACjBT,KAAMA,EACNV,MAAOA,GA8HMqB,CAAsB2U,EAAehW,IAE9CmU,EA3IL,SAAiCzT,GACpC,MAAO,CACHzB,KAAMJ,EAAWkC,4BACjBL,KAAMA,GAwIOQ,CAAwB8U,IAErC7B,EAASuB,OAIV,SAASO,GAAe1V,GAC3B,OAAO,SAAC4T,EAAmDC,GAA+B,IAAA8B,EACzDrC,GAAWC,cAAcvT,GADgC4V,EAAAhX,OAAA4W,GAAA,EAAA5W,CAAA+W,EAAA,GAC/EE,EAD+ED,EAAA,GAClEnW,EADkEmW,EAAA,GAEtF,GAAInW,EAAMf,OAASd,EAAY2E,MAG3B,OAFAqR,EAAS1S,GAAoB2U,EAAapW,SAC1CmU,EAASuB,OA7BrB,SAA2B3W,GAAmB,IACT6G,EACT7G,EADhB0F,KAAQC,cAAiBkB,MACtBc,EAAa3H,EAApB0H,IAAOC,OACX,OAAO,IAAI+I,GAAM,CACb7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,OAyBjC6I,CAAkBjC,KAC1BkC,SAASF,GACVxH,KAAK,SAAClH,GA5IZ,IAA+BnH,EA6IlBmH,GACAzE,QAAQC,IAAI,QAASwE,GACrByM,EAAS1S,GAAoB2U,EAAa,CACtCnX,KAAMd,EAAY2E,MAClB+F,QAAS,oCAGbsL,GApJkB5T,EAoJa6V,EAnJxC,CACHnX,KAAMJ,EAAWyC,0BACjBf,GAAIA,KAoJI4T,EAASuB,SAKlB,SAASa,GAAwB5V,GACpC,OAAO,SAACwT,EACJC,GAA+B,IAAAoC,EAEPpC,IADSxO,EADF4Q,EACvB/R,KAAQC,cAAiBkB,MACtBc,EAFoB8P,EAE3B/P,IAAOC,OAFoB+P,EAGjB,IAAIhH,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAEPwG,uBAAuBrT,GATpC+V,EAAAvX,OAAA4W,GAAA,EAAA5W,CAAAsX,EAAA,GASxBE,EATwBD,EAAA,GASF1W,EATE0W,EAAA,GAW3B1W,EAAMf,OAASd,EAAY2E,MAC3BqR,EApJL,SAAsCxT,EAAqBX,GAC9D,MAAO,CACHf,KAAMJ,EAAW+C,iCACjBjB,YAAaA,EACbX,MAAOA,GAgJM6B,CAA6B8U,EAAsB3W,IAE5DmU,EA7JL,SAAwCxT,GAC3C,MAAO,CACH1B,KAAMJ,EAAW6C,mCACjBf,YAAaA,GA0JAgB,CAA+BgV,IAE5CxC,EAASuB,+BC/FFkB,uBA1OX,SAAAA,EAAYzP,GAA6B,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAsP,IACrCxP,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAAyX,GAAAnP,KAAAH,KAAMH,KAEDpI,MAAQ,CACT8X,WAAW,GAGfzP,EAAK0P,OAASC,SAASC,SAAUF,OAEjC1P,EAAKD,MAAM8P,eAT0B7P,+EAarCE,KAAK8C,SAAS,CAAEyM,WAAW,qCAGtBxM,GACLA,EAAEC,iBACFrH,QAAQC,IAAI,aACZoE,KAAKH,MAAM+P,gDAGF7M,GACTA,EAAE8M,UACF7P,KAAKH,MAAMiQ,aAAa/M,EAAEjC,OAAO5H,mDAGjB6J,GAChBA,EAAE8M,UACF7P,KAAKH,MAAMkQ,oBAAoBhN,EAAEjC,OAAO5H,0CAGjC6J,GACPA,EAAE8M,UACF7P,KAAKH,MAAMmQ,WAAWjN,EAAEjC,OAAO5H,yCAI/B,OACI8G,KAAKH,MAAMzH,YAAcpB,EAAU0C,QACnCsG,KAAKH,MAAMhH,kBAAoB3B,EAAgBuD,QAC9CuF,KAAKH,MAAM7H,YAAcf,EAAU8B,KAChCiH,KAAKH,MAAM7H,YAAcf,EAAUkE,OACnC6E,KAAKH,MAAM7H,YAAcf,EAAUqB,4CAK3C,OACIgI,EAAA,sBAAMrH,GAAG,sBAAsBsH,UAAU,SAAS4D,SAAUnE,KAAKmE,SAASR,KAAK3D,OAC3EM,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,oBAAf,QACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,uBAAOpH,MAAO8G,KAAKH,MAAM7G,gBAAgBI,KAAKF,OAAS,GACnDuK,SAAUzD,KAAKiQ,aAAatM,KAAK3D,QACpCA,KAAKH,MAAM7G,gBAAgBI,KAAKV,MAAS4H,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,QAAUlQ,KAAKH,MAAM7G,gBAAgBI,KAAKV,MAAM6I,SAAmB,KAG3IjB,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,oBAAf,MACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,uBAAOpH,MAAO8G,KAAKH,MAAM7G,gBAAgBC,GAAGC,OAAS,GACjDuK,SAAUzD,KAAKmQ,WAAWxM,KAAK3D,QAClCA,KAAKH,MAAM7G,gBAAgBC,GAAGP,MAAS4H,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,QAAUlQ,KAAKH,MAAM7G,gBAAgBC,GAAGP,MAAM6I,SAAmB,KAGvIjB,EAAA,qBAAKC,UAAU,MAAMa,MAAO,CAAEc,KAAM,UAAWkO,UAAW,OAAQC,UAAW,SACzE/P,EAAA,qBAAKC,UAAU,oBAAf,eACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,0BAAUpH,MAAO8G,KAAKH,MAAM7G,gBAAgBK,YAAYH,OAAS,GAC7DuK,SAAUzD,KAAKsQ,oBAAoB3M,KAAK3D,QAC3CA,KAAKH,MAAM7G,gBAAgBK,YAAYX,MAAS4H,EAAA,qBAAKc,MAAO,CAAE8O,MAAO,QAAUlQ,KAAKH,MAAM7G,gBAAgBK,YAAYX,MAAM6I,SAAkB,KAGvJjB,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,SACfD,EAAA,qBAAKC,UAAU,mDAe3B,OAAOD,EAAA,sBAAMC,UAAU,WACnBD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,QACVP,KAAKH,MAAM7G,gBAAgBI,KAAKF,OAAS,MAItDoH,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,MACXD,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,WAAalQ,KAAKwP,OAAxC,yBACCxP,KAAKH,MAAM7G,gBAAgBC,GAAGC,OAAUoH,EAAA,sBAAMc,MAAO,CAAE6D,UAAW,WAA1B,2BAIrD3E,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,cACXgQ,wBAA0B,CAAEC,OAAQC,KAAOzQ,KAAKH,MAAM7G,gBAAgBK,YAAYH,OAAS,gDAOjG,IAAAwX,EACwC1Q,KAAKH,MACjD8Q,EAAQ,SAFJD,EACFtY,UAC6B,YAF3BsY,EACS7X,gBACkD,WAF3D6X,EAC0B1Y,UAEpC,OACIsI,EAAA,sBAAMc,MAAO,CAAEY,YAAa,SAAW2O,0CAK3C,IAAMC,EAAU5Q,KAAKH,MAAM7G,gBAAiBI,KAAKF,OAAUoH,EAAA,sBAAMc,MAAO,CAAE6D,UAAW,SAAUiL,MAAO,SAA3C,0DAC3D,OACI5P,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,0BAEIA,EAAA,cAAC0D,EAAA,EAAD,CAAMrM,KAAK,gBACV,IAHL,oBAKKiZ,EALL,MASJtQ,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAO+C,eAAgB,WAAY9C,WAAY,WAE1G/B,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,OACTU,KAAK,sBACLlE,IAAI,SACJgE,UAAWxE,KAAK6Q,QAAQ1Q,KAAKH,MAC7B2E,SAAS,UAJb,QASArE,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,OACTrM,KAAK,SACLkN,QAAS7E,KAAK8Q,cAAcnN,KAAK3D,OAFrC,4DAahB,OACIM,EAAA,qBAAKC,UAAU,aACXD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,SAEfD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,UACXD,EAAA,cAACiE,EAAA,EAAD,CAAQG,KAAK,sBACTlE,IAAI,SACJmE,SAAS,UAFb,QAGArE,EAAA,cAACiE,EAAA,EAAD,CAAQ5M,KAAK,SACTkN,QAAS7E,KAAK8Q,cAAcnN,KAAK3D,OADrC,cAMhBM,EAAA,qBAAKC,UAAU,iEAQvB,OACID,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,2FAUhB,OAAIN,KAAKvI,MAAM8X,UACJjP,EAAA,cAACyQ,EAAA,EAAD,CAAUC,MAAI,EAACrQ,GAAG,mBAGxBX,KAAKH,MAAM7G,gBASZsH,EAAA,qBAAKC,UAAU,mBACVP,KAAK4F,eACNtF,EAAA,qBAAKC,UAAU,WACXD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,kCACCN,KAAKiR,cAEV3Q,EAAA,qBAAKC,UAAU,iBACXD,EAAA,mCACCN,KAAKkR,mBAhBd5Q,EAAA,qBAAKC,UAAU,mBACVP,KAAKmR,8BAtNI1P,cCsCfC,mBA7BR,SAAAuE,GAAyH,IAAAmL,EAAAnL,EAA9FlO,OAC9B,MAAO,CACHK,UAFwHgZ,EAApFhZ,UAGpCJ,UAHwHoZ,EAAzEpZ,UAI/Ca,gBAJwHuY,EAA9DvY,gBAK1DG,gBALwHoY,EAA7CpY,kBAS5E,SAA4B6T,GAC/B,MAAO,CACH8C,aAAc,WACV9C,EAASsB,OAEbyB,SAAU,WACN/C,EAAS9U,OAEb+X,aAAc,SAAC1W,GACXyT,EAASyB,GAAiBlV,KAE9B4W,WAAY,SAAC/W,GACT4T,EAAS8B,GAAe1V,KAE5B8W,oBAAqB,SAAC1W,GAClBwT,EAASoC,GAAwB5V,OAK9BqI,CAA8F4N,IC8L9F+B,uBAtOX,SAAAA,EAAYxR,GAAoC,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAqR,IAC5CvR,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAAwZ,GAAAlR,KAAAH,KAAMH,KAEDA,MAAMyR,UAAUxR,EAAKD,MAAM5G,IAHY6G,6EAO5C,OACIQ,EAAA,yBACKN,KAAKuR,yDASd,GAAIvR,KAAKH,MAAMxE,aAAc0F,MAAM1D,WAAa2C,KAAKH,MAAMxC,SACvD,OACIiD,EAAA,mBAAGc,MAAO,CAAEoQ,UAAW,WAAvB,uCACwClR,EAAA,cAACI,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuBZ,KAAKH,MAAMxE,aAAcpC,KAAMqH,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,QAAb,SADzG,mDAQR,GAAIhE,KAAKH,MAAMxE,aAAc0F,MAAM1D,WAAa2C,KAAKH,MAAMxC,SACvD,OACIiD,EAAA,cAACI,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuBZ,KAAKH,MAAMxE,aAAcpC,KAAMqH,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,QAAb,6CAOzE,GAAKhE,KAAKH,MAAMxE,aAGhB,OACIiF,EAAA,sBAAMC,UAAU,SACZD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,QACVP,KAAKH,MAAMxE,aAAajC,QAIrCkH,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,MACXD,EAAA,sBAAMC,UAAU,SAAhB,aAAyC,IACzCD,EAAA,sBAAMC,UAAU,iBAAhB,mCAAuEP,KAAKH,MAAMxE,aAAapC,MAI3GqH,EAAA,qBAAKC,UAAU,MAAMa,MAAO,CAAEc,KAAM,YAChC5B,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,cACXgQ,wBAA0B,CAAEC,OAAQC,KAAOzQ,KAAKH,MAAMxE,aAAahC,aAAe,iDActG,GAAK2G,KAAKH,MAAMxE,aAGhB,OAAQ2E,KAAKH,MAAMxE,aAAa0F,MAAM6H,cAAgB,YAClD,IAAK,WACD,IAAMG,EAAkB/I,KAAKH,MAAMxE,aAAa0F,MAAMgI,iBAAmB,YACnEF,EAAe7I,KAAKH,MAAMxE,aAAa0F,MAAM8H,aACnD,OAAIA,EACO,mCAAqCA,EAAe,oBAAsBE,EAE1E,kBAEf,IAAK,aACL,IAAK,aACL,QACI,MAAO,0DAKf,IAAM0I,EAAYzR,KAAK0R,eACvB,OACIpR,EAAA,qBACIqR,IAAKF,EACLrQ,MAAO,CAAEmE,MAAO,2CAOxB,GAAKvF,KAAKH,MAAMxE,aAGhB,OACIiF,EAAA,sBAAMC,UAAU,mBACZD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,yBACIA,EAAA,qBAAKC,UAAU,SAAf,eAEJD,EAAA,qBAAKC,UAAU,cACXD,EAAA,qBAAKC,UAAU,aACVP,KAAK4R,gBAEVtR,EAAA,qBAAKC,UAAU,iBAEXD,EAAA,qBAAKC,UAAU,SACXD,EAAA,mBAAGO,KAAK,+BAA+BC,OAAO,UAAUd,KAAKH,MAAMxE,aAAa0F,MAAMxC,UACrF,IAFL,SAGK+B,EAAA,8BAHL,IAGiBN,KAAKH,MAAMxE,aAAa0F,MAAM1D,SAH/C,UAKAiD,EAAA,qBAAKC,UAAU,uBACVP,KAAKH,MAAMxE,aAAa0F,MAAM1F,cAEnCiF,EAAA,qBAAKC,UAAU,uBACVP,KAAKH,MAAMxE,aAAa0F,MAAM0H,KADnC,IAC0CzI,KAAKH,MAAMxE,aAAa0F,MAAMtJ,MADxE,KACiFuI,KAAKH,MAAMxE,aAAa0F,MAAM4H,aAM/HrI,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,sBAAMC,UAAU,SAAhB,gBAEJD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,aACVsR,KAAKC,eAAe,QAAS,CAC1BC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAOlS,KAAKH,MAAMxE,aAAa2N,cAK9C1I,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,sBAAMC,UAAU,SAAhB,iBAEJD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,cACVsR,KAAKC,eAAe,QAAS,CAC1BC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAOlS,KAAKH,MAAMxE,aAAa6N,uDAStD,OACI5I,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,0CAEKN,KAAKH,MAAMxE,cAAgB2E,KAAKH,MAAMxE,aAAajC,KAFxD,MAMJkH,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAO+C,eAAgB,aACjFnF,KAAKmS,mBACN7R,EAAA,cAACI,EAAA,EAAD,CAASC,GAAE,kBAAoBL,EAAA,cAACiE,EAAA,EAAD,CAAQ5M,KAAK,SAASqM,KAAK,QAA3B,oEAQ/C,OACI1D,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,gFAUhB,MAAuC,qBAA5BN,KAAKH,MAAMxE,aAEdiF,EAAA,qBAAKC,UAAU,oBACVP,KAAK4F,eACNtF,EAAA,qBAAKC,UAAU,WACXD,EAAA,qBAAKC,UAAU,cACVP,KAAKkB,aAEVZ,EAAA,qBAAKC,UAAU,cACXD,EAAA,qBAAKC,UAAU,WACVP,KAAKoS,iBAQ1B9R,EAAA,qBAAKC,UAAU,oBACVP,KAAKmR,sBADV,qBA/NmB1P,cCuChBC,mBAhBf,SAAAuE,EAAA+B,GACkC,IAAAqK,EAAApM,EADP5J,QAAW5E,EACJ4a,EADI5a,MAAO4D,EACXgX,EADWhX,aAAc3C,EACzB2Z,EADyB3Z,MAAkC2E,EAC3D4I,EADkC9I,KAAQC,cAAiBC,SAGzF,MAAO,CACHpE,GAH0B+O,EAA5B/O,GAGMxB,QAAO4D,eAAc3C,QAAO2E,aAIjC,SAA4BwP,GAC/B,MAAO,CACHyE,UAAW,SAACrY,GACR4T,EAASoB,GAAqBhV,OAK3ByI,CAAoG2P,IC4E5G,SAASiB,GAAiB5Z,GAC7B,MAAO,CACHf,KAAMJ,EAAWgb,oBACjB7Z,MAAOA,GA2CR,SAASqC,GAAQ9B,GACpB,OAAO,SAAC4T,EAAmDC,GACvDD,EAlFG,CACHlV,KAAMJ,EAAWuD,iBAgFqE,IAAAiS,EAI9DD,IADSxO,EAHqDyO,EAG9E5P,KAAQC,cAAiBkB,MACtBc,EAJ2E2N,EAIlF5N,IAAOC,OAQX,OAPc,IAAI+I,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGtCoG,OAAOrT,GACfqO,KAAK,SAAClH,GACH,IAAMoS,EAAkC,CACpCvZ,GAAI,CACAC,MAAOkH,EAAInH,IAEfG,KAAM,CACFF,MAAOkH,EAAIhH,MAEfC,YAAa,CACTH,MAAOkH,EAAI/G,cAGnBwT,EArGT,SAAwBzM,GAC3B,MAAO,CACHzI,KAAMJ,EAAW2D,iBACjBG,aAAc+E,GAkGG9E,CAAekX,MAE3BpF,MAAM,SAACC,GAhGb,IAAsB3U,EAiGbmU,GAjGanU,EAiGS,CAClB4U,KAAMD,EAAIjU,KACVmI,QAAS8L,EAAI9L,SAlGtB,CACH5J,KAAMJ,EAAWgE,eACjB7C,MAAOA,QAsGR,SAAS+Z,GAAkBrZ,GAC9B,OAAO,SAACyT,EAAmDC,GAA+B,IAAAa,EAE9Db,IADSxO,EADqDqP,EAC9ExQ,KAAQC,cAAiBkB,MACtBc,EAF2EuO,EAElFxO,IAAOC,OAF2EsT,EAGxE,IAAIvK,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGpBuG,gBAAgBrT,GAVuCuZ,EAAA9a,OAAA4W,GAAA,EAAA5W,CAAA6a,EAAA,GAU/E9B,EAV+E+B,EAAA,GAUtEja,EAVsEia,EAAA,GAYtE,OAAZ/B,GACA/D,EArFL,SAAkCzT,GACrC,MAAO,CACHzB,KAAMJ,EAAWmE,6BACjBtC,KAAMA,GAkFOwZ,CAAyBhC,IAExB,OAAVlY,GACAmU,EAjFL,SAAgCzT,EAAcV,GACjD,MAAO,CACHf,KAAMJ,EAAWuE,2BACjB1C,KAAMA,EACNV,MAAOA,GA6EMma,CAAuBjC,EAASlY,KAK9C,SAASoa,GAAyBzZ,GACrC,OAAO,SAACwT,EAAmDC,GAA+B,IAAAgB,EAE9DhB,IADSxO,EADqDwP,EAC9E3Q,KAAQC,cAAiBkB,MACtBc,EAF2E0O,EAElF3O,IAAOC,OAF2E+P,EAGxE,IAAIhH,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGbwG,uBAAuBrT,GAVyB+V,EAAAvX,OAAA4W,GAAA,EAAA5W,CAAAsX,EAAA,GAU/E4D,EAV+E3D,EAAA,GAU/D1W,EAV+D0W,EAAA,GAY/D,OAAnB2D,GACAlG,EA1FL,SAAyCxT,GAC5C,MAAO,CACH1B,KAAMJ,EAAWyE,oCACjB3C,YAAaA,GAuFA2Z,CAAgCD,IAE/B,OAAVra,GACAmU,EAtFL,SAAuCxT,EAAqBX,GAC/D,MAAO,CACHf,KAAMJ,EAAW2E,kCACjB7C,YAAaA,EACbX,MAAOA,GAkFMua,CAA8BF,EAAgBra,KAK5D,SAASwa,KACZ,OAAO,SAACrG,EAAmDC,GACvDD,EA7IG,CACHlV,KAAMJ,EAAW4b,sBA2IqE,IAAAjE,EAK9DpC,IAFL1R,EAHmE8T,EAG9EnU,QAAWK,mBACUkD,EAJyD4Q,EAIlF/R,KAAQC,cAAiBkB,MAClBc,EAL2E8P,EAKlF/P,IAAOC,OACLiP,EAAQ,IAAIlG,GAAM,CACpB7J,QACAkL,iBAAkBpK,EAAO4N,SAASC,OAAO/G,IACzCwD,sBAAuBtK,EAAO4N,SAASE,YAAYhH,IACnDyD,oBAAqBvK,EAAO4N,SAASG,UAAUjH,MAGnD,GAAK9K,EAQL,GAAIA,EAAmBhC,KAAKV,OAAS0C,EAAmB/B,YAAYX,MAChEmU,EAASyF,GAAiB,CACtBhF,KAAM,UACN/L,QAAS,wDAHjB,CAQA,IAAM6R,EAAqB,CACvBha,KAAMgC,EAAmBhC,KAAKF,MAC9BG,YAAa+B,EAAmB/B,YAAYH,OAGhDmV,EAAMgF,UAAUjY,EAAmBnC,GAAGC,MAAOka,GACxC9L,KAAK,SAACjM,GACHwR,EA3KT,SAA4BxR,GAC/B,MAAO,CACH1D,KAAMJ,EAAW+b,sBACjBjY,aAAcA,GAwKGkY,CAAmBlY,MAE/B+R,MAAM,SAACC,GACJR,EAASyF,GAAiB,CACtBhF,KAAM,eACN/L,QAAS8L,EAAI9L,kBA3BrBsL,EAASyF,GAAiB,CACtBhF,KAAM,MACN/L,QAAS,wDC1DViS,eA7LX,SAAAA,EAAY3T,GAAoC,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAwT,IAC5C1T,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAA2b,GAAArT,KAAAH,KAAMH,KAEDpI,MAAQ,CACT8X,WAAW,GAGfzP,EAAKD,MAAM4T,UAAU3T,EAAKD,MAAM5G,IAPY6G,+EAW5CE,KAAK8C,SAAS,CAAEyM,WAAW,qCAGtBxM,GACLA,EAAEC,iBACFhD,KAAKH,MAAM6T,mDAGF3Q,GACTA,EAAE8M,UACF7P,KAAKH,MAAMiQ,aAAa/M,EAAEjC,OAAO5H,mDAGjB6J,GAChBA,EAAE8M,UACF7P,KAAKH,MAAMkQ,oBAAoBhN,EAAEjC,OAAO5H,0CAGjC6J,GACPA,EAAE8M,+CAKF,GAAK7P,KAAKH,MAAMzE,mBAGhB,OACIkF,EAAA,sBAAMrH,GAAG,uBAAuBsH,UAAU,SAAS4D,SAAUnE,KAAKmE,SAASR,KAAK3D,OAC5EM,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,oBAAf,QACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,uBAAOpH,MAAO8G,KAAKH,MAAMzE,mBAAmBhC,KAAKF,MAC7CuK,SAAUzD,KAAKiQ,aAAatM,KAAK3D,QACpCA,KAAKH,MAAMzE,mBAAmBhC,KAAKV,MAAS4H,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,QAAUlQ,KAAKH,MAAMzE,mBAAmBhC,KAAKV,MAAM6I,SAAmB,KAGjJjB,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,oBAAf,MACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,cAACqT,GAAA,EAAD,CAAS1R,MAAM,6BACX3B,EAAA,uBAAOpH,MAAO8G,KAAKH,MAAMzE,mBAAmBnC,GAAGC,MAC3C0a,UAAQ,OAIxBtT,EAAA,qBAAKC,UAAU,MAAMa,MAAO,CAAEc,KAAM,UAAWkO,UAAW,OAAQC,UAAW,SACzE/P,EAAA,qBAAKC,UAAU,oBAAf,eACAD,EAAA,qBAAKC,UAAU,QACXD,EAAA,0BAAUpH,MAAO8G,KAAKH,MAAMzE,mBAAmB/B,YAAYH,MACvDuK,SAAUzD,KAAKsQ,oBAAoB3M,KAAK3D,QAC3CA,KAAKH,MAAMzE,mBAAmB/B,YAAYX,MAAS4H,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,QAAUlQ,KAAKH,MAAMzE,mBAAmB/B,YAAYX,MAAM6I,SAAmB,8CAsBvK,GAAKvB,KAAKH,MAAMzE,mBAGhB,OAAOkF,EAAA,sBAAMC,UAAU,WACnBD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,QACVP,KAAKH,MAAMzE,mBAAmBhC,KAAKF,OAAS,MAIzDoH,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,MACXD,EAAA,sBAAMc,MAAO,CAAE8O,MAAO,WAAtB,6CAAmFlQ,KAAKH,MAAMzE,mBAAmBnC,GAAGC,OAAS,MAIzIoH,EAAA,qBAAKC,UAAU,MAAMa,MAAO,CAAEc,KAAM,UAAWkO,UAAW,OAAQC,UAAW,SACzE/P,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,cACXgQ,wBAA0B,CAAEC,OAAQC,KAAOzQ,KAAKH,MAAMzE,mBAAmB/B,YAAYH,OAAS,iDAQ9G,OACIoH,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,0BACIA,EAAA,cAACuB,EAAA,EAAD,CAAaT,MAAO,CAAEU,cAAe,YACpC,IAFL,gBAIK9B,KAAKH,MAAMzE,mBAAoBhC,KAAKF,MAJzC,MAQJoH,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAO+C,eAAgB,aAClF7E,EAAA,cAACiE,EAAA,EAAD,CACIP,KAAK,OACLU,KAAK,uBACLlE,IAAI,SACJmE,SAAS,UAJb,QAOArE,EAAA,cAACiE,EAAA,EAAD,CACI5M,KAAK,SACLqM,KAAK,OACLa,QAAS7E,KAAK8Q,cAAcnN,KAAK3D,OAHrC,2EAahB,OACIM,EAAA,cAACyE,EAAD,CAAQ9C,MAAM,iBACV3B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,UAAWC,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E/B,EAAA,qBAAKc,MAAO,CAAEc,KAAM,aAChB5B,EAAA,gFAUhB,OAAIN,KAAKvI,MAAM8X,UACJjP,EAAA,cAACyQ,EAAA,EAAD,CAAUC,MAAI,EAACrQ,GAAI,qBAAuBX,KAAKH,MAAM5G,KAE3D+G,KAAKH,MAAMzE,mBASZkF,EAAA,qBAAKC,UAAU,oBACVP,KAAK4F,eACNtF,EAAA,qBAAKC,UAAU,WACXD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,kCACCN,KAAKiR,cAEV3Q,EAAA,qBAAKC,UAAU,iBACXD,EAAA,mCACCN,KAAKkR,mBAhBd5Q,EAAA,qBAAKC,UAAU,oBACVP,KAAKmR,8BAxKK1P,aCyBhBC,mBAtBf,SAAAuE,EAAA+B,GACqD,IAAA6L,EAAA5N,EAD3BlL,QAAUtD,EACiBoc,EADjBpc,MAAOiB,EACUmb,EADVnb,MAAO0C,EACGyY,EADHzY,mBAE9C,OADiD4M,EAA3B/O,GACf,CAACxB,QAAOiB,QAAO0C,uBAGnB,SAA4ByR,GAC/B,MAAO,CACH4G,UAAW,SAACxa,GACR4T,EAAS9R,GAAQ9B,KAErBya,YAAa,WACT7G,EAASqG,OAEbpD,aAAc,SAAC1W,GACXyT,EAAS4F,GAAkBrZ,KAE/B2W,oBAAqB,SAAC1W,GAClBwT,EAASiG,GAAyBzZ,OAK/BqI,CAA8F8R,IC6G9FM,uBA9IX,SAAAA,EAAYjU,GAAwB,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA8T,IAChChU,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAAic,GAAA3T,KAAAH,KAAMH,KAEDkU,SAAWtS,cAEhB3B,EAAKD,MAAMmU,YALqBlU,+EAShCE,KAAKH,MAAMoU,+DAIX,GAA8B,OAA1BjU,KAAK+T,SAASpR,QAAlB,CAGA,IAAMrE,EAAQ0B,KAAK+T,SAASpR,QAAQzJ,MACf,IAAjBoF,EAAMV,SAGVjC,QAAQC,IAAI,oBAAqB0C,GACjC0B,KAAKH,MAAMqU,mBAAmB5V,6CAI9B,OACIgC,EAAA,qBAAKC,UAAU,aAAf,UACWD,EAAA,uBAAOgE,IAAKtE,KAAK+T,WACxBzT,EAAA,cAACiE,EAAA,EAAD,CACIP,KAAK,OACLW,SAAS,SACTE,QAAS7E,KAAKmU,aAAaxQ,KAAK3D,OAHpC,4DAWR,OACIM,EAAA,qBAAKC,UAAU,gBAAf,gBACiBD,EAAA,uBAAGA,EAAA,0BAAON,KAAKH,MAAMtB,UAArB,KAAuC+B,EAAA,0BAAON,KAAKH,MAAMxC,WAD1E,IAEK,IACDiD,EAAA,cAACiE,EAAA,EAAD,CAAQP,KAAK,SAASa,QAAS7E,KAAKoU,cAAczQ,KAAK3D,OAAvD,oDAMR,OAAQA,KAAKH,MAAMwU,YACf,KAAK/X,EAAgBxD,KACrB,KAAKwD,EAAgB+B,SACjB,OACIiC,EAAA,0BAER,KAAKhE,EAAgBqC,WACjB,OACI2B,EAAA,qBAAKC,UAAU,wBACVP,KAAKsU,mBACLtU,KAAKH,MAAM+B,UAGxB,KAAKtF,EAAgBwC,aACjB,OACIwB,EAAA,qBAAKC,UAAU,0BACXD,EAAA,mEACCN,KAAKuU,iBAGlB,KAAKjY,EAAgBd,MACjB,OACI8E,EAAA,qBAAKC,UAAU,0BACXD,EAAA,iCAIZ,QACI,OACIA,EAAA,oEAMZ,OAAQN,KAAKH,MAAMwU,YACf,KAAK/X,EAAgBxD,KACrB,KAAKwD,EAAgB+B,SACjB,OACIiC,EAAA,0BAER,KAAKhE,EAAgBqC,WACjB,OACI2B,EAAA,qBAAKC,UAAU,wBACVP,KAAKH,MAAM+B,UAGxB,KAAKtF,EAAgBwC,aACjB,OACIwB,EAAA,qBAAKC,UAAU,0BACXD,EAAA,2CAGZ,KAAKhE,EAAgBd,MACjB,OACI8E,EAAA,qBAAKC,UAAU,mBACXD,EAAA,qCAGZ,QACI,OACIA,EAAA,4DAuBZ,OACIA,EAAA,qBAAKC,UAAU,QACS,QAAnBP,KAAKH,MAAM2U,IAAgBxU,KAAKyU,eAAiBzU,KAAK0U,yBA3IpDjT,uBCoBbkT,GACI,GADJA,GAES,eAFTA,GAGK,YAuDEC,GAAb,WAGI,SAAAA,EAAA3O,GAAsC,IAAxBC,EAAwBD,EAAxBC,IAAwBrO,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA4U,GAClC5U,KAAKkG,IAAMA,EAJnB,OAAArO,OAAAsO,EAAA,EAAAtO,CAAA+c,EAAA,EAAApU,IAAA,WAAAtH,MAAA,SAOa2b,GACL,MAAoB,kBAATA,EACA,CAAC7U,KAAKkG,KAAKtF,OAAO,CAACiU,IAAOC,KAAK,KAEnC,CAAC9U,KAAKkG,KAAKtF,OAAOiU,GAAMC,KAAK,OAX5C,CAAAtU,IAAA,OAAAtH,MAAA,WAgBQ,OAAOyN,MAAM3G,KAAK+U,SAAS,CAACJ,KAAkB,CAC1C7N,QAAS,CACLG,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GAEH,OADAlM,QAAQC,IAAI,YAAaiM,GAClBA,MA3BvB,CAAArH,IAAA,eAAAtH,MAAA,SA+BiBoF,GACT,OAAOqI,MAAM3G,KAAK+U,SAAS,CAACJ,KAAuB,CAC/C7N,QAAS,CACLG,OAAQ,mBACRF,cAAezI,GAEnBsI,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,MA3CvB,CAAArH,IAAA,QAAAtH,MAAA,SA+CUoF,GACF,OAAOqI,MAAM3G,KAAK+U,SAAS,CAACJ,KAAmB,CAC3C7N,QAAS,CACLG,OAAQ,mBACRF,cAAezI,GAEnBsI,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACO,GACH,OAAOA,QA3DvB+M,EAAA,GC7BO,SAAShW,GAAeN,EAAejB,EAAkBkB,EAAkBC,GAC9E,MAAO,CACH7G,KAAMJ,EAAWmH,gBACjBJ,QAAOjB,WAAUkB,WAAUC,SAI5B,SAASO,KACZ,MAAO,CACHpH,KAAMJ,EAAWsH,mBAmBlB,SAASmV,KACZ,OAAO,SAACnH,EAAmDC,GACvDD,EA1CG,CACHlV,KAAMJ,EAAW6G,mBA6CjB,IAAME,EAAQ0W,OAAY,iBAC1B,GAAK1W,EAAL,CAIA,IAAMnB,EAAO,IAAIyX,GAAW,CAAE1O,IAAK,mBACnCwF,QAAQuJ,IAAI,CACR9X,EAAK+X,aAAa5W,GAClBnB,EAAKgY,MAAM7W,KAEVgJ,KAAK,SAAArB,GAA0B,IAAA+B,EAAAnQ,OAAA4W,GAAA,EAAA5W,CAAAoO,EAAA,GAAbmP,GAAapN,EAAA,GAAAA,EAAA,IACtBxJ,EAAQ4W,EAAQ5W,MAAMyC,IAAI,SAAA+M,GAAA,IAAG/U,EAAH+U,EAAG/U,GAAH+U,EAAOqH,KAAP,OAAkBpc,IAClD4T,EAASjO,GAAeN,EAAO8W,EAAQ5M,KAAM4M,EAAQjT,QAAS3D,WAVlEqO,EAAS9N,OChDN2C,mBAxBf,SAAyBjK,EAAmBoI,GAA6B,IAAAyV,EACzB7d,EAApC0F,KAAQhE,EADqDmc,EACrDnc,OAAQiE,EAD6CkY,EAC7ClY,cACxB,MAAO,CACHiX,WAAYlb,EACZmF,MAAOlB,EAAckB,OAAS,KAC9BjB,SAAUD,EAAcC,UAAY,KACpCkB,SAAUnB,EAAcmB,UAAY,OAIrC,SAA4BsO,GAC/B,MAAO,CACHmH,UAAW,WACPnH,EAASoB,OAEbgG,sBAAuB,WACnBpH,EDwED,SAACA,EAAmDC,GAEvDkI,UAAe,iBAGfnI,EAAS9N,SC3ETmV,mBAAoB,SAAC5V,GACjBuO,ED8EL,SAA8BvO,GACjC,OAAO,SAACuO,EAAmDC,GAEvDkI,OAAY,gBAAiB1W,GAG7B,IAAMnB,EAAO,IAAIyX,GAAW,CAAE1O,IAAK,mBACnCwF,QAAQuJ,IAAI,CACR9X,EAAK+X,aAAa5W,GAClBnB,EAAKgY,MAAM7W,KAEVgJ,KAAK,SAAAiO,GAA0B,IAAAC,EAAA3d,OAAA4W,GAAA,EAAA5W,CAAA0d,EAAA,GAAbH,GAAaI,EAAA,GAAAA,EAAA,IACtBhX,EAAQ4W,EAAQ5W,MAAMyC,IAAI,SAAAwU,GAAA,IAAGxc,EAAHwc,EAAGxc,GAAH,OAAAwc,EAAOJ,KAAWpc,IAClD4T,EAASjO,GAAeN,EAAO8W,EAAQ5M,KAAM4M,EAAQjT,QAAS3D,OC3FzDyP,CAA6B3P,OAKnCoD,CAA8FoS,wBCvCvG4B,GAKF,SAAAA,EAAAzP,GAA0D,IAA5C7M,EAA4C6M,EAA5C7M,KAAMuc,EAAsC1P,EAAtC0P,UAAWC,EAA2B3P,EAA3B2P,QAA2B/d,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA0V,GACtD1V,KAAK5G,KAAOA,EACZ4G,KAAK2V,UAAYA,EACjB3V,KAAK4V,QAAUA,GAUjBC,eAIF,SAAAA,EAAYnP,GAA+B,IAAA5G,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA6V,IACvC/V,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAAge,GAAA1V,KAAAH,KAAM0G,KACDoP,QAAU,IAAI7M,KACnBnJ,EAAKqM,QAAUzF,EAAOyF,SAAW,IAHMrM,6BAJjB4V,IAgBxBK,cAQF,SAAAA,EAAA/N,GAAsF,IAAxE5O,EAAwE4O,EAAxE5O,KAAM4c,EAAkEhO,EAAlEgO,QAASC,EAAyDjO,EAAzDiO,QAAyDpe,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA+V,GAClF/V,KAAK5G,KAAOA,EACZ4G,KAAKgW,QAAUA,EACfhW,KAAK/G,GAAKid,OACVlW,KAAKmW,QAAU,IAAIlN,KACnBjJ,KAAKiW,QAAUA,EACfjW,KAAKoW,SAAW,8DAIhB,MAAO,CACHA,SAAU,CACNnd,GAAI+G,KAAK/G,GACTkd,QAASnW,KAAKmW,QACdF,QAASjW,KAAKiW,SAElB7c,KAAM4G,KAAK5G,KACX4c,QAAShW,KAAKgW,kBAgBbK,GAAb,WAgBI,SAAAA,EAAY3P,GAKR,GALgC7O,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAqW,GAEhCrW,KAAKoM,OAAS1F,EAAO0F,OAGQ,OAAzBpM,KAAKoM,OAAOqD,SACZ,MAAM,IAAIjI,MAAM,eAEpB,GAAsC,OAAlCxH,KAAKoM,OAAOqD,SAASC,SACrB,MAAM,IAAIlI,MAAM,eAEpBxH,KAAKsW,KAAO5P,EAAO4P,MAAQtW,KAAKoM,OAAOqD,SAASC,SAASF,OAIzDxP,KAAK/G,GAAKyN,EAAO6P,WAAaL,OAG9BlW,KAAKwW,iBAAmB,IAAIxM,IAC5BhK,KAAKyW,iBAAmB,IAAIzM,IAC5BhK,KAAK0W,UAAY,IAAI1M,IAErBhK,KAAK2W,OAAS,EACd3W,KAAK4W,UAAY,EACjB5W,KAAK6W,cAAgB,EAErB7W,KAAK8W,uBAAyB,EAC9B9W,KAAK+W,iCAAmC,IACxC/W,KAAKgX,yBAA0B,EAC/BhX,KAAKiX,6BAA+B,EACpCjX,KAAKkX,gBAAkB,KA9C/B,OAAArf,OAAAsO,EAAA,EAAAtO,CAAAwe,EAAA,EAAA7V,IAAA,QAAAtH,MAAA,WAmDQ,OADA8G,KAAK2W,QAAU,EACR,OAASlW,OAAOT,KAAK2W,UAnDpC,CAAAnW,IAAA,iBAAAtH,MAAA,SAsDmBie,GACX,IAAM5V,EAAU4V,EAAaC,KAS7B,IAAK7V,EAKD,OAJAvB,KAAK8W,8BACD9W,KAAKgX,yBACLrb,QAAQiP,KAAK,mCAAoCuM,IAIzD,IAAK5V,EAAQ6U,SAKT,OAJApW,KAAK8W,8BACD9W,KAAKgX,yBACLrb,QAAQiP,KAAK,uDAAwDuM,IAI7E,GAAM5V,EAAQ6U,SAASG,YAAcvW,KAAK/G,GAKtC,OAJA+G,KAAK8W,8BACD9W,KAAKgX,yBACLrb,QAAQiP,KAAK,oDAAsDuM,IAoB3E,GAhBInX,KAAKiX,6BAA+BjX,KAAK+W,mCACzC/W,KAAKgX,yBAA0B,EAC/Brb,QAAQiP,KAAK,4CAA8C5K,KAAKiX,6BAA+B,gBAc/F1V,EAAQ6U,SAASnd,IAAM+G,KAAKwW,iBAAiBa,IAAI9V,EAAQ6U,SAASnd,IAClE,IACI,IAAMsO,EAAWvH,KAAKwW,iBAAiBlN,IAAI/H,EAAQ6U,SAASnd,IAC5D+G,KAAKwW,iBAAiBc,OAAO/V,EAAQ6U,SAASnd,IAC1CsO,GACAA,EAASgQ,QAAQhW,EAAQyU,SAE/B,MAAOwB,GACL7b,QAAQjD,MAAM,uCAAwC6I,EAASiW,GAMvE,GAAIxX,KAAKyW,iBAAiBY,IAAI9V,EAAQnI,MAAO,CACzC,IAAMqe,EAAWzX,KAAKyW,iBAAiBnN,IAAI/H,EAAQnI,MACnD4G,KAAKyW,iBAAiBa,OAAO/V,EAAQnI,MACrCqe,EAASC,QAAQ,SAACC,GACd,IACIA,EAAShC,UAAUpU,EAAQyU,SAC7B,MAAOwB,GACL7b,QAAQjD,MAAM,sCAAuC6I,EAASiW,GAC1DG,EAAS/B,SACT+B,EAAS/B,QAAQ4B,MAQ7BxX,KAAK0W,UAAUW,IAAI9V,EAAQnI,OAC3B4G,KAAK0W,UAAUpN,IAAI/H,EAAQnI,MAAOse,QAAQ,SAACC,GAClCA,EAAShC,WACVha,QAAQiP,KAAK,2BAA4B+M,GAE7C,IACIA,EAAShC,UAAUpU,EAAQyU,SAC7B,MAAOwB,GACL7b,QAAQjD,MAAM,sCAAuC6I,EAASiW,GAC1DG,EAAS/B,SACT+B,EAAS/B,QAAQ4B,QA9IzC,CAAAhX,IAAA,SAAAtH,MAAA,SAqJWye,GACE3X,KAAK0W,UAAUW,IAAIM,EAASve,OAC7B4G,KAAK0W,UAAU3M,IAAI4N,EAASve,KAAM,IAEtC4G,KAAK0W,UAAUpN,IAAIqO,EAASve,MAAO4X,KAAK2G,KAzJhD,CAAAnX,IAAA,KAAAtH,MAAA,SA4JO0e,EAAmBC,EAAgCnf,GAClDsH,KAAK8X,OAAO,IAAIpC,GAAS,CACrBtc,KAAMwe,EACNjC,UAAWkC,EACXjC,QAASld,OAhKrB,CAAA8H,IAAA,cAAAtH,MAAA,SAoKgBqI,GACRvB,KAAKoM,OAAO2L,YAAYxW,EAAQyW,aAAchY,KAAKsW,QArK3D,CAAA9V,IAAA,OAAAtH,MAAA,SAwKSE,EAAc4c,GACf,IAAMzU,EAAU,IAAIwU,GAAQ,CAAE3c,OAAM4c,UAASC,QAASjW,KAAK/G,KAC3D+G,KAAKiY,YAAY1W,KA1KzB,CAAAf,IAAA,cAAAtH,MAAA,SA6KgBqI,EAAkBgW,GAC1BvX,KAAKwW,iBAAiBzM,IAAI,aAAc,CACpC+L,QAAS,IAAI7M,KACbsO,QAASA,IAGbvX,KAAKiY,YAAY1W,KAnLzB,CAAAf,IAAA,UAAAtH,MAAA,SAsLYE,EAAc4c,GAAkB,IAAAhV,EAAAhB,KACpC,OAAO,IAAI0L,QAAQ,SAACQ,EAASP,GACzB,IACI3K,EAAKkX,YAAY,IAAInC,GAAQ,CAAE3c,OAAM4c,UAASC,QAASjV,EAAK/H,KAAO,SAACsO,GAChE2E,EAAQ3E,KAEd,MAAOiQ,GACL7L,EAAO6L,QA7LvB,CAAAhX,IAAA,eAAAtH,MAAA,WAkMmB,IAAA2S,EAAA7L,KACXoM,OAAOC,WAAW,WACd,IAAM8L,GAAM,IAAIlP,MAAOmP,UADHC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIpB,IAJoB,IAIpBC,EAJoBC,EAAA,eAAA1K,EAAAyK,EAAAvf,MAIRD,GAJQsc,EAAA1d,OAAA4W,GAAA,EAAA5W,CAAAmW,EAAA,OAyBY,IAzBZuH,EAAA,GAKevY,OAAO,SAAC2a,GACnC,GAAIA,aAAoB9B,GAAiB,CACrC,IAAM8C,EAAUR,EAAMR,EAAS7B,QAAQsC,UAEvC,GAAIO,EAAUhB,EAASxL,QAAS,CAC5B,IACQwL,EAAS/B,SACT+B,EAAS/B,QAAQ,IAAIpO,MAAM,gBAAkBmR,IAEnD,MAAOnB,GACL7b,QAAQjD,MAAM,8BAA+BO,EAAIue,GAErD,OAAO,EAEP,OAAO,EAGX,OAAO,IAGE5Z,QACbiO,EAAK4K,iBAAiBa,OAAOre,IAtBrC2f,EAA8B/M,EAAK4K,iBAAiBoC,UAApDC,OAAAC,cAAAV,GAAAI,EAAAG,EAAAI,QAAAC,MAAAZ,GAAA,EAA+D,KAAA9C,EAAAmD,KAJ3C,MAAArL,GAAAiL,GAAA,EAAAC,EAAAlL,EAAA,YAAAgL,GAAA,MAAAO,EAAAM,QAAAN,EAAAM,SAAA,WAAAZ,EAAA,MAAAC,GA8BhB1M,EAAK4K,iBAAiB0C,KAAO,GAC7BtN,EAAKuN,gBAEV,OApOX,CAAA5Y,IAAA,aAAAtH,MAAA,SAuOeye,GACF3X,KAAKyW,iBAAiBY,IAAIM,EAASve,OACpC4G,KAAKyW,iBAAiB1M,IAAI4N,EAASve,KAAM,IAE7C4G,KAAKyW,iBAAiBnN,IAAIqO,EAASve,MAAO4X,KAAK2G,GAC3CA,EAASxL,SACTnM,KAAKoZ,iBA7OjB,CAAA5Y,IAAA,OAAAtH,MAAA,SAiPSE,EAAcye,EAAqCnf,GACpDsH,KAAKqZ,WAAW,IAAIxD,GAAgB,CAChCzc,KAAMA,EACNuc,UAAWkC,EACXjC,QAASld,OArPrB,CAAA8H,IAAA,OAAAtH,MAAA,SAyPSE,EAAc+S,GAAiB,IAAAF,EAAAjM,KAChC,OAAO,IAAI0L,QAAQ,SAACQ,EAASP,GACzB,OAAOM,EAAKoN,WAAW,IAAIxD,GAAgB,CACvCzc,KAAMA,EACN+S,QAASA,EACTwJ,UAAW,SAACK,GACR9J,EAAQ8J,IAEZJ,QAAS,SAACld,GACNiT,EAAOjT,WAlQ3B,CAAA8H,IAAA,QAAAtH,MAAA,WAyQQ,MAAO,CACHogB,KAAMtZ,KAAK4W,UACX2C,SAAUvZ,KAAK6W,iBA3Q3B,CAAArW,IAAA,SAAAtH,MAAA,SA+QWkT,GACHpM,KAAKoM,OAASA,IAhRtB,CAAA5L,IAAA,QAAAtH,MAAA,WAmRY,IAAAsgB,EAAAxZ,KACJA,KAAKkX,gBAAkB,SAAC3V,GACpBiY,EAAKC,eAAelY,IAExBvB,KAAKoM,OAAOsN,iBAAiB,UAAW1Z,KAAKkX,iBAAiB,KAvRtE,CAAA1W,IAAA,OAAAtH,MAAA,WA2RY8G,KAAKkX,iBACLlX,KAAKoM,OAAOuN,oBAAoB,UAAW3Z,KAAKkX,iBAAiB,OA5R7Eb,EAAA,GCtBeuD,cA5BX,SAAAA,IAAe/hB,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA4Z,GACX5Z,KAAK0G,OAAS,KAId1G,KAAKiW,QAAU,IAAII,GAAQ,CACvBjK,OAAQA,OACRkK,KAAM7G,SAASC,SAAUF,2EAM7B,MAAO,CACH+G,UAAWvW,KAAKiW,QAAQhd,GACxB4gB,QAASC,OACTpT,OAAQ,CACJ8C,iBAAkB,kBAClBE,sBAAuB,4BACvBC,oBAAqB,eAEzBoQ,WAAYtK,SAASC,SAAUF,iBC5C9BwK,GAAb,oBAAAA,IAAAniB,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAga,GAAA,OAAAniB,OAAAsO,EAAA,EAAAtO,CAAAmiB,EAAA,EAAAxZ,IAAA,sBAAAtH,MAAA,WAEQ,IAAKkT,OAAO6N,aACR,OAAO,KAEX,IAAK7N,OAAO6N,aAAaC,aAAa,eAElC,OAAO,KAEX,IAAMxT,EAAS0F,OAAO6N,aAAaE,aAAa,eAChD,OAAe,OAAXzT,EAEO,KAEJS,KAAKiT,MAAMC,mBAAmB3T,QAd7CsT,EAAA,GCgBO,SAAS3a,GAAWD,GACvB,MAAO,CACHzH,KAAMJ,EAAW2H,YACjBE,OAAQA,cCuBDkb,eA9CX,SAAAA,EAAYza,GAA8B,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAAsa,IACtCxa,EAAAjI,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAAyiB,GAAAna,KAAAH,KAAMH,KAMDA,MAAM0a,aAP2Bza,wEActC,OAAIE,KAAKH,MAAM1G,SAAW9B,EAASyB,KAE3BwH,EAAA,qBAAKC,UAAU,oBAAf,cAMAD,EAAA,qBAAKC,UAAU,oBACVP,KAAKH,MAAM+B,iBAxBDH,aC6BhBC,mBAfR,SAAyBjK,EAAyBoI,GAErD,MAAO,CACH1G,OAFwB1B,EAApB0H,IAAOhG,SAMZ,SAA4B0T,GAC/B,MAAO,CACH0N,WAAY,WACR1N,EFcD,SAACA,EAAyDC,GAE7D,IAAM0N,GAAe,IAAIR,IAAoBS,sBAE7C,GAAID,EACA3N,EAASxN,GAAW,CAChBqb,QAAS,GACT1N,SAAU,CACNC,OAAQ,CACJ/G,IAAKsU,EAAa9T,OAAO8C,kBAE7B0D,YAAa,CACThH,IAAKsU,EAAa9T,OAAOgD,uBAE7ByD,UAAW,CACPjH,IAAKsU,EAAa9T,OAAOgD,+BAIlC,CACH,IAAMiR,GAAmB,IAAIf,IAAkBa,sBAC/C5N,EAASxN,GAAW,CAChBqb,QAAS,GACT1N,SAAU,CACNC,OAAQ,CACJ/G,IAAKyU,EAAiBjU,OAAO8C,kBAEjC0D,YAAa,CACThH,IAAKyU,EAAiBjU,OAAOgD,uBAEjCyD,UAAW,CACPjH,IAAKyU,EAAiBjU,OAAOiD,+BExCtCjI,CAAoG4Y,ICfnHM,IAAQC,IAAIC,IAAWC,KAiDvB,IAAMC,GAAiC,CACrCC,iBAAkB,GAClBxd,cAAe,GACfC,WAAY,EACZC,cAAe,EACfV,OAAQ,OACRC,cAAeZ,EAAoByH,UACnC/G,OAAQ,MACRD,YAAa,GACbme,uBAAwB,KACxB/d,KAAM,CACJhE,OAAQmD,EAAgBxD,KACxBsE,cAAe,CACbkB,MAAO,GACPjB,SAAU,GACVkB,SAAU,GACVC,MAAO,KAGX9F,MAAO,KACP4E,WAAW,EACX6B,IAAK,CACHhG,OAAQmD,EAAexD,KACvBsG,OAAQ,CACNsb,QAAS,GACT1N,SAAU,CACRC,OAAQ,CACN/G,IAAK,IAEPgH,YAAa,CACXhH,IAAK,IAEPiH,UAAW,CACTjH,IAAK,OAKbnO,OAAQ,CACNK,UAAWkE,EAAgBxD,KAC3Bd,UAAWsE,EAAgBxD,KAC3BD,gBAAiByD,EAAsBxD,KACvCE,gBArEK,CACLC,GAAI,CACFC,MAAO,GACPC,OAAQmD,EAAiBxD,KACzBJ,MAAO,CACLf,KAAM2E,EAAkBxD,OAG5BM,KAAM,CACJF,MAAO,GACPC,OAAQmD,EAAiBxD,KACzBJ,MAAO,CACLf,KAAM2E,EAAkBxD,OAG5BO,YAAa,CACXH,MAAO,GACPC,OAAQmD,EAAiBxD,KACzBJ,MAAO,CACLf,KAAM2E,EAAkBxD,SAoD9Bua,UAAW,CACT8H,SAAS,GAEX9e,QAAS,CACP5E,MAAO6E,EAAmBxD,MAE5BiC,QAAS,CACPtD,MAAO6E,EAAmBxD,OAOxBsiB,GAAQC,YAAYC,EAAmBN,GAAqBO,YAAQC,YAAgBC,OA8C3EC,eA1Cb,SAAAA,EAAY7b,GAAa,OAAAhI,OAAAkI,EAAA,EAAAlI,CAAAmI,KAAA0b,GAAA7jB,OAAAoI,EAAA,EAAApI,CAAAmI,KAAAnI,OAAAqI,EAAA,EAAArI,CAAA6jB,GAAAvb,KAAAH,KACjBH,yLAiBN,OACE8b,EAAAnY,EAAAoY,cAACC,EAAA,EAAD,CAAUT,MAAOA,IACfO,EAAAnY,EAAAoY,cAACE,GAAD,CAAMtH,IAjHY,QAkHhBmH,EAAAnY,EAAAoY,cAACG,GAAD,KACEJ,EAAAnY,EAAAoY,cAACI,EAAA,EAAD,CAAYC,SAAS,UACnBN,EAAAnY,EAAAoY,cAAA,OAAKrb,UAAU,OACbob,EAAAnY,EAAAoY,cAAA,OAAKrb,UAAU,YACbob,EAAAnY,EAAAoY,cAACM,EAAA,EAAD,CAAOrH,KAAK,iBAAiBsH,UAAW5Z,KACxCoZ,EAAAnY,EAAAoY,cAACM,EAAA,EAAD,CAAOrH,KAAK,mBAAmBsH,UAAW7M,KAE1CqM,EAAAnY,EAAAoY,cAACM,EAAA,EAAD,CAAOrH,KAAK,wBAAwBsH,UAAW,SAAAlW,GAAA,IAAsBhN,EAAtBgN,EAAG0G,MAASjG,OAAUzN,GAAtB,OAA0E0iB,EAAAnY,EAAAoY,cAACQ,GAAD,CAAkBnjB,GAAIA,OAC/I0iB,EAAAnY,EAAAoY,cAACM,EAAA,EAAD,CAAOrH,KAAK,wBAAwBsH,UAAW,SAAAnU,GAAA,IAAsB/O,EAAtB+O,EAAG2E,MAASjG,OAAUzN,GAAtB,OAA0E0iB,EAAAnY,EAAAoY,cAACS,GAAD,CAAkBpjB,GAAIA,OAC/I0iB,EAAAnY,EAAAoY,cAAC7K,EAAA,EAAD,CAAU3G,KAAK,IAAIzJ,GAAG,iBAAiB2b,OAAO,iBAhC9CC,kCCxHlBC,IAASC,OAAOd,EAAAnY,EAAAoY,cAACc,GAAD,MAASjN,SAASkN,eAAe","file":"static/js/main.c22b6279.chunk.js","sourcesContent":["import { ViewOrganizationState } from \"../components/ViewOrganization\";\nimport { types } from \"util\";\n\n/* Types from the organization service (approximately) */\n\n/*\n    Organization\n*/\n\nexport interface OrganizationUpdate {\n    name: string\n    description: string\n}\n\nexport enum UIErrorType {\n    NONE = 0,\n    INFO,\n    WARNING,\n    ERROR\n}\n\nexport interface UIError {\n    type: UIErrorType,\n    message?: string\n}\n\nexport interface NewOrganization {\n    id: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    name: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    description: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n}\n\nexport interface Owner {\n    username: string\n    realname: string\n    organization: string\n    city: string\n    state: string\n    country: string\n    avatarOption: string\n    gravatarHash: string\n    gravatarDefault: string\n}\n\nexport interface BriefOrganization {\n    id: string\n    name: string\n    owner: {\n        username: string\n        realname: string\n    }\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface Organization {\n    id: string\n    name: string\n    description: string\n    owner: Owner\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface EditedOrganization {\n    id: {\n        value: string,\n        error?: UIError\n    }\n    name: {\n        value: string,\n        error?: UIError\n    }\n    description: {\n        value: string,\n        error?: UIError\n    }\n}\n\n/*\n    Collection of organizations\n*/\n\nexport type Organizations = Array<Organization>\n\n\n/* REDUX */\n\nexport enum AuthState {\n    NONE = 0,\n    CHECKING,\n    AUTHORIZED,\n    UNAUTHORIZED,\n    ERROR\n}\n\nexport interface UserAuthorization {\n    token: string,\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface Authorization {\n    status: AuthState\n    authorization: UserAuthorization\n}\n\n// export enum Filter {\n//     All = 1,\n//     Yours\n// }\n\n\nexport enum EditOrgState {\n    NONE = 0,\n    FETCHING,\n    READY,\n    EDITING_CAN_SAVE,\n    EDITING_ERRORS,\n    SAVING,\n    SAVED,\n    ERROR\n}\n\n// export enum AddOrgState {\n//     NONE = 0,\n//     READY,\n//     UNEDITED_OK,\n//     UNEDITED_\n//     EDITED_OK,\n//     EDITED_ERRORS,\n//     SAVING,\n//     SAVED,\n//     ERROR\n// }\n\nexport enum EditState {\n    NONE = 'NONE',\n    UNEDITED = 'UNEDITED',\n    EDITED = 'EDITED'\n}\n\n// TODO: or CLEAN to replace new and saved\nexport enum SaveState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    READY = 'READY',\n    SAVING = 'SAVING',\n    SAVED = 'SAVED',\n    SAVE_ERROR = 'SAVE_ERROR'\n}\n\nexport enum ValidationState {\n    NONE = 'NONE',\n    VALID = 'VALID',\n    INVALID = 'INVALID'\n}\n\nexport enum FieldState {\n    NONE = 0,\n    UNEDITED_OK,\n    UNEDITED_ERROR,\n    EDITED_OK,\n    EDITED_ERROR,\n    EDITED_WARNING\n}\n\nexport enum ViewOrgState {\n    NONE = 0,\n    INITIAL,\n    FETCHING,\n    READY,\n    ERROR\n}\n\nexport enum AppState {\n    NONE = 0,\n    LOADING,\n    READY,\n    ERROR\n}\n\nexport enum SortDirection {\n    ASCENDING = 'asc',\n    DESCENDING = 'desc'\n}\n\n\nexport interface StoreState {\n    rawOrganizations: Array<BriefOrganization>\n    organizations: Array<BriefOrganization>\n    totalCount: number\n    filteredCount: number\n    sortBy: string\n    sortDirection: SortDirection\n    filter: string\n    searchTerms: Array<string>\n    selectedOrganizationId: string | null\n    auth: Authorization\n    error: AppError | null\n    searching: boolean\n    app: {\n        status: AppState,\n        config: AppConfig,\n        error?: AppError\n    },\n    addOrg: {\n        editState: EditState,\n        saveState: SaveState,\n        validationState: ValidationState,\n        newOrganization: NewOrganization\n        error?: AppError\n    }\n    updateOrg: {\n        pending: boolean\n    }\n    viewOrg: {\n        state: ViewOrgState\n        organization?: Organization\n        error?: AppError\n    }\n    editOrg: {\n        state: EditOrgState\n        error?: AppError\n        editedOrganization?: EditedOrganization\n    }\n}\n\n/* COMPONENT PROPS */\nexport interface OrganizationsProps {\n    organizations: Array<BriefOrganization>\n}\n\nexport interface OrganizationsState {\n    searchTerms: Array<string>\n}\n\nexport interface OrganizationsBrowserProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void;\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void;\n    onFilterOrgs: (filter: string) => void;\n    totalCount: number;\n    filteredCount: number;\n    sortBy: string;\n    sortDirection: SortDirection;\n    filter: string;\n    searching: boolean;\n}\n\nexport interface OrganizationsBrowserState {\n    searchInput: string\n}\n\n// ADD ORG\n\nexport interface NewOrganizationProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    newOrganization: NewOrganization,\n    onAddOrgEdit: () => void,\n    onAddOrg: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport interface ViewOrganizationProps {\n    state: ViewOrgState\n    id: string,\n    organization?: Organization\n    error?: AppError\n    username: string,\n    onViewOrg: (id: string) => void\n}\n\nexport interface EditOrganizationProps {\n    id: string,\n    state: EditOrgState\n    organization?: Organization\n    editedOrganization?: EditedOrganization\n    error?: AppError\n    onEditOrg: (id: string) => void\n    onUpdateOrg: () => void\n    onUpdateName: (name: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface AppError {\n    code: string,\n    message: string\n}\n\nexport interface AppConfig {\n    baseUrl: string,\n    services: {\n        Groups: {\n            url: string\n        },\n        UserProfile: {\n            url: string\n        },\n        Workspace: {\n            url: string\n        }\n    }\n}\n\nexport interface AuthProps {\n    authStatus: AuthState,\n    token: string | null,\n    username: string | null,\n    realname: string | null,\n    env: string,\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nexport interface KBaseIntegrationProps {\n    status: AppState,\n    onAppStart: () => void\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport * as types from '../../types';\nimport { Model } from '../../data/model'\n\nexport enum ActionFlag {\n    APP = 1,\n    APP_START,\n    APP_SUCCESS,\n    // APP_SUCCESS_IFRAME,\n    // APP_SUCCESS_SOLO,\n    APP_ERROR,\n\n    SORT_ORGS,\n    SORT_ORGS_START,\n\n    FILTER_ORGS,\n    FILTER_ORGS_START,\n\n    SEARCH_ORGS,\n    SEARCH_ORGS_START,\n    SEARCH_ORGS_SUCCESS,\n    SEARCH_ORGS_ERROR,\n\n    UPDATE_ORG,\n    UPDATE_ORG_START,\n    UPDATE_ORG_SUCCESS,\n    UPDATE_ORG_ERROR,\n\n    // viewing org\n    VIEW_ORG_FETCH,\n    VIEW_ORG_FETCH_START,\n    VIEW_ORG_FETCH_SUCCESS,\n    VIEW_ORG_FETCH_ERROR,\n    VIEW_ORG_STOP,\n    // editing org\n    EDIT_ORG,\n    EDIT_ORG_START,\n    EDIT_ORG_SUCCESS,\n    EDIT_ORG_ERROR,\n    EDIT_ORG_SAVE,\n    EDIT_ORG_SAVE_START,\n    EDIT_ORG_SAVE_SUCCESS,\n    EDIT_ORG_SAVE_ERROR,\n    // edit org, field level updates\n    EDIT_ORG_UPDATE_NAME,\n    EDIT_ORG_UPDATE_NAME_SUCCESS,\n    EDIT_ORG_UPDATE_NAME_ERROR,\n    EDIT_ORG_UPDATE_DESCRIPTION,\n    EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    // add org fields\n    ADD_ORG_EDIT,\n    ADD_ORG_EDIT_START,\n    ADD_ORG_EDIT_FINISH,\n\n    ADD_ORG_UPDATE_NAME,\n    ADD_ORG_UPDATE_NAME_SUCCESS,\n    ADD_ORG_UPDATE_NAME_ERROR,\n    ADD_ORG_UPDATE_ID,\n    ADD_ORG_UPDATE_ID_SUCCESS,\n    ADD_ORG_UPDATE_ID_ERROR,\n    ADD_ORG_UPDATE_DESCRIPTION,\n    ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    ADD_ORG_EVALUATE,\n    ADD_ORG_EVALUATE_OK,\n    ADD_ORG_EVALUATE_ERRORS,\n\n    ADD_ORG,\n    ADD_ORG_START,\n    ADD_ORG_SUCCESS,\n    ADD_ORG_ERROR,\n\n    // Auth\n    AUTH_CHECK,\n    AUTH_CHECK_START,\n    AUTH_CHECK_ERROR,\n    AUTH_AUTHORIZED,\n    AUTH_UNAUTHORIZED,\n    AUTH_REMOVE_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION\n}\n\n\n// // Update an org\n\n// // export interface UpdateOrg  extends Action {\n// //     type: ActionFlag.UPDATE_ORG,\n// //     orgUpdate: types.OrganizationUpdate\n// // }\n\n// // export function updateOrg(orgUpdate: types.OrganizationUpdate) : UpdateOrg {\n// //     return {\n// //         type: ActionFlag.UPDATE_ORG,\n// //         orgUpdate: orgUpdate\n// //     }\n// // }\n\n\n// export interface UpdateOrgStart extends Action {\n//     type: ActionFlag.UPDATE_ORG_START\n// }\n\n// export function updateOrgStart(): UpdateOrgStart {\n//     return {\n//         type: ActionFlag.UPDATE_ORG_START\n//     }\n// }\n\n// export interface UpdateOrgSuccess extends Action {\n//     type: ActionFlag.UPDATE_ORG_SUCCESS,\n//     organization: types.Organization\n// }\n\n// export function updateOrgSuccess(org: types.Organization): UpdateOrgSuccess {\n//     return {\n//         type: ActionFlag.UPDATE_ORG_SUCCESS,\n//         organization: org\n//     }\n// }\n\n// export interface UpdateOrgError extends Action {\n//     type: ActionFlag.UPDATE_ORG_ERROR,\n//     error: types.AppError\n// }\n// export function updateOrgError(error: types.AppError): UpdateOrgError {\n//     return {\n//         type: ActionFlag.UPDATE_ORG_ERROR,\n//         error: error\n//     }\n// }\n\n\n// // export interface UpdateOrg extends Action {\n// //     type: ActionFlag.UPDATE_ORG,\n// //     orgUpdate: types.OrganizationUpdate\n// // }\n\n// // export function updateOrg(orgUpdate: types.OrganizationUpdate) {\n// //     return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState : () => types.StoreState)  => {\n// //         dispatch(updateOrgStart())\n\n// //         const {auth: {token}} = getState()\n// //         const model = new Model({token})\n\n// //         return model.updateOrg(orgUpdate)\n// //             .then((org: types.Organization) => {\n// //                 // TODO: also total.\n// //                 dispatch(updateOrgSuccess(org))\n// //             })\n// //             .catch((error) => {\n// //                 dispatch(updateOrgError({\n// //                     code: error.name,\n// //                     message: error.message\n// //                 }))\n// //             })\n// //     }\n// // }\n\n\n\n// // org name update\n\n// export interface UpdateName extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n//     name: string\n// }\n\n// export interface UpdateNameSuccess extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n//     name: string\n// }\n\n// export function updateNameSuccess(name: string): UpdateNameSuccess {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n//         name: name\n//     }\n// }\n\n// // export class UpdateNameSuccess {\n// //     static type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS = ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS\n// //     static createAction(name: string) {\n// //         return {\n// //             type: this.type,\n// //             name: name\n// //         }\n// //     }\n// //     static reducer(state: types.StoreState,\n// //                    action: actions.UpdateNameSuccess): types.StoreState {\n// //             // just brute force it ... destructuring would be brutal.\n// //             const newState = {...state}\n// //             newState.editOrg.editedOrganization = {...state.editOrg.editedOrganization!, name: action.name}\n// //             console.log('here2!', action.name, newState)\n// //             return newState\n// //         }\n// //     }\n\n// // }\n\n// export interface UpdateNameError extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n//     error: types.AppError\n// }\n\n// export function updateNameError(error: types.AppError): UpdateNameError {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n//         error: error\n//     }\n// }\n\n// export function updateName(name: string) {\n//     return (dispatch: ThunkDispatch<types.StoreState, void, Action>,\n//         getState: () => types.StoreState) => {\n//         // validate the name\n\n//         let errorMessage;\n\n//         if (name.length === 0) {\n//             errorMessage = 'The organization name may not be empty'\n//         }\n\n//         if (errorMessage) {\n//             dispatch(updateNameError({\n//                 code: 'invalid',\n//                 message: errorMessage\n//             }))\n//         } else {\n//             dispatch(updateNameSuccess(name))\n//         }\n//     }\n// }\n\n","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    AddOrgEditStart, AddOrgEditFinish,\n    AddOrgUpdateNameSuccess, AddOrgUpdateNameError,\n    AddOrgUpdateIdSuccess, AddOrgUpdateIdError,\n    AddOrgUpdateDescriptionSuccess, AddOrgUpdateDescriptionError,\n    AddOrgError, AddOrgStart, AddOrgSuccess, AddOrgEvaluateOK, AddOrgEvaluateErrors\n} from '../actions/addOrg'\n\n// ADD ORG\n\nexport function addOrgStart(state: StoreState, action: AddOrgStart): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function addOrgSuccess(state: StoreState, action: AddOrgSuccess): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function addOrgError(state: StoreState, action: AddOrgError): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function addOrgEvaluateOk(state: StoreState, action: AddOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function addOrgEvaluateErrors(state: StoreState, action: AddOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\nexport function addOrgEditStart(state: StoreState, action: AddOrgEditStart) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            newOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEditFinish(state: StoreState, action: AddOrgEditFinish) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// Name\nexport function addOrgUpdateNameSuccess(state: StoreState, action: AddOrgUpdateNameSuccess) {\n    // console.log('hmm', EditState.EDITED)\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateNameError(state: StoreState, action: AddOrgUpdateNameError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\nexport function addOrgUpdateIdSuccess(state: StoreState, action: AddOrgUpdateIdSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateIdError(state: StoreState, action: AddOrgUpdateIdError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(state: StoreState, action: AddOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionError(state: StoreState, action: AddOrgUpdateDescriptionError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.ADD_ORG_START:\n            return addOrgStart(state, action as AddOrgStart)\n        case ActionFlag.ADD_ORG_SUCCESS:\n            return addOrgSuccess(state, action as AddOrgSuccess)\n        case ActionFlag.ADD_ORG_ERROR:\n            return addOrgError(state, action as AddOrgError)\n        case ActionFlag.ADD_ORG_EDIT_START:\n            return addOrgEditStart(state, action as AddOrgEditStart)\n        case ActionFlag.ADD_ORG_EDIT_FINISH:\n            return addOrgEditFinish(state, action as AddOrgEditFinish)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS:\n            return addOrgUpdateNameSuccess(state, action as AddOrgUpdateNameSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_ERROR:\n            return addOrgUpdateNameError(state, action as AddOrgUpdateNameError)\n        case ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS:\n            return addOrgUpdateIdSuccess(state, action as AddOrgUpdateIdSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_ID_ERROR:\n            return addOrgUpdateIdError(state, action as AddOrgUpdateIdError)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return addOrgUpdateDescriptionSuccess(state, action as AddOrgUpdateDescriptionSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR:\n            return addOrgUpdateDescriptionError(state, action as AddOrgUpdateDescriptionError)\n        case ActionFlag.ADD_ORG_EVALUATE_OK:\n            return addOrgEvaluateOk(state, action as AddOrgEvaluateOK)\n        case ActionFlag.ADD_ORG_EVALUATE_ERRORS:\n            return addOrgEvaluateErrors(state, action as AddOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action, bindActionCreators } from 'redux'\nimport {\n    EditOrgStart, EditOrgSuccess, EditOrgError,\n    EditOrgUpdateNameSuccess, EditOrgUpdateNameError, EditOrgUpdateDescriptionSuccess, EditOrgUpdateDescriptionError, EditOrgSaveStart, EditOrgSaveSuccess, EditOrgSaveError\n} from '../actions/editOrg'\nimport { StoreState, EditOrgState } from '../../types'\nimport { ActionFlag } from '../actions'\n\nfunction editOrgStart(state: StoreState, action: EditOrgStart): StoreState {\n    return { ...state, editOrg: { state: EditOrgState.FETCHING } }\n}\n\nfunction editOrgSuccess(state: StoreState, action: EditOrgSuccess): StoreState {\n    return { ...state, editOrg: { state: EditOrgState.READY, editedOrganization: action.organization } }\n}\n\nfunction editOrgError(state: StoreState, action: EditOrgError): StoreState {\n    return { ...state, editOrg: { state: EditOrgState.ERROR, error: action.error } }\n}\n\n// saving\n\nfunction editOrgSaveStart(state: StoreState, action: EditOrgSaveStart): StoreState {\n    return {...state, editOrg: {...state.editOrg, state: EditOrgState.SAVING}}\n}\n\nfunction editOrgSaveSuccess(state: StoreState, action: EditOrgSaveSuccess): StoreState {\n    return {...state, editOrg: {...state.editOrg, state: EditOrgState.SAVED}}\n}\n\nfunction editOrgSaveError(state: StoreState, action: EditOrgSaveError): StoreState {\n    return {...state, editOrg: {...state.editOrg,\n                                state: EditOrgState.ERROR,\n                                error: action.error}}\n}\n\n// export function updateOrgStart(state: StoreState, action: actions.UpdateOrgStart): types.StoreState {\n//     return { ...state, updateOrg: { pending: true } }\n// }\n\n// export function updateOrgSuccess(state: types.StoreState, action: actions.UpdateOrgStart): types.StoreState {\n//     return { ...state, updateOrg: { pending: false, editedOrganization: action. } }\n// }\n\n// export function updateOrgError(state: types.StoreState, action: actions.UpdateOrgError): types.StoreState {\n//     return { ...state, error: action.error }\n// }\n\nfunction updateNameSuccess(state: StoreState, action: EditOrgUpdateNameSuccess): StoreState {\n    // just brute force it ... destructuring would be brutal.\n    console.log('success!', action.name)\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization!,\n                name: {\n                    value: action.name\n                }\n            }\n        }\n    }\n}\n\nfunction updateNameError(state: StoreState, action: EditOrgUpdateNameError): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization!,\n                name: {\n                    value: action.name,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nfunction updateDescriptionSuccess(state: StoreState, action: EditOrgUpdateDescriptionSuccess): StoreState {\n    // just brute force it ... destructuring would be brutal.\n    console.log('success!', action.description)\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization!,\n                description: {\n                    value: action.description\n                }\n            }\n        }\n    }\n}\n\nfunction updateDescriptionError(state: StoreState, action: EditOrgUpdateDescriptionError): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization!,\n                description: {\n                    value: action.description,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.EDIT_ORG_START:\n            return editOrgStart(state, action as EditOrgStart)\n        case ActionFlag.EDIT_ORG_SUCCESS:\n            return editOrgSuccess(state, action as EditOrgSuccess)\n        case ActionFlag.EDIT_ORG_ERROR:\n            return editOrgError(state, action as EditOrgError)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS:\n            return updateNameSuccess(state, action as EditOrgUpdateNameSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR:\n            return updateNameError(state, action as EditOrgUpdateNameError)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return updateDescriptionSuccess(state, action as EditOrgUpdateDescriptionSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR:\n            return updateDescriptionError(state, action as EditOrgUpdateDescriptionError)\n        default:\n            return null\n    }\n}\n\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/viewOrg'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\n\nexport function viewOrgStart(state: types.StoreState,\n    action: actions.ViewOrgStart): types.StoreState {\n    return {\n        ...state,\n        viewOrg: { ...state.viewOrg, state: types.ViewOrgState.FETCHING }\n    }\n}\n\nexport function viewOrgSuccess(state: types.StoreState,\n    action: actions.ViewOrgSuccess): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.READY,\n            organization: action.organization\n        }\n    }\n}\n\nexport function viewOrgError(state: types.StoreState,\n    action: actions.ViewOrgError): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function viewOrgStop(state: types.StoreState, action: actions.ViewOrgStop): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            state: types.ViewOrgState.NONE\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_FETCH_START:\n            return viewOrgStart(state, action as actions.ViewOrgStart)\n        case ActionFlag.VIEW_ORG_FETCH_SUCCESS:\n            return viewOrgSuccess(state, action as actions.ViewOrgSuccess)\n        case ActionFlag.VIEW_ORG_FETCH_ERROR:\n            return viewOrgError(state, action as actions.ViewOrgError)\n        case ActionFlag.VIEW_ORG_STOP:\n            return viewOrgStop(state, action as actions.ViewOrgStop)\n        default:\n            return null\n    }\n}\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/searchOrgs'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\nexport function applyOrgSearch(orgs: Organizations, searchTerms: Array<string>) {\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTerms.every((term) => {\n            // todo : make more efficient!!!\n            return (new RegExp(term, 'i').test(org.name));\n        })\n    })\n\n    return {\n        organizations: filteredOrgs,\n        totalCount: orgs.length,\n        filteredCount: filteredOrgs.length\n    }\n}\n\n// TODO:\n// dispatch the start of the request\n// do the request\n// dispatch the success (will be same for all queries?)\n// dispatch the error\n// FOR NOW:\n// do it here...\nexport function searchOrgsStart(state: types.StoreState, action: actions.SearchOrgsStart): types.StoreState {\n\n    const query: Query = {\n        searchTerms: action.searchTerms,\n        filter: state.filter,\n        sortBy: state.sortBy,\n        sortDirection: state.sortDirection,\n        username: state.auth.authorization.username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        // organizations: result.organizations, \n        // totalCount: result.total, \n        // filteredCount: result.organizations.length,\n        searching: true,\n        searchTerms: action.searchTerms\n    }\n}\n\nexport function searchOrgsSuccess(state: types.StoreState, action: actions.SearchOrgsSuccess): types.StoreState {\n    return {\n        ...state,\n        searching: false,\n        organizations: action.organizations,\n        totalCount: action.totalCount,\n        filteredCount: action.organizations.length\n    }\n}\n\nexport function searchOrgsError(state: types.StoreState, action: actions.SearchOrgsError): types.StoreState {\n    return { ...state, error: action.error }\n}\n\n\nexport function sortOrgsStart(state: types.StoreState, action: actions.SortOrgsStart): types.StoreState {\n    const query: Query = {\n        searchTerms: state.searchTerms,\n        filter: state.filter,\n        sortBy: action.sortBy,\n        sortDirection: action.sortDirection,\n        username: state.auth.authorization.username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        // organizations: result.organizations, \n        // totalCount: result.total, \n        // filteredCount: result.organizations.length,\n        searching: true,\n        sortBy: action.sortBy,\n        sortDirection: action.sortDirection\n    }\n}\n\n\ninterface Query {\n    searchTerms: Array<string>,\n    username: string,\n    sortBy: string,\n    sortDirection: types.SortDirection,\n    filter: string\n}\n\ninterface QueryResults {\n    organizations: Organizations,\n    total: number\n}\n\nexport function filterOrgsStart(state: types.StoreState,\n    action: actions.FilterOrgsStart): types.StoreState {\n    const { filter } = action\n\n    return {\n        ...state,\n        searching: true,\n        filter\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.SEARCH_ORGS_START:\n            return searchOrgsStart(state, action as actions.SearchOrgsStart)\n        case ActionFlag.SEARCH_ORGS_SUCCESS:\n            return searchOrgsSuccess(state, action as actions.SearchOrgsSuccess)\n        case ActionFlag.SEARCH_ORGS_ERROR:\n            return searchOrgsError(state, action as actions.SearchOrgsError)\n        // case ActionFlag.SORT_ORGS_STAR:\n        //     return sortOrgs(state, action as actions.SortOrgs)\n        case ActionFlag.SORT_ORGS_START:\n            return sortOrgsStart(state, action as actions.SortOrgsStart)\n        case ActionFlag.FILTER_ORGS_START:\n            return filterOrgsStart(state, action as actions.FilterOrgsStart)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\n\nimport { ActionFlag } from '../actions'\nimport { StoreState, AuthState } from '../../types'\nimport { AuthCheckStart, AuthAuthorized, AuthUnauthorized, AuthCheckError } from '../actions/auth';\n\nexport function authCheckStart(state: StoreState, action: AuthCheckStart): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.CHECKING,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authCheckError(state: StoreState, action: AuthCheckError): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.ERROR,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authAuthorized(state: StoreState, action: AuthAuthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.AUTHORIZED,\n            authorization: {\n                token: action.token,\n                username: action.username,\n                realname: action.realname,\n                roles: action.roles\n            }\n        }\n    }\n}\n\nexport function authUnauthorized(state: StoreState, action: AuthUnauthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.UNAUTHORIZED,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.AUTH_CHECK_START:\n            return authCheckStart(state, action as AuthCheckStart)\n        case ActionFlag.AUTH_AUTHORIZED:\n            return authAuthorized(state, action as AuthAuthorized)\n        case ActionFlag.AUTH_UNAUTHORIZED:\n            return authUnauthorized(state, action as AuthUnauthorized)\n        case ActionFlag.AUTH_CHECK_ERROR:\n            return authCheckError(state, action as AuthCheckError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { ActionFlag } from '../actions'\nimport { AppSuccess } from '../actions/app';\nimport { StoreState, AppState } from '../../types';\n\nexport function appSuccess(state: StoreState, action: AppSuccess): StoreState {\n    return {\n        ...state,\n        app: {\n            status: AppState.READY,\n            config: action.config\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.APP_SUCCESS:\n            return appSuccess(state, action as AppSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\nimport addOrgReducer from './addOrg'\nimport editOrgReducer from './editOrg'\nimport viewOrgReducer from './viewOrg'\nimport searchOrgsReducer from './searchOrgs'\nimport authReducer from './auth'\nimport appReducer from './app'\n\n\nexport function reducer(state: types.StoreState, action: Action): types.StoreState {\n    return addOrgReducer(state, action) ||\n        editOrgReducer(state, action) ||\n        searchOrgsReducer(state, action) ||\n        viewOrgReducer(state, action) ||\n        authReducer(state, action) ||\n        appReducer(state, action) ||\n        state;\n}\n\nexport default reducer","import * as React from 'react';\nimport './Organizations.css';\nimport * as types from '../types';\nimport { NavLink } from 'react-router-dom';\nimport { Alert } from 'antd';\n\n// TODO: need more ergonomic way to resolve the common issue of data types interfering with \n// component types.\n// import * as types from '../types';\n\n\n\nclass Organizations extends React.Component<types.OrganizationsProps, types.OrganizationsState> {\n\n    constructor(props: types.OrganizationsProps) {\n        super(props)\n\n        this.state = {\n            searchTerms: []\n        }\n    }\n\n    // <table className=\"Organizations-info-table\">\n    //                     <tbody>\n    //                         {/* <tr>\n    //                             <th>established</th>\n    //                             <td>{Intl.DateTimeFormat('en-US').format(org.createdAt)}</td>\n    //                         </tr> */}\n    //                         <tr>\n    //                             <th>owner</th>\n    //                             <td><a href=\"#people/{org.owner.username}\" target=\"_blank\">{org.owner.realname} ❨{org.owner.username}❩</a></td>\n    //                         </tr>\n    //                         {/* <tr>\n    //                             <th>last updated</th>\n    //                             <td>{Intl.DateTimeFormat('en-US').format(org.modifiedAt)}</td>\n    //                         </tr> */}\n    //                     </tbody>\n    //                 </table>\n\n    renderOrg(org: types.BriefOrganization, index: Number) {\n        return (\n            <div className=\"row\" key={String(index)}>\n                <div className=\"col1\">\n                    <div className=\"orgName\">\n                        <NavLink to={`/viewOrganization/${org.id}`}>{org.name}</NavLink>\n                    </div>\n                    <div className=\"orgOwner\">\n                        <span className=\"field-label\">owner</span>\n                        <a href=\"#people/{org.owner.username}\" target=\"_blank\">{org.owner.realname} ❨{org.owner.username}❩</a>\n                    </div>\n                </div>\n                <div className=\"col2\">\n\n                </div>\n            </div>\n        )\n    }\n\n    renderOrgs() {\n        if (this.props.organizations.length > 0) {\n            return (\n                this.props.organizations.map((org: types.BriefOrganization, index) => {\n                    return (\n                        this.renderOrg(org, index)\n                    )\n                })\n            )\n        } else {\n            return (\n                <Alert type=\"warning\"\n                    style={{ maxWidth: '20em', margin: '20px auto 0 auto' }}\n                    message=\"Sorry, no organizations were found.\" />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Organizations\">\n                {this.renderOrgs()}\n            </div>\n        )\n    }\n}\n\nexport default Organizations;","import Organizations from '../components/Organizations';\nimport {StoreState, OrganizationsProps} from '../types';\nimport {connect} from 'react-redux';\n\nexport function mapStateToProps(state: StoreState): OrganizationsProps {\n    const {organizations} = state;\n    return {\n        organizations\n    }\n}\n\nexport default connect(mapStateToProps)(Organizations);","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './Header.css';\nimport { FaUsers, FaChevronRight } from 'react-icons/fa'\n\nexport interface HeaderProps {\n    title: string;\n}\n\nclass Header extends React.Component<HeaderProps, object> {\n\n    buildSeparator() {\n        if (this.props.children) {\n            return (\n                <FaChevronRight style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n            )\n        }\n    }\n\n    render() {\n        const { title } = this.props;\n\n        return (\n            <div className=\"Header\">\n                <div style={{ flex: '0 0 auto' }}>\n                    <NavLink to=\"/organizations\">\n                        <FaUsers style={{ verticalAlign: 'middle' }} />\n                        {' '}\n                        Orgs\n                    </NavLink>\n                </div>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {this.buildSeparator()}\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Organizations from '../containers/Organizations';\nimport * as types from '../types';\n\nimport './OrganizationsBrowser.css';\nimport { FaSearch, FaSpinner } from 'react-icons/fa'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Icon, Radio, Tooltip, Select } from 'antd'\nimport Header from './Header';\nimport RadioGroup from 'antd/lib/radio/group';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\n\nclass OrganizationsBrowser extends React.Component<types.OrganizationsBrowserProps, types.OrganizationsBrowserState> {\n\n    searchInput: React.RefObject<HTMLInputElement>;\n    searchButton: React.RefObject<Button>;\n\n    constructor(props: types.OrganizationsBrowserProps) {\n        super(props)\n\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.state = {\n            searchInput: ''\n        }\n\n        this.props.onSearchOrgs([])\n    }\n\n    doSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        const searchTerms = this.searchInput.current.value.split(/[\\s+]/)\n        // dispatch the search event\n        this.props.onSearchOrgs(searchTerms);\n    }\n\n    haveSearchInput() {\n        if (this.state.searchInput && this.state.searchInput.length > 0) {\n            return true\n        }\n        return false\n    }\n\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.setState({ searchInput: currentSearchInputValue })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.doSearch()\n    }\n\n    onSortByChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(e.target.value, this.props.sortDirection)\n    }\n\n    onSortByChange2(value: string) {\n        this.props.onSortOrgs(value, this.props.sortDirection)\n    }\n\n\n    onSortDirectionChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(this.props.sortBy, e.target.value)\n    }\n\n    onSortDirectionChange2(value: string) {\n        this.props.onSortOrgs(this.props.sortBy, value as types.SortDirection)\n    }\n\n    onFilterChange(e: RadioChangeEvent) {\n        this.props.onFilterOrgs(e.target.value)\n    }\n\n    onFilterChange2(value: string) {\n        this.props.onFilterOrgs(value)\n    }\n\n    onClearSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        this.searchInput.current.value = ''\n        this.onSearchInputChange()\n        // this.searchButton.current!.handleClick(new MouseEvent<HTMLButtonElement>('click'))\n        // const event = new Event('change', { bubbles: true })\n        // this.searchInput.current.dispatchEvent(event)\n        this.doSearch()\n    }\n\n    renderControlArea() {\n        return (\n            <div className=\"OrganizationsBrowser-controlArea\">\n                {/* {this.renderSortArea()} */}\n                {this.renderSortArea()}\n                {this.renderFilterArea()}\n            </div>\n        )\n    }\n\n    renderSortArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    sort\n                </div>\n                <RadioGroup onChange={this.onSortByChange.bind(this)} value={this.props.sortBy}>\n                    <Radio className=\"radio\" value=\"name\">Org name</Radio>\n                    <Radio className=\"radio\" value=\"owner\">Owner</Radio>\n                </RadioGroup>\n\n                <div style={{ marginTop: '10px' }}>\n                    <RadioGroup onChange={this.onSortDirectionChange.bind(this)} value={this.props.sortDirection}>\n                        <Radio className=\"radio\" value={types.SortDirection.ASCENDING}><Icon type=\"sort-ascending\" /> Ascending</Radio>\n                        <Radio className=\"radio\" value={types.SortDirection.DESCENDING}><Icon type=\"sort-descending\" /> Descending</Radio>\n                    </RadioGroup>\n                </div>\n            </div>\n        )\n    }\n\n    renderFilterArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    filter\n                </div>\n                <RadioGroup onChange={this.onFilterChange.bind(this)} value={this.props.filter}>\n                    <Radio className=\"radio\" value=\"all\">All</Radio>\n                    <Radio className=\"radio\" value=\"owned\">Owned by you</Radio>\n                    <Radio className=\"radio\" value=\"notOwned\">Owned by others</Radio>\n                </RadioGroup>\n            </div>\n        )\n    }\n\n    renderSearchFeedback() {\n        if (this.props.totalCount === 0) {\n            return (\n                <span>\n                    No organizations in the system\n                </span>\n            )\n        }\n        if (this.props.filteredCount === 0) {\n            return (\n                <span>\n                    No organizations found out of\n                    {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    available.\n                </span>\n            )\n\n        }\n        if (this.props.totalCount === this.props.filteredCount) {\n            return (\n                <span>\n                    Showing all\n                {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    organizations\n                </span>\n            )\n        }\n\n        return (\n            <span>\n                Showing\n                {' '}\n                {this.props.filteredCount}\n                {' '}\n                out of\n                {' '}\n                {this.props.totalCount}\n                {' '}\n                organizations\n            </span>\n        )\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchBar() {\n        return (\n            <form id=\"searchForm\" className=\"OrganizationsBrowser-searchBar\" onSubmit={this.onSubmit.bind(this)}>\n                <input\n                    placeholder=\"Search Organizations\"\n                    onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                    ref={this.searchInput}></input>\n                {/* <Tooltip\n                    title=\"Enter one or more words to search organizations by name or owner\">\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{ alignSelf: 'end' }} />\n                </Tooltip> */}\n                <Button\n                    disabled={!this.haveSearchInput()}\n                    ref={this.searchButton}\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                    {/* Search */}\n                </Button>\n                <Button\n                    onClick={this.onClearSearch.bind(this)}\n                    disabled={!this.haveSearchInput()}\n                    icon=\"close\"\n                >\n\n                    {/* Show all */}\n                </Button>\n                {/* <div className=\"message\">\n                    {this.renderSearchFeedback()}\n                </div> */}\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Browse and Search Organizations\n                        </span>\n                        <Icon type=\"right\" style={{ margin: '0 4px' }} />\n                        <span style={{ fontWeight: 'normal', fontStyle: 'italic' }}>\n                            {this.renderSearchFeedback()}\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <NavLink to=\"/newOrganization\"><Button icon=\"plus-circle\">Create Organization</Button></NavLink>\n                    </div>\n\n                </div>\n            </Header>\n        )\n    }\n\n    renderSearchFilter() {\n        return (\n            <div>\n                <span className=\"field-label\">sort by</span>\n                <Select onChange={this.onSortByChange2.bind(this)}\n                    defaultValue={this.props.sortBy}\n                    style={{ width: '8em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"name\" key=\"name\">Org name</Select.Option>\n                    <Select.Option value=\"owner\" key=\"owner\">Owner</Select.Option>\n                </Select>\n                <Select onChange={this.onSortDirectionChange2.bind(this)}\n                    style={{ width: '10em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortDirection}>\n                    <Select.Option value={types.SortDirection.ASCENDING} key=\"name\"><Icon type=\"sort-ascending\" />Ascending</Select.Option>\n                    <Select.Option value={types.SortDirection.DESCENDING} key=\"owner\"><Icon type=\"sort-descending\" />Descending</Select.Option>\n                </Select>\n                <span className=\"field-label\" style={{ marginLeft: '10px' }}>filter</span>\n                <Select onChange={this.onFilterChange2.bind(this)}\n                    defaultValue={this.props.filter}\n                    style={{ width: '12em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"all\" key=\"all\">All</Select.Option>\n                    <Select.Option value=\"owned\" key=\"owned\">Owned by you</Select.Option>\n                    <Select.Option value=\"notOwned\" key=\"nowtOwned\">Not owned by you</Select.Option>\n                </Select>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationsBrowser\">\n                {this.renderHeader()}\n                <div className=\"searchBarRow\">\n                    <div className=\"searchBarCol\">\n                        {this.renderSearchBar()}\n                    </div>\n                    <div className=\"sortCol\">\n                        {this.renderSearchFilter()}\n                    </div>\n                </div>\n                <div className=\"bodyRow\">\n\n                    <div className=\"col2\">\n                        <Organizations />\n                    </div>\n                    {/* <div className=\"col1\">\n                        {this.renderControlArea()}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OrganizationsBrowser","\nexport interface User {\n    username: string,\n    realname: string,\n    thumbnail: string\n}\n\nexport interface UserProfile {\n    user: User,\n    profile: {\n        synced: {\n            gravatarHash: string\n        },\n        userdata: {\n            organization: string\n            city: string\n            state: string\n            country: string\n            avatarOption: string\n            gravatarDefault: string\n        }\n    }\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class UserProfileClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('version'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((info) => {\n                console.log('info', info)\n            })\n    }\n\n    getUserProfile(username: string): Promise<UserProfile> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0][0] as UserProfile\n            })\n    }\n\n    getUserProfiles(usernames: Array<string>): Promise<Array<UserProfile>> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', usernames))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0] as Array<UserProfile>\n            })\n    }\n}","import { string } from \"prop-types\";\n\nexport interface GroupsServiceInfo {\n    servname: string;\n    version: string;\n    servertime: number;\n    gitcommithash: string\n}\n\nexport interface BriefGroup {\n    id: string;\n    name: string;\n    owner: string;\n    type: string;\n    // createdAt: number;\n    // modifiedAt: number\n}\n\nexport type GroupList = Array<BriefGroup>\n\nexport type Username = string;\n\nexport interface WorkspaceInfo {\n    wsid: number\n    name: string\n    narrname: string\n    public: boolean\n    admin: boolean\n}\n\nexport interface Group {\n    id: string\n    name: string\n    owner: Username\n    type: string\n    admins: Array<Username>\n    members: Array<Username>\n    description: string\n    createdate: number\n    moddate: number\n    workspaces: Array<WorkspaceInfo>\n}\n\nexport interface NewGroup {\n    id: string\n    name: string\n    type: string\n    description: string\n}\n\nexport interface Request {\n    id: string\n    groupid: string\n    requester: Username\n    type: string\n    status: string\n    targetuser: Username\n    targetws: number\n    createddate: number\n    expireddate: number\n    moddate: number\n}\n\nexport interface ErrorInfo {\n    appcode: number\n    apperror: string\n    callid: string\n    httpcode: number\n    httpstatus: string\n    message: string\n    time: number\n}\n\nexport interface ErrorResult {\n    error: ErrorInfo\n}\n\n// Error types: (appcode)\n// 10000\tAuthentication failed\n// 10010\tNo authentication token\n// 10020\tInvalid token\n// 20000\tUnauthorized\n// 30000\tMissing input parameter\n// 30001\tIllegal input parameter\n// 30010\tIllegal user name\n// 40000\tGroup already exists\n// 40010\tRequest already exists\n// 40020\tUser already group member\n// 40030\tWorkspace already in group\n// 50000\tNo such group\n// 50010\tNo such request\n// 50020\tNo such user\n// 50030\tNo such workspace\n// 60000\tUnsupported operation\n\nexport class GroupsClient {\n    token: string;\n    url: string;\n\n    constructor({ token, url }: { token: string, url: string }) {\n        this.token = token\n        this.url = url\n    }\n\n    getInfo(): Promise<GroupsServiceInfo> {\n        return fetch(this.url + '/', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((result) => {\n                return result as GroupsServiceInfo;\n            });\n    }\n\n    getGroups(): Promise<GroupList> {\n        return fetch(this.url + '/group', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result: GroupList) => {\n                return result.filter(({ type }) => type === 'Organization')\n            })\n    }\n\n    getGroupById(id: string): Promise<Group> {\n        return fetch(this.url + '/group/' + id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    return null\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    createGroup(newGroup: NewGroup): Promise<Group> {\n        return fetch(this.url + '/group/' + newGroup.id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n            body: JSON.stringify({\n                name: newGroup.name,\n                type: newGroup.type,\n                description: newGroup.description\n            })\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n}","\n// export interface User {\n//     username: string,\n//     realname: string,\n//     thumbnail: string\n// }\n\n// export interface UserProfile {\n//     user: User,\n//     profile: any\n// }\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class WorkspaceClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('ver'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    // getUserProfile(username: string): Promise<UserProfile> {\n    //     return fetch(this.url, {\n    //         method: 'POST',\n    //         mode: 'cors',\n    //         cache: 'no-store',\n    //         headers: {\n    //             Authorization: this.token,\n    //             'Content-Type': 'application/json',\n    //             Accept: 'application/json'\n    //         },\n    //         body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n    //     })\n    //         .then((response) => {\n    //             if (response.status !== 200) {\n    //                 throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n    //             }\n    //             console.log('response...', response)\n    //             return response.json()\n    //         })\n    //         .then(([profile]) => {\n    //             return profile as UserProfile\n    //         })\n    // }\n}","import {\n    Organization, BriefOrganization, NewOrganization, OrganizationUpdate,\n    UIError,\n    UIErrorType,\n    SortDirection\n} from '../types';\n// import { organizations } from './data';\nimport { UserProfileClient, UserProfile } from './userProfile'\nimport { GroupsClient, Group, GroupList, BriefGroup } from './groups'\nimport { WorkspaceClient } from './workspace';\n\nexport function applyOrgSearch(orgs: Array<BriefOrganization>, searchTerms: Array<string>): Array<BriefOrganization> {\n    const searchTermsRe = searchTerms.map((term) => {\n        return new RegExp(term, 'i')\n    })\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTermsRe.every((termRe) => {\n            return termRe.test(org.name) ||\n                termRe.test(org.owner.username) ||\n                termRe.test(org.owner.realname)\n        })\n    })\n\n    return filteredOrgs\n}\n\nfunction applySort(organizations: Array<BriefOrganization>, sortBy: string, sortDirection: SortDirection): Array<BriefOrganization> {\n    const direction = sortDirection === SortDirection.ASCENDING ? 1 : -1\n    switch (sortBy) {\n        // case 'createdAt':\n        //     return  organizations.slice().sort((a, b) => {\n        //         return direction * (a.createdAt.getTime() - b.createdAt.getTime())\n        //     })\n        // case 'modifiedAt':\n        //     return organizations.slice().sort((a, b) => {\n        //         return direction * (a.modifiedAt.getTime() - b.modifiedAt.getTime())\n        //     })\n        case 'name':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.name.localeCompare(b.name)\n            })\n        case 'owner':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.owner.username.localeCompare(b.owner.username)\n            })\n        default:\n            console.warn('unimplemented sort field: ' + sortBy)\n            return organizations;\n    }\n}\n\nfunction applyFilter(organizations: Array<BriefOrganization>, filter: string, username: string): Array<BriefOrganization> {\n    switch (filter) {\n        case 'all':\n            return organizations\n            break\n        case 'owned':\n            return organizations.filter((org) => (org.owner.username === username))\n        case 'notOwned':\n            return organizations.filter((org) => (org.owner.username !== username))\n        default:\n            console.warn('unknown filter : ' + filter)\n            return organizations\n    }\n}\n\nexport interface Query {\n    searchTerms: Array<string>\n    username: string\n    sortBy: string\n    sortDirection: SortDirection\n    filter: string\n}\n\nexport interface QueryResults {\n    organizations: Array<BriefOrganization>\n    total: number\n}\n\nfunction wait(timeout: number) {\n    return new Promise((resolve) => {\n        window.setTimeout(() => {\n            resolve(true)\n        }, timeout)\n    })\n}\n\n// export function newOrg(state: StoreState, action: actions.AddOrg): StoreState {\n//     const {organizations, auth:{username}} = state;\n//     const org: Organization = {\n//         ...action.newOrg,\n//         createdAt: new Date(),\n//         modifiedAt: new Date(),\n//         owner: username\n//     }\n//     organizations.push(org)\n//     return {...state, organizations}\n// }\n\ninterface ModelParams {\n    token: string,\n    groupsServiceURL: string,\n    userProfileServiceURL: string,\n    workspaceServiceURL: string\n}\n\nexport class Model {\n    // organizations: Organizations\n    // token: string\n    // groupsServiceURL: string\n    // userProfileServiceURL: string\n    // workspaceServiceURL: string\n    params: ModelParams\n\n\n    constructor(params: ModelParams) {\n        // this.organizations = organizations;\n        this.params = params;\n    }\n\n    groupToOrg(group: Group, profile: UserProfile): Organization {\n        const { id, name, owner, description, createdate, moddate } = group\n        return {\n            id: id,\n            name: name,\n            description: description,\n            owner: {\n                username: owner,\n                realname: profile.user.realname,\n                city: profile.profile.userdata.city,\n                state: profile.profile.userdata.state,\n                country: profile.profile.userdata.country,\n                organization: profile.profile.userdata.organization,\n                avatarOption: profile.profile.userdata.avatarOption,\n                gravatarHash: profile.profile.synced.gravatarHash,\n                gravatarDefault: profile.profile.userdata.gravatarDefault\n            },\n            createdAt: new Date(createdate),\n            modifiedAt: new Date(moddate)\n        }\n    }\n\n    briefGroupToBriefOrg(group: BriefGroup, profile: UserProfile): BriefOrganization {\n        const { id, name, owner } = group\n        return { id, name, owner: { username: owner, realname: profile.user.realname }, createdAt: new Date(), modifiedAt: new Date() }\n    }\n\n    groupsToOrgs(groups: GroupList, profiles: Map<string, UserProfile>): Array<BriefOrganization> {\n        return groups.map((group) => {\n            return this.briefGroupToBriefOrg(group, profiles.get(group.owner)!)\n        })\n    }\n\n    queryOrgs(query: Query): Promise<QueryResults> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        const workspaceClient = new WorkspaceClient({\n            url: this.params.workspaceServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroups()\n            .then((groups) => {\n                // Add user profiles to groups.\n                // We do it here so that search can extend into user real names and possibly\n                // other user profile attributes \n                const owners = groups.reduce((owners, group) => {\n                    owners.set(group.owner, true)\n                    return owners;\n                }, new Map<string, boolean>()).keys()\n                return userProfileClient.getUserProfiles(Array.from(owners))\n                    .then((profiles) => {\n                        const profileMap = profiles.reduce((profileMap, profile) => {\n                            profileMap.set(profile.user.username, profile)\n                            return profileMap\n                        }, new Map<string, UserProfile>())\n                        return this.groupsToOrgs(groups, profileMap)\n                    })\n            })\n            .then((orgs) => {\n                const filtered = applyFilter(orgs, query.filter, query.username)\n                const searched = applyOrgSearch(filtered, query.searchTerms)\n                const sorted = applySort(searched, query.sortBy, query.sortDirection)\n\n                return {\n                    organizations: sorted,\n                    total: orgs.length\n                }\n            })\n    }\n\n    getOrg(id: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        console.log('user profile', userProfile)\n                        return {\n                            id: group.id,\n                            name: group.name,\n                            description: group.description,\n                            createdAt: new Date(group.createdate),\n                            modifiedAt: new Date(group.moddate),\n                            owner: {\n                                username: group.owner,\n                                realname: userProfile.user.realname,\n                                city: userProfile.profile.userdata.city,\n                                state: userProfile.profile.userdata.state,\n                                country: userProfile.profile.userdata.country,\n                                organization: userProfile.profile.userdata.organization,\n                                avatarOption: userProfile.profile.userdata.avatarOption,\n                                gravatarHash: userProfile.profile.synced.gravatarHash,\n                                gravatarDefault: userProfile.profile.userdata.gravatarDefault\n                            }\n                        }\n                    })\n\n            })\n    }\n\n    getGroup(id: string): Promise<Group> {\n        if (id.length === 0) {\n            return Promise.reject(new Error('Group id may not be an empty string'))\n        }\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return group\n            })\n    }\n\n    addOrg(newOrg: NewOrganization, username: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n        if ((newOrg.id.error && newOrg.id.error.type === UIErrorType.ERROR) ||\n            (newOrg.name.error && newOrg.name.error.type === UIErrorType.ERROR) ||\n            (newOrg.description.error && newOrg.description.error.type === UIErrorType.ERROR)) {\n            return Promise.reject(new Error('One or more fields are invalid'))\n        }\n\n        return groups.createGroup({\n            id: newOrg.id.value,\n            name: newOrg.name.value,\n            description: newOrg.description.value,\n            type: 'Organization'\n        })\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        return this.groupToOrg(group, userProfile)\n                    })\n            })\n    }\n\n    // TODO this is fake until update is implemented on the back end\n    updateOrg(id: string, orgUpdate: OrganizationUpdate): Promise<Organization> {\n        return new Promise<Organization>((resolve) => {\n            return wait(200)\n                .then(() => {\n                    return this.getOrg(id)\n                })\n        })\n    }\n\n    validateOrgId(id: string): [string, UIError] {\n        return Validation.validateOrgId(id);\n    }\n\n    validateOrgName(name: string): [string, UIError] {\n        return Validation.validateOrgName(name)\n    }\n\n    validateOrgDescription(description: string): [string, UIError] {\n        return Validation.validateOrgDescription(description);\n    }\n}\n\nexport class Validation {\n    static validateOrgId(id: string): [string, UIError] {\n        // May not be empty\n        if (id.length === 0) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be empty'\n                }]\n        }\n        // No spaces\n        if (id.match(/\\s/)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not contain a space'\n                }]\n        }\n        // May not exceed maximum size\n        // todo: what is the real limit?\n        if (id.length > 100) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be longer than 100 characters'\n                }]\n        }\n\n        // May not contain non-alphanumeric and underscore\n        const alphaRe = /^[a-zA-Z0-9_]+$/\n        if (!id.match(alphaRe)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may only contain alphanumeric (a-z, A-Z, 0-9) and underscore (_)'\n                }\n            ]\n        }\n\n        return [id, {\n            type: UIErrorType.NONE\n        }]\n    }\n\n    static validateOrgName(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be empty'\n                }]\n        }\n        if (name.length > 256) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 256 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgDescription(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization description may not be empty'\n                }]\n        }\n        // TODO: Is there really a limit?\n        if (name.length > 4096) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 4,096 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\n\n\n// VIEW ORG\n\nexport interface ViewOrgStart extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_START\n}\n\nexport function viewOrgStart() {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_START\n    }\n}\n\nexport interface ViewOrgStop extends Action {\n    type: ActionFlag.VIEW_ORG_STOP\n}\n\nexport function viewOrgStop(): ViewOrgStop {\n    return {\n        type: ActionFlag.VIEW_ORG_STOP\n    }\n}\n\nexport interface ViewOrgSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n    organization: Organization\n}\n\nexport function viewOrgSuccess(org: Organization): ViewOrgSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n        organization: org\n    }\n}\n\nexport interface ViewOrgError extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n    error: AppError\n}\nexport function viewOrgError(error: AppError): ViewOrgError {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n        error: error\n    }\n}\n\nexport interface ViewOrgFetch extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH,\n    id: string\n}\n\nexport function viewOrgFetch(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgStart())\n\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(id)\n            .then((org) => {\n                dispatch(viewOrgSuccess(org))\n            })\n            .catch((err) => {\n                dispatch(viewOrgError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\nimport { viewOrgStop } from './viewOrg'\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n\n// SEARCH (FETCH) ORGS\n\n\n\n// Called upon the start of a search call\n// Sets the ui state to enable a spinner\n// and also search query data to be reflected in the ui\nexport interface SearchOrgsStart extends Action<ActionFlag.SEARCH_ORGS_START> {\n    type: ActionFlag.SEARCH_ORGS_START,\n    searchTerms: Array<string>\n}\n\nexport function searchOrgsStart(searchTerms: Array<string>): SearchOrgsStart {\n    return {\n        type: ActionFlag.SEARCH_ORGS_START,\n        searchTerms: searchTerms\n    }\n}\n\n// Called upon successful completion of a search\n// Sets the organizations found\nexport interface SearchOrgsSuccess extends Action<ActionFlag.SEARCH_ORGS_SUCCESS> {\n    type: ActionFlag.SEARCH_ORGS_SUCCESS,\n    organizations: Array<BriefOrganization>,\n    totalCount: number\n}\n\nexport function searchOrgsSuccess(organizations: Array<BriefOrganization>, totalCount: number): SearchOrgsSuccess {\n    return {\n        type: ActionFlag.SEARCH_ORGS_SUCCESS,\n        organizations: organizations,\n        totalCount: totalCount\n    }\n}\n\n// Called upon a search error\n// Sets error state\nexport interface SearchOrgsError extends Action<ActionFlag.SEARCH_ORGS_ERROR> {\n    type: ActionFlag.SEARCH_ORGS_ERROR,\n    error: AppError\n}\n\nexport function searchOrgsError(error: AppError): SearchOrgsError {\n    return {\n        type: ActionFlag.SEARCH_ORGS_ERROR,\n        error: error\n    }\n}\n\n\nexport interface SearchOrgs extends Action<ActionFlag.SEARCH_ORGS> {\n    type: ActionFlag.SEARCH_ORGS,\n    searchTerms: Array<string>\n}\n\n// TODO: proper typing here \nexport function searchOrgs(searchTerms: Array<string>) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchOrgsStart(searchTerms))\n        dispatch(viewOrgStop())\n\n        const { sortBy, sortDirection, filter,\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms: searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function sortOrgs(sortBy: string, sortDirection: SortDirection) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sortOrgsStart(sortBy, sortDirection))\n\n        const { searchTerms, filter,\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function filterOrgs(filter: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(filterOrgsStart(filter))\n\n        const { searchTerms, sortBy, sortDirection,\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\n\n\n\n// Filter orgs\nexport interface FilterOrgs extends Action<ActionFlag.FILTER_ORGS> {\n    type: ActionFlag.FILTER_ORGS,\n    filter: string\n}\n\nexport interface FilterOrgsStart extends Action<ActionFlag.FILTER_ORGS_START> {\n    type: ActionFlag.FILTER_ORGS_START,\n    filter: string\n}\n\nexport function filterOrgsStart(filter: string): FilterOrgsStart {\n    return {\n        type: ActionFlag.FILTER_ORGS_START,\n        filter: filter\n    }\n}\n\n","import OrganizationsBrowser from '../components/OrganizationsBrowser'\nimport { StoreState, SortDirection } from '../types'\nimport * as actions from '../redux/actions/searchOrgs'\nimport { Dispatch } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { Model, Query } from '../data/model'\n//\n// Typing for the mapState and mapDispatch\n//\nexport interface LinkStateProps {\n    totalCount: number,\n    filteredCount: number\n    sortBy: string,\n    sortDirection: SortDirection,\n    filter: string,\n    searching: boolean\n}\n\nexport interface LinkDispatchProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void,\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void,\n    onFilterOrgs: (filter: string) => void\n}\n\n\n// note second arg is the component props, but we don't have any component props to merge in.\nexport function mapStateToProps({ totalCount, filteredCount, sortBy, sortDirection, filter, searching }: StoreState): LinkStateProps {\n    return {\n        totalCount,\n        filteredCount,\n        sortBy,\n        sortDirection,\n        filter,\n        searching\n    }\n}\n\n// function onSortOrgs(sortBy: string, sortDescending: boolean) : Dispatch<actions.SortOrgs> {\n//     dispatch(actions.sortOrgs(sortBy, sortDescending))\n// }\n\n// note second arg is the component props, but we don't have any to merge in.\n// export function mapDispatchToProps(dispatch: actions.SearchOrgs | Dispatch<actions.SortOrgs> | Dispatch<actions.FilterOrgs>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n\n//             dispatch(actions.searchOrgs(searchTerms))\n\n\n\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         },\n//         onFilterOrgs: (filter) => {\n//             dispatch(actions.filterOrgs(filter))\n//         }\n//     }\n// }\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.SearchOrgs | actions.SortOrgs | actions.FilterOrgs>): LinkDispatchProps {\n    return {\n        onSearchOrgs: (searchTerms: Array<string>) => {\n            // TODO proper typing here\n            dispatch(actions.searchOrgs(searchTerms) as any)\n        },\n        onSortOrgs: (sortBy: string, sortDirection: SortDirection) => {\n            // TODO proper typing here\n            dispatch(actions.sortOrgs(sortBy, sortDirection) as any)\n        },\n        onFilterOrgs: (filter: string) => {\n            dispatch(actions.filterOrgs(filter) as any)\n        }\n    }\n}\n\n// export function mapDispatchToProps(dispatch: Dispatch<any>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n//             dispatch(actions.searchOrgs(searchTerms))\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationsBrowser)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\nexport interface AddOrg extends Action {\n    type: ActionFlag.ADD_ORG\n}\n\nexport interface AddOrgStart extends Action {\n    type: ActionFlag.ADD_ORG_START\n}\n\nexport interface AddOrgSuccess extends Action {\n    type: ActionFlag.ADD_ORG_SUCCESS,\n    organization: Organization\n}\n\nexport interface AddOrgError extends Action<ActionFlag.ADD_ORG_ERROR> {\n    type: ActionFlag.ADD_ORG_ERROR,\n    error: AppError\n}\n\n// Editing\n\nexport interface AddOrgEdit extends Action<ActionFlag.ADD_ORG_EDIT> {\n    type: ActionFlag.ADD_ORG_EDIT;\n}\n\nexport interface AddOrgEditStart {\n    type: ActionFlag.ADD_ORG_EDIT_START\n}\n\nexport interface AddOrgEditFinish {\n    type: ActionFlag.ADD_ORG_EDIT_FINISH\n}\n\n// Evaluating state of form \n\nexport interface AddOrgEvaluate extends Action<ActionFlag.ADD_ORG_EVALUATE> {\n    type: ActionFlag.ADD_ORG_EVALUATE\n}\n\nexport interface AddOrgEvaluateOK extends Action<ActionFlag.ADD_ORG_EVALUATE_OK> {\n    type: ActionFlag.ADD_ORG_EVALUATE_OK\n}\n\nexport interface AddOrgEvaluateErrors extends Action<ActionFlag.ADD_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n}\n\n// Updating name field\n\nexport interface AddOrgUpdateName extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface AddOrgUpdateNameSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface AddOrgUpdateNameError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating id Field\n\nexport interface AddOrgUpdateId extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID,\n    id: string\n}\n\nexport interface AddOrgUpdateIdSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n    id: string\n}\n\nexport interface AddOrgUpdateIdError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n    id: string,\n    error: UIError\n}\n\n// Updating description field\n\nexport interface AddOrgUpdateDescription extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function addOrgStart(): AddOrgStart {\n    return {\n        type: ActionFlag.ADD_ORG_START\n    }\n}\n\nexport function addOrgSuccess(org: Organization): AddOrgSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_SUCCESS,\n        organization: org\n    }\n}\n\nexport function addOrgError(error: AppError): AddOrgError {\n    return {\n        type: ActionFlag.ADD_ORG_ERROR,\n        error: error\n    }\n}\n\nexport function addOrgEditStart() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_START\n    }\n}\n\nexport function addOrgEditFinish() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_FINISH\n    }\n}\n\n// Evaluate\n\nexport function addOrgEvaluateOk(): AddOrgEvaluateOK {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_OK\n    }\n}\n\nexport function AddOrgEvaluateErrors(): AddOrgEvaluateErrors {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Update Name\n\nexport function addOrgUpdateNameSuccess(name: string): AddOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function addOrgUpdateNameError(name: string, error: UIError): AddOrgUpdateNameError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\nexport function addOrgUpdateIdSuccess(id: string): AddOrgUpdateIdSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n        id: id\n    }\n}\n\nexport function addOrgUpdateIdError(id: string, error: UIError): AddOrgUpdateIdError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n        id: id,\n        error: error\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(description: string): AddOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function addOrgUpdateDescriptionError(description: string, error: UIError): AddOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function addOrgEdit() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgEditStart())\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrg() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            addOrg: { newOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!newOrganization) {\n            dispatch(addOrgError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        model.addOrg(newOrganization, username)\n            .then((org: Organization) => {\n                console.log('added', org)\n                dispatch(addOrgSuccess(org))\n            })\n            .catch((error) => {\n                console.error('error adding', newOrganization, error)\n                dispatch(addOrgError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function addOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { addOrg: { newOrganization } } = getState()\n\n        const { addOrg: editState } = getState()\n\n        if (!newOrganization) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.name.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.id.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.description.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(addOrgEvaluateOk())\n    }\n}\n\nfunction newModelFromState(state: StoreState) {\n    const { auth: { authorization: { token } },\n        app: { config } } = state\n    return new Model({\n        token,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url,\n        workspaceServiceURL: config.services.Workspace.url\n    })\n}\n\nexport function addOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(addOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateId(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const [validatedId, error] = Validation.validateOrgId(id)\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateIdError(validatedId, error))\n            dispatch(addOrgEvaluate())\n            return\n        }\n        const model = newModelFromState(getState())\n        model.getGroup(validatedId)\n            .then((org) => {\n                if (org) {\n                    console.log('org??', org)\n                    dispatch(addOrgUpdateIdError(validatedId, {\n                        type: UIErrorType.ERROR,\n                        message: 'This org id is already in use'\n                    }))\n                } else {\n                    dispatch(addOrgUpdateIdSuccess(validatedId))\n                }\n\n                dispatch(addOrgEvaluate())\n            })\n    }\n}\n\nexport function addOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(addOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\n\nimport { NewOrganizationProps, SaveState, ValidationState, EditState } from '../types';\n\nimport './NewOrganization.css'\nimport { Button, Icon } from 'antd';\nimport Header from './Header';\n\nexport interface NewOrganizationState {\n    canceling: boolean;\n\n    // pendingOrganization: PendingOrganization\n}\n\nclass NewOrganization extends React.Component<NewOrganizationProps, NewOrganizationState> {\n\n    origin: string;\n\n    constructor(props: NewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            canceling: false\n        }\n\n        this.origin = document.location!.origin\n\n        this.props.onAddOrgEdit()\n    }\n\n    onClickCancel() {\n        this.setState({ canceling: true })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        console.log('submitted')\n        this.props.onAddOrg();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateId(e.target.value);\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"newOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.newOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.newOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.newOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.newOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.newOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.newOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.newOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.newOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.newOrganization!.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"plus-circle\" />\n                            {' '}\n                            Editing New Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"newOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancel.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderFooter() {\n        return (\n            <div className=\"footerRow\">\n                <div className=\"editorColumn\">\n                    <div className=\"row\">\n                        <div className=\"col1\">\n                        </div>\n                        <div className=\"col2\">\n                            <div className=\"footer\">\n                                <Button form=\"newOrganizationForm\"\n                                    key=\"submit\"\n                                    htmlType=\"submit\">Save</Button>\n                                <Button type=\"danger\"\n                                    onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"previewColumn\">\n\n                </div>\n            </div>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading New Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.canceling) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        if (!this.props.newOrganization) {\n            return (\n                <div className=\"NewOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n                {/* {this.renderFooter()} */}\n            </div>\n        )\n    }\n}\n\nexport default NewOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState } from '../types';\nimport {\n    AddOrg, addOrg,\n    addOrgUpdateName, addOrgUpdateId, addOrgUpdateDescription, addOrgEdit\n} from '../redux/actions/addOrg';\n\nimport NewOrganization from '../components/NewOrganization';\n\ninterface OwnProps {\n}\n\nexport interface StateProps {\n}\n\nexport interface DispatchProps {\n    onAddOrg: () => void,\n    onAddOrgEdit: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ addOrg: { editState, saveState, validationState, newOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        newOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<AddOrg>): DispatchProps {\n    return {\n        onAddOrgEdit: () => {\n            dispatch(addOrgEdit() as any)\n        },\n        onAddOrg: () => {\n            dispatch(addOrg() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(addOrgUpdateName(name) as any)\n        },\n        onUpdateId: (id) => {\n            dispatch(addOrgUpdateId(id) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(addOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(NewOrganization)","import * as React from 'react'\nimport marked from 'marked'\nimport { NavLink } from 'react-router-dom'\n\nimport './ViewOrganization.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\nimport Header from './Header';\n\nexport interface ViewOrganizationState {\n}\n\nclass ViewOrganization extends React.Component<types.ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: types.ViewOrganizationProps) {\n        super(props)\n\n        this.props.onViewOrg(this.props.id)\n    }\n\n    buildFooter() {\n        return (\n            <div>\n                {this.renderEditRow()}\n                {/* <p style={{ textAlign: 'center' }}>\n                    You may also  <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink> to the organizations browser.\n                </p> */}\n            </div>\n        )\n    }\n\n    renderEditRow() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <p style={{ textAlign: 'center' }}>\n                    As the owner of this group, you may <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink> it.\n                </p>\n            )\n        }\n    }\n\n    renderEditButton() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink>\n            )\n        }\n    }\n\n    renderOrg() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table\">\n                <div className=\"row\">\n                    <div className=\"col2\">\n                        <div className=\"name\">\n                            {this.props.organization.name}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col2\">\n                        <div className=\"id\">\n                            <span className=\"label\">permalink</span>{' '}\n                            <span className=\"permalinkBase\">https://narrative.kbase.us#org/</span>{this.props.organization.id}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                    <div className=\"col2\">\n                        <div className=\"description\"\n                            dangerouslySetInnerHTML={({ __html: marked(this.props.organization.description || '') })}\n                        />\n                    </div>\n                </div>\n                {/* <div className=\"row\">\n                    <div className=\"col2\">\n                        {this.buildFooter()}\n                    </div>\n                </div> */}\n            </form>\n        )\n    }\n\n    getAvatarUrl() {\n        if (!this.props.organization) {\n            return\n        }\n        switch (this.props.organization.owner.avatarOption || 'gravatar') {\n            case 'gravatar':\n                const gravatarDefault = this.props.organization.owner.gravatarDefault || 'identicon';\n                const gravatarHash = this.props.organization.owner.gravatarHash;\n                if (gravatarHash) {\n                    return 'https://www.gravatar.com/avatar/' + gravatarHash + '?s=60&amp;r=pg&d=' + gravatarDefault;\n                } else {\n                    return './nouserpic.png';\n                }\n            case 'silhouette':\n            case 'mysteryman':\n            default:\n                return './nouserpic.png';\n        }\n    }\n\n    renderAvatar() {\n        const avatarUrl = this.getAvatarUrl()\n        return (\n            <img\n                src={avatarUrl}\n                style={{ width: 60 }}\n            />\n        )\n    }\n\n    renderInfo() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col0\">\n                        <div>\n                            <div className=\"label\">proprietor</div>\n                        </div>\n                        <div className=\"ownerTable\">\n                            <div className=\"avatarCol\">\n                                {this.renderAvatar()}\n                            </div>\n                            <div className=\"proprietorCol\">\n\n                                <div className=\"owner\">\n                                    <a href=\"#people/{org.owner.username}\" target=\"_blank\">{this.props.organization.owner.realname}</a>\n                                    {' '}\n                                    ❨<i>aka</i> {this.props.organization.owner.username}❩\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.organization}\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.city} {this.props.organization.owner.state}, {this.props.organization.owner.country}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">established</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"createdAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.createdAt)}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">last updated</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"modifiedAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.modifiedAt)}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Viewing Org \"\n                            {this.props.organization && this.props.organization.name}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        {this.renderEditButton()}\n                        <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (typeof this.props.organization !== 'undefined') {\n            return (\n                <div className=\"ViewOrganization\">\n                    {this.renderHeader()}\n                    <div className=\"mainRow\">\n                        <div className=\"mainColumn\">\n                            {this.renderOrg()}\n                        </div>\n                        <div className=\"infoColumn\">\n                            <div className=\"infoBox\">\n                                {this.renderInfo()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"ViewOrganization\">\n                {this.renderLoadingHeader()}\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default ViewOrganization","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/viewOrg'\n\nimport ViewOrganization from '../components/ViewOrganization'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n    id: string\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    id: string,\n    state: types.ViewOrgState\n    organization?: types.Organization\n    error?: types.AppError,\n    username: string\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onViewOrg: (id: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\n\nfunction mapStateToProps({ viewOrg: { state, organization, error }, auth: { authorization: { username } } }: types.StoreState,\n    { id }: OwnProps): StateProps {\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        id, state, organization, error, username\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.ViewOrgFetch>): DispatchProps {\n    return {\n        onViewOrg: (id: string) => {\n            dispatch(actions.viewOrgFetch(id) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ViewOrganization) \n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError\n} from '../../types'\nimport { Model } from '../../data/model'\n\n// ACTIONS\n\n// Top level action which triggers an edit org session (load org)\nexport interface EditOrg extends Action {\n    type: ActionFlag.EDIT_ORG,\n    id: string\n}\n\nexport interface EditOrgStart extends Action {\n    type: ActionFlag.EDIT_ORG_START\n}\n\nexport interface EditOrgSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_SUCCESS,\n    organization: EditedOrganization\n}\n\nexport interface EditOrgError extends Action {\n    type: ActionFlag.EDIT_ORG_ERROR,\n    error: AppError\n}\n\n// Saving an edited org\nexport interface EditOrgSave extends Action {\n    type: ActionFlag.EDIT_ORG_SAVE\n}\n\nexport interface EditOrgSaveStart extends Action {\n    type: ActionFlag.EDIT_ORG_SAVE_START\n}\n\nexport interface EditOrgSaveSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_SAVE_SUCCESS,\n    organization: Organization\n}\n\nexport interface EditOrgSaveError extends Action {\n    type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Editing fields\n\n// Edit name\nexport interface EditOrgUpdateName extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface EditOrgUpdateNameSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface EditOrgUpdateNameError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Edit description\nexport interface EditOrgUpdateDescription extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION,\n    name: string\n}\n\nexport interface EditOrgUpdateDescriptionSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n// Edit description\n\n// ACTION CREATORS\n\n// Setting up editor\n\nexport function editOrgStart(): EditOrgStart {\n    return {\n        type: ActionFlag.EDIT_ORG_START\n    }\n}\n\nexport function editOrgSuccess(org: EditedOrganization): EditOrgSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SUCCESS,\n        organization: org\n    }\n}\n\nexport function editOrgError(error: AppError) {\n    return {\n        type: ActionFlag.EDIT_ORG_ERROR,\n        error: error\n    }\n}\n\n// Saving modified org\n\nexport function editOrgSaveStart(): EditOrgSaveStart {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_START\n    }\n}\n\nexport function editOrgSaveSuccess(organization: Organization): EditOrgSaveSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_SUCCESS,\n        organization: organization\n    }\n}\n\nexport function editOrgSaveError(error: AppError): EditOrgSaveError {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n\n// Editing fields\n\n// Edit name\n\nexport function editOrgUpdateNameSuccess(name: string): EditOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function editOrgUpdateNameError(name: string, error: UIError): EditOrgUpdateNameError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\n// Edit name\n\nexport function editOrgUpdateDescriptionSuccess(description: string): EditOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function editOrgUpdateDescriptionError(description: string, error: UIError): EditOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function editOrg(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgStart())\n\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(id)\n            .then((org) => {\n                const editableOrg: EditedOrganization = {\n                    id: {\n                        value: org.id\n                    },\n                    name: {\n                        value: org.name\n                    },\n                    description: {\n                        value: org.description\n                    }\n                }\n                dispatch(editOrgSuccess(editableOrg))\n            })\n            .catch((err) => {\n                dispatch(editOrgError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function editOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        const [orgName, error] = model.validateOrgName(name)\n        // TODO: a better of satisfying TS\n        if (orgName !== null) {\n            dispatch(editOrgUpdateNameSuccess(orgName))\n        }\n        if (error !== null) {\n            dispatch(editOrgUpdateNameError(orgName, error))\n        }\n    }\n}\n\nexport function editOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        const [orgDescription, error] = model.validateOrgDescription(description)\n        // TODO: a better of satisfying TS\n        if (orgDescription !== null) {\n            dispatch(editOrgUpdateDescriptionSuccess(orgDescription))\n        }\n        if (error !== null) {\n            dispatch(editOrgUpdateDescriptionError(orgDescription, error))\n        }\n    }\n}\n\nexport function editOrgSave() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgSaveStart())\n\n        const { editOrg: { editedOrganization },\n            auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!editedOrganization) {\n            dispatch(editOrgSaveError({\n                code: 'app',\n                message: 'Missing edited organization!'\n            }))\n            return\n        }\n\n        if (editedOrganization.name.error || editedOrganization.description.error) {\n            dispatch(editOrgSaveError({\n                code: 'invalid',\n                message: 'One or more of the edited fields have an error'\n            }))\n            return\n        }\n\n        const organizationUpdate = {\n            name: editedOrganization.name.value,\n            description: editedOrganization.description.value\n        }\n\n        model.updateOrg(editedOrganization.id.value, organizationUpdate)\n            .then((organization) => {\n                dispatch(editOrgSaveSuccess(organization))\n            })\n            .catch((err) => {\n                dispatch(editOrgSaveError({\n                    code: 'error-saving',\n                    message: err.message\n                }))\n            })\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\n\nimport * as types from '../types';\n\nimport './EditOrganization.css'\nimport { Button, Tooltip } from 'antd';\nimport Header from './Header';\nimport { FaPencilAlt } from 'react-icons/fa';\n\nexport interface EditedOrganization {\n    id: string,\n    name: string,\n    description: string\n}\n\nexport interface EditOrganizationState {\n    canceling: boolean;\n\n    // editedOrganization?: EditedOrganization\n}\n\nclass EditOrganization extends React.Component<types.EditOrganizationProps, EditOrganizationState> {\n\n    constructor(props: types.EditOrganizationProps) {\n        super(props)\n\n        this.state = {\n            canceling: false\n        }\n\n        this.props.onEditOrg(this.props.id)\n    }\n\n    onClickCancel() {\n        this.setState({ canceling: true })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onUpdateOrg();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value)\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value)\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        // this.props.onUpdateId(e.target.value)\n    }\n\n    renderForm() {\n        if (!this.props.editedOrganization) {\n            return\n        }\n        return (\n            <form id=\"editOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.name.value}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.editedOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <Tooltip title=\"The id may not be changed\">\n                            <input value={this.props.editedOrganization.id.value}\n                                readOnly />\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.editedOrganization.description.value}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.editedOrganization.description.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.description.error.message}</span>) : ''}\n                    </div>\n                </div>\n                {/* <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        <div className=\"footer\">\n                            <Button icon=\"save\"\n                                form=\"editOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\" icon=\"undo\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel &amp; Return to Orgs</Button>\n                        </div>\n                    </div>\n                </div> */}\n\n            </form>\n        )\n    }\n\n    renderPreview() {\n        if (!this.props.editedOrganization) {\n            return\n        }\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.editedOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>https://narrative.kbase.us/organizations/</span>{this.props.editedOrganization.id.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.editedOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            <FaPencilAlt style={{ verticalAlign: 'middle' }} />\n                            {' '}\n                            Editing Org \"\n                            {this.props.editedOrganization!.name.value}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <Button\n                            icon=\"save\"\n                            form=\"editOrganizationForm\"\n                            key=\"submit\"\n                            htmlType=\"submit\">\n                            Save\n                        </Button>\n                        <Button\n                            type=\"danger\"\n                            icon=\"undo\"\n                            onClick={this.onClickCancel.bind(this)}>\n                            Cancel &amp; Return to Org\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header title=\"Organizations\">\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.canceling) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.id} />\n        }\n        if (!this.props.editedOrganization) {\n            return (\n                <div className=\"EditOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"EditOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditOrganization\n","import {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\n\nimport { EditOrgState, Organization, EditedOrganization, AppError, StoreState } from '../types'\nimport {EditOrg, editOrg, editOrgUpdateName, editOrgUpdateDescription} from '../redux/actions/editOrg'\n\nimport EditOrganization from '../components/EditOrganization'\nimport { editOrgSave } from '../redux/actions/editOrg';\n\ninterface OwnProps {\n    id: string\n}\ninterface StateProps {\n    state: EditOrgState\n    organization?: Organization\n    editedOrganization?: EditedOrganization\n    error?: AppError\n}\n\ninterface DispatchProps {\n    onEditOrg: (id: string) => void,\n    onUpdateOrg: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nfunction mapStateToProps({editOrg: {state, error, editedOrganization}}: StoreState, \n                         {id}: OwnProps): StateProps {\n    return {state, error, editedOrganization}\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<EditOrg>): DispatchProps {\n    return {\n        onEditOrg: (id) => {\n            dispatch(editOrg(id) as any)\n        },\n        onUpdateOrg: () => {\n            dispatch(editOrgSave() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(editOrgUpdateName(name) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(editOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(EditOrganization)\n","import * as React from 'react'\nimport './Auth.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\n\n\nexport interface AuthState {\n\n}\n\nclass Auth extends React.Component<types.AuthProps, AuthState> {\n\n    tokenRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: types.AuthProps) {\n        super(props)\n\n        this.tokenRef = React.createRef()\n\n        this.props.checkAuth()\n    }\n\n    onLogoutClick() {\n        this.props.onRemoveAuthorization()\n    }\n\n    onLoginClick() {\n        if (this.tokenRef.current === null) {\n            return\n        }\n        const token = this.tokenRef.current.value\n        if (token.length === 0) {\n            return\n        }\n        console.log('authorizagin with', token)\n        this.props.onAddAuthorization(token)\n    }\n\n    buildAuthForm() {\n        return (\n            <div className=\"Auth-form\">\n                Token: <input ref={this.tokenRef} />\n                <Button\n                    icon=\"save\"\n                    htmlType=\"submit\"\n                    onClick={this.onLoginClick.bind(this)} >\n                    Assign Token\n                </Button>\n            </div>\n        )\n    }\n\n    buildAuthToolbar() {\n        return (\n            <div className=\"Auth-toolbar\">\n                Logged in as <b><span>{this.props.realname}</span> (<span>{this.props.username}</span></b>)\n                {' '}\n                <Button icon=\"logout\" onClick={this.onLogoutClick.bind(this)}>Sign out</Button>\n            </div>\n        )\n    }\n\n    buildAuthDev() {\n        switch (this.props.authStatus) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.buildAuthToolbar()}\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized! Enter a user token below</p>\n                        {this.buildAuthForm()}\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Error</p>\n\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    buildAuthProd2() {\n        switch (this.props.authStatus) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized!</p>\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-error\">\n                        <p>Error: ??</p>\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n\n    }\n\n    // buildAuthProd() {\n    //     if (this.props.token) {\n    //         return (\n    //             <div className=\"Auth Auth-authorized\">\n    //                 {this.props.children}\n    //             </div>\n    //         )\n    //     } else {\n    //         return (\n    //             <div className=\"Auth Auth-unauthorized\">\n    //                 <p>Not authorized!</p>\n    //             </div>\n    //         )\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className=\"Auth\">\n                {this.props.env === 'dev' ? this.buildAuthDev() : this.buildAuthProd2()}\n            </div>\n        )\n\n    }\n}\n\nexport default Auth","\nexport interface RootInfo {\n    version: string,\n    servertime: number\n}\n\ninterface AuthEndpoints {\n    root: string,\n    tokenInfo: string,\n    apiMe: string,\n    me: string,\n    loginStart: string,\n    loginChoice: string,\n    loginCreate: string,\n    loginUsernameSuggest: string,\n    loginPick: string,\n    loginCancel: string,\n    logout: string,\n    linkStart: string,\n    linkCancel: string,\n    linkChoice: string,\n    linkPick: string,\n    linkRemove: string,\n    tokens: string,\n    tokensRevoke: string,\n    tokensRevokeAll: string,\n    userSearch: string,\n    adminUserSearch: string,\n    adminUser: string\n}\n\nconst endpoints: AuthEndpoints = {\n    root: '',\n    tokenInfo: 'api/V2/token',\n    apiMe: 'api/V2/me',\n    me: 'me',\n    loginStart: 'login/start',\n    logout: 'logout',\n    loginChoice: 'login/choice',\n    loginCreate: 'login/create',\n    loginUsernameSuggest: 'login/suggestname',\n    loginPick: 'login/pick',\n    loginCancel: 'login/cancel',\n    linkStart: 'link/start',\n    linkCancel: 'link/cancel',\n    linkChoice: 'link/choice',\n    linkPick: 'link/pick',\n    linkRemove: 'me/unlink',\n    tokens: 'tokens',\n    tokensRevoke: 'tokens/revoke',\n    tokensRevokeAll: 'tokens/revokeall',\n    userSearch: 'api/V2/users/search',\n    adminUserSearch: 'api/V2/admin/search',\n    adminUser: 'api/V2/admin/user'\n}\n\nexport interface TokenInfo {\n    created: number,\n    expires: number,\n    id: string,\n    name: string | null,\n    token: string,\n    type: string,\n    user: string,\n    cachefor: number\n}\n\nexport interface Identity {\n    id: string,\n    provider: string,\n    username: string\n}\n\nexport interface Role {\n    id: string,\n    desc: string\n}\n\nexport interface Account {\n    created: number,\n    customroles: Array<string>,\n    display: string,\n    email: string,\n    idents: Array<Identity>,\n    lastLogin: number,\n    local: boolean,\n    roles: Array<Role>,\n    user: string\n}\nexport class AuthClient {\n    url: string;\n\n    constructor({ url }: { url: string }) {\n        this.url = url\n    }\n\n    makePath(path: Array<string> | string): string {\n        if (typeof path === 'string') {\n            return [this.url].concat([path]).join('/');\n        }\n        return [this.url].concat(path).join('/');\n    }\n\n\n    root(): Promise<RootInfo> {\n        return fetch(this.makePath([endpoints.root]), {\n            headers: {\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                console.log('root info', result)\n                return result as RootInfo\n            })\n    }\n\n    getTokenInfo(token: string): Promise<TokenInfo> {\n        return fetch(this.makePath([endpoints.tokenInfo]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as TokenInfo\n            })\n    }\n\n    getMe(token: string): Promise<Account> {\n        return fetch(this.makePath([endpoints.apiMe]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as Account\n            })\n    }\n\n\n    // getInfo() : Promise<GroupsServiceInfo> {\n    //     return fetch(this.url + '/', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json();\n    //         })\n    //         .then((result) => {\n    //             return result as GroupsServiceInfo;\n    //         });\n    // }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport * as Cookies from 'es-cookie'\n\nimport { ActionFlag } from './index'\nimport { AppError, StoreState } from '../../types';\nimport { AuthClient, TokenInfo, Account } from '../../data/auth';\n\n// Action Definitions\n\nexport interface AuthCheck extends Action {\n    type: ActionFlag.AUTH_CHECK\n}\n\nexport interface AuthCheckStart extends Action {\n    type: ActionFlag.AUTH_CHECK_START\n}\n\nexport interface AuthCheckError extends Action {\n    type: ActionFlag.AUTH_CHECK_ERROR,\n    error: AppError\n}\n\nexport interface AuthAuthorized extends Action {\n    type: ActionFlag.AUTH_AUTHORIZED,\n    token: string\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface AuthUnauthorized extends Action {\n    type: ActionFlag.AUTH_UNAUTHORIZED\n}\n\nexport interface AuthRemoveAuthorization extends Action {\n    type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n}\n\nexport interface AuthAddAuthorization extends Action {\n    type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n    token: string\n}\n\n// Action Creators\n\n\nexport function authCheckStart(): AuthCheckStart {\n    return {\n        type: ActionFlag.AUTH_CHECK_START\n    }\n}\n\nexport function authCheckError(error: AppError): AuthCheckError {\n    return {\n        type: ActionFlag.AUTH_CHECK_ERROR,\n        error\n    }\n}\n\nexport function authAuthorized(token: string, username: string, realname: string, roles: Array<string>): AuthAuthorized {\n    return {\n        type: ActionFlag.AUTH_AUTHORIZED,\n        token, username, realname, roles\n    }\n}\n\nexport function authUnauthorized(): AuthUnauthorized {\n    return {\n        type: ActionFlag.AUTH_UNAUTHORIZED\n    }\n}\n\n// export function authRemoveAuthorization(): AuthRemoveAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n//     }\n// }\n\n// export function authAddAuthorization(token: string): AuthAddAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n//         token: token\n//     }\n// }\n\n// Action Thunks\n\nexport function checkAuth() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(authCheckStart())\n\n        // TODO: get the auth from the kbase-ui integration api, perhaps a postmessage call\n\n        const token = Cookies.get('kbase_session')\n        if (!token) {\n            dispatch(authUnauthorized())\n            return\n        }\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n    }\n}\n\nexport function authRemoveAuthorization() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // remove cookie\n        Cookies.remove('kbase_session')\n\n        // remove auth in state\n        dispatch(authUnauthorized())\n    }\n}\n\nexport function authAddAuthorization(token: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // add cookie\n        Cookies.set('kbase_session', token)\n\n        // TODO: get auth info\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, AuthState } from '../types'\nimport Auth from '../components/Auth'\nimport * as actions from '../redux/actions/auth'\n\nexport interface OwnProps {\n    env: string\n}\n\ninterface StateProps {\n    authStatus: AuthState,\n    token: string | null,\n    username: string | null,\n    realname: string | null,\n}\n\ninterface DispatchProps {\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const { auth: { status, authorization } } = state\n    return {\n        authStatus: status,\n        token: authorization.token || null,\n        username: authorization.username || null,\n        realname: authorization.realname || null\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        checkAuth: () => {\n            dispatch(actions.checkAuth() as any)\n        },\n        onRemoveAuthorization: () => {\n            dispatch(actions.authRemoveAuthorization() as any)\n        },\n        onAddAuthorization: (token: string) => {\n            dispatch(actions.authAddAuthorization(token) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Auth)","\nimport uuidv4 from 'uuid/v4'\n\ninterface ListenerParams {\n    name: string,\n    onSuccess: (payload: Payload) => void,\n    onError: (error: Error) => void\n}\n\nclass Listener {\n    name: string;\n    onSuccess: (payload: Payload) => void;\n    onError: (error: Error) => void;\n\n    constructor({ name, onSuccess, onError }: ListenerParams) {\n        this.name = name;\n        this.onSuccess = onSuccess;\n        this.onError = onError;\n    }\n}\n\ntype Payload = any;\n\ninterface WaitingListenerParams extends ListenerParams {\n    timeout?: number\n}\n\nclass WaitingListener extends Listener {\n    started: Date;\n    timeout: number;\n\n    constructor(params: WaitingListenerParams) {\n        super(params);\n        this.started = new Date();\n        this.timeout = params.timeout || 5000;\n    }\n}\n\ninterface Envelope {\n    channelId: string\n    id: string\n}\n\nclass Message {\n    name: string;\n    payload: any;\n    id: string;\n    created: Date;\n    channel: any\n    envelope: Envelope | null\n\n    constructor({ name, payload, channel }: { name: string, payload: any, channel: any }) {\n        this.name = name\n        this.payload = payload\n        this.id = uuidv4()\n        this.created = new Date()\n        this.channel = channel\n        this.envelope = null;\n    }\n\n    getMessage() {\n        return {\n            envelope: {\n                id: this.id,\n                created: this.created,\n                channel: this.channel\n            },\n            name: this.name,\n            payload: this.payload\n        };\n    }\n}\n\ninterface Handler {\n    started: Date,\n    handler: (response: any) => any\n}\n\ninterface ChannelParams {\n    window: Window,\n    host: string,\n    channelId?: string\n}\n\nexport class Channel {\n    window: Window\n    host: string\n    id: string\n    awaitingResponse: Map<string, Handler>\n    waitingListeners: Map<string, Array<Listener>>\n    listeners: Map<string, Array<Listener>>\n    lastId: number\n    sentCount: number\n    receivedCount: number\n    unwelcomeReceivedCount: number\n    unwelcomeReceivedCountThreshhold: number\n    unwelcomeReceiptWarning: boolean\n    unwelcomeReceiptWarningCount: number\n    currentListener: ((message: MessageEvent) => void) | null\n\n    constructor(params: ChannelParams) {\n        // The given window upon which we will listen for messages.\n        this.window = params.window;\n\n        // The host for the window; required for postmessage\n        if (this.window.document === null) {\n            throw new Error('No document')\n        }\n        if (this.window.document.location === null) {\n            throw new Error('No location')\n        }\n        this.host = params.host || this.window.document.location.origin;\n\n        // The channel id. Used to filter all messages received to\n        // this channel.\n        this.id = params.channelId || uuidv4()\n\n\n        this.awaitingResponse = new Map<string, Handler>()\n        this.waitingListeners = new Map<string, Array<Listener>>()\n        this.listeners = new Map<string, Array<Listener>>()\n\n        this.lastId = 0\n        this.sentCount = 0\n        this.receivedCount = 0\n\n        this.unwelcomeReceivedCount = 0\n        this.unwelcomeReceivedCountThreshhold = 100\n        this.unwelcomeReceiptWarning = true\n        this.unwelcomeReceiptWarningCount = 0\n        this.currentListener = null\n    }\n\n    genId() {\n        this.lastId += 1;\n        return 'msg_' + String(this.lastId);\n    }\n\n    receiveMessage(messageEvent: MessageEvent) {\n        const message = messageEvent.data as Message;\n        // console.log('* received', message);\n        // ignore messages not to/from the registered ids.\n        // if (!message.envelope.to === this.hostId) {\n        //     return;\n        // }\n        // if (!message.envelope.from === this.clientId) {\n        //     return;\n        // }\n        if (!message) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message data; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!message.envelope) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!(message.envelope.channelId === this.id)) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('Message envelope does not match this channel\\'s id', messageEvent);\n            }\n            return;\n        }\n        if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n            this.unwelcomeReceiptWarning = false;\n            console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n        }\n\n        // A message sent as a request will have registered a response handler\n        // in the awaitingResponse hash, using a generated id as the key.\n        // TODO: to to rethink using the message id here. Perhaps somehting like a\n        // chain of ids, the root of which is the origination id, which is the one\n        // known here when it it is sent; the message \"id\" should be assigned whenver\n        // a message is sent, but a response  message would include the original\n        // message in the \"chain\"...\n\n        // We can also have awaiting responses without an originating request.\n        // These are useful for, e.g., a promise which awaits a message to be sent\n        // within some window...\n        if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n            try {\n                const response = this.awaitingResponse.get(message.envelope.id)\n                this.awaitingResponse.delete(message.envelope.id)\n                if (response) {\n                    response.handler(message.payload)\n                }\n            } catch (ex) {\n                console.error('Error handling response for message ', message, ex);\n            }\n        }\n\n        // and also awaiting by message name. Like a listener, but they are only used\n        // once.\n        if (this.waitingListeners.has(message.name)) {\n            const awaiting = this.waitingListeners.get(message.name)!\n            this.waitingListeners.delete(message.name)\n            awaiting.forEach((listener) => {\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n\n        // Otherwise, permanently registered handlers are found in the listeners for the\n        // message name.\n        if (this.listeners.has(message.name)) {\n            this.listeners.get(message.name)!.forEach((listener) => {\n                if (!listener.onSuccess) {\n                    console.warn('no handler for listener!', listener);\n                }\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n    }\n\n    listen(listener: Listener) {\n        if (!this.listeners.has(listener.name)) {\n            this.listeners.set(listener.name, [])\n        }\n        this.listeners.get(listener.name)!.push(listener)\n    }\n\n    on(messageId: string, success: (payload: any) => any, error: (error: Error) => void) {\n        this.listen(new Listener({\n            name: messageId,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    sendMessage(message: Message) {\n        this.window.postMessage(message.getMessage(), this.host);\n    }\n\n    send(name: string, payload: Payload) {\n        const message = new Message({ name, payload, channel: this.id });\n        this.sendMessage(message);\n    }\n\n    sendRequest(message: Message, handler: (response: any) => any) {\n        this.awaitingResponse.set('message.id', {\n            started: new Date(),\n            handler: handler\n        })\n\n        this.sendMessage(message);\n    }\n\n    request(name: string, payload: Payload) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.sendRequest(new Message({ name, payload, channel: this.id }), (response: any) => {\n                    resolve(response);\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    startMonitor() {\n        window.setTimeout(() => {\n            const now = new Date().getTime();\n\n            // first take care of listeners awaiting a message.\n            for (const [id, listeners] of this.waitingListeners.entries()) {\n                const newListeners = listeners.filter((listener) => {\n                    if (listener instanceof WaitingListener) {\n                        const elapsed = now - listener.started.getTime();\n                        // console.log('elapsed?', listener instanceof WaitingListener, elapsed, listener.timeout);\n                        if (elapsed > listener.timeout) {\n                            try {\n                                if (listener.onError) {\n                                    listener.onError(new Error('timout after ' + elapsed));\n                                }\n                            } catch (ex) {\n                                console.error('Error calling error handler', id, ex);\n                            }\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                });\n                if (newListeners.length === 0) {\n                    this.waitingListeners.delete(id)\n                }\n            }\n\n            if (this.waitingListeners.size > 0) {\n                this.startMonitor()\n            }\n        }, 100);\n    }\n\n    listenOnce(listener: WaitingListener) {\n        if (!this.waitingListeners.has(listener.name)) {\n            this.waitingListeners.set(listener.name, [])\n        }\n        this.waitingListeners.get(listener.name)!.push(listener);\n        if (listener.timeout) {\n            this.startMonitor();\n        }\n    }\n\n    once(name: string, success: (payload: Payload) => void, error: (error: Error) => void) {\n        this.listenOnce(new WaitingListener({\n            name: name,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    when(name: string, timeout: number) {\n        return new Promise((resolve, reject) => {\n            return this.listenOnce(new WaitingListener({\n                name: name,\n                timeout: timeout,\n                onSuccess: (payload) => {\n                    resolve(payload);\n                },\n                onError: (error) => {\n                    reject(error);\n                }\n            }));\n        });\n    }\n\n    stats() {\n        return {\n            sent: this.sentCount,\n            received: this.receivedCount\n        };\n    }\n\n    attach(window: Window) {\n        this.window = window;\n    }\n\n    start() {\n        this.currentListener = (message: MessageEvent) => {\n            this.receiveMessage(message);\n        };\n        this.window.addEventListener('message', this.currentListener, false);\n    }\n\n    stop() {\n        if (this.currentListener) {\n            this.window.removeEventListener('message', this.currentListener, false);\n        }\n    }\n}\n","import uuid from 'uuid/v4'\nimport { Channel } from './windowChannel'\nimport { runInThisContext } from 'vm';\n\nexport interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n/*\n channelId: \"3b33179e-8a6d-4ae9-bc95-af4c0492eaa6\"\nframeId: \"frame_kb_html_be553ee5-645c-4737-80ba-dcb642632f0c\"\nhostId: \"host_kb_html_9a3b5d5d-bb92-43ff-a443-73267aa31323\"\nparams: {}\nparentHost: \"https://ci.kbase.us\"\n\n*/\n\n/*\nIFrameSimulator\nThis little doozey allows us to create a simulated iframe. We can query it for\n the params placed on the iframe, and talk to it via the window channel -- it has \n its own window channel.\n Good thing we designed the channel for multiple channels per window.\n*/\nclass IFrameSimulator {\n    params: IFrameParams | null\n    channel: Channel\n\n    constructor() {\n        this.params = null\n\n        // create a window channel.\n\n        this.channel = new Channel({\n            window: window,\n            host: document.location!.origin\n        })\n\n    }\n\n    getParamsFromIFrame(): IFrameParams {\n        return {\n            channelId: this.channel.id,\n            frameId: uuid(),\n            params: {\n                groupsServiceURL: 'services/groups',\n                userProfileServiceURL: 'services/user_profile/rpc',\n                workspaceServiceURL: 'services/ws'\n            },\n            parentHost: document.location!.origin\n        }\n    }\n}\n\n\n\nexport default IFrameSimulator","export interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n\nexport class IFrameIntegration {\n    getParamsFromIFrame() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-params')) {\n            // throw new Error('No params found in window!!');\n            return null\n        }\n        const params = window.frameElement.getAttribute('data-params');\n        if (params === null) {\n            // throw new Error('No params found in window!')\n            return null\n        }\n        return JSON.parse(decodeURIComponent(params)) as IFrameParams\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as types from '../../types'\nimport IFrameSimulator, { IFrameParams } from '../../lib/IFrameSimulator';\nimport { IFrameIntegration } from '../../lib/IFrameIntegration';\n\n// Action Definitions\n\n// export interface AppStart extends Action {\n//     type: ActionFlag.APP_START,\n\n// }\n\nexport interface AppSuccess extends Action {\n    type: ActionFlag.APP_SUCCESS,\n    config: types.AppConfig\n}\n\nexport interface AppError extends Action {\n    type: ActionFlag.APP_ERROR,\n    error: AppError\n}\n\n// Action Creators\n\nexport function appSuccess(config: types.AppConfig): AppSuccess {\n    return {\n        type: ActionFlag.APP_SUCCESS,\n        config: config\n    }\n}\n\nexport function appError(error: AppError): AppError {\n    return {\n        type: ActionFlag.APP_ERROR,\n        error: error\n    }\n}\n\n// Action Thunks\n\nexport function appStart() {\n    return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState: () => types.StoreState) => {\n        // check and see if we are in an iframe\n        const iframeParams = new IFrameIntegration().getParamsFromIFrame()\n\n        if (iframeParams) {\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.userProfileServiceURL\n                    }\n                }\n            }))\n        } else {\n            const fakeIframeParams = new IFrameSimulator().getParamsFromIFrame()\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: fakeIframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: fakeIframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: fakeIframeParams.params.workspaceServiceURL\n                    }\n                }\n            }))\n        }\n\n\n        // if so, get the params\n\n        // if not, use the fake to get it\n    }\n}\n","import * as React from 'react'\nimport './KBaseIntegration.css'\n\nimport { KBaseIntegrationProps, AppState } from '../types'\nimport { } from '../lib/IFrameSimulator'\n\nclass KBaseIntegration extends React.Component<KBaseIntegrationProps, object> {\n    constructor(props: KBaseIntegrationProps) {\n        super(props)\n\n        // const params = this.getParamsFromIFrame()\n\n        // console.log('params', params)\n\n        this.props.onAppStart()\n    }\n\n    render() {\n        // TODO: some test like \n        // {this.props.env === 'dev' ? this.buildAuthDev() : this.buildAuthProd()}\n\n        if (this.props.status === AppState.NONE) {\n            return (\n                <div className=\"KBaseIntegration\">\n                    Loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"KBaseIntegration\">\n                    {this.props.children}\n                </div>\n            )\n        }\n    }\n\n    // getParamsFromIFrame() {\n    //     if (!window.frameElement) {\n    //         return null\n    //     }\n    //     if (!window.frameElement.hasAttribute('data-params')) {\n    //         // throw new Error('No params found in window!!');\n    //         return null\n    //     }\n    //     const params = window.frameElement.getAttribute('data-params');\n    //     if (params === null) {\n    //         // throw new Error('No params found in window!')\n    //         return null\n    //     }\n    //     return JSON.parse(decodeURIComponent(params));\n    // }\n}\n\nexport default KBaseIntegration","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/app'\n\nimport KBaseIntegration from '../components/KBaseIntegration'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n    status: types.AppState\n}\n\ninterface DispatchProps {\n    onAppStart: () => void\n}\n\nexport function mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const { app: { status } } = state\n    return {\n        status\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAppStart: () => {\n            dispatch(actions.appStart() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(KBaseIntegration)","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport { BrowserRouter, Redirect, HashRouter } from 'react-router-dom';\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport * as types from './types';\nimport { SortOrgs } from './redux/actions/viewOrg';\nimport theReducer from './redux/reducers';\n\n// the app and subcomponents\nimport './App.css';\n\n// fontawesome setup\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner, faSearch } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSpinner, faSearch)\n\nimport Header from './components/Header';\nimport OrganizationsBrowser from './containers/OrganizationsBrowser';\nimport NewOrganization from './containers/NewOrganization';\nimport ViewOrganization from './containers/ViewOrganization';\nimport EditOrganization from './containers/EditOrganization'\nimport Auth from './containers/Auth'\nimport KBaseIntegration from './containers/KBaseIntegration'\n// import { types } from 'util';\n\n// Put the redux store together\n// Just for prototyping --- This is super naive and will change!\n// import {organizations} from './data/temp';\n\n// TODO: determine the environment\n\nconst inIframe = false\nconst deployEnvironment = 'prod'\n\n\nfunction makeEmptyNewOrganization(): types.NewOrganization {\n  return {\n    id: {\n      value: '',\n      status: types.FieldState.NONE,\n      error: {\n        type: types.UIErrorType.NONE\n      }\n    },\n    name: {\n      value: '',\n      status: types.FieldState.NONE,\n      error: {\n        type: types.UIErrorType.NONE\n      }\n    },\n    description: {\n      value: '',\n      status: types.FieldState.NONE,\n      error: {\n        type: types.UIErrorType.NONE\n      }\n    }\n  }\n}\n\n// Set up initial state \n// TODO: move to own file\nconst initialState: types.StoreState = {\n  rawOrganizations: [],\n  organizations: [],\n  totalCount: 0,\n  filteredCount: 0,\n  sortBy: 'name',\n  sortDirection: types.SortDirection.ASCENDING,\n  filter: 'all',\n  searchTerms: [],\n  selectedOrganizationId: null,\n  auth: {\n    status: types.AuthState.NONE,\n    authorization: {\n      token: '',\n      username: '',\n      realname: '',\n      roles: []\n    }\n  },\n  error: null,\n  searching: false,\n  app: {\n    status: types.AppState.NONE,\n    config: {\n      baseUrl: '',\n      services: {\n        Groups: {\n          url: ''\n        },\n        UserProfile: {\n          url: ''\n        },\n        Workspace: {\n          url: ''\n        }\n      }\n    }\n  },\n  addOrg: {\n    editState: types.EditState.NONE,\n    saveState: types.SaveState.NONE,\n    validationState: types.ValidationState.NONE,\n    newOrganization: makeEmptyNewOrganization()\n  },\n  updateOrg: {\n    pending: false\n  },\n  viewOrg: {\n    state: types.ViewOrgState.NONE\n  },\n  editOrg: {\n    state: types.EditOrgState.NONE\n  }\n}\n\n// TODO: remove the cast of reducer to any...\n// const middleware = [thunk]\n// const store = createStore<StoreState, SortOrgs, null, null>(theReducer as any, initialState, applyMiddleware(thunk));\nconst store = createStore(theReducer as any, initialState as any, compose(applyMiddleware(thunk)))\n\nclass App extends Component {\n\n  constructor(props: any) {\n    super(props)\n\n  }\n\n  buildInner() {\n\n  }\n\n  buildDev() {\n\n  }\n\n  buildProd() {\n\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Auth env={deployEnvironment}>\n          <KBaseIntegration>\n            <HashRouter basename=\"/orgs/\">\n              <div className=\"App\">\n                <div className=\"App-body\">\n                  <Route path=\"/organizations\" component={OrganizationsBrowser} />\n                  <Route path=\"/newOrganization\" component={NewOrganization} />\n                  {/* The destructuring below is ugly, but effective */}\n                  <Route path=\"/viewOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ViewOrganization id={id} />} />\n                  <Route path=\"/editOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <EditOrganization id={id} />} />\n                  <Redirect from=\"/\" to=\"/organizations\" exact={true} />\n                </div>\n              </div>\n            </HashRouter>\n          </KBaseIntegration>\n        </Auth>\n      </Provider>\n\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'typeface-oxygen';\nimport 'normalize.css';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}