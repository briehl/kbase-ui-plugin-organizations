{"version":3,"sources":["types/index.tsx","redux/actions/index.tsx","redux/reducers/addOrg.ts","redux/reducers/editOrg.ts","redux/reducers/viewOrg.ts","redux/reducers/searchOrgs.ts","redux/reducers/auth.ts","redux/reducers/app.ts","redux/reducers/index.tsx","components/Organizations.tsx","containers/Organizations.tsx","components/Header.tsx","components/OrganizationsBrowser.tsx","data/userProfile.ts","data/groups.tsx","data/workspace.ts","data/model.ts","redux/actions/viewOrg.ts","redux/actions/searchOrgs.ts","containers/OrganizationsBrowser.tsx","redux/actions/addOrg.ts","components/NewOrganization.tsx","containers/NewOrganization.tsx","components/ViewOrganization.tsx","containers/ViewOrganization.tsx","redux/actions/editOrg.ts","components/EditOrganization.tsx","containers/EditOrganization.tsx","components/Auth.tsx","data/auth.ts","redux/actions/auth.ts","containers/Auth.tsx","lib/windowChannel.ts","lib/IFrameSimulator.ts","lib/IFrameIntegration.ts","redux/actions/app.ts","components/KBaseIntegration.tsx","containers/KBaseIntegration.tsx","redux/state.tsx","App.tsx","index.tsx"],"names":["UIErrorType","AuthState","EditOrgState","SyncState","EditState","SaveState","ValidationState","FieldState","ViewOrgState","AppState","SortDirection","ActionFlag","reducer","state","action","type","ADD_ORG_START","Object","objectSpread","addOrg","saveState","SAVING","addOrgStart","ADD_ORG_SUCCESS","editState","UNEDITED","SAVED","addOrgSuccess","ADD_ORG_ERROR","SAVE_ERROR","error","addOrgError","ADD_ORG_EDIT_START","validationState","NONE","NEW","newOrganization","id","value","status","name","gravatarHash","description","addOrgEditStart","ADD_ORG_EDIT_FINISH","addOrgEditFinish","ADD_ORG_UPDATE_NAME_SUCCESS","EDITED","EDITED_OK","addOrgUpdateNameSuccess","ADD_ORG_UPDATE_NAME_ERROR","EDITED_ERROR","addOrgUpdateNameError","ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","addOrgUpdateGravatarHashSuccess","ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR","addOrgUpdateGravatarHashError","ADD_ORG_UPDATE_ID_SUCCESS","addOrgUpdateIdSuccess","ADD_ORG_UPDATE_ID_ERROR","addOrgUpdateIdError","ADD_ORG_UPDATE_DESCRIPTION_SUCCESS","addOrgUpdateDescriptionSuccess","ADD_ORG_UPDATE_DESCRIPTION_ERROR","addOrgUpdateDescriptionError","ADD_ORG_EVALUATE_OK","VALID","addOrgEvaluateOk","ADD_ORG_EVALUATE_ERRORS","INVALID","addOrgEvaluateErrors","EDIT_ORG_EDIT_START","editOrg","organizationId","editedOrganization","editOrgEditStart","EDIT_ORG_EDIT_SUCCESS","console","log","editOrgEditSuccess","EDIT_ORG_SAVE_START","editOrgSaveStart","EDIT_ORG_SAVE_SUCCESS","editOrgSaveSuccess","EDIT_ORG_SAVE_ERROR","editOrgSaveError","EDIT_ORG_UPDATE_NAME_SUCCESS","editOrgUpdateNameSuccess","EDIT_ORG_UPDATE_NAME_ERROR","editOrgUpdateNameError","EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","editOrgUpdateGravatarHashSuccess","EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR","editOrgUpdateGravatarHashError","EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS","editOrgUpdateDescriptionSuccess","EDIT_ORG_UPDATE_DESCRIPTION_ERROR","editOrgUpdateDescriptionError","EDIT_ORG_EVALUATE_OK","editOrgEvaluateOk","EDIT_ORG_EVALUATE_ERRORS","editOrgEvaluateErrors","VIEW_ORG_FETCH_START","viewOrg","types","FETCHING","viewOrgStart","VIEW_ORG_FETCH_SUCCESS","READY","organization","viewOrgSuccess","VIEW_ORG_FETCH_ERROR","ERROR","viewOrgError","VIEW_ORG_STOP","viewOrgStop","SEARCH_ORGS_START","_state$browseOrgs","browseOrgs","filter","sortBy","sortDirection","searchTerms","auth","authorization","username","searching","searchOrgsStart","SEARCH_ORGS_SUCCESS","organizations","totalCount","filteredCount","length","searchOrgsSuccess","SEARCH_ORGS_ERROR","searchOrgsError","SORT_ORGS_START","_state$browseOrgs2","sortOrgsStart","FILTER_ORGS_START","filterOrgsStart","AUTH_CHECK_START","CHECKING","message","token","realname","roles","authCheckStart","AUTH_AUTHORIZED","AUTHORIZED","authAuthorized","AUTH_UNAUTHORIZED","UNAUTHORIZED","authUnauthorized","AUTH_CHECK_ERROR","authCheckError","APP_SUCCESS","app","config","appSuccess","addOrgReducer","editOrgReducer","searchOrgsReducer","viewOrgReducer","authReducer","appReducer","Organizations","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","org","react","style","width","height","src","getAvatarUrl","index","className","String","renderAvatar","NavLink","to","concat","href","owner","target","_this2","map","renderOrg","es_alert","maxWidth","margin","renderOrgs","React","connect","Header","children","fa","verticalAlign","marginLeft","marginRight","flex","data-test","display","flexDirection","alignItems","buildSeparator","OrganizationsBrowser","searchInput","searchButton","onSearchOrgs","current","split","currentSearchInputValue","setState","e","preventDefault","doSearch","onSortOrgs","onFilterOrgs","onSearchInputChange","renderSortArea","renderFilterArea","group_default","a","onChange","onSortByChange","bind","es_radio","marginTop","onSortDirectionChange","ASCENDING","icon","DESCENDING","onFilterChange","onSubmit","placeholder","autoFocus","ref","es_button","disabled","haveSearchInput","form","htmlType","renderSearchIcon","onClick","onClearSearch","src_components_Header","fontWeight","fontStyle","renderSearchFeedback","justifyContent","es_select","onSortByChange2","defaultValue","dropdownMatchSelectWidth","Option","onSortDirectionChange2","onFilterChange2","renderHeader","renderSearchBar","renderSearchFilter","containers_Organizations","UserProfileClient","_ref","url","method","param","version","Math","random","slice","params","fetch","mode","cache","headers","Authorization","Content-Type","Accept","body","JSON","stringify","makeEmptyPayload","then","response","Error","statusText","json","info","makePayload","result","usernames","GroupsClient","exists","_ref2","newGroup","custom","gravatarhash","groupUpdate","WorkspaceClient","Model","group","profile","createdate","moddate","user","city","userdata","country","avatarOption","synced","gravatarDefault","createdAt","Date","modifiedAt","groups","profiles","briefGroupToBriefOrg","get","query","groupsServiceURL","userProfileClient","userProfileServiceURL","workspaceServiceURL","getGroups","owners","reduce","set","Map","keys","getUserProfiles","Array","from","profileMap","groupsToOrgs","orgs","direction","sort","b","localeCompare","warn","applySort","searchTermsRe","term","RegExp","every","termRe","test","applyOrgSearch","applyFilter","total","getGroupById","getUserProfile","userProfile","Promise","reject","groupExists","newOrg","_this3","createGroup","groupToOrg","orgUpdate","updateGroup","Validation","validateOrgId","validateOrgName","validateOrgDescription","match","StaticData","viewOrgFetch","dispatch","getState","_getState","services","Groups","UserProfile","Workspace","getOrg","catch","err","code","searchOrgs","_getState$browseOrgs","_getState$auth$author","queryOrgs","sortOrgs","_getState2","_getState2$browseOrgs","_getState2$auth$autho","filterOrgs","_getState3","_getState3$browseOrgs","_getState3$auth$autho","_ref3","actions","AddOrgEvaluateErrors","addOrgEdit","addOrgEvaluate","model","addOrgUpdateName","_Validation$validateO","_Validation$validateO2","slicedToArray","validatedName","addOrgUpdateGravatarHash","_Validation$validateO3","validateOrgGravatarHash","_Validation$validateO4","validateGravatarHash","addOrgUpdateId","_Validation$validateO5","_Validation$validateO6","validatedId","newModelFromState","addOrgUpdateDescription","_getState4","_model$validateOrgDes","_model$validateOrgDes2","validatedDescription","NewOrganization","canceling","origin","document","location","onAddOrgEdit","onAddOrg","persist","onUpdateName","onUpdateGravatarHash","onUpdateDescription","onUpdateId","onNameChange","color","onGravatarHashChange","onIdChange","minHeight","maxHeight","onDescriptionChange","getOrgAvatarUrl","renderOrgAvatar","dangerouslySetInnerHTML","__html","marked","_this$props","label","orgName","canSave","onClickCancel","Redirect","push","renderForm","renderPreview","renderLoadingHeader","_ref$addOrg","ViewOrganization","onViewOrg","renderEditRow","textAlign","avatarUrl","Intl","DateTimeFormat","month","day","year","format","renderEditButton","renderInfo","_ref$viewOrg","EditOrgEvaluateErrors","editOrgEdit","editableOrg","UNEDITED_OK","EDIT_ORG_EDIT_ERROR","editOrgSave","_getState2$editOrg","update","updateOrg","editOrgEvaluate","editOrgUpdateName","editOrgUpdateGravatarHash","editOrgUpdateDescription","_getState5","EditOrganization","onEditOrgEdit","onEditOrgSave","_ref$editOrg","Auth","tokenRef","checkAuth","onRemoveAuthorization","onAddAuthorization","onLoginClick","onLogoutClick","buildAuthToolbar","buildAuthForm","hosted","buildAuthProd","buildAuthDev","endpoints","AuthClient","path","join","makePath","Cookies","all","getTokenInfo","getMe","account","desc","_ref4","_ref5","_ref6","Listener","onSuccess","onError","WaitingListener","started","timeout","Message","payload","channel","uuidv4","created","envelope","Channel","window","host","channelId","awaitingResponse","waitingListeners","listeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","messageEvent","data","has","delete","handler","ex","awaiting","forEach","listener","messageId","success","listen","postMessage","getMessage","sendMessage","resolve","sendRequest","setTimeout","now","getTime","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","elapsed","_iterator","entries","Symbol","iterator","next","done","return","size","startMonitor","listenOnce","_this4","sent","received","_this5","receiveMessage","addEventListener","removeEventListener","IFrameSimulator","frameId","uuid","parentHost","IFrameIntegration","frameElement","hasAttribute","getAttribute","parse","decodeURIComponent","KBaseIntegration","onAppStart","iframeParams","getParamsFromIFrame","baseUrl","fakeIframeParams","StateInstances","rawOrganizations","selectedOrganizationId","makeEmptyEditableOrganization","pending","library","add","faSpinner","faSearch","initialState","makeInitialState","store","createStore","theReducer","compose","applyMiddleware","thunk","App","react_default","createElement","es","containers_Auth","containers_KBaseIntegration","HashRouter","basename","Route","component","containers_ViewOrganization","containers_EditOrganization","exact","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.06696a2e.chunk.js","sourcesContent":["import { ViewOrganizationState } from \"../components/ViewOrganization\";\nimport { types } from \"util\";\n\n/* Types from the organization service (approximately) */\n\n/*\n    Organization\n*/\n\nexport interface OrganizationUpdate {\n    name: string\n    gravatarHash: string | null\n    description: string\n}\n\nexport enum UIErrorType {\n    NONE = 0,\n    INFO,\n    WARNING,\n    ERROR\n}\n\nexport interface UIError {\n    type: UIErrorType,\n    message?: string\n}\n\nexport interface EditableOrganization {\n    id: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    name: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    gravatarHash: {\n        value: string | null\n        status: FieldState\n        error: UIError\n    }\n    description: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n}\n\nexport interface Owner {\n    username: string\n    realname: string\n    organization: string\n    city: string\n    state: string\n    country: string\n    avatarOption: string\n    gravatarHash: string\n    gravatarDefault: string\n}\n\nexport interface BriefOrganization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    owner: {\n        username: string\n        realname: string\n    }\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface Organization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    description: string\n    owner: Owner\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport interface EditedOrganization {\n    id: {\n        value: string,\n        error?: UIError\n    }\n    name: {\n        value: string,\n        error?: UIError\n    }\n    description: {\n        value: string,\n        error?: UIError\n    }\n}\n\n/*\n    Collection of organizations\n*/\n\nexport type Organizations = Array<Organization>\n\n\n/* REDUX */\n\nexport enum AuthState {\n    NONE = 0,\n    CHECKING,\n    AUTHORIZED,\n    UNAUTHORIZED,\n    ERROR\n}\n\nexport interface UserAuthorization {\n    token: string,\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\n\nexport interface Authorization {\n    status: AuthState,\n    message: string,\n    authorization: UserAuthorization\n}\n\n// export enum Filter {\n//     All = 1,\n//     Yours\n// }\n\n\nexport enum EditOrgState {\n    NONE = 0,\n    FETCHING,\n    READY,\n    EDITING_CAN_SAVE,\n    EDITING_ERRORS,\n    SAVING,\n    SAVED,\n    ERROR\n}\n\n// export enum AddOrgState {\n//     NONE = 0,\n//     READY,\n//     UNEDITED_OK,\n//     UNEDITED_\n//     EDITED_OK,\n//     EDITED_ERRORS,\n//     SAVING,\n//     SAVED,\n//     ERROR\n// }\n\nexport enum SyncState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    DIRTY = 'DIRTY',\n    CLEAN = 'CLEAN'\n}\n\nexport enum EditState {\n    NONE = 'NONE',\n    UNEDITED = 'UNEDITED',\n    EDITED = 'EDITED'\n}\n\n// TODO: or CLEAN to replace new and saved\nexport enum SaveState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    READY = 'READY',\n    SAVING = 'SAVING',\n    SAVED = 'SAVED',\n    SAVE_ERROR = 'SAVE_ERROR'\n}\n\nexport enum ValidationState {\n    NONE = 'NONE',\n    VALID = 'VALID',\n    INVALID = 'INVALID'\n}\n\nexport enum FieldState {\n    NONE = 0,\n    UNEDITED_OK,\n    UNEDITED_ERROR,\n    EDITED_OK,\n    EDITED_ERROR,\n    EDITED_WARNING\n}\n\nexport enum ViewOrgState {\n    NONE = 0,\n    INITIAL,\n    FETCHING,\n    READY,\n    ERROR\n}\n\nexport enum AppState {\n    NONE = 0,\n    LOADING,\n    READY,\n    ERROR\n}\n\nexport enum SortDirection {\n    ASCENDING = 'asc',\n    DESCENDING = 'desc'\n}\n\n\nexport interface StoreState {\n    browseOrgs: {\n        rawOrganizations: Array<BriefOrganization>\n        organizations: Array<BriefOrganization>\n        totalCount: number\n        filteredCount: number\n        sortBy: string\n        sortDirection: SortDirection\n        filter: string\n        searchTerms: Array<string>\n        selectedOrganizationId: string | null\n        searching: boolean\n    }\n\n    auth: Authorization\n    error: AppError | null\n\n    app: {\n        status: AppState,\n        config: AppConfig,\n        error?: AppError\n    },\n    addOrg: {\n        editState: EditState,\n        saveState: SaveState,\n        validationState: ValidationState,\n        newOrganization: EditableOrganization\n        error?: AppError\n    }\n    updateOrg: {\n        pending: boolean\n    }\n    viewOrg: {\n        state: ViewOrgState\n        organization?: Organization\n        error?: AppError\n    }\n    editOrg: {\n        organizationId: string,\n        editState: EditState,\n        saveState: SaveState,\n        validationState: ValidationState,\n        editedOrganization: EditableOrganization\n        error?: AppError\n    }\n}\n\n/* COMPONENT PROPS */\n\n\n\n\n// ADD ORG\n\n\n\n\n// export interface EditOrganizationProps {\n//     id: string,\n//     state: EditOrgState\n//     organization?: Organization\n//     editedOrganization?: EditedOrganization\n//     error?: AppError\n//     onEditOrg: (id: string) => void\n//     onUpdateOrg: () => void\n//     onUpdateName: (name: string) => void,\n//     onUpdateDescription: (description: string) => void\n// }\n\n\nexport interface AppError {\n    code: string,\n    message: string\n}\n\nexport interface AppConfig {\n    baseUrl: string,\n    services: {\n        Groups: {\n            url: string\n        },\n        UserProfile: {\n            url: string\n        },\n        Workspace: {\n            url: string\n        }\n    }\n}\n\nexport interface AuthProps {\n    authorization: Authorization,\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n    hosted: boolean,\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport * as types from '../../types';\nimport { Model } from '../../data/model'\n\nexport enum ActionFlag {\n    APP = 1,\n    APP_START,\n    APP_SUCCESS,\n    // APP_SUCCESS_IFRAME,\n    // APP_SUCCESS_SOLO,\n    APP_ERROR,\n\n    SORT_ORGS,\n    SORT_ORGS_START,\n\n    FILTER_ORGS,\n    FILTER_ORGS_START,\n\n    SEARCH_ORGS,\n    SEARCH_ORGS_START,\n    SEARCH_ORGS_SUCCESS,\n    SEARCH_ORGS_ERROR,\n\n    UPDATE_ORG,\n    UPDATE_ORG_START,\n    UPDATE_ORG_SUCCESS,\n    UPDATE_ORG_ERROR,\n\n    // viewing org\n    VIEW_ORG_FETCH,\n    VIEW_ORG_FETCH_START,\n    VIEW_ORG_FETCH_SUCCESS,\n    VIEW_ORG_FETCH_ERROR,\n    VIEW_ORG_STOP,\n\n\n    // add org fields\n    ADD_ORG_EDIT,\n    ADD_ORG_EDIT_START,\n    ADD_ORG_EDIT_FINISH,\n\n    ADD_ORG_UPDATE_NAME,\n    ADD_ORG_UPDATE_NAME_SUCCESS,\n    ADD_ORG_UPDATE_NAME_ERROR,\n\n    ADD_ORG_UPDATE_GRAVATAR_HASH,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    ADD_ORG_UPDATE_ID,\n    ADD_ORG_UPDATE_ID_SUCCESS,\n    ADD_ORG_UPDATE_ID_ERROR,\n\n    ADD_ORG_UPDATE_DESCRIPTION,\n    ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    ADD_ORG_EVALUATE,\n    ADD_ORG_EVALUATE_OK,\n    ADD_ORG_EVALUATE_ERRORS,\n\n    ADD_ORG,\n    ADD_ORG_START,\n    ADD_ORG_SUCCESS,\n    ADD_ORG_ERROR,\n\n    // editing org\n    EDIT_ORG_EDIT,\n    EDIT_ORG_EDIT_START,\n    EDIT_ORG_EDIT_SUCCESS,\n    EDIT_ORG_EDIT_ERROR,\n\n    EDIT_ORG_SAVE,\n    EDIT_ORG_SAVE_START,\n    EDIT_ORG_SAVE_SUCCESS,\n    EDIT_ORG_SAVE_ERROR,\n\n    // edit org, field level updates\n    EDIT_ORG_UPDATE_NAME,\n    EDIT_ORG_UPDATE_NAME_SUCCESS,\n    EDIT_ORG_UPDATE_NAME_ERROR,\n\n    EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    EDIT_ORG_UPDATE_DESCRIPTION,\n    EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    EDIT_ORG_EVALUATE,\n    EDIT_ORG_EVALUATE_OK,\n    EDIT_ORG_EVALUATE_ERRORS,\n\n    // Auth\n    AUTH_CHECK,\n    AUTH_CHECK_START,\n    AUTH_CHECK_ERROR,\n    AUTH_AUTHORIZED,\n    AUTH_UNAUTHORIZED,\n    AUTH_REMOVE_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION_ERROR\n}\n\n\n","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    AddOrgEditStart, AddOrgEditFinish,\n    AddOrgUpdateNameSuccess, AddOrgUpdateNameError,\n    AddOrgUpdateIdSuccess, AddOrgUpdateIdError,\n    AddOrgUpdateDescriptionSuccess, AddOrgUpdateDescriptionError,\n    AddOrgError, AddOrgStart, AddOrgSuccess, AddOrgEvaluateOK, AddOrgEvaluateErrors, AddOrgUpdateGravatarHashError, AddOrgUpdateGravatarHashSuccess\n} from '../actions/addOrg'\n\n// ADD ORG\n\nexport function addOrgStart(state: StoreState, action: AddOrgStart): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function addOrgSuccess(state: StoreState, action: AddOrgSuccess): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function addOrgError(state: StoreState, action: AddOrgError): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function addOrgEvaluateOk(state: StoreState, action: AddOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function addOrgEvaluateErrors(state: StoreState, action: AddOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\nexport function addOrgEditStart(state: StoreState, action: AddOrgEditStart) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            newOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEditFinish(state: StoreState, action: AddOrgEditFinish) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// Name\nexport function addOrgUpdateNameSuccess(state: StoreState, action: AddOrgUpdateNameSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateNameError(state: StoreState, action: AddOrgUpdateNameError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function addOrgUpdateGravatarHashSuccess(state: StoreState, action: AddOrgUpdateGravatarHashSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(state: StoreState, action: AddOrgUpdateGravatarHashError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\nexport function addOrgUpdateIdSuccess(state: StoreState, action: AddOrgUpdateIdSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateIdError(state: StoreState, action: AddOrgUpdateIdError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(state: StoreState, action: AddOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionError(state: StoreState, action: AddOrgUpdateDescriptionError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.ADD_ORG_START:\n            return addOrgStart(state, action as AddOrgStart)\n        case ActionFlag.ADD_ORG_SUCCESS:\n            return addOrgSuccess(state, action as AddOrgSuccess)\n        case ActionFlag.ADD_ORG_ERROR:\n            return addOrgError(state, action as AddOrgError)\n        case ActionFlag.ADD_ORG_EDIT_START:\n            return addOrgEditStart(state, action as AddOrgEditStart)\n        case ActionFlag.ADD_ORG_EDIT_FINISH:\n            return addOrgEditFinish(state, action as AddOrgEditFinish)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS:\n            return addOrgUpdateNameSuccess(state, action as AddOrgUpdateNameSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_ERROR:\n            return addOrgUpdateNameError(state, action as AddOrgUpdateNameError)\n\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return addOrgUpdateGravatarHashSuccess(state, action as AddOrgUpdateGravatarHashSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return addOrgUpdateGravatarHashError(state, action as AddOrgUpdateGravatarHashError)\n\n        case ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS:\n            return addOrgUpdateIdSuccess(state, action as AddOrgUpdateIdSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_ID_ERROR:\n            return addOrgUpdateIdError(state, action as AddOrgUpdateIdError)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return addOrgUpdateDescriptionSuccess(state, action as AddOrgUpdateDescriptionSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR:\n            return addOrgUpdateDescriptionError(state, action as AddOrgUpdateDescriptionError)\n        case ActionFlag.ADD_ORG_EVALUATE_OK:\n            return addOrgEvaluateOk(state, action as AddOrgEvaluateOK)\n        case ActionFlag.ADD_ORG_EVALUATE_ERRORS:\n            return addOrgEvaluateErrors(state, action as AddOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    EditOrgEditStart, EditOrgEditSuccess, EditOrgEditError,\n    EditOrgEvaluateOK, EditOrgEvaluateErrors,\n    EditOrgSave, EditOrgSaveStart, EditOrgSaveError, EditOrgSaveSuccess,\n    EditOrgUpdateNameSuccess, EditOrgUpdateNameError,\n    // EditOrgUpdateIdSuccess, EditOrgUpdateIdError,\n    EditOrgUpdateDescriptionSuccess, EditOrgUpdateDescriptionError,\n    EditOrgUpdateGravatarHashError, EditOrgUpdateGravatarHashSuccess\n} from '../actions/editOrg'\n\n\n\n// EDIT ORG\n\n// Edit session loading\n\nexport function editOrgEditStart(state: StoreState, action: EditOrgEditStart) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            // TODO: get rid of this...\n            organizationId: action.id,\n            editedOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgEditSuccess(state: StoreState, action: EditOrgEditSuccess) {\n    console.log('edit org success?', action)\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editedOrganization: action.editedOrganization,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// save\n\nexport function editOrgSaveStart(state: StoreState, action: EditOrgSaveStart): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function editOrgSaveSuccess(state: StoreState, action: EditOrgSaveSuccess): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function editOrgSaveError(state: StoreState, action: EditOrgSaveError): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\n// Evaluate edit session\n\nexport function editOrgEvaluateOk(state: StoreState, action: EditOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function editOrgEvaluateErrors(state: StoreState, action: EditOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\n\n\n// Name\nexport function editOrgUpdateNameSuccess(state: StoreState, action: EditOrgUpdateNameSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateNameError(state: StoreState, action: EditOrgUpdateNameError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function editOrgUpdateGravatarHashSuccess(state: StoreState, action: EditOrgUpdateGravatarHashSuccess) {\n    console.log('hmm', action)\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(state: StoreState, action: EditOrgUpdateGravatarHashError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\n// export function editOrgUpdateIdSuccess(state: StoreState, action: EditOrgUpdateIdSuccess) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_OK,\n//                     error: {\n//                         type: UIErrorType.NONE\n//                     }\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// export function editOrgUpdateIdError(state: StoreState, action: EditOrgUpdateIdError) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_ERROR,\n//                     error: action.error\n//                 }\n//             }\n//         }\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(state: StoreState, action: EditOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateDescriptionError(state: StoreState, action: EditOrgUpdateDescriptionError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.EDIT_ORG_EDIT_START:\n            return editOrgEditStart(state, action as EditOrgEditStart)\n        case ActionFlag.EDIT_ORG_EDIT_SUCCESS:\n            return editOrgEditSuccess(state, action as EditOrgEditSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_START:\n            return editOrgSaveStart(state, action as EditOrgSaveStart)\n        case ActionFlag.EDIT_ORG_SAVE_SUCCESS:\n            return editOrgSaveSuccess(state, action as EditOrgSaveSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_ERROR:\n            return editOrgSaveError(state, action as EditOrgSaveError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS:\n            return editOrgUpdateNameSuccess(state, action as EditOrgUpdateNameSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR:\n            return editOrgUpdateNameError(state, action as EditOrgUpdateNameError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return editOrgUpdateGravatarHashSuccess(state, action as EditOrgUpdateGravatarHashSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return editOrgUpdateGravatarHashError(state, action as EditOrgUpdateGravatarHashError)\n\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS:\n        //     return editOrgUpdateIdSuccess(state, action as EditOrgUpdateIdSuccess)\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_ERROR:\n        //     return editOrgUpdateIdError(state, action as EditOrgUpdateIdError)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return editOrgUpdateDescriptionSuccess(state, action as EditOrgUpdateDescriptionSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR:\n            return editOrgUpdateDescriptionError(state, action as EditOrgUpdateDescriptionError)\n        case ActionFlag.EDIT_ORG_EVALUATE_OK:\n            return editOrgEvaluateOk(state, action as EditOrgEvaluateOK)\n        case ActionFlag.EDIT_ORG_EVALUATE_ERRORS:\n            return editOrgEvaluateErrors(state, action as EditOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/viewOrg'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\n\nexport function viewOrgStart(state: types.StoreState,\n    action: actions.ViewOrgStart): types.StoreState {\n    return {\n        ...state,\n        viewOrg: { ...state.viewOrg, state: types.ViewOrgState.FETCHING }\n    }\n}\n\nexport function viewOrgSuccess(state: types.StoreState,\n    action: actions.ViewOrgSuccess): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.READY,\n            organization: action.organization\n        }\n    }\n}\n\nexport function viewOrgError(state: types.StoreState,\n    action: actions.ViewOrgError): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function viewOrgStop(state: types.StoreState, action: actions.ViewOrgStop): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            state: types.ViewOrgState.NONE\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_FETCH_START:\n            return viewOrgStart(state, action as actions.ViewOrgStart)\n        case ActionFlag.VIEW_ORG_FETCH_SUCCESS:\n            return viewOrgSuccess(state, action as actions.ViewOrgSuccess)\n        case ActionFlag.VIEW_ORG_FETCH_ERROR:\n            return viewOrgError(state, action as actions.ViewOrgError)\n        case ActionFlag.VIEW_ORG_STOP:\n            return viewOrgStop(state, action as actions.ViewOrgStop)\n        default:\n            return null\n    }\n}\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/searchOrgs'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\nexport function applyOrgSearch(orgs: Organizations, searchTerms: Array<string>) {\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTerms.every((term) => {\n            // todo : make more efficient!!!\n            return (new RegExp(term, 'i').test(org.name));\n        })\n    })\n\n    return {\n        organizations: filteredOrgs,\n        totalCount: orgs.length,\n        filteredCount: filteredOrgs.length\n    }\n}\n\n// TODO:\n// dispatch the start of the request\n// do the request\n// dispatch the success (will be same for all queries?)\n// dispatch the error\n// FOR NOW:\n// do it here...\nexport function searchOrgsStart(state: types.StoreState, action: actions.SearchOrgsStart): types.StoreState {\n\n    const { browseOrgs: { filter, sortBy, sortDirection } } = state\n    const query: Query = {\n        searchTerms: action.searchTerms,\n        filter: filter,\n        sortBy: sortBy,\n        sortDirection: sortDirection,\n        username: state.auth.authorization.username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        // organizations: result.organizations, \n        // totalCount: result.total, \n        // filteredCount: result.organizations.length,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            searchTerms: action.searchTerms\n        }\n    }\n}\n\nexport function searchOrgsSuccess(state: types.StoreState, action: actions.SearchOrgsSuccess): types.StoreState {\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: false,\n            organizations: action.organizations,\n            totalCount: action.totalCount,\n            filteredCount: action.organizations.length\n        }\n\n    }\n}\n\nexport function searchOrgsError(state: types.StoreState, action: actions.SearchOrgsError): types.StoreState {\n    return { ...state, error: action.error }\n}\n\n\nexport function sortOrgsStart(state: types.StoreState, action: actions.SortOrgsStart): types.StoreState {\n    const {\n        browseOrgs: { searchTerms, filter },\n        auth: { authorization: { username } }\n    } = state\n    const query: Query = {\n        searchTerms: searchTerms,\n        filter: filter,\n        sortBy: action.sortBy,\n        sortDirection: action.sortDirection,\n        username: username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            sortBy: action.sortBy,\n            sortDirection: action.sortDirection\n        }\n    }\n}\n\n\ninterface Query {\n    searchTerms: Array<string>,\n    username: string,\n    sortBy: string,\n    sortDirection: types.SortDirection,\n    filter: string\n}\n\ninterface QueryResults {\n    organizations: Organizations,\n    total: number\n}\n\nexport function filterOrgsStart(state: types.StoreState,\n    action: actions.FilterOrgsStart): types.StoreState {\n    const { filter } = action\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            filter\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.SEARCH_ORGS_START:\n            return searchOrgsStart(state, action as actions.SearchOrgsStart)\n        case ActionFlag.SEARCH_ORGS_SUCCESS:\n            return searchOrgsSuccess(state, action as actions.SearchOrgsSuccess)\n        case ActionFlag.SEARCH_ORGS_ERROR:\n            return searchOrgsError(state, action as actions.SearchOrgsError)\n        // case ActionFlag.SORT_ORGS_STAR:\n        //     return sortOrgs(state, action as actions.SortOrgs)\n        case ActionFlag.SORT_ORGS_START:\n            return sortOrgsStart(state, action as actions.SortOrgsStart)\n        case ActionFlag.FILTER_ORGS_START:\n            return filterOrgsStart(state, action as actions.FilterOrgsStart)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\n\nimport { ActionFlag } from '../actions'\nimport { StoreState, AuthState } from '../../types'\nimport { AuthCheckStart, AuthAuthorized, AuthUnauthorized, AuthCheckError } from '../actions/auth';\n\nexport function authCheckStart(state: StoreState, action: AuthCheckStart): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.CHECKING,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authCheckError(state: StoreState, action: AuthCheckError): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.ERROR,\n            message: action.error.message,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authAuthorized(state: StoreState, action: AuthAuthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.AUTHORIZED,\n            message: '',\n            authorization: {\n                token: action.token,\n                username: action.username,\n                realname: action.realname,\n                roles: action.roles\n            }\n        }\n    }\n}\n\nexport function authUnauthorized(state: StoreState, action: AuthUnauthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.UNAUTHORIZED,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.AUTH_CHECK_START:\n            return authCheckStart(state, action as AuthCheckStart)\n        case ActionFlag.AUTH_AUTHORIZED:\n            return authAuthorized(state, action as AuthAuthorized)\n        case ActionFlag.AUTH_UNAUTHORIZED:\n            return authUnauthorized(state, action as AuthUnauthorized)\n        case ActionFlag.AUTH_CHECK_ERROR:\n            return authCheckError(state, action as AuthCheckError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { ActionFlag } from '../actions'\nimport { AppSuccess } from '../actions/app';\nimport { StoreState, AppState } from '../../types';\n\nexport function appSuccess(state: StoreState, action: AppSuccess): StoreState {\n    return {\n        ...state,\n        app: {\n            status: AppState.READY,\n            config: action.config\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.APP_SUCCESS:\n            return appSuccess(state, action as AppSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState } from '../../types'\nimport addOrgReducer from './addOrg'\nimport editOrgReducer from './editOrg'\nimport viewOrgReducer from './viewOrg'\nimport searchOrgsReducer from './searchOrgs'\nimport authReducer from './auth'\nimport appReducer from './app'\n\n\nexport function reducer(state: StoreState, action: Action): StoreState {\n    return addOrgReducer(state, action) ||\n        editOrgReducer(state, action) ||\n        searchOrgsReducer(state, action) ||\n        viewOrgReducer(state, action) ||\n        authReducer(state, action) ||\n        appReducer(state, action) ||\n        state;\n}\n\nexport default reducer","import * as React from 'react';\nimport './Organizations.css';\nimport * as types from '../types';\nimport { NavLink } from 'react-router-dom';\nimport { Alert } from 'antd';\nimport { BriefOrganization } from '../types';\n\n// TODO: need more ergonomic way to resolve the common issue of data types interfering with \n// component types.\n\nexport interface OrganizationsProps {\n    organizations: Array<BriefOrganization>\n}\n\nexport interface OrganizationsState {\n    searchTerms: Array<string>\n}\n\nexport class Organizations extends React.Component<OrganizationsProps, OrganizationsState> {\n\n    constructor(props: OrganizationsProps) {\n        super(props)\n\n        this.state = {\n            searchTerms: []\n        }\n    }\n\n    getAvatarUrl(org: BriefOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderAvatar(org: BriefOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getAvatarUrl(org)} />\n        )\n    }\n\n    renderOrg(org: BriefOrganization, index: Number) {\n        return (\n            <div className=\"row\" key={String(index)}>\n                <div className=\"col2\">\n                    {this.renderAvatar(org)}\n                </div>\n                <div className=\"col1\">\n                    <div className=\"orgName\">\n                        <NavLink to={`/viewOrganization/${org.id}`}>{org.name}</NavLink>\n                    </div>\n                    <div className=\"orgOwner\">\n                        <span className=\"field-label\">owner</span>\n                        <a href={\"/#people/\" + org.owner.username} target=\"_blank\">{org.owner.realname} ❨{org.owner.username}❩</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderOrgs() {\n        if (this.props.organizations.length > 0) {\n            return (\n                this.props.organizations.map((org: BriefOrganization, index) => {\n                    return (\n                        this.renderOrg(org, index)\n                    )\n                })\n            )\n        } else {\n            return (\n                <Alert type=\"warning\"\n                    style={{ maxWidth: '20em', margin: '20px auto 0 auto' }}\n                    message=\"Sorry, no organizations were found.\" />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Organizations\">\n                {this.renderOrgs()}\n            </div>\n        )\n    }\n}\n\nexport default Organizations;","import { Organizations, OrganizationsProps } from '../components/Organizations';\nimport { StoreState } from '../types';\nimport { connect } from 'react-redux';\n\nexport function mapStateToProps(state: StoreState): OrganizationsProps {\n    const { browseOrgs: { organizations } } = state;\n    return {\n        organizations\n    }\n}\n\nexport default connect(mapStateToProps)(Organizations);","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './Header.css';\nimport { FaUsers, FaChevronRight } from 'react-icons/fa'\n\nexport interface HeaderProps {\n}\n\nclass Header extends React.Component<HeaderProps, object> {\n\n    buildSeparator() {\n        if (this.props.children) {\n            return (\n                <FaChevronRight style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Header\">\n                <div style={{ flex: '0 0 auto' }}>\n                    <NavLink to=\"/organizations\">\n                        <FaUsers style={{ verticalAlign: 'middle' }} />\n                        {' '}\n                        <span data-test=\"orgs-label\">Orgs</span>\n                    </NavLink>\n                </div>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {this.buildSeparator()}\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Organizations from '../containers/Organizations';\nimport { SortDirection } from '../types';\n\nimport './OrganizationsBrowser.css';\nimport { FaSearch, FaSpinner } from 'react-icons/fa'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Icon, Radio, Tooltip, Select } from 'antd'\nimport Header from './Header';\nimport RadioGroup from 'antd/lib/radio/group';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nexport interface OrganizationsBrowserProps {\n    totalCount: number;\n    filteredCount: number;\n    sortBy: string;\n    sortDirection: SortDirection;\n    filter: string;\n    searching: boolean;\n    onSearchOrgs: (searchTerms: Array<string>) => void;\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void;\n    onFilterOrgs: (filter: string) => void;\n}\n\nexport interface OrganizationsBrowserState {\n    searchInput: string\n}\nclass OrganizationsBrowser extends React.Component<OrganizationsBrowserProps, OrganizationsBrowserState> {\n\n    searchInput: React.RefObject<HTMLInputElement>;\n    searchButton: React.RefObject<Button>;\n\n    constructor(props: OrganizationsBrowserProps) {\n        super(props)\n\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.state = {\n            searchInput: ''\n        }\n\n        this.props.onSearchOrgs([])\n    }\n\n    doSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        const searchTerms = this.searchInput.current.value.split(/[\\s+]/)\n        // dispatch the search event\n        this.props.onSearchOrgs(searchTerms);\n    }\n\n    haveSearchInput() {\n        if (this.state.searchInput && this.state.searchInput.length > 0) {\n            return true\n        }\n        return false\n    }\n\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.setState({ searchInput: currentSearchInputValue })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.doSearch()\n    }\n\n    onSortByChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(e.target.value, this.props.sortDirection)\n    }\n\n    onSortByChange2(value: string) {\n        this.props.onSortOrgs(value, this.props.sortDirection)\n    }\n\n\n    onSortDirectionChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(this.props.sortBy, e.target.value)\n    }\n\n    onSortDirectionChange2(value: string) {\n        this.props.onSortOrgs(this.props.sortBy, value as SortDirection)\n    }\n\n    onFilterChange(e: RadioChangeEvent) {\n        this.props.onFilterOrgs(e.target.value)\n    }\n\n    onFilterChange2(value: string) {\n        this.props.onFilterOrgs(value)\n    }\n\n    onClearSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        this.searchInput.current.value = ''\n        this.onSearchInputChange()\n        // this.searchButton.current!.handleClick(new MouseEvent<HTMLButtonElement>('click'))\n        // const event = new Event('change', { bubbles: true })\n        // this.searchInput.current.dispatchEvent(event)\n        this.doSearch()\n    }\n\n    renderControlArea() {\n        return (\n            <div className=\"OrganizationsBrowser-controlArea\">\n                {/* {this.renderSortArea()} */}\n                {this.renderSortArea()}\n                {this.renderFilterArea()}\n            </div>\n        )\n    }\n\n    renderSortArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    sort\n                </div>\n                <RadioGroup onChange={this.onSortByChange.bind(this)} value={this.props.sortBy}>\n                    <Radio className=\"radio\" value=\"name\">Org name</Radio>\n                    <Radio className=\"radio\" value=\"owner\">Owner</Radio>\n                </RadioGroup>\n\n                <div style={{ marginTop: '10px' }}>\n                    <RadioGroup onChange={this.onSortDirectionChange.bind(this)} value={this.props.sortDirection}>\n                        <Radio className=\"radio\" value={SortDirection.ASCENDING}><Icon type=\"sort-ascending\" /> Ascending</Radio>\n                        <Radio className=\"radio\" value={SortDirection.DESCENDING}><Icon type=\"sort-descending\" /> Descending</Radio>\n                    </RadioGroup>\n                </div>\n            </div>\n        )\n    }\n\n    renderFilterArea() {\n        return (\n            <div className=\"controlGroup\">\n                <div className=\"header\">\n                    filter\n                </div>\n                <RadioGroup onChange={this.onFilterChange.bind(this)} value={this.props.filter}>\n                    <Radio className=\"radio\" value=\"all\">All</Radio>\n                    <Radio className=\"radio\" value=\"owned\">Owned by you</Radio>\n                    <Radio className=\"radio\" value=\"notOwned\">Owned by others</Radio>\n                </RadioGroup>\n            </div>\n        )\n    }\n\n    renderSearchFeedback() {\n        if (this.props.totalCount === 0) {\n            return (\n                <span>\n                    No organizations in the system\n                </span>\n            )\n        }\n        if (this.props.filteredCount === 0) {\n            return (\n                <span>\n                    No organizations found out of\n                    {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    available.\n                </span>\n            )\n\n        }\n        if (this.props.totalCount === this.props.filteredCount) {\n            return (\n                <span>\n                    Showing all\n                {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    organizations\n                </span>\n            )\n        }\n\n        return (\n            <span>\n                Showing\n                {' '}\n                {this.props.filteredCount}\n                {' '}\n                out of\n                {' '}\n                {this.props.totalCount}\n                {' '}\n                organizations\n            </span>\n        )\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchBar() {\n        return (\n            <form id=\"searchForm\" className=\"OrganizationsBrowser-searchBar\" onSubmit={this.onSubmit.bind(this)}>\n                <input\n                    placeholder=\"Search Organizations\"\n                    onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                    ref={this.searchInput}></input>\n                {/* <Tooltip\n                    title=\"Enter one or more words to search organizations by name or owner\">\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{ alignSelf: 'end' }} />\n                </Tooltip> */}\n                <Button\n                    disabled={!this.haveSearchInput()}\n                    ref={this.searchButton}\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                    {/* Search */}\n                </Button>\n                <Button\n                    onClick={this.onClearSearch.bind(this)}\n                    disabled={!this.haveSearchInput()}\n                    icon=\"close\"\n                >\n\n                    {/* Show all */}\n                </Button>\n                {/* <div className=\"message\">\n                    {this.renderSearchFeedback()}\n                </div> */}\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Browse and Search Organizations\n                        </span>\n                        <Icon type=\"right\" style={{ margin: '0 4px' }} />\n                        <span style={{ fontWeight: 'normal', fontStyle: 'italic' }}>\n                            {this.renderSearchFeedback()}\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <NavLink to=\"/newOrganization\"><Button icon=\"plus-circle\">Create Organization</Button></NavLink>\n                    </div>\n\n                </div>\n            </Header>\n        )\n    }\n\n    renderSearchFilter() {\n        return (\n            <div>\n                <span className=\"field-label\">sort by</span>\n                <Select onChange={this.onSortByChange2.bind(this)}\n                    defaultValue={this.props.sortBy}\n                    style={{ width: '8em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"name\" key=\"name\">Org name</Select.Option>\n                    <Select.Option value=\"owner\" key=\"owner\">Owner</Select.Option>\n                </Select>\n                <Select onChange={this.onSortDirectionChange2.bind(this)}\n                    style={{ width: '10em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortDirection}>\n                    <Select.Option value={SortDirection.ASCENDING} key=\"name\"><Icon type=\"sort-ascending\" />Ascending</Select.Option>\n                    <Select.Option value={SortDirection.DESCENDING} key=\"owner\"><Icon type=\"sort-descending\" />Descending</Select.Option>\n                </Select>\n                <span className=\"field-label\" style={{ marginLeft: '10px' }}>filter</span>\n                <Select onChange={this.onFilterChange2.bind(this)}\n                    defaultValue={this.props.filter}\n                    style={{ width: '12em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"all\" key=\"all\">All</Select.Option>\n                    <Select.Option value=\"owned\" key=\"owned\">Owned by you</Select.Option>\n                    <Select.Option value=\"notOwned\" key=\"nowtOwned\">Not owned by you</Select.Option>\n                </Select>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationsBrowser\">\n                {this.renderHeader()}\n                <div className=\"searchBarRow\">\n                    <div className=\"searchBarCol\">\n                        {this.renderSearchBar()}\n                    </div>\n                    <div className=\"sortCol\">\n                        {this.renderSearchFilter()}\n                    </div>\n                </div>\n                <div className=\"bodyRow\">\n\n                    <div className=\"col2\">\n                        <Organizations />\n                    </div>\n                    {/* <div className=\"col1\">\n                        {this.renderControlArea()}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OrganizationsBrowser","\nexport interface User {\n    username: string,\n    realname: string,\n    thumbnail: string\n}\n\nexport interface UserProfile {\n    user: User,\n    profile: {\n        synced: {\n            gravatarHash: string\n        },\n        userdata: {\n            organization: string\n            city: string\n            state: string\n            country: string\n            avatarOption: string\n            gravatarDefault: string\n        }\n    }\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class UserProfileClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('version'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((info) => {\n                console.log('info', info)\n            })\n    }\n\n    getUserProfile(username: string): Promise<UserProfile> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0][0] as UserProfile\n            })\n    }\n\n    getUserProfiles(usernames: Array<string>): Promise<Array<UserProfile>> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', usernames))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0] as Array<UserProfile>\n            })\n    }\n}","import { string } from \"prop-types\";\n\nexport interface GroupsServiceInfo {\n    servname: string;\n    version: string;\n    servertime: number;\n    gitcommithash: string\n}\n\nexport interface BriefGroup {\n    id: string;\n    name: string;\n    custom: {\n        gravatarhash?: string\n    }\n    owner: string;\n    type: string;\n    // createdAt: number;\n    // modifiedAt: number\n}\n\nexport type GroupList = Array<BriefGroup>\n\nexport type Username = string;\n\nexport interface WorkspaceInfo {\n    wsid: number\n    name: string\n    narrname: string\n    public: boolean\n    admin: boolean\n}\n\nexport interface Group {\n    id: string\n    name: string\n    owner: Username\n    type: string\n    admins: Array<Username>\n    members: Array<Username>\n    description: string\n    createdate: number\n    moddate: number\n    workspaces: Array<WorkspaceInfo>\n    custom: {\n        gravatarhash?: string\n    }\n}\n\nexport interface NewGroup {\n    id: string\n    name: string\n    gravatarhash: string | null\n    type: string\n    description: string\n}\n\nexport interface GroupUpdate {\n    name: string\n    gravatarhash: string | null\n    description: string\n}\n\nexport interface Request {\n    id: string\n    groupid: string\n    requester: Username\n    type: string\n    status: string\n    targetuser: Username\n    targetws: number\n    createddate: number\n    expireddate: number\n    moddate: number\n}\n\nexport interface ErrorInfo {\n    appcode: number\n    apperror: string\n    callid: string\n    httpcode: number\n    httpstatus: string\n    message: string\n    time: number\n}\n\nexport interface ErrorResult {\n    error: ErrorInfo\n}\n\n// Error types: (appcode)\n// 10000\tAuthentication failed\n// 10010\tNo authentication token\n// 10020\tInvalid token\n// 20000\tUnauthorized\n// 30000\tMissing input parameter\n// 30001\tIllegal input parameter\n// 30010\tIllegal user name\n// 40000\tGroup already exists\n// 40010\tRequest already exists\n// 40020\tUser already group member\n// 40030\tWorkspace already in group\n// 50000\tNo such group\n// 50010\tNo such request\n// 50020\tNo such user\n// 50030\tNo such workspace\n// 60000\tUnsupported operation\n\nexport interface GroupExists {\n    exists: boolean\n}\nexport class GroupsClient {\n    token: string;\n    url: string;\n\n    constructor({ token, url }: { token: string, url: string }) {\n        this.token = token\n        this.url = url\n    }\n\n    getInfo(): Promise<GroupsServiceInfo> {\n        return fetch(this.url + '/', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((result) => {\n                return result as GroupsServiceInfo;\n            });\n    }\n\n    groupExists(id: string): Promise<GroupExists> {\n        return fetch(this.url + '/group/' + id + '/exists')\n            .then((response) => {\n                return response.json()\n            })\n            .then((exists) => {\n                return exists as GroupExists\n            })\n    }\n\n    getGroups(): Promise<GroupList> {\n        return fetch(this.url + '/group', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result: GroupList) => {\n                return result.filter(({ type }) => type === 'Organization')\n            })\n    }\n\n    getGroupById(id: string): Promise<Group> {\n        return fetch(this.url + '/group/' + id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    return null\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    createGroup(newGroup: NewGroup): Promise<Group> {\n        return fetch(this.url + '/group/' + newGroup.id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n            body: JSON.stringify({\n                name: newGroup.name,\n                custom: {\n                    gravatarhash: newGroup.gravatarhash\n                },\n                type: newGroup.type,\n                description: newGroup.description\n            })\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    updateGroup(id: string, groupUpdate: GroupUpdate): Promise<void> {\n        return fetch(this.url + '/group/' + id + '/update', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n\n            // TODO: build more intelligently\n            body: JSON.stringify({\n                name: groupUpdate.name,\n                custom: {\n                    gravatarhash: groupUpdate.gravatarhash\n                },\n                type: 'Organization',\n                description: groupUpdate.description\n            })\n        })\n            .then((response) => {\n                // response is an empty body.\n                if (response.status === 204) {\n                    return\n                }\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n            })\n    }\n}","\n// export interface User {\n//     username: string,\n//     realname: string,\n//     thumbnail: string\n// }\n\n// export interface UserProfile {\n//     user: User,\n//     profile: any\n// }\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class WorkspaceClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'Workspace.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('ver'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    // getUserProfile(username: string): Promise<UserProfile> {\n    //     return fetch(this.url, {\n    //         method: 'POST',\n    //         mode: 'cors',\n    //         cache: 'no-store',\n    //         headers: {\n    //             Authorization: this.token,\n    //             'Content-Type': 'application/json',\n    //             Accept: 'application/json'\n    //         },\n    //         body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n    //     })\n    //         .then((response) => {\n    //             if (response.status !== 200) {\n    //                 throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n    //             }\n    //             console.log('response...', response)\n    //             return response.json()\n    //         })\n    //         .then(([profile]) => {\n    //             return profile as UserProfile\n    //         })\n    // }\n}","import {\n    Organization, BriefOrganization, OrganizationUpdate,\n    UIError,\n    UIErrorType,\n    SortDirection,\n    FieldState,\n    EditableOrganization\n} from '../types';\n// import { organizations } from './data';\nimport { UserProfileClient, UserProfile } from './userProfile'\nimport { GroupsClient, Group, GroupList, BriefGroup } from './groups'\nimport { WorkspaceClient } from './workspace';\nimport { types } from 'util';\n\nexport function applyOrgSearch(orgs: Array<BriefOrganization>, searchTerms: Array<string>): Array<BriefOrganization> {\n    const searchTermsRe = searchTerms.map((term) => {\n        return new RegExp(term, 'i')\n    })\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTermsRe.every((termRe) => {\n            return termRe.test(org.name) ||\n                termRe.test(org.owner.username) ||\n                termRe.test(org.owner.realname)\n        })\n    })\n\n    return filteredOrgs\n}\n\nfunction applySort(organizations: Array<BriefOrganization>, sortBy: string, sortDirection: SortDirection): Array<BriefOrganization> {\n    const direction = sortDirection === SortDirection.ASCENDING ? 1 : -1\n    switch (sortBy) {\n        // case 'createdAt':\n        //     return  organizations.slice().sort((a, b) => {\n        //         return direction * (a.createdAt.getTime() - b.createdAt.getTime())\n        //     })\n        // case 'modifiedAt':\n        //     return organizations.slice().sort((a, b) => {\n        //         return direction * (a.modifiedAt.getTime() - b.modifiedAt.getTime())\n        //     })\n        case 'name':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.name.localeCompare(b.name)\n            })\n        case 'owner':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.owner.username.localeCompare(b.owner.username)\n            })\n        default:\n            console.warn('unimplemented sort field: ' + sortBy)\n            return organizations;\n    }\n}\n\nfunction applyFilter(organizations: Array<BriefOrganization>, filter: string, username: string): Array<BriefOrganization> {\n    switch (filter) {\n        case 'all':\n            return organizations\n            break\n        case 'owned':\n            return organizations.filter((org) => (org.owner.username === username))\n        case 'notOwned':\n            return organizations.filter((org) => (org.owner.username !== username))\n        default:\n            console.warn('unknown filter : ' + filter)\n            return organizations\n    }\n}\n\nexport interface Query {\n    searchTerms: Array<string>\n    username: string\n    sortBy: string\n    sortDirection: SortDirection\n    filter: string\n}\n\nexport interface QueryResults {\n    organizations: Array<BriefOrganization>\n    total: number\n}\n\nfunction wait(timeout: number) {\n    return new Promise((resolve) => {\n        window.setTimeout(() => {\n            resolve(true)\n        }, timeout)\n    })\n}\n\n// export function newOrg(state: StoreState, action: actions.AddOrg): StoreState {\n//     const {organizations, auth:{username}} = state;\n//     const org: Organization = {\n//         ...action.newOrg,\n//         createdAt: new Date(),\n//         modifiedAt: new Date(),\n//         owner: username\n//     }\n//     organizations.push(org)\n//     return {...state, organizations}\n// }\n\ninterface ModelParams {\n    token: string,\n    groupsServiceURL: string,\n    userProfileServiceURL: string,\n    workspaceServiceURL: string\n}\n\nexport class Model {\n    // organizations: Organizations\n    // token: string\n    // groupsServiceURL: string\n    // userProfileServiceURL: string\n    // workspaceServiceURL: string\n    params: ModelParams\n\n\n    constructor(params: ModelParams) {\n        // this.organizations = organizations;\n        this.params = params;\n    }\n\n    groupToOrg(group: Group, profile: UserProfile): Organization {\n        const { id, name, owner, description, createdate, moddate } = group\n        return {\n            id: id,\n            name: name,\n            gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n            description: description,\n            owner: {\n                username: owner,\n                realname: profile.user.realname,\n                city: profile.profile.userdata.city,\n                state: profile.profile.userdata.state,\n                country: profile.profile.userdata.country,\n                organization: profile.profile.userdata.organization,\n                avatarOption: profile.profile.userdata.avatarOption,\n                gravatarHash: profile.profile.synced.gravatarHash,\n                gravatarDefault: profile.profile.userdata.gravatarDefault\n            },\n            createdAt: new Date(createdate),\n            modifiedAt: new Date(moddate)\n        }\n    }\n\n    briefGroupToBriefOrg(group: BriefGroup, profile: UserProfile): BriefOrganization {\n        const { id, name, owner, custom: { gravatarhash } } = group\n        return { id, name, gravatarHash: gravatarhash || null, owner: { username: owner, realname: profile.user.realname }, createdAt: new Date(), modifiedAt: new Date() }\n    }\n\n    groupsToOrgs(groups: GroupList, profiles: Map<string, UserProfile>): Array<BriefOrganization> {\n        return groups.map((group) => {\n            return this.briefGroupToBriefOrg(group, profiles.get(group.owner)!)\n        })\n    }\n\n    queryOrgs(query: Query): Promise<QueryResults> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        const workspaceClient = new WorkspaceClient({\n            url: this.params.workspaceServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroups()\n            .then((groups) => {\n                // Add user profiles to groups.\n                // We do it here so that search can extend into user real names and possibly\n                // other user profile attributes \n                const owners = groups.reduce((owners, group) => {\n                    owners.set(group.owner, true)\n                    return owners;\n                }, new Map<string, boolean>()).keys()\n                return userProfileClient.getUserProfiles(Array.from(owners))\n                    .then((profiles) => {\n                        const profileMap = profiles.reduce((profileMap, profile) => {\n                            profileMap.set(profile.user.username, profile)\n                            return profileMap\n                        }, new Map<string, UserProfile>())\n                        return this.groupsToOrgs(groups, profileMap)\n                    })\n            })\n            .then((orgs) => {\n                const filtered = applyFilter(orgs, query.filter, query.username)\n                const searched = applyOrgSearch(filtered, query.searchTerms)\n                const sorted = applySort(searched, query.sortBy, query.sortDirection)\n\n                return {\n                    organizations: sorted,\n                    total: orgs.length\n                }\n            })\n    }\n\n    getOrg(id: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        return {\n                            id: group.id,\n                            name: group.name,\n                            gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n                            description: group.description,\n                            createdAt: new Date(group.createdate),\n                            modifiedAt: new Date(group.moddate),\n                            owner: {\n                                username: group.owner,\n                                realname: userProfile.user.realname,\n                                city: userProfile.profile.userdata.city,\n                                state: userProfile.profile.userdata.state,\n                                country: userProfile.profile.userdata.country,\n                                organization: userProfile.profile.userdata.organization,\n                                avatarOption: userProfile.profile.userdata.avatarOption,\n                                gravatarHash: userProfile.profile.synced.gravatarHash,\n                                gravatarDefault: userProfile.profile.userdata.gravatarDefault\n                            }\n                        }\n                    })\n\n            })\n    }\n\n    getGroup(id: string): Promise<Group> {\n        if (id.length === 0) {\n            return Promise.reject(new Error('Group id may not be an empty string'))\n        }\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groups.getGroupById(id)\n            .then((group) => {\n                return group\n            })\n    }\n\n    groupExists(id: string): Promise<boolean> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groups.groupExists(id)\n            .then(({ exists }) => {\n                return exists\n            })\n    }\n\n    addOrg(newOrg: EditableOrganization, username: string): Promise<Organization> {\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n        if ((newOrg.id.error && newOrg.id.error.type === UIErrorType.ERROR) ||\n            (newOrg.name.error && newOrg.name.error.type === UIErrorType.ERROR) ||\n            (newOrg.gravatarHash.error && newOrg.gravatarHash.error.type === UIErrorType.ERROR) ||\n            (newOrg.description.error && newOrg.description.error.type === UIErrorType.ERROR)) {\n            return Promise.reject(new Error('One or more fields are invalid'))\n        }\n\n        return groups.createGroup({\n            id: newOrg.id.value,\n            name: newOrg.name.value,\n            gravatarhash: newOrg.gravatarHash.value,\n            description: newOrg.description.value,\n            type: 'Organization'\n        })\n            .then((group) => {\n                return userProfileClient.getUserProfile(group.owner)\n                    .then((userProfile) => {\n                        return this.groupToOrg(group, userProfile)\n                    })\n            })\n    }\n\n    // TODO this is fake until update is implemented on the back end\n    updateOrg(id: string, orgUpdate: OrganizationUpdate): Promise<void> {\n\n        const groups = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n\n\n        return groups.updateGroup(id, {\n            name: orgUpdate.name,\n            gravatarhash: orgUpdate.gravatarHash,\n            description: orgUpdate.description\n        })\n            .then(() => {\n                console.log('successfully saved...')\n            })\n    }\n\n    validateOrgId(id: string): [string, UIError] {\n        return Validation.validateOrgId(id);\n    }\n\n    validateOrgName(name: string): [string, UIError] {\n        return Validation.validateOrgName(name)\n    }\n\n    validateOrgDescription(description: string): [string, UIError] {\n        return Validation.validateOrgDescription(description);\n    }\n}\n\nexport class Validation {\n    static validateOrgId(id: string): [string, UIError] {\n        // May not be empty\n        if (id.length === 0) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be empty'\n                }]\n        }\n        // No spaces\n        if (id.match(/\\s/)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not contain a space'\n                }]\n        }\n        // May not exceed maximum size\n        // todo: what is the real limit?\n        if (id.length > 100) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be longer than 100 characters'\n                }]\n        }\n\n        // May not contain non-alphanumeric and underscore\n        const alphaRe = /^[a-zA-Z0-9_]+$/\n        if (!id.match(alphaRe)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may only contain alphanumeric (a-z, A-Z, 0-9) and underscore (_)'\n                }\n            ]\n        }\n\n        return [id, {\n            type: UIErrorType.NONE\n        }]\n    }\n\n    static validateOrgName(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be empty'\n                }]\n        }\n        if (name.length > 256) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 256 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgGravatarHash(gravatarHash: string): [string, UIError] {\n        if (gravatarHash.length === 0) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.NONE\n                }]\n        }\n        if (gravatarHash.length > 32) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization gravatar hash may not be longer than 32 characters'\n                }]\n        }\n        return [\n            gravatarHash, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgDescription(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization description may not be empty'\n                }]\n        }\n        // TODO: Is there really a limit?\n        if (name.length > 4096) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 4,096 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n}\n\nexport class StaticData {\n    static makeEmptyEditableOrganization(): EditableOrganization {\n        return {\n            id: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            name: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            gravatarHash: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            description: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            }\n        }\n    }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\n\n\n// VIEW ORG\n\nexport interface ViewOrgStart extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_START\n}\n\nexport function viewOrgStart() {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_START\n    }\n}\n\nexport interface ViewOrgStop extends Action {\n    type: ActionFlag.VIEW_ORG_STOP\n}\n\nexport function viewOrgStop(): ViewOrgStop {\n    return {\n        type: ActionFlag.VIEW_ORG_STOP\n    }\n}\n\nexport interface ViewOrgSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n    organization: Organization\n}\n\nexport function viewOrgSuccess(org: Organization): ViewOrgSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n        organization: org\n    }\n}\n\nexport interface ViewOrgError extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n    error: AppError\n}\nexport function viewOrgError(error: AppError): ViewOrgError {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n        error: error\n    }\n}\n\nexport interface ViewOrgFetch extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH,\n    id: string\n}\n\nexport function viewOrgFetch(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgStart())\n\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(id)\n            .then((org) => {\n                dispatch(viewOrgSuccess(org))\n            })\n            .catch((err) => {\n                dispatch(viewOrgError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization, EditedOrganization,\n    AppError, UIError, BriefOrganization, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\nimport { viewOrgStop } from './viewOrg'\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n\n// SEARCH (FETCH) ORGS\n\n\n\n// Called upon the start of a search call\n// Sets the ui state to enable a spinner\n// and also search query data to be reflected in the ui\nexport interface SearchOrgsStart extends Action<ActionFlag.SEARCH_ORGS_START> {\n    type: ActionFlag.SEARCH_ORGS_START,\n    searchTerms: Array<string>\n}\n\nexport function searchOrgsStart(searchTerms: Array<string>): SearchOrgsStart {\n    return {\n        type: ActionFlag.SEARCH_ORGS_START,\n        searchTerms: searchTerms\n    }\n}\n\n// Called upon successful completion of a search\n// Sets the organizations found\nexport interface SearchOrgsSuccess extends Action<ActionFlag.SEARCH_ORGS_SUCCESS> {\n    type: ActionFlag.SEARCH_ORGS_SUCCESS,\n    organizations: Array<BriefOrganization>,\n    totalCount: number\n}\n\nexport function searchOrgsSuccess(organizations: Array<BriefOrganization>, totalCount: number): SearchOrgsSuccess {\n    return {\n        type: ActionFlag.SEARCH_ORGS_SUCCESS,\n        organizations: organizations,\n        totalCount: totalCount\n    }\n}\n\n// Called upon a search error\n// Sets error state\nexport interface SearchOrgsError extends Action<ActionFlag.SEARCH_ORGS_ERROR> {\n    type: ActionFlag.SEARCH_ORGS_ERROR,\n    error: AppError\n}\n\nexport function searchOrgsError(error: AppError): SearchOrgsError {\n    return {\n        type: ActionFlag.SEARCH_ORGS_ERROR,\n        error: error\n    }\n}\n\n\nexport interface SearchOrgs extends Action<ActionFlag.SEARCH_ORGS> {\n    type: ActionFlag.SEARCH_ORGS,\n    searchTerms: Array<string>\n}\n\n// TODO: proper typing here \nexport function searchOrgs(searchTerms: Array<string>) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchOrgsStart(searchTerms))\n        dispatch(viewOrgStop())\n\n        const {\n            browseOrgs: { sortBy, sortDirection, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms: searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function sortOrgs(sortBy: string, sortDirection: SortDirection) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sortOrgsStart(sortBy, sortDirection))\n\n        const {\n            browseOrgs: { searchTerms, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function filterOrgs(filter: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(filterOrgsStart(filter))\n\n        const {\n            browseOrgs: { searchTerms, sortBy, sortDirection },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\n\n\n\n// Filter orgs\nexport interface FilterOrgs extends Action<ActionFlag.FILTER_ORGS> {\n    type: ActionFlag.FILTER_ORGS,\n    filter: string\n}\n\nexport interface FilterOrgsStart extends Action<ActionFlag.FILTER_ORGS_START> {\n    type: ActionFlag.FILTER_ORGS_START,\n    filter: string\n}\n\nexport function filterOrgsStart(filter: string): FilterOrgsStart {\n    return {\n        type: ActionFlag.FILTER_ORGS_START,\n        filter: filter\n    }\n}\n\n","import OrganizationsBrowser from '../components/OrganizationsBrowser'\nimport { StoreState, SortDirection } from '../types'\nimport * as actions from '../redux/actions/searchOrgs'\nimport { Dispatch } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { Model, Query } from '../data/model'\n//\n// Typing for the mapState and mapDispatch\n//\nexport interface LinkStateProps {\n    totalCount: number,\n    filteredCount: number\n    sortBy: string,\n    sortDirection: SortDirection,\n    filter: string,\n    searching: boolean\n}\n\nexport interface LinkDispatchProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void,\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void,\n    onFilterOrgs: (filter: string) => void\n}\n\n\n// note second arg is the component props, but we don't have any component props to merge in.\nexport function mapStateToProps(state: StoreState): LinkStateProps {\n    const { browseOrgs: { totalCount, filteredCount, sortBy, sortDirection, filter, searching } } = state\n    return {\n        totalCount,\n        filteredCount,\n        sortBy,\n        sortDirection,\n        filter,\n        searching\n    }\n}\n\n// function onSortOrgs(sortBy: string, sortDescending: boolean) : Dispatch<actions.SortOrgs> {\n//     dispatch(actions.sortOrgs(sortBy, sortDescending))\n// }\n\n// note second arg is the component props, but we don't have any to merge in.\n// export function mapDispatchToProps(dispatch: actions.SearchOrgs | Dispatch<actions.SortOrgs> | Dispatch<actions.FilterOrgs>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n\n//             dispatch(actions.searchOrgs(searchTerms))\n\n\n\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         },\n//         onFilterOrgs: (filter) => {\n//             dispatch(actions.filterOrgs(filter))\n//         }\n//     }\n// }\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.SearchOrgs | actions.SortOrgs | actions.FilterOrgs>): LinkDispatchProps {\n    return {\n        onSearchOrgs: (searchTerms: Array<string>) => {\n            // TODO proper typing here\n            dispatch(actions.searchOrgs(searchTerms) as any)\n        },\n        onSortOrgs: (sortBy: string, sortDirection: SortDirection) => {\n            // TODO proper typing here\n            dispatch(actions.sortOrgs(sortBy, sortDirection) as any)\n        },\n        onFilterOrgs: (filter: string) => {\n            dispatch(actions.filterOrgs(filter) as any)\n        }\n    }\n}\n\n// export function mapDispatchToProps(dispatch: Dispatch<any>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n//             dispatch(actions.searchOrgs(searchTerms))\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationsBrowser)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\nexport interface AddOrg extends Action {\n    type: ActionFlag.ADD_ORG\n}\n\nexport interface AddOrgStart extends Action {\n    type: ActionFlag.ADD_ORG_START\n}\n\nexport interface AddOrgSuccess extends Action {\n    type: ActionFlag.ADD_ORG_SUCCESS,\n    organization: Organization\n}\n\nexport interface AddOrgError extends Action<ActionFlag.ADD_ORG_ERROR> {\n    type: ActionFlag.ADD_ORG_ERROR,\n    error: AppError\n}\n\n// Editing\n\nexport interface AddOrgEdit extends Action<ActionFlag.ADD_ORG_EDIT> {\n    type: ActionFlag.ADD_ORG_EDIT;\n}\n\nexport interface AddOrgEditStart {\n    type: ActionFlag.ADD_ORG_EDIT_START\n}\n\nexport interface AddOrgEditFinish {\n    type: ActionFlag.ADD_ORG_EDIT_FINISH\n}\n\n// Evaluating state of form \n\nexport interface AddOrgEvaluate extends Action<ActionFlag.ADD_ORG_EVALUATE> {\n    type: ActionFlag.ADD_ORG_EVALUATE\n}\n\nexport interface AddOrgEvaluateOK extends Action<ActionFlag.ADD_ORG_EVALUATE_OK> {\n    type: ActionFlag.ADD_ORG_EVALUATE_OK\n}\n\nexport interface AddOrgEvaluateErrors extends Action<ActionFlag.ADD_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n}\n\n// Updating name field\n\nexport interface AddOrgUpdateName extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface AddOrgUpdateNameSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface AddOrgUpdateNameError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface AddOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface AddOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface AddOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\nexport interface AddOrgUpdateId extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID,\n    id: string\n}\n\nexport interface AddOrgUpdateIdSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n    id: string\n}\n\nexport interface AddOrgUpdateIdError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n    id: string,\n    error: UIError\n}\n\n// Updating description field\n\nexport interface AddOrgUpdateDescription extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function addOrgStart(): AddOrgStart {\n    return {\n        type: ActionFlag.ADD_ORG_START\n    }\n}\n\nexport function addOrgSuccess(org: Organization): AddOrgSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_SUCCESS,\n        organization: org\n    }\n}\n\nexport function addOrgError(error: AppError): AddOrgError {\n    return {\n        type: ActionFlag.ADD_ORG_ERROR,\n        error: error\n    }\n}\n\nexport function addOrgEditStart() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_START\n    }\n}\n\nexport function addOrgEditFinish() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_FINISH\n    }\n}\n\n// Evaluate\n\nexport function addOrgEvaluateOk(): AddOrgEvaluateOK {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_OK\n    }\n}\n\nexport function AddOrgEvaluateErrors(): AddOrgEvaluateErrors {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Update Name\n\nexport function addOrgUpdateNameSuccess(name: string): AddOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function addOrgUpdateNameError(name: string, error: UIError): AddOrgUpdateNameError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\nexport function addOrgUpdateIdSuccess(id: string): AddOrgUpdateIdSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n        id: id\n    }\n}\n\n// Update Gravatar Hash\n\nexport function addOrgUpdateGravatarHashSuccess(gravatarHash: string): AddOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): AddOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\nexport function addOrgUpdateIdError(id: string, error: UIError): AddOrgUpdateIdError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n        id: id,\n        error: error\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(description: string): AddOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function addOrgUpdateDescriptionError(description: string, error: UIError): AddOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function addOrgEdit() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgEditStart())\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrg() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            addOrg: { newOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!newOrganization) {\n            dispatch(addOrgError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        model.addOrg(newOrganization, username)\n            .then((org: Organization) => {\n                console.log('added', org)\n                dispatch(addOrgSuccess(org))\n            })\n            .catch((error) => {\n                console.error('error adding', newOrganization, error)\n                dispatch(addOrgError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function addOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { addOrg: { newOrganization } } = getState()\n\n        const { addOrg: editState } = getState()\n\n        if (!newOrganization) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.name.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.id.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.gravatarHash.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.description.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(addOrgEvaluateOk())\n    }\n}\n\nfunction newModelFromState(state: StoreState) {\n    const { auth: { authorization: { token } },\n        app: { config } } = state\n    return new Model({\n        token,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url,\n        workspaceServiceURL: config.services.Workspace.url\n    })\n}\n\nexport function addOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(addOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(addOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateId(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const [validatedId, error] = Validation.validateOrgId(id)\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateIdError(validatedId, error))\n            dispatch(addOrgEvaluate())\n            return\n        }\n        const model = newModelFromState(getState())\n        model.groupExists(validatedId)\n            .then((exists) => {\n                if (exists) {\n                    console.log('org??', exists)\n                    dispatch(addOrgUpdateIdError(validatedId, {\n                        type: UIErrorType.ERROR,\n                        message: 'This org id is already in use'\n                    }))\n                } else {\n                    dispatch(addOrgUpdateIdSuccess(validatedId))\n                }\n\n                dispatch(addOrgEvaluate())\n            })\n    }\n}\n\nexport function addOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(addOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon } from 'antd';\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './NewOrganization.css'\n\nimport Header from './Header';\n\nexport interface NewOrganizationProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    newOrganization: EditableOrganization,\n    onAddOrgEdit: () => void,\n    onAddOrg: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface NewOrganizationState {\n    canceling: boolean;\n\n    // pendingOrganization: PendingOrganization\n}\n\nclass NewOrganization extends React.Component<NewOrganizationProps, NewOrganizationState> {\n\n    origin: string;\n\n    constructor(props: NewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            canceling: false\n        }\n\n        this.origin = document.location!.origin\n\n        this.props.onAddOrgEdit()\n    }\n\n    onClickCancel() {\n        this.setState({ canceling: true })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        console.log('submitted')\n        this.props.onAddOrg();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateId(e.target.value);\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"newOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.newOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.newOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.newOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.newOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.newOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.newOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        // console.log('grav?', org.gravatarHash)\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.newOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.newOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.newOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.newOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.newOrganization!.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"plus-circle\" />\n                            {' '}\n                            Adding a New Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"newOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancel.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderFooter() {\n        return (\n            <div className=\"footerRow\">\n                <div className=\"editorColumn\">\n                    <div className=\"row\">\n                        <div className=\"col1\">\n                        </div>\n                        <div className=\"col2\">\n                            <div className=\"footer\">\n                                <Button form=\"newOrganizationForm\"\n                                    key=\"submit\"\n                                    htmlType=\"submit\">Save</Button>\n                                <Button type=\"danger\"\n                                    onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"previewColumn\">\n\n                </div>\n            </div>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading New Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.canceling) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        // TODO: this is just a prop for today.\n        if (this.props.saveState === SaveState.SAVED) {\n            return <Redirect push to={\"/editOrganization/\" + this.props.newOrganization.id.value} />\n        }\n\n        if (!this.props.newOrganization) {\n            return (\n                <div className=\"NewOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n                {/* {this.renderFooter()} */}\n            </div>\n        )\n    }\n}\n\nexport default NewOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState } from '../types';\nimport {\n    AddOrg, addOrg,\n    addOrgUpdateName, addOrgUpdateId, addOrgUpdateDescription, addOrgEdit, addOrgUpdateGravatarHash\n} from '../redux/actions/addOrg';\n\nimport NewOrganization from '../components/NewOrganization';\n\ninterface OwnProps {\n}\n\nexport interface StateProps {\n}\n\nexport interface DispatchProps {\n    onAddOrg: () => void,\n    onAddOrgEdit: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ addOrg: { editState, saveState, validationState, newOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        newOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<AddOrg>): DispatchProps {\n    return {\n        onAddOrgEdit: () => {\n            dispatch(addOrgEdit() as any)\n        },\n        onAddOrg: () => {\n            dispatch(addOrg() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(addOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(addOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        onUpdateId: (id) => {\n            dispatch(addOrgUpdateId(id) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(addOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(NewOrganization)","import * as React from 'react'\nimport marked from 'marked'\nimport { NavLink } from 'react-router-dom'\n\nimport './ViewOrganization.css'\n\nimport { ViewOrgState, Organization, AppError, BriefOrganization } from '../types'\nimport { Button } from 'antd';\nimport Header from './Header';\n\nexport interface ViewOrganizationState {\n}\n\nexport interface ViewOrganizationProps {\n    state: ViewOrgState\n    id: string,\n    organization?: Organization\n    error?: AppError\n    username: string,\n    onViewOrg: (id: string) => void\n}\n\nclass ViewOrganization extends React.Component<ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: ViewOrganizationProps) {\n        super(props)\n\n        this.props.onViewOrg(this.props.id)\n    }\n\n    buildFooter() {\n        return (\n            <div>\n                {this.renderEditRow()}\n                {/* <p style={{ textAlign: 'center' }}>\n                    You may also  <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink> to the organizations browser.\n                </p> */}\n            </div>\n        )\n    }\n\n    renderEditRow() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <p style={{ textAlign: 'center' }}>\n                    As the owner of this group, you may <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink> it.\n                </p>\n            )\n        }\n    }\n\n    renderEditButton() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink>\n            )\n        }\n    }\n\n    renderOrg() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <div className=\"org\">\n                <div className=\"nameAndLogo\">\n                    <div className=\"avatar\">\n                        {this.renderOrgAvatar(this.props.organization)}\n                    </div>\n                    <div className=\"nameAndLink\">\n                        <div className=\"name\">\n                            {this.props.organization.name}\n                        </div>\n                        <div className=\"id\">\n                            <span className=\"label\">permalink</span>{' '}\n                            <span className=\"permalinkBase\">https://narrative.kbase.us#org/</span>{this.props.organization.id}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"description\"\n                    dangerouslySetInnerHTML={({ __html: marked(this.props.organization.description || '') })}\n                />\n\n            </div>\n        )\n    }\n\n    getOrgAvatarUrl(org: BriefOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: BriefOrganization) {\n        // console.log('grav?', org.gravatarHash)\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    getAvatarUrl() {\n        if (!this.props.organization) {\n            return\n        }\n        switch (this.props.organization.owner.avatarOption || 'gravatar') {\n            case 'gravatar':\n                const gravatarDefault = this.props.organization.owner.gravatarDefault || 'identicon';\n                const gravatarHash = this.props.organization.owner.gravatarHash;\n                if (gravatarHash) {\n                    return 'https://www.gravatar.com/avatar/' + gravatarHash + '?s=60&amp;r=pg&d=' + gravatarDefault;\n                } else {\n                    return './nouserpic.png';\n                }\n            case 'silhouette':\n            case 'mysteryman':\n            default:\n                return './nouserpic.png';\n        }\n    }\n\n    renderAvatar() {\n        const avatarUrl = this.getAvatarUrl()\n        return (\n            <img\n                src={avatarUrl}\n                style={{ width: 60 }}\n            />\n        )\n    }\n\n    renderInfo() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col0\">\n                        <div>\n                            <div className=\"label\">proprietor</div>\n                        </div>\n                        <div className=\"ownerTable\">\n                            <div className=\"avatarCol\">\n                                {this.renderAvatar()}\n                            </div>\n                            <div className=\"proprietorCol\">\n\n                                <div className=\"owner\">\n                                    <a href=\"#people/{org.owner.username}\" target=\"_blank\">{this.props.organization.owner.realname}</a>\n                                    {' '}\n                                    ❨{this.props.organization.owner.username}❩\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.organization}\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.city} {this.props.organization.owner.state}, {this.props.organization.owner.country}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">established</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"createdAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.createdAt)}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">last updated</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"modifiedAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.modifiedAt)}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Viewing Org \"\n                            {this.props.organization && this.props.organization.name}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        {this.renderEditButton()}\n                        <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (typeof this.props.organization !== 'undefined') {\n            return (\n                <div className=\"ViewOrganization\">\n                    {this.renderHeader()}\n                    <div className=\"mainRow\">\n                        <div className=\"mainColumn\">\n                            {this.renderOrg()}\n                        </div>\n                        <div className=\"infoColumn\">\n                            <div className=\"infoBox\">\n                                {this.renderInfo()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"ViewOrganization\">\n                {this.renderLoadingHeader()}\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default ViewOrganization","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/viewOrg'\n\nimport ViewOrganization from '../components/ViewOrganization'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n    id: string\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    id: string,\n    state: types.ViewOrgState\n    organization?: types.Organization\n    error?: types.AppError,\n    username: string\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onViewOrg: (id: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\n\nfunction mapStateToProps({ viewOrg: { state, organization, error }, auth: { authorization: { username } } }: types.StoreState,\n    { id }: OwnProps): StateProps {\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        id, state, organization, error, username\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.ViewOrgFetch>): DispatchProps {\n    return {\n        onViewOrg: (id: string) => {\n            dispatch(actions.viewOrgFetch(id) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ViewOrganization) \n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState, EditableOrganization } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\n// Loading the editor\nexport interface EditOrgEdit extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT,\n    id: string\n}\n\nexport interface EditOrgEditStart extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_START,\n    id: string\n}\n\nexport interface EditOrgEditSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n    editedOrganization: EditableOrganization\n}\n\nexport interface EditOrgEditError extends Action<ActionFlag.EDIT_ORG_EDIT_ERROR> {\n    type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n    error: AppError\n}\n\n// Evaluating state of form \n\nexport interface EditOrgEvaluate extends Action<ActionFlag.EDIT_ORG_EVALUATE> {\n    type: ActionFlag.EDIT_ORG_EVALUATE\n}\n\nexport interface EditOrgEvaluateOK extends Action<ActionFlag.EDIT_ORG_EVALUATE_OK> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_OK\n}\n\nexport interface EditOrgEvaluateErrors extends Action<ActionFlag.EDIT_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n}\n\n// Saving\n\nexport interface EditOrgSave extends Action<ActionFlag.EDIT_ORG_SAVE> {\n    type: ActionFlag.EDIT_ORG_SAVE\n}\n\nexport interface EditOrgSaveStart extends Action<ActionFlag.EDIT_ORG_SAVE_START> {\n    type: ActionFlag.EDIT_ORG_SAVE_START\n}\n\nexport interface EditOrgSaveSuccess extends Action<ActionFlag.EDIT_ORG_SAVE_SUCCESS> {\n    type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n}\n\nexport interface EditOrgSaveError extends Action<ActionFlag.EDIT_ORG_SAVE_ERROR> {\n    type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Updating name field\n\nexport interface EditOrgUpdateName extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface EditOrgUpdateNameSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface EditOrgUpdateNameError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface EditOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface EditOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface EditOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\n// export interface EditOrgUpdateId extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdSuccess {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdError extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//     id: string,\n//     error: UIError\n// }\n\n// Updating description field\n\nexport interface EditOrgUpdateDescription extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function editOrgStart(id: string): EditOrgEditStart {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START,\n        id: id\n    }\n}\n\nexport function editOrgEditStart() {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START\n    }\n}\n\nexport function editOrgEditSuccess(editedOrganization: EditableOrganization) {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n        editedOrganization: editedOrganization\n    }\n}\n\nexport function editOrgEditError(error: AppError): EditOrgEditError {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n        error: error\n    }\n}\n\n// Evaluate\n\nexport function editOrgEvaluateOk(): EditOrgEvaluateOK {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_OK\n    }\n}\n\nexport function EditOrgEvaluateErrors(): EditOrgEvaluateErrors {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Save\n\n// export function editOrgSave(): EditOrgSave {\n//     return {\n//         type: ActionFlag.EDIT_ORG_SAVE\n//     }\n// }\n\nexport function editOrgSaveStart(): EditOrgSaveStart {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_START\n    }\n}\n\nexport function editOrgSaveSuccess(): EditOrgSaveSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n    }\n}\n\nexport function editOrgSaveError(error: AppError): EditOrgSaveError {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n// Update Name\n\nexport function editOrgUpdateNameSuccess(name: string): EditOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function editOrgUpdateNameError(name: string, error: UIError): EditOrgUpdateNameError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\n// export function editOrgUpdateIdSuccess(id: string): EditOrgUpdateIdSuccess {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//         id: id\n//     }\n// }\n\n// Update Gravatar Hash\n\nexport function editOrgUpdateGravatarHashSuccess(gravatarHash: string): EditOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): EditOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\n// export function editOrgUpdateIdError(id: string, error: UIError): EditOrgUpdateIdError {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//         id: id,\n//         error: error\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(description: string): EditOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function editOrgUpdateDescriptionError(description: string, error: UIError): EditOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function editOrgEdit(organizationId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgStart(organizationId))\n\n        const {\n            auth: { authorization: { token } },\n            app: { config }\n        } = getState()\n\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(organizationId)\n            .then((org) => {\n                const editableOrg: EditableOrganization = {\n                    id: {\n                        value: org.id,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    name: {\n                        value: org.name,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    gravatarHash: {\n                        value: org.gravatarHash,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    description: {\n                        value: org.description,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    }\n                }\n                dispatch(editOrgEditSuccess(editableOrg))\n            })\n            .catch((err) => {\n                console.error('load org error', err)\n                dispatch(editOrgEditError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\nexport function editOrgSave() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgSaveStart())\n\n        const { auth: { authorization: { token, username } },\n            editOrg: { organizationId, editedOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!editedOrganization) {\n            dispatch(editOrgSaveError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        const update = {\n            name: editedOrganization.name.value,\n            gravatarHash: editedOrganization.gravatarHash.value,\n            description: editedOrganization.description.value\n        }\n\n        // console.log('updating org with ', organizationId)\n        // dispatch(editOrgSaveSuccess())\n        // return\n\n        model.updateOrg(organizationId, update)\n            .then(() => {\n                console.log('successfully updated')\n                dispatch(editOrgSaveSuccess())\n            })\n            .catch((error) => {\n                console.error('error adding', editedOrganization, error)\n                dispatch(editOrgSaveError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function editOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { editOrg: { editedOrganization } } = getState()\n\n        const { editOrg: editState } = getState()\n\n        if (!editedOrganization) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.name.status === FieldState.EDITED_OK ||\n            editedOrganization.name.status === FieldState.UNEDITED_OK)) {\n            console.log('valid name?', editedOrganization.name)\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        // if (editedOrganization.id.status !== FieldState.EDITED_OK) {\n        //     dispatch(EditOrgEvaluateErrors())\n        //     return\n        // }\n\n        if (!(editedOrganization.gravatarHash.status === FieldState.EDITED_OK ||\n            editedOrganization.gravatarHash.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.description.status === FieldState.EDITED_OK ||\n            editedOrganization.description.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(editOrgEvaluateOk())\n    }\n}\n\nexport function editOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(editOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function editOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(editOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\n// export function editOrgUpdateId(id: string) {\n//     return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n//         const [validatedId, error] = Validation.validateOrgId(id)\n//         if (error.type === UIErrorType.ERROR) {\n//             dispatch(editOrgUpdateIdError(validatedId, error))\n//             dispatch(editOrgEvaluate())\n//             return\n//         }\n//         const model = newModelFromState(getState())\n//         model.groupExists(validatedId)\n//             .then((exists) => {\n//                 if (exists) {\n//                     console.log('org??', exists)\n//                     dispatch(editOrgUpdateIdError(validatedId, {\n//                         type: UIErrorType.ERROR,\n//                         message: 'This org id is already in use'\n//                     }))\n//                 } else {\n//                     dispatch(editOrgUpdateIdSuccess(validatedId))\n//                 }\n\n//                 dispatch(editOrgEvaluate())\n//             })\n//     }\n// }\n\nexport function editOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token } },\n            app: { config } } = getState()\n        const model = new Model({\n            token,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(editOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon } from 'antd';\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './EditOrganization.css'\n\nimport Header from './Header';\n\nexport interface EditOrganizationProps {\n    id: string,\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization,\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface EditOrganizationState {\n    canceling: boolean;\n\n    // pendingOrganization: PendingOrganization\n}\n\nclass EditOrganization extends React.Component<EditOrganizationProps, EditOrganizationState> {\n\n    origin: string;\n\n    constructor(props: EditOrganizationProps) {\n        super(props)\n\n        this.state = {\n            canceling: false\n        }\n\n        this.origin = document.location!.origin\n\n        this.props.onEditOrgEdit(this.props.id)\n    }\n\n    onClickCancel() {\n        this.setState({ canceling: true })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        console.log('submitted')\n        this.props.onEditOrgSave();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        // this.props.onUpdateId(e.target.value);\n        console.warn('no updating id, naughty!')\n    }\n\n    canSave() {\n        // console.log('can save?', this.props.editState, this.props.validationState, this.props.saveState)\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"editOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.editedOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.editedOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.editedOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.editedOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.editedOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.editedOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        // console.log('grav?', org.gravatarHash)\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.editedOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.editedOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.editedOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.editedOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.editedOrganization.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"edit\" />\n                            {' '}\n                            Editing Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"editOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancel.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderFooter() {\n        return (\n            <div className=\"footerRow\">\n                <div className=\"editorColumn\">\n                    <div className=\"row\">\n                        <div className=\"col1\">\n                        </div>\n                        <div className=\"col2\">\n                            <div className=\"footer\">\n                                <Button form=\"editOrganizationForm\"\n                                    key=\"submit\"\n                                    htmlType=\"submit\">Save</Button>\n                                <Button type=\"danger\"\n                                    onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"previewColumn\">\n\n                </div>\n            </div>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.canceling) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        // // TODO: this is just a prop for today.\n        // if (this.props.saveState === SaveState.SAVED) {\n        //     return <Redirect push to={\"/editOrganization/\" + this.props.editedOrganization.id.value} />\n        // }\n\n        if (!this.props.editedOrganization) {\n            return (\n                <div className=\"EditOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"EditOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n                {/* {this.renderFooter()} */}\n            </div>\n        )\n    }\n}\n\nexport default EditOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, EditableOrganization, EditState, SaveState, ValidationState } from '../types';\nimport {\n    EditOrgEdit, editOrgSave,\n    editOrgUpdateName,\n    // editOrgUpdateId, \n    editOrgUpdateDescription, editOrgEdit, editOrgUpdateGravatarHash\n} from '../redux/actions/editOrg';\n\nimport EditOrganization from '../components/EditOrganization';\n\ninterface OwnProps {\n    id: string\n}\n\nexport interface StateProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization\n}\n\nexport interface DispatchProps {\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ editOrg: { editState, saveState, validationState, editedOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        editedOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<EditOrgEdit>): DispatchProps {\n    return {\n        onEditOrgEdit: (id: string) => {\n            dispatch(editOrgEdit(id) as any)\n        },\n        onEditOrgSave: () => {\n            dispatch(editOrgSave() as any)\n        },\n        onUpdateName: (name: string) => {\n            dispatch(editOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(editOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        // onUpdateId: (id) => {\n        //     dispatch(editOrgUpdateId(id) as any)\n        // },\n        onUpdateDescription: (description) => {\n            dispatch(editOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(EditOrganization)","import * as React from 'react'\nimport './Auth.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\n\n\nexport interface AuthState {\n\n}\n\nclass Auth extends React.Component<types.AuthProps, AuthState> {\n\n    tokenRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: types.AuthProps) {\n        super(props)\n\n        this.tokenRef = React.createRef()\n\n        this.props.checkAuth()\n    }\n\n    onLogoutClick() {\n        this.props.onRemoveAuthorization()\n    }\n\n    onLoginClick() {\n        if (this.tokenRef.current === null) {\n            return\n        }\n        const token = this.tokenRef.current.value\n        if (token.length === 0) {\n            return\n        }\n        console.log('authorizing with', token)\n        this.props.onAddAuthorization(token)\n    }\n\n    buildAuthForm() {\n        return (\n            <div className=\"Auth-form\">\n                Token: <input ref={this.tokenRef} />\n                <Button\n                    icon=\"save\"\n                    htmlType=\"submit\"\n                    onClick={this.onLoginClick.bind(this)} >\n                    Assign Token\n                </Button>\n            </div>\n        )\n    }\n\n    buildAuthToolbar() {\n        return (\n            <div className=\"Auth-toolbar\">\n                Logged in as <b><span>{this.props.authorization.authorization.realname}</span> (<span>{this.props.authorization.authorization.username}</span></b>)\n                {' '}\n                <Button icon=\"logout\" onClick={this.onLogoutClick.bind(this)}>Sign out</Button>\n            </div>\n        )\n    }\n\n    buildAuthDev() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.buildAuthToolbar()}\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized! Enter a user token below</p>\n                        {this.buildAuthForm()}\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Error</p>\n                        {this.props.authorization.message}\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    buildAuthProd() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized!</p>\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-error\">\n                        <p>Error: ??</p>\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"Auth\">\n                {this.props.hosted ? this.buildAuthProd() : this.buildAuthDev()}\n            </div>\n        )\n\n    }\n}\n\nexport default Auth","\nexport interface RootInfo {\n    version: string,\n    servertime: number\n}\n\ninterface AuthEndpoints {\n    root: string,\n    tokenInfo: string,\n    apiMe: string,\n    me: string,\n    loginStart: string,\n    loginChoice: string,\n    loginCreate: string,\n    loginUsernameSuggest: string,\n    loginPick: string,\n    loginCancel: string,\n    logout: string,\n    linkStart: string,\n    linkCancel: string,\n    linkChoice: string,\n    linkPick: string,\n    linkRemove: string,\n    tokens: string,\n    tokensRevoke: string,\n    tokensRevokeAll: string,\n    userSearch: string,\n    adminUserSearch: string,\n    adminUser: string\n}\n\nconst endpoints: AuthEndpoints = {\n    root: '',\n    tokenInfo: 'api/V2/token',\n    apiMe: 'api/V2/me',\n    me: 'me',\n    loginStart: 'login/start',\n    logout: 'logout',\n    loginChoice: 'login/choice',\n    loginCreate: 'login/create',\n    loginUsernameSuggest: 'login/suggestname',\n    loginPick: 'login/pick',\n    loginCancel: 'login/cancel',\n    linkStart: 'link/start',\n    linkCancel: 'link/cancel',\n    linkChoice: 'link/choice',\n    linkPick: 'link/pick',\n    linkRemove: 'me/unlink',\n    tokens: 'tokens',\n    tokensRevoke: 'tokens/revoke',\n    tokensRevokeAll: 'tokens/revokeall',\n    userSearch: 'api/V2/users/search',\n    adminUserSearch: 'api/V2/admin/search',\n    adminUser: 'api/V2/admin/user'\n}\n\nexport interface TokenInfo {\n    created: number,\n    expires: number,\n    id: string,\n    name: string | null,\n    token: string,\n    type: string,\n    user: string,\n    cachefor: number\n}\n\nexport interface Identity {\n    id: string,\n    provider: string,\n    username: string\n}\n\nexport interface Role {\n    id: string,\n    desc: string\n}\n\nexport interface Account {\n    created: number,\n    customroles: Array<string>,\n    display: string,\n    email: string,\n    idents: Array<Identity>,\n    lastLogin: number,\n    local: boolean,\n    roles: Array<Role>,\n    user: string\n}\nexport class AuthClient {\n    url: string;\n\n    constructor({ url }: { url: string }) {\n        this.url = url\n    }\n\n    makePath(path: Array<string> | string): string {\n        if (typeof path === 'string') {\n            return [this.url].concat([path]).join('/');\n        }\n        return [this.url].concat(path).join('/');\n    }\n\n\n    root(): Promise<RootInfo> {\n        return fetch(this.makePath([endpoints.root]), {\n            headers: {\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                console.log('root info', result)\n                return result as RootInfo\n            })\n    }\n\n    getTokenInfo(token: string): Promise<TokenInfo> {\n        return fetch(this.makePath([endpoints.tokenInfo]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as TokenInfo\n            })\n    }\n\n    getMe(token: string): Promise<Account> {\n        return fetch(this.makePath([endpoints.apiMe]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Account\n            })\n    }\n\n\n    // getInfo() : Promise<GroupsServiceInfo> {\n    //     return fetch(this.url + '/', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json();\n    //         })\n    //         .then((result) => {\n    //             return result as GroupsServiceInfo;\n    //         });\n    // }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport * as Cookies from 'es-cookie'\n\nimport { ActionFlag } from './index'\nimport { AppError, StoreState } from '../../types';\nimport { AuthClient, TokenInfo, Account } from '../../data/auth';\n\n// Action Definitions\n\nexport interface AuthCheck extends Action {\n    type: ActionFlag.AUTH_CHECK\n}\n\nexport interface AuthCheckStart extends Action {\n    type: ActionFlag.AUTH_CHECK_START\n}\n\nexport interface AuthCheckError extends Action {\n    type: ActionFlag.AUTH_CHECK_ERROR,\n    error: AppError\n}\n\nexport interface AuthAuthorized extends Action {\n    type: ActionFlag.AUTH_AUTHORIZED,\n    token: string\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface AuthUnauthorized extends Action {\n    type: ActionFlag.AUTH_UNAUTHORIZED\n}\n\nexport interface AuthRemoveAuthorization extends Action {\n    type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n}\n\nexport interface AuthAddAuthorization extends Action {\n    type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n    token: string\n}\n\n// Action Creators\n\n\nexport function authCheckStart(): AuthCheckStart {\n    return {\n        type: ActionFlag.AUTH_CHECK_START\n    }\n}\n\nexport function authCheckError(error: AppError): AuthCheckError {\n    return {\n        type: ActionFlag.AUTH_CHECK_ERROR,\n        error\n    }\n}\n\nexport function authAuthorized(token: string, username: string, realname: string, roles: Array<string>): AuthAuthorized {\n    return {\n        type: ActionFlag.AUTH_AUTHORIZED,\n        token, username, realname, roles\n    }\n}\n\nexport function authUnauthorized(): AuthUnauthorized {\n    return {\n        type: ActionFlag.AUTH_UNAUTHORIZED\n    }\n}\n\n// export function authRemoveAuthorization(): AuthRemoveAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n//     }\n// }\n\n// export function authAddAuthorization(token: string): AuthAddAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n//         token: token\n//     }\n// }\n\n// Action Thunks\n\nexport function checkAuth() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(authCheckStart())\n\n        // TODO: get the auth from the kbase-ui integration api, perhaps a postmessage call\n\n        const token = Cookies.get('kbase_session')\n        if (!token) {\n            dispatch(authUnauthorized())\n            return\n        }\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function authRemoveAuthorization() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // remove cookie\n        Cookies.remove('kbase_session')\n\n        // remove auth in state\n        dispatch(authUnauthorized())\n    }\n}\n\nexport function authAddAuthorization(token: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // add cookie\n        Cookies.set('kbase_session', token)\n\n        // TODO: get auth info\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, AuthState, Authorization } from '../types'\nimport Auth from '../components/Auth'\nimport * as actions from '../redux/actions/auth'\n\nexport interface OwnProps {\n    hosted: boolean\n}\n\ninterface StateProps {\n    authorization: Authorization\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n}\n\ninterface DispatchProps {\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const { auth } = state\n    return {\n        authorization: auth\n        // authStatus: status,\n        // token: authorization.token || null,\n        // username: authorization.username || null,\n        // realname: authorization.realname || null\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        checkAuth: () => {\n            dispatch(actions.checkAuth() as any)\n        },\n        onRemoveAuthorization: () => {\n            dispatch(actions.authRemoveAuthorization() as any)\n        },\n        onAddAuthorization: (token: string) => {\n            dispatch(actions.authAddAuthorization(token) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Auth)","\nimport uuidv4 from 'uuid/v4'\n\ninterface ListenerParams {\n    name: string,\n    onSuccess: (payload: Payload) => void,\n    onError: (error: Error) => void\n}\n\nclass Listener {\n    name: string;\n    onSuccess: (payload: Payload) => void;\n    onError: (error: Error) => void;\n\n    constructor({ name, onSuccess, onError }: ListenerParams) {\n        this.name = name;\n        this.onSuccess = onSuccess;\n        this.onError = onError;\n    }\n}\n\ntype Payload = any;\n\ninterface WaitingListenerParams extends ListenerParams {\n    timeout?: number\n}\n\nclass WaitingListener extends Listener {\n    started: Date;\n    timeout: number;\n\n    constructor(params: WaitingListenerParams) {\n        super(params);\n        this.started = new Date();\n        this.timeout = params.timeout || 5000;\n    }\n}\n\ninterface Envelope {\n    channelId: string\n    id: string\n}\n\nclass Message {\n    name: string;\n    payload: any;\n    id: string;\n    created: Date;\n    channel: any\n    envelope: Envelope | null\n\n    constructor({ name, payload, channel }: { name: string, payload: any, channel: any }) {\n        this.name = name\n        this.payload = payload\n        this.id = uuidv4()\n        this.created = new Date()\n        this.channel = channel\n        this.envelope = null;\n    }\n\n    getMessage() {\n        return {\n            envelope: {\n                id: this.id,\n                created: this.created,\n                channel: this.channel\n            },\n            name: this.name,\n            payload: this.payload\n        };\n    }\n}\n\ninterface Handler {\n    started: Date,\n    handler: (response: any) => any\n}\n\ninterface ChannelParams {\n    window: Window,\n    host: string,\n    channelId?: string\n}\n\nexport class Channel {\n    window: Window\n    host: string\n    id: string\n    awaitingResponse: Map<string, Handler>\n    waitingListeners: Map<string, Array<Listener>>\n    listeners: Map<string, Array<Listener>>\n    lastId: number\n    sentCount: number\n    receivedCount: number\n    unwelcomeReceivedCount: number\n    unwelcomeReceivedCountThreshhold: number\n    unwelcomeReceiptWarning: boolean\n    unwelcomeReceiptWarningCount: number\n    currentListener: ((message: MessageEvent) => void) | null\n\n    constructor(params: ChannelParams) {\n        // The given window upon which we will listen for messages.\n        this.window = params.window;\n\n        // The host for the window; required for postmessage\n        if (this.window.document === null) {\n            throw new Error('No document')\n        }\n        if (this.window.document.location === null) {\n            throw new Error('No location')\n        }\n        this.host = params.host || this.window.document.location.origin;\n\n        // The channel id. Used to filter all messages received to\n        // this channel.\n        this.id = params.channelId || uuidv4()\n\n\n        this.awaitingResponse = new Map<string, Handler>()\n        this.waitingListeners = new Map<string, Array<Listener>>()\n        this.listeners = new Map<string, Array<Listener>>()\n\n        this.lastId = 0\n        this.sentCount = 0\n        this.receivedCount = 0\n\n        this.unwelcomeReceivedCount = 0\n        this.unwelcomeReceivedCountThreshhold = 100\n        this.unwelcomeReceiptWarning = true\n        this.unwelcomeReceiptWarningCount = 0\n        this.currentListener = null\n    }\n\n    genId() {\n        this.lastId += 1;\n        return 'msg_' + String(this.lastId);\n    }\n\n    receiveMessage(messageEvent: MessageEvent) {\n        const message = messageEvent.data as Message;\n        // console.log('* received', message);\n        // ignore messages not to/from the registered ids.\n        // if (!message.envelope.to === this.hostId) {\n        //     return;\n        // }\n        // if (!message.envelope.from === this.clientId) {\n        //     return;\n        // }\n        if (!message) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message data; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!message.envelope) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!(message.envelope.channelId === this.id)) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('Message envelope does not match this channel\\'s id', messageEvent);\n            }\n            return;\n        }\n        if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n            this.unwelcomeReceiptWarning = false;\n            console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n        }\n\n        // A message sent as a request will have registered a response handler\n        // in the awaitingResponse hash, using a generated id as the key.\n        // TODO: to to rethink using the message id here. Perhaps somehting like a\n        // chain of ids, the root of which is the origination id, which is the one\n        // known here when it it is sent; the message \"id\" should be assigned whenver\n        // a message is sent, but a response  message would include the original\n        // message in the \"chain\"...\n\n        // We can also have awaiting responses without an originating request.\n        // These are useful for, e.g., a promise which awaits a message to be sent\n        // within some window...\n        if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n            try {\n                const response = this.awaitingResponse.get(message.envelope.id)\n                this.awaitingResponse.delete(message.envelope.id)\n                if (response) {\n                    response.handler(message.payload)\n                }\n            } catch (ex) {\n                console.error('Error handling response for message ', message, ex);\n            }\n        }\n\n        // and also awaiting by message name. Like a listener, but they are only used\n        // once.\n        if (this.waitingListeners.has(message.name)) {\n            const awaiting = this.waitingListeners.get(message.name)!\n            this.waitingListeners.delete(message.name)\n            awaiting.forEach((listener) => {\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n\n        // Otherwise, permanently registered handlers are found in the listeners for the\n        // message name.\n        if (this.listeners.has(message.name)) {\n            this.listeners.get(message.name)!.forEach((listener) => {\n                if (!listener.onSuccess) {\n                    console.warn('no handler for listener!', listener);\n                }\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n    }\n\n    listen(listener: Listener) {\n        if (!this.listeners.has(listener.name)) {\n            this.listeners.set(listener.name, [])\n        }\n        this.listeners.get(listener.name)!.push(listener)\n    }\n\n    on(messageId: string, success: (payload: any) => any, error: (error: Error) => void) {\n        this.listen(new Listener({\n            name: messageId,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    sendMessage(message: Message) {\n        this.window.postMessage(message.getMessage(), this.host);\n    }\n\n    send(name: string, payload: Payload) {\n        const message = new Message({ name, payload, channel: this.id });\n        this.sendMessage(message);\n    }\n\n    sendRequest(message: Message, handler: (response: any) => any) {\n        this.awaitingResponse.set('message.id', {\n            started: new Date(),\n            handler: handler\n        })\n\n        this.sendMessage(message);\n    }\n\n    request(name: string, payload: Payload) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.sendRequest(new Message({ name, payload, channel: this.id }), (response: any) => {\n                    resolve(response);\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    startMonitor() {\n        window.setTimeout(() => {\n            const now = new Date().getTime();\n\n            // first take care of listeners awaiting a message.\n            for (const [id, listeners] of this.waitingListeners.entries()) {\n                const newListeners = listeners.filter((listener) => {\n                    if (listener instanceof WaitingListener) {\n                        const elapsed = now - listener.started.getTime();\n                        // console.log('elapsed?', listener instanceof WaitingListener, elapsed, listener.timeout);\n                        if (elapsed > listener.timeout) {\n                            try {\n                                if (listener.onError) {\n                                    listener.onError(new Error('timout after ' + elapsed));\n                                }\n                            } catch (ex) {\n                                console.error('Error calling error handler', id, ex);\n                            }\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                });\n                if (newListeners.length === 0) {\n                    this.waitingListeners.delete(id)\n                }\n            }\n\n            if (this.waitingListeners.size > 0) {\n                this.startMonitor()\n            }\n        }, 100);\n    }\n\n    listenOnce(listener: WaitingListener) {\n        if (!this.waitingListeners.has(listener.name)) {\n            this.waitingListeners.set(listener.name, [])\n        }\n        this.waitingListeners.get(listener.name)!.push(listener);\n        if (listener.timeout) {\n            this.startMonitor();\n        }\n    }\n\n    once(name: string, success: (payload: Payload) => void, error: (error: Error) => void) {\n        this.listenOnce(new WaitingListener({\n            name: name,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    when(name: string, timeout: number) {\n        return new Promise((resolve, reject) => {\n            return this.listenOnce(new WaitingListener({\n                name: name,\n                timeout: timeout,\n                onSuccess: (payload) => {\n                    resolve(payload);\n                },\n                onError: (error) => {\n                    reject(error);\n                }\n            }));\n        });\n    }\n\n    stats() {\n        return {\n            sent: this.sentCount,\n            received: this.receivedCount\n        };\n    }\n\n    attach(window: Window) {\n        this.window = window;\n    }\n\n    start() {\n        this.currentListener = (message: MessageEvent) => {\n            this.receiveMessage(message);\n        };\n        this.window.addEventListener('message', this.currentListener, false);\n    }\n\n    stop() {\n        if (this.currentListener) {\n            this.window.removeEventListener('message', this.currentListener, false);\n        }\n    }\n}\n","import uuid from 'uuid/v4'\nimport { Channel } from './windowChannel'\nimport { runInThisContext } from 'vm';\n\nexport interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n/*\n channelId: \"3b33179e-8a6d-4ae9-bc95-af4c0492eaa6\"\nframeId: \"frame_kb_html_be553ee5-645c-4737-80ba-dcb642632f0c\"\nhostId: \"host_kb_html_9a3b5d5d-bb92-43ff-a443-73267aa31323\"\nparams: {}\nparentHost: \"https://ci.kbase.us\"\n\n*/\n\n/*\nIFrameSimulator\nThis little doozey allows us to create a simulated iframe. We can query it for\n the params placed on the iframe, and talk to it via the window channel -- it has \n its own window channel.\n Good thing we designed the channel for multiple channels per window.\n*/\nclass IFrameSimulator {\n    params: IFrameParams | null\n    channel: Channel\n\n    constructor() {\n        this.params = null\n\n        // create a window channel.\n\n        this.channel = new Channel({\n            window: window,\n            host: document.location!.origin\n        })\n\n    }\n\n    getParamsFromIFrame(): IFrameParams {\n        return {\n            channelId: this.channel.id,\n            frameId: uuid(),\n            params: {\n                groupsServiceURL: 'services/groups',\n                userProfileServiceURL: 'services/user_profile/rpc',\n                workspaceServiceURL: 'services/ws'\n            },\n            parentHost: document.location!.origin\n        }\n    }\n}\n\n\n\nexport default IFrameSimulator","export interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n\nexport class IFrameIntegration {\n    getParamsFromIFrame() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-params')) {\n            // throw new Error('No params found in window!!');\n            return null\n        }\n        const params = window.frameElement.getAttribute('data-params');\n        if (params === null) {\n            // throw new Error('No params found in window!')\n            return null\n        }\n        return JSON.parse(decodeURIComponent(params)) as IFrameParams\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as types from '../../types'\nimport IFrameSimulator, { IFrameParams } from '../../lib/IFrameSimulator';\nimport { IFrameIntegration } from '../../lib/IFrameIntegration';\n\n// Action Definitions\n\n// export interface AppStart extends Action {\n//     type: ActionFlag.APP_START,\n\n// }\n\nexport interface AppSuccess extends Action {\n    type: ActionFlag.APP_SUCCESS,\n    config: types.AppConfig\n}\n\nexport interface AppError extends Action {\n    type: ActionFlag.APP_ERROR,\n    error: AppError\n}\n\n// Action Creators\n\nexport function appSuccess(config: types.AppConfig): AppSuccess {\n    return {\n        type: ActionFlag.APP_SUCCESS,\n        config: config\n    }\n}\n\nexport function appError(error: AppError): AppError {\n    return {\n        type: ActionFlag.APP_ERROR,\n        error: error\n    }\n}\n\n// Action Thunks\n\nexport function appStart() {\n    return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState: () => types.StoreState) => {\n        // check and see if we are in an iframe\n        const iframeParams = new IFrameIntegration().getParamsFromIFrame()\n\n        if (iframeParams) {\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.userProfileServiceURL\n                    }\n                }\n            }))\n        } else {\n            const fakeIframeParams = new IFrameSimulator().getParamsFromIFrame()\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: fakeIframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: fakeIframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: fakeIframeParams.params.workspaceServiceURL\n                    }\n                }\n            }))\n        }\n\n\n        // if so, get the params\n\n        // if not, use the fake to get it\n    }\n}\n","import * as React from 'react'\nimport './KBaseIntegration.css'\n\nimport { AppState } from '../types'\nimport { } from '../lib/IFrameSimulator'\n\nexport interface KBaseIntegrationProps {\n    status: AppState,\n    onAppStart: () => void\n}\nclass KBaseIntegration extends React.Component<KBaseIntegrationProps, object> {\n    constructor(props: KBaseIntegrationProps) {\n        super(props)\n\n        // const params = this.getParamsFromIFrame()\n\n        // console.log('params', params)\n\n        this.props.onAppStart()\n    }\n\n    render() {\n        // TODO: some test like \n        // {this.props.env === 'dev' ? this.buildAuthDev() : this.buildAuthProd()}\n\n        if (this.props.status === AppState.NONE) {\n            return (\n                <div className=\"KBaseIntegration\">\n                    Loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"KBaseIntegration\">\n                    {this.props.children}\n                </div>\n            )\n        }\n    }\n\n    // getParamsFromIFrame() {\n    //     if (!window.frameElement) {\n    //         return null\n    //     }\n    //     if (!window.frameElement.hasAttribute('data-params')) {\n    //         // throw new Error('No params found in window!!');\n    //         return null\n    //     }\n    //     const params = window.frameElement.getAttribute('data-params');\n    //     if (params === null) {\n    //         // throw new Error('No params found in window!')\n    //         return null\n    //     }\n    //     return JSON.parse(decodeURIComponent(params));\n    // }\n}\n\nexport default KBaseIntegration","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/app'\n\nimport KBaseIntegration from '../components/KBaseIntegration'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n    status: types.AppState\n}\n\ninterface DispatchProps {\n    onAppStart: () => void\n}\n\nexport function mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const { app: { status } } = state\n    return {\n        status\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAppStart: () => {\n            dispatch(actions.appStart() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(KBaseIntegration)","import { StoreState, SortDirection, AuthState, AppState, EditState, SaveState, ValidationState, ViewOrgState, EditOrgState } from \"../types\";\nimport { StaticData } from \"../data/model\";\n\nexport class StateInstances {\n    static makeInitialState(): StoreState {\n        return {\n            browseOrgs: {\n                rawOrganizations: [],\n                organizations: [],\n                totalCount: 0,\n                filteredCount: 0,\n                sortBy: 'name',\n                sortDirection: SortDirection.ASCENDING,\n                filter: 'all',\n                searchTerms: [],\n                selectedOrganizationId: null,\n                searching: false,\n            },\n\n            auth: {\n                status: AuthState.NONE,\n                message: '',\n                authorization: {\n                    token: '',\n                    username: '',\n                    realname: '',\n                    roles: []\n                }\n            },\n            error: null,\n\n            app: {\n                status: AppState.NONE,\n                config: {\n                    baseUrl: '',\n                    services: {\n                        Groups: {\n                            url: ''\n                        },\n                        UserProfile: {\n                            url: ''\n                        },\n                        Workspace: {\n                            url: ''\n                        }\n                    }\n                }\n            },\n            addOrg: {\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                newOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n            updateOrg: {\n                pending: false\n            },\n            viewOrg: {\n                state: ViewOrgState.NONE\n            },\n            editOrg: {\n                organizationId: '',\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                editedOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n        }\n    }\n}","import React, { Component } from 'react'\nimport { Route } from 'react-router'\nimport { BrowserRouter, Redirect, HashRouter } from 'react-router-dom'\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport theReducer from './redux/reducers'\n\n// the app and subcomponents\nimport './App.css';\n\n// fontawesome setup\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner, faSearch } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSpinner, faSearch)\n\nimport OrganizationsBrowser from './containers/OrganizationsBrowser'\nimport NewOrganization from './containers/NewOrganization'\nimport ViewOrganization from './containers/ViewOrganization'\nimport EditOrganization from './containers/EditOrganization'\nimport Auth from './containers/Auth'\nimport KBaseIntegration from './containers/KBaseIntegration'\nimport { StateInstances } from './redux/state';\n\n// Put the redux store together\n// Just for prototyping --- This is super naive and will change!\n// import {organizations} from './data/temp';\n\n// TODO: determine the environment\n\nconst hosted = window.frameElement ? true : false\n\n// Set up initial state \n// TODO: move to own file\nconst initialState = StateInstances.makeInitialState()\n\n\n// TODO: remove the cast of reducer to any...\n// const middleware = [thunk]\n// const store = createStore<StoreState, SortOrgs, null, null>(theReducer as any, initialState, applyMiddleware(thunk));\nconst store = createStore(theReducer as any, initialState as any, compose(applyMiddleware(thunk)))\n\nclass App extends Component {\n  constructor(props: any) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Auth hosted={hosted}>\n          <KBaseIntegration>\n            <HashRouter basename=\"/orgs/\">\n              <div className=\"App\">\n                <div className=\"App-body\">\n                  <Route path=\"/organizations\" component={OrganizationsBrowser} />\n                  <Route path=\"/newOrganization\" component={NewOrganization} />\n                  {/* The destructuring below is ugly, but effective */}\n                  <Route path=\"/viewOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ViewOrganization id={id} />} />\n                  <Route path=\"/editOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <EditOrganization id={id} />} />\n                  <Redirect from=\"/\" to=\"/organizations\" exact={true} />\n                </div>\n              </div>\n            </HashRouter>\n          </KBaseIntegration>\n        </Auth>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'typeface-oxygen';\nimport 'normalize.css';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}