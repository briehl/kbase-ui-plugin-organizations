{"version":3,"sources":["components/entities/nouserpic.png","types/index.tsx","redux/actions/index.ts","redux/reducers/addOrg.ts","redux/reducers/editOrg.ts","redux/reducers/viewOrganization/acceptInboxRequest.ts","redux/reducers/viewOrganization/viewMembers.ts","redux/reducers/viewOrganization/denyInboxRequest.ts","redux/reducers/viewOrganization/cancelOutboxRequests.ts","data/apis/groups.ts","data/models/requests.ts","data/apis/serviceClient.ts","data/apis/userProfile.ts","lib/props.ts","data/models/user.ts","data/models/organization/model.ts","data/models/organization/validation.ts","combo/error/api.ts","redux/actions/viewOrganization/manageRelatedOrganizations.ts","redux/reducers/viewOrganization/manageRelatedOrganizations.ts","redux/reducers/viewOrganization/relatedOrganizations.ts","redux/reducers/viewOrganization/addApp.ts","redux/reducers/viewOrg.ts","redux/reducers/browseOrgs.ts","redux/reducers/auth.ts","redux/reducers/app.ts","redux/reducers/manageOrganizationRequests.ts","redux/reducers/viewMembers.ts","redux/reducers/viewOrganization/inviteUser.ts","redux/reducers/viewOrganization/manageMembership.ts","redux/reducers/viewOrganization/requestAddNarrative.ts","redux/reducers/entities/organization.ts","redux/reducers/entities.ts","redux/reducers/dataServices.ts","redux/reducers/index.tsx","components/entities/Owner.tsx","components/OrgLogo.tsx","components/entities/Avatar.tsx","data/apis/workspaceUtils.ts","data/apis/serviceClientBase.ts","data/apis/workspace.ts","data/apis/serviceWizard.ts","data/apis/genericClient.ts","data/apis/dynamicServiceClient.ts","data/apis/narrativeService.ts","data/models/narrative.ts","data/models/apps.ts","data/apis/narrativeMethodStore.ts","lib/error.ts","redux/actions/entities.ts","components/entities/OwnerContainer.tsx","lib/time.ts","components/NiceElapsedTime.tsx","components/BriefOrganization.tsx","components/views/browseOrgs/organizations/component.tsx","components/views/browseOrgs/organizations/container.tsx","components/views/browseOrgs/component.tsx","redux/actions/browseOrgs.ts","components/views/browseOrgs/container.tsx","components/views/browseOrgs/loader.tsx","redux/actions/addOrg.ts","lib/DebouncingProcess.ts","data/apis/uiService.ts","components/views/newOrganization/component.tsx","components/views/newOrganization/container.tsx","components/views/newOrganization/loader.tsx","data/models/uber.ts","redux/actions/dataServices.ts","redux/actions/viewOrg.ts","redux/actions/viewOrganization/acceptInboxRequest.ts","components/Header.tsx","redux/actions/viewOrganization/viewMembers.ts","components/entities/Member.tsx","components/entities/MemberContainer.tsx","components/views/viewOrganization/accessible/members/component.tsx","components/views/viewOrganization/accessible/members/reduxAdapter.tsx","redux/actions/viewOrganization/denyInboxRequest.ts","redux/actions/viewOrganization/cancelOutboxRequest.ts","components/entities/User.tsx","components/entities/UserContainer.tsx","components/entities/Narrative.tsx","components/entities/NarrativeContainer.tsx","components/entities/app/component.tsx","components/entities/app/loader.tsx","components/views/viewOrganization/accessible/requests/InboxRequest.tsx","components/views/viewOrganization/accessible/requests/InboxRequestContainer.tsx","components/views/viewOrganization/accessible/requests/OutboxRequest.tsx","components/views/viewOrganization/accessible/requests/OutboxRequestContainer.tsx","components/views/viewOrganization/accessible/requests/component.tsx","components/views/viewOrganization/accessible/requests/container.tsx","components/views/viewOrganization/accessible/BriefOrganizationHeader.tsx","components/entities/organization/component.tsx","components/entities/organization/Inaccessible.tsx","components/entities/organization/loader.tsx","redux/actions/entities/organization.ts","components/views/viewOrganization/accessible/relatedOrgs/component.tsx","components/views/viewOrganization/accessible/relatedOrgs/reduxAdapter.tsx","redux/actions/viewOrganization/relatedOrganizations.ts","components/views/viewOrganization/accessible/manageRelatedOrganizations/AvailableOrganization.tsx","components/views/viewOrganization/accessible/manageRelatedOrganizations/component.tsx","components/views/viewOrganization/accessible/manageRelatedOrganizations/reduxAdapter.tsx","components/views/viewOrganization/accessible/manageRelatedOrganizations/loader.tsx","redux/actions/viewOrganization/inviteUser.ts","components/User.tsx","components/menu/component.tsx","components/entities/UserWrapped.tsx","components/entities/UserWrappedContainer.tsx","components/views/viewOrganization/accessible/inviteUser/component.tsx","components/views/viewOrganization/accessible/inviteUser/container.tsx","components/views/viewOrganization/accessible/inviteUser/loader.tsx","components/entities/UserSimple.tsx","components/entities/UserSimpleContainer.tsx","components/entities/narrative/component.tsx","components/entities/narrative/reduxAdapter.tsx","components/OrganizationNarrative.tsx","components/views/viewOrganization/accessible/narratives/component.tsx","redux/actions/viewOrganization/manageMembership.ts","components/views/viewOrganization/accessible/manageMembership/component.tsx","components/views/viewOrganization/accessible/manageMembership/container.tsx","components/views/viewOrganization/accessible/manageMembership/loader.tsx","redux/actions/editOrg.ts","components/views/viewOrganization/accessible/editOrganization/component.tsx","components/views/viewOrganization/accessible/editOrganization/container.tsx","components/views/viewOrganization/accessible/editOrganization/loader.tsx","components/views/viewOrganization/accessible/requestAddNarrative/RowWrapper.tsx","components/views/viewOrganization/accessible/requestAddNarrative/FlexibleColumnWrapper.tsx","components/views/viewOrganization/accessible/requestAddNarrative/component.tsx","redux/actions/viewOrganization/requestAddNarrative.ts","components/views/viewOrganization/accessible/requestAddNarrative/container.tsx","components/views/viewOrganization/accessible/requestAddNarrative/loader.tsx","components/views/viewOrganization/accessible/OrgMenu.tsx","components/views/viewOrganization/accessible/apps/component.tsx","redux/actions/viewOrganization/addApps.ts","components/views/viewOrganization/accessible/addApps/component.tsx","components/views/viewOrganization/accessible/addApps/reduxAdapter.tsx","components/views/viewOrganization/accessible/addApps/loader.tsx","components/views/viewOrganization/accessible/component.tsx","components/views/viewOrganization/accessible/container.tsx","components/views/viewOrganization/inaccessible/component.tsx","components/views/viewOrganization/inaccessible/container.tsx","components/views/viewOrganization/loader.tsx","components/Auth.tsx","data/auth.ts","redux/actions/auth.ts","containers/Auth.tsx","lib/windowChannel.ts","lib/IFrameSimulator.ts","lib/IFrameIntegration.ts","redux/actions/app.ts","components/KBaseIntegration.tsx","containers/KBaseIntegration.tsx","redux/state.tsx","components/dataServices/component.tsx","components/dataServices/storeAdapter.tsx","AppContext.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","ComponentView","UIErrorType","SyncState","EditState","ValidationErrorType","SaveState","MemberType","RequestResourceType","RequestStatus","AuthState","ViewOrgState","AppState","SortDirection","ComponentLoadingState","BrowseOrgsState","InviteUserViewState","NarrativeState","ProcessingState","RequestNarrativeState","SelectionState","ResourceRelationToOrg","ViewOrgViewModelKind","SubViews","ViewOrgSubViewKind","ViewState","ErrorCode","ActionFlag","AppException","_Error","_ref","_this","code","message","detail","info","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","trace","errors","name","Error","captureStackTrace","assertThisInitialized","stack","indexOf","split","inherits","wrapNativeSuper","reducer","state","action","type","ADD_ORG_SAVE","views","addOrgView","viewModel","objectSpread","saveState","SAVING","console","warn","saveStart","ADD_ORG_SAVE_SUCCESS","editState","UNEDITED","SAVED","saveSuccess","ADD_ORG_SAVE_ERROR","SAVE_ERROR","error","saveError","ADD_ORG_LOAD_START","loadingState","LOADING","loadStart","ADD_ORG_LOAD_SUCCESS","SUCCESS","validationState","OK","validatedAt","Date","NEW","newOrganization","loadSuccess","ADD_ORG_LOAD_ERROR","loadError","ADD_ORG_UNLOAD","NONE","unload","ADD_ORG_UPDATE_NAME_SUCCESS","EDITED","value","syncState","DIRTY","updateNameSuccess","ADD_ORG_UPDATE_NAME_ERROR","updateNameError","ADD_ORG_UPDATE_LOGO_URL_SUCCESS","logoUrl","updateLogoUrlSuccess","ADD_ORG_UPDATE_LOGO_URL_ERROR","updateLogoUrlError","ADD_ORG_UPDATE_HOME_URL_SUCCESS","homeUrl","updateHomeUrlSuccess","ADD_ORG_UPDATE_HOME_URL_ERROR","updateHomeUrlError","ADD_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS","researchInterests","updateResearchInterestsSuccess","ADD_ORG_UPDATE_RESEARCH_INTERESTS_ERROR","updateResearchInterestsError","ADD_ORG_UPDATE_ID_SUCCESS","id","updateIdSuccess","ADD_ORG_UPDATE_ID_ERROR","updateIdError","ADD_ORG_UPDATE_ID_PASS","updateIdPass","ADD_ORG_UPDATE_DESCRIPTION_SUCCESS","description","updateDescriptionSuccess","ADD_ORG_UPDATE_DESCRIPTION_ERROR","updateDescriptionError","ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS","isPrivate","updateIsPrivateSuccess","ADD_ORG_EVALUATE_OK","addOrgEvaluateOk","ADD_ORG_EVALUATE_ERRORS","ERROR","addOrgEvaluateErrors","validationStateOk","evaluateEditorState","editedOrganization","EDIT_ORG_LOAD_START","editOrgView","EDIT_ORG_LOAD_SUCCESS","organization","EDIT_ORG_LOAD_ERROR","EDIT_ORG_UNLOAD","EDIT_ORG_SAVE_START","editOrgSaveStart","EDIT_ORG_SAVE_SUCCESS","CLEAN","editOrgSaveSuccess","EDIT_ORG_SAVE_ERROR","editOrgSaveError","EDIT_ORG_UPDATE_NAME_SUCCESS","editedOrg","remoteValue","newState","editOrgUpdateNameSuccess","EDIT_ORG_UPDATE_NAME_ERROR","editOrgUpdateNameError","EDIT_ORG_UPDATE_LOGO_URL_SUCCESS","editOrgUpdateLogoUrlSuccess","EDIT_ORG_UPDATE_LOGO_URL_ERROR","editOrgUpdateLogoUrlError","EDIT_ORG_UPDATE_HOME_URL_SUCCESS","editOrgUpdateHomeUrlSuccess","EDIT_ORG_UPDATE_HOME_URL_ERROR","editOrgUpdateHomeUrlError","EDIT_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS","EDIT_ORG_UPDATE_RESEARCH_INTERESTS_ERROR","EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS","EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS","EDIT_ORG_UPDATE_DESCRIPTION_ERROR","editOrgUpdateDescriptionError","EDIT_ORG_EVALUATE_OK","editOrgEvaluateOk","EDIT_ORG_EVALUATE_ERRORS","editOrgEvaluateErrors","VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS","viewOrgView","kind","NORMAL","requestInbox","requests","acceptInboxRequestSuccess","VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS","members","map","member","username","memberUsername","ADMIN","sortedMembers","promoteToAdminSuccess","VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS","MEMBER","demoteToMemberSuccess","VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS","filter","removeMemberSuccess","VIEW_ORG_SORT_MEMBERS_SUCCESS","sortMembersBy","sortBy","sortMembersSuccess","VIEW_ORG_SEARCH_MEMBERS_SUCCESS","searchMembersBy","searchBy","searchMembersSuccess","VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS","rejectInboxRequestSuccess","VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS","requestOutbox","cancelRequestSuccess","RequestType","GroupException","_AppException","apperror","Map","httpcode","httpstatus","appcode","callid","time","originalError","ServerException","_AppException2","_this2","GroupsClient","token","url","createClass","key","fetch","headers","Authorization","Accept","mode","then","response","json","result","exists","_listGroups","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","status","abrupt","stop","apply","arguments","path","body","concat","join","Content-Type","method","JSON","stringify","statusText","get","text","_post","_callee2","errorText","_context2","t0","_x","_x2","_get","_callee3","_context3","_x3","newGroup","payload","private","custom","logourl","researchinterests","homeurl","length","put","groupUpdate","_addRelatedGroup","_callee4","groupId","relatedGroupId","group","relatedGroups","update","_context4","relatedgroups","includes","push","_x4","_x5","_removeRelatedGroup","_callee5","newRelatedGroups","_context5","_x6","_x7","_getRequest","_callee6","requestId","_context6","_x8","params","query","URLSearchParams","includeClosed","append","sortDirection","DESCENDING","startAt","String","getTime","toString","workspaceId","complete","resourceId","_grantResourceAccess","_callee7","resourceType","_context7","post","_x9","_x10","_x11","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_visitGroup","_callee8","_ref11","_context8","_x12","_getOpenRequests","_callee9","_ref12","groupIds","requestStatuses","_arr","_i","_ref15","_ref14","_groupId","requestStatus","_context9","entries","slicedToArray","set","_x13","groupRequestToOrgRequest","request","requestType","INVITATION","REQUEST","stringToRequestType","USER","WORKSPACE","APP","stringToResourceType","resourcetype","OPEN","organizationId","groupid","requester","user","resource","createdAt","createdate","expireAt","expiredate","modifiedAt","moddate","narrativeId","appId","RequestsModel","groupsClient","cache","groupsApi","groupsServiceURL","grequest","has","getRequest","_getOutboundRequests","grequests","getCreatedRequests","forEach","_getUserRequestForOrg","find","r","_getPendingRequestsForOrg","_getRequestInboxForOrg","getTargetedRequests","_getCombinedRequestInboxForOrg","getGroupRequests","t1","_getRequestOutboxForOrg","_getOrganizationInvitations","_getOrganizationInvitationsForOrg","invitations","getOrganizationInvitations","invitation","_getInboundRequests","_callee10","_this3","_context10","_getUserInvitationForOrg","_callee11","_context11","_getPendingOrganizationRequestsForOrg","_callee12","groupRequests","_context12","_getPendingOrganizationRequests","_callee13","allRequests","_context13","Promise","all","reduce","_cancelRequest","_callee14","_context14","cancelRequest","_acceptRequest","_callee15","_context15","acceptRequest","_denyRequest","_callee16","_context16","denyRequest","_acceptJoinInvitation","_callee17","_context17","_x14","_rejectJoinInvitation","_callee18","_context18","_x15","_inviteUserToJoinOrg","_callee19","_context19","inviteUserToGroup","_x16","_x17","ServiceClient","param","version","constructor","Math","random","slice","AuthorizedServiceClient","_ServiceClient","func","makePayload","UserProfileClient","_AuthorizedServiceCli","makeEmptyPayload","_getUserProfile","profileCache","resolve","callFunc","_updateUserProfile","delete","profile","_getUserProfiles","usernames","_getAllUsers","_searchUsers","getProp","obj","propPath","defaultValue","Array","TypeError","i","undefined","profileToUser","jobTitle","userdata","realname","city","country","title","avatarOption","gravatarHash","gravatarDefault","UserRelationToOrganization","UserWorkspacePermission","OrganizationKind","UserModel","userProfileClient","userProfileServiceURL","_getUser","userProfile","getUserProfile","_getUsers","toFetch","userProfiles","getUserProfiles","users","searchUsers","excludedUsers","Validation","s","firstNonPrintable","search","nonPrintableRe","beforeStart","before","after","REQUIRED_MISSING","match","URL","protocol","ex","determineRelation","org","INACCESSIBLE_PRIVATE","MEMBER_REQUEST_PENDING","MEMBER_INVITATION_PENDING","owner","OWNER","groupPermissionToWorkspacePermission","groupsPermission","VIEW","EDIT","getRealname","groupToOrganization","currentUser","joinedAt","joined","lastVisitedAt","lastvisit","admins","admin","narratives","resources","workspace","parseInt","rid","narrname","isPublic","public","permission","perm","narrcreate","updatedAt","addedAt","added","apps","catalogmethod","isMember","role","isAdmin","isOwner","relation","groupRoleToUserRelation","areMembersPrivate","privatemembers","memberCount","memcount","narrativeCount","rescount","appCount","relatedOrganizations","groupToPrivateOrganization","applySearch","orgs","searchTerms","searchTermsRe","term","RegExp","every","termRe","test","dateDays","d","t","round","applySortComparison","sortField","direction","b","localeCompare","applySort","organizations","ASCENDING","sort","applyFilter","roleType","roles","privacy","applyRoleType","some","applyRole","applyPrivacy","narrativeSortByToComparator","queryNarratives","c1","applyNarrativeSort","tokens","narrative","applyNarrativeSearch","memberSortByToComparator","queryMembers","applyMembersSort","applyMembersSearch","OrganizationModel","usersClient","userModel","_getOrg","g","getGroupById","log","getUsers","_getGroupUsers","_getOrganization","getGroupUsers","_getOrgs","ids","getOrg","_getOwnOrgs","ownOrgs","getAllOrgs2","_getAllOrgs","allGroups","groups","listGroups","Set","add","from","values","listGroupToBriefOrganization","_queryOrgs","filtered","searched","sorted","total","_ownOrgs","_grantViewAccess","req","grantReadAccessToRequestedResource","requestModel","_addOrg","newOrg","reject","createGroup","_orgExists","groupExists","_updateOrg","orgUpdate","updateGroup","validateOrgId","validateOrgName","validateOrgDescription","_removeNarrativeFromOrg","deleteResource","_removeAppFromOrg","groupFunnyAppId","_grantNarrativeAccess","grantResourceAccess","_x18","_requestMembership","requestMembership","_x19","_addOrRequestNarrativeToGroup","addOrRequestNarrative","_x20","_x21","_addOrRequestAppToGroup","addOrRequestResource","_x22","_x23","_memberToAdmin","memberToAdmin","_x24","_x25","_adminToMember","_callee20","_context20","adminToMember","_x26","_x27","_removeMember","_callee21","_context21","removeMember","_x28","_x29","_updateMember","_callee22","_context22","updateMember","_x30","_x31","_x32","_visitOrg","_callee23","_context23","visitGroup","_x33","_getOpenRequestsStatus","_callee24","organizationIds","openRequests","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context24","getOpenRequests","Symbol","iterator","done","stringToRequestStatus","return","finish","_x34","_getOpenRequestStatus","_callee25","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context25","_x35","_addRelatedOrganization","_callee26","relatedOrganizationId","_context26","addRelatedGroup","_x36","_removeRelatedOrganization","_callee27","_ref13","_context27","removeRelatedGroup","_x37","new","OLD","makeError","history","uuid","at","applyQuery","searchExp","re","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS","subViews","manageRelatedOrganizationsView","MANAGE_RELATED_ORGS","availableOrganizations","queried","selectedOrganization","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION","availableOrgs","relatedOrg","isSelected","actions","selectOrganization","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS","newRelatedOrgs","newAvailableOrgs","isRelated","addOrganization","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS","relatedOrgs","removeOrganization","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS","searchSuccess","VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS","localReducer","VIEW_ORG_ADD_APPS_LOAD_START","VIEW_ORG_ADD_APPS_LOAD_SUCCESS","rawApps","selectedApp","VIEW_ORG_ADD_APPS_LOAD_ERROR","VIEW_ORG_ADD_APPS_UNLOAD","VIEW_ORG_ADD_APPS_SELECT_SUCCESS","newRawApps","app","selected","newApps","selectSuccess","VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS","pending","ASSOCIATION_PENDING","ASSOCIATED","requestAssociationSuccess","VIEW_ORG_ADD_APPS_SEARCH_SUCCESS","VIEW_ORG_ADD_APPS_SORT_SUCCESS","sortSuccess","haveReducer","newViewState","addAppsView","VIEW_ORG_LOAD_START","types","VIEW_ORG_LOAD_NORMAL_SUCCESS","openRequest","groupInvitations","narrativesSortBy","inviteUserView","requestNarrativeView","manageMembershipView","loadNormalSuccess","VIEW_ORG_RELOAD_NORMAL_SUCCESS","reloadNormalSuccess","VIEW_ORG_LOAD_INACCESSIBLE_PRIVATE_SUCCESS","PRIVATE_INACCESSIBLE","loadInaccessiblePrivateSuccess","VIEW_ORG_LOAD_ERROR","VIEW_ORG_UNLOAD","VIEW_ORG_REMOVE_NARRATIVE_SUCCESS","newNarratives","newDisplayNarratives","removeNarrativeSuccess","VIEW_ORG_ACCESS_NARRATIVE_SUCCESS","accessNarrativeSuccess","VIEW_ORG_SORT_NARRATIVES_SUCCESS","sortNarrativesSuccess","VIEW_ORG_SEARCH_NARRATIVES_SUCCESS","searchNarrativesSuccess","VIEW_ORG_REMOVE_APP_SUCCESS","newOrgApps","removeAppSuccess","acceptInboxRequest","denyInboxRequest","cancelOutboxRequest","viewMembers","manageRelatedOrganizations","addApps","BROWSE_ORGS_LOAD_SUCCESS","_action$defaultViewMo","defaultViewModel","rawOrganizations","totalCount","filteredCount","selectedOrganizationId","searching","BROWSE_ORGS_SEARCH","searchOrgs","BROWSE_ORGS_SEARCH_START","searchOrgsStart","BROWSE_ORGS_SEARCH_SUCCESS","searchOrgsSuccess","BROWSE_ORGS_SEARCH_ERROR","searchOrgsError","BROWSE_ORGS_SORT_START","sortOrgsStart","BROWSE_ORGS_FILTER_START","filterOrgsStart","BROWSE_ORGS_UNLOAD","AUTH_CHECK_START","auth","CHECKING","authorization","authCheckStart","AUTH_AUTHORIZED","AUTHORIZED","authAuthorized","AUTH_UNAUTHORIZED","UNAUTHORIZED","authUnauthorized","AUTH_CHECK_ERROR","authCheckError","APP_SUCCESS","READY","config","appSuccess","ADMIN_MANAGE_REQUESTS_LOAD_START","ADMIN_MANAGE_REQUESTS_LOAD_SUCCESS","manageOrganizationRequestsView","ADMIN_MANAGE_REQUESTS_LOAD_ERROR","ADMIN_MANAGE_REQUESTS_UNLOAD","ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS_SUCCESS","newRequests","getViewAccessSuccess","VIEW_MEMBERS_LOAD_START","viewMembersView","VIEW_MEMBERS_LOAD_SUCCESS","VIEW_MEMBERS_LOAD_ERROR","VIEW_MEMBERS_UNLOAD","VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS","VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS","INVITE_USER_LOAD_START","INVITE_USER_LOAD_SUCCESS","EDITING","selectedUser","INVITE_USER_LOAD_ERROR","INVITE_USER_UNLOAD","INVITE_USER_SEARCH_USERS_SUCCESS","searchUsersSuccess","INVITE_USER_SELECT_USER_SUCCESS","selectUserSuccess","INVITE_USER_SEND_INVITATION_START","SENDING","sendInvitationStart","INVITE_USER_SEND_INVITATION_SUCCESS","_state$viewModel","orgModel","newUsers","sendInvitationSuccess","INVITE_USER_SEND_INVITATION_ERROR","sendInvitationError","editableMemberProfile","VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START","VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS","VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR","VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD","VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS","editedMember","updateTitleSuccess","VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS","evaluateSuccess","VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR","evaluateError","VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS","sendRequestStart","REQUEST_ADD_NARRATIVE_LOAD_START","REQUEST_ADD_NARRATIVE_LOAD_SUCCESS","selectedNarrative","selectionState","REQUEST_ADD_NARRATIVE_LOAD_ERROR","REQUEST_ADD_NARRATIVE_SEND_START","REQUEST_ADD_NARRATIVE_SEND_SUCCESS","orgNarrative","REQUESTED","sendRequestSuccess","REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_START","selectNarrativeStart","REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS","selectNarrativeSuccess","REQUEST_ADD_NARRATIVE_UNLOAD","REQUEST_ADD_NARRATIVE_SORT_SUCCESS","ENTITY_ORGANIZATION_LOAD_SUCCESS","newOrgs","entities","byId","ENTITY_USER_LOADER_SUCCESS","userLoaderSuccess","ENTITY_ORGANIZATION_LOADER_SUCCESS","orgsMap","organizationLoaderSuccess","ENTITY_NARRATIVE_LOAD_SUCCESS","loadNarrativeSuccess","ENTITY_LOAD_APP_SUCCESS","loadAppSuccess","organizationsReducer","DATA_SERVICE_LOAD_SUCCESS","db","View","addOrgReducer","editOrgReducer","browseOrgsView","browseOrgsReducer","viewOrgReducer","authReducer","appReducer","manageOrganizatiopRequests","inviteUser","manageMembership","requestAddNarrative","dataServices","OrgLogo","props","react","src","width","size","inString","position","charCodeAt","c2","substring","initial","charAt","organizationName","toUpperCase","color","md5","substr","height","style","border","x","y","dy","textAnchor","dominantBaseline","fontSize","fill","fontFamily","renderLogoUrl","renderDefaultInitial","renderLogo","React","Avatar","_React$Component","noUserPic","avatarUrl","getAvatarUrl","reverseView","v","COMPACT","Owner","view","setState","icon","showAvatar","className","components_entities_Avatar","avatarSize","tooltip","renderAvatar","es_tooltip","placement","href","target","onClick","onToggleView","bind","renderCompact","iso8601ToDate","dateString","dateParts","exec","offset","newDateString","workspaceInfoToObject","wsInfo","objectCount","userPermission","globalReadPermission","lockStatus","metadata","objectInfoToObject","data","majorVersion","minorVersion","savedAt","savedBy","workspaceName","checksum","ref","JSONRPCException","classJSONRPCServerException","_Error2","_processResponse","_ref3$result","methodResult","_error","_callFunc","Headers","processResponse","_callFunc2","WorkspaceClient","_getVersion","_getObjectInfo","objectInfo","_getWorkspaceInfo","ServiceWizardClient","_getServiceStatus","theResult","AuthorizedGenericClient","_GenericClient","GenericClient","_result","moduleCache","Cache","itemLifetime","monitoringFrequency","waiterTimeout","waiterFrequency","cacheLifetime","isMonitoring","window","setTimeout","newCache","cacheRenewed","keys","item","isExpired","runMonitor","cacheItem","reserved","cached","Bluebird","started","waiter","reserveAndFetch","fetcher","catch","err","elapsed","reserveItem","fetchPromise","setItem","finally","isCancelled","isReserved","reserveWaiter","DynamicServiceClient","timeout","rpcContext","moduleId","getModule","getItemWithWait","_this4","getCached","client","getServiceStatus","module_name","funcName","_this5","lookupModule","serviceStatus","NarrativeAccess","Sort","NarrativeServiceClient","_DynamicServiceClient","_listNarratives","AppType","SortBy","NarrativeModel","_getOwnNarratives","narrativeServiceClient","requestClient","narrativesResult","pendingRequests","workspacesInOrg","serviceWizardURL","listNarratives","getPendingRequestsForOrg","nar","workspaceInfo","workspaceApi","ws","is_temporary","access","objectId","narrative_nice_name","lastSavedAt","lastSavedBy","TITLE","LAST_SAVED","sorter","getSorter","_getNarrative","wsClient","rawWorkspaceInfo","_objectId","rawObjectInfo","_access","workspaceServiceURL","getWorkspaceInfo","getObjectInfo3","objects","wsid","objid","includeMetadata","ignoreErrors","infos","t2","NarrativeMethodStoreClient","_version","_list_methods","_get_method_full_info","convertIcon","convertAppType","app_type","EDITOR","VIEWER","ADVANCED_VIEWER","convertSuggestions","suggestions","relatedMethods","related_methods","nextMethods","next_methods","relatedApps","related_apps","nextApps","next_apps","convertPublications","publications","publication","pubMedID","pmid","displayText","display_text","link","methodFullInfoToApp","git_commit_hash","ver","authors","kb_contributors","contact","subtitle","technical_description","categories","screenshots","moduleName","gitCommitHash","kbaseContributors","technicalDescription","appType","methodBriefInfoToAppBriefInfo","loading_error","input_types","output_types","iconURL","loadingError","inputTypes","outputTypes","AppClient","narrativeMethodStoreURL","_getApp","methodInfo","narrativeMethodStoreAPI","get_method_full_info","tag","userLoader","userId","dispatch","getState","_getState","_getState$auth$author","model","_user","ENTITY_USER_LOADER_START","services","UserProfile","getUser","ENTITY_USER_LOADER_ERROR","loadNarrative","_getState3","_getState3$auth$autho","narrativeClient","_narrative","ENTITY_NARRATIVE_LOAD_START","narrativeModel","Workspace","Groups","ServiceWizard","getNarrative","ENTITY_NARRATIVE_LOAD_ERROR","Loader","times","Owner_Owner","onLoad","connect","niceElapsed","someDate","measure","measureAbs","unit","options","nowDate","now","elapsedAbs","abs","absoluteAfter","prefix","suffix","compactDate","getFullYear","Intl","DateTimeFormat","month","day","format","year","intervals","Infinity","NiceElapsedTime","nowTimer","interval","calcInterval","upto","startIntervalTimer","clearInterval","setInterval","handleInterval","showTooltip","fullDate","hour","minute","timeZoneName","tooltipPrefix","BriefOrganization","OrgLogo_OrgLogo","mouseEnterDelay","newAlert","theme","requestsAlert","iconColor","openRequestsStatus","INAPPLICABLE","permalink","fontWeight","location","origin","menu","es_menu","Modal","content","Item","dropdown","overlay","trigger","react_router_dom","to","renderRelation","renderPrivacy","renderHomeUrl","renderOrgFreshness","renderRequests","renderPermalink","second","OwnerContainer","fullTimestamp","memberCountTooltip","renderMemberCount","count","renderNarrativeCount","NiceElapsedTime_NiceElapsedTime","renderMemberRow","renderNarrativeRow","renderModifiedRow","renderLogoColumn","renderInfoCol","renderStatsCol","renderNormal","Organizations","singular","plural","es_button","myOrgsUnfiltered","es_alert","maxWidth","margin","index","BriefOrganization_BriefOrganization","renderNoOrgs","overflowY","display","flexDirection","renderOrgs","_state$views$browseOr","OrganizationsBrowser","searchInput","searchButton","filterByRoleValues","label","filterByRoleType","filterByRole","filterByPrivacy","showAdvancedControls","onSearchOrgs","current","currentSearchInputValue","e","preventDefault","doSearch","onSortOrgs","newFilter","onFilterOrgs","checkedValues","onSearchInputChange","onSubmit","placeholder","onChange","autoFocus","disabled","haveSearchInput","form","htmlType","renderSearchIcon","onClearSearch","renderSearchFeedback","renderSearchForm","marginRight","es_select","onSortByChange","dropdownMatchSelectWidth","Option","_this$props$filter","onToggleAdvanced","radioStyle","lineHeight","es_radio","Group","onFilterByRoleTypeChange","renderAdvancedToggle","es_checkbox","onFilterByRoleChange","onFilterByPrivacyChange","container","renderSortByControl","marginTop","renderFilterByRole","renderFilterByPrivacy","textAlign","borderTop","renderSearchBar","renderOrganizations","renderFilterColumn","storeState","_storeState$views$bro","_getState2","_getState2$auth$autho","_browseOrgsView$viewM","orgClient","_organizations2","adminOrgs","_openRequests2","queryOrgs","getOpenRequestsStatus","_browseOrgsView$viewM2","_organizations3","_openRequests3","_getState4","_getState4$auth$autho","_browseOrgsView$viewM3","_organizations4","_openRequests4","spin","padding","renderLoading","renderError","browseOrgs_container","onUnload","checkLogoUrlProcess","defaultSearchTerms","defaultSortField","defaultSortDirection","defaultFilter","_organizations","_openRequests","_defaultViewModel","BROWSE_ORGS_LOAD_START","DebouncingProcess","delay","canceled","timer","clearTimeout","task","UIServiceClient","_checkImageURL","_ref3$","serverError","_checkHTMLURL","_ref6$","AddOrgEvaluateErrors","load","validateOrgLogoUrl","validateOrgHomeUrl","validateOrgResearchInterests","addOrgEvaluate","addOrg","ADD_ORG_SAVE_START","_state$auth$authoriza","exception","_state$views$addOrgVi","orgModelFromState","_state$auth$authoriza2","updateName","_Validation$validateO","_Validation$validateO2","validatedName","checkHomeUrlProcess","CheckIfLogoUrlExistsProcess","checkImageURL","is_valid","CheckIfHomeUrlExistsProcess","checkHTMLURL","checkIDProcess","CheckIfExistsProcess","orgExists","updateDescription","_Validation$validateO11","_Validation$validateO12","validatedDescription","NewOrganization","cancelToBrowser","showError","document","isModified","confirm","onOk","onCancel","okText","cancelText","onSave","persist","onUpdateName","onUpdateDescription","onUpdateId","onUpdateLogoUrl","onUpdateHomeUrl","onUpdateResearchInterests","onUpdateIsPrivate","checked","field","nameField","input","calcFieldClass","renderFieldError","idField","logoUrlField","onLogoUrlChange","renderLogoPreview","homeUrlField","renderBrokenHomeURL","renderHomeURLPreview","collapse","bordered","Panel","header","background","borderRadius","overflow","isPrivateField","renderIsPrivate","researchInterestsField","TextArea_default","autosize","minRows","maxRows","descriptionField","es_tabs","defaultActiveKey","animated","TabPane","tab","dangerouslySetInnerHTML","__html","Marked","parse","flex","renderEditorHeader","renderNameRow","onNameChange","renderIDRow","onIdChange","renderLogoURLRow","renderHomeURLRow","onHomeUrlChange","renderPrivatePublicRow","onIsPrivateChange","renderResearchInterestsRow","onResearchInterestsChange","renderDescriptionRow","onDescriptionChange","renderSaveButton","renderCancelButton","renderDefaultLogo","renderBrokenLogo","_this$props","line","modal","visible","okType","canSave","onClickCancelToBrowser","errorButton","shape","toggleError","react_router","renderEditor","cancel","_Validation$validateO3","_Validation$validateO4","validatedLogoUrl","start","updateLogoUrl","_Validation$validateO9","_Validation$validateO10","validatedId","updateId","updateIsPrivate","_Validation$validateO5","_Validation$validateO6","validatedHomeUrl","updateHomeUrl","_Validation$validateO7","_Validation$validateO8","validatedResearchInterests","updateResearchInterests","Component","newOrganization_container","UberModel","_getOrganizationForUser","getUserRequestForOrg","getUserInvitationForOrg","getPendingOrganizationRequestsForOrg","DATA_SERVICE_LOAD_START","removeNarrativeError","VIEW_ORG_REMOVE_NARRATIVE_ERROR","accessNarrativeError","VIEW_ORG_ACCESS_NARRATIVE_ERROR","viewOrgJoinRequestError","VIEW_ORG_JOIN_REQUEST_ERROR","acceptJoinInvitationStart","VIEW_ORG_ACCEPT_JOIN_INVITATION_START","uberClient","_organization","_relation","_requestInbox2","_openRequest","orgRequests","orgInvitations","_requestInbox","_requestOutbox","_narratives2","_apps","_members","uberModel","getOrganizationForUser","getRequestInboxForOrg","getOrganizationInvitationsForOrg","getOpenRequestStatus","getCombinedRequestInboxForOrg","getRequestOutboxForOrg","reload","_organization2","_relation2","_requestInbox4","_openRequest2","_requestInbox3","_requestOutbox2","_narratives3","_apps2","_members2","viewOrgJoinRequest","_state$auth$authoriza3","VIEW_ORG_JOIN_REQUEST_SUCCESS","viewOrgCancelJoinRequest","_state$auth$authoriza4","newRequest","VIEW_ORG_JOIN_REQUEST_START","VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR","acceptJoinInvitation","_state$auth$authoriza5","VIEW_ORG_ACCEPT_JOIN_INVITATION_SUCCESS","VIEW_ORG_ACCEPT_JOIN_INVITATION_ERROR","rejectJoinInvitation","_state$auth$authoriza6","VIEW_ORG_REJECT_JOIN_INVITATION_SUCCESS","VIEW_ORG_REJECT_JOIN_INVITATION_ERROR","removeApp","VIEW_ORG_REMOVE_APP_START","ensureViewModel","_state$auth$authoriza7","orgClientFromState","removeAppFromOrg","VIEW_ORG_REMOVE_APP_ERROR","_request","inbox","VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR","VIEW_ORG_ACCEPT_INBOX_REQUEST_START","viewOrgActions","Header","context","currentMenuItem","breadcrumbs","verticalAlign","marginLeft","buttons","promoteToAdmin","VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_START","VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_ERROR","demoteToMember","VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_START","VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_ERROR","VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_START","reloadOrg","VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_ERROR","Member","userTooltip","renderRole","components_entities_Member","Members","confirmMemberRemoval","marginBottom","MemberContainer","onRemoveMember","onPromoteMemberToAdmin","onConfirmRemoveMember","onDemoteAdminToMember","onMemberMenu","onAdminMenu","renderOwnerMenu","renderAdminMenu","renderMemberMenu","fontStyle","classNames","renderMemberOptions","_this6","paddingRight","onSearchMembers","_this7","onSortMembers","renderSortBar","renderConfirmMemberRemoval","renderHeader","renderMembers","onViewMembersUnload","VIEW_ORG_VIEW_MEMBERS_UNLOAD","adminUsername","VIEW_ORG_SORT_MEMBERS_START","VIEW_ORG_SORT_MEMBERS_ERROR","ViewMembers","VIEW_ORG_REJECT_INBOX_REQUEST_START","VIEW_ORG_REJECT_INBOX_REQUEST_ERROR","_requests","VIEW_ORG_CANCEL_JOIN_REQUEST_START","User","components_entities_User","Narrative","cursor","UserContainer","renderPublicPermission","renderUserPermission","Narrative_Narrative","App","authorCount","authorUsername","sep","renderViewControl","renderIcon","renderAuthors","component_App","appClient","_app","ENTITY_LOAD_APP_START","appModel","NarrativeMethodStore","getApp","ENTITY_LOAD_APP_ERROR","Request","onAcceptInboxRequest","onRejectInboxRequest","NarrativeContainer","renderRequestRequester","renderRequestOptions","app_loader","onAcceptRequest","onRejectRequest","renderRequestReceivedSubject","renderJoinRequest","renderWorkspaceRequest","renderAppRequest","renderUserInvitation","renderBody","acceptActions","rejectActions","InboxRequest","onCancelOutboxRequest","alert","onCancelRequest","cancelActions","OutboxRequest","ManageGroupRequests","cancelToViewer","onAcceptJoinRequest","onDenyJoinRequest","onCancelJoinInvitation","onGetViewAccess","open","src_components_Header","card","hoverable","headStyle","backgroundColor","narrativeAccess","InboxRequestContainer","outbox","OutboxRequestContainer","outboxCount","inboxCount","renderInbox","renderOutbox","cancelRequestActions","orgMenu","onNavigateToBrowser","renderBackButton","renderButtonsRow","Organization","component_Organization","Inaccessible_Organization","ENTITY_ORGANIZATION_LOAD_START","ENTITY_ORGANIZATION_LOAD_ERROR","RelatedOrganizations","onManageRelatedOrgs","onRemoveRelatedOrganization","Wrapped","withRouter","OrganizationEntity","renderControls","VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START","removeRelatedOrganization","VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR","AvailableOrganization","selectableOrganization","renderRelated","ManageRelatedOrganizations","onAddOrganization","onRemoveOrganization","onSearch","onFilterChange","classes","onSelectOrganization","AvailableOrganization_AvailableOrganization","button","alertStyle","onRemoveSelectedOrganization","onAddSelectedOrganization","onFinish","renderAvailableToolbar","renderAvailableOrgs","renderSelectedOrg","_viewModel$subViews$m","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START","addRelatedOrganization","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START","vm","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_START","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_ERROR","manageRelatedOrganizations_reduxAdapter","vm1","selectableOrgs","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_START","VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_ERROR","selectUserError","INVITE_USER_SELECT_USER_ERROR","getUserRelation","inboxRequests","outboxRequests","ensureView","sendInvitation","_ensureView3","_view$viewModel","inviteUserToJoinOrg","MainMenu","render","selectedKeys","pathname","renderMenu","UserWrapped","InviteUser","lastSearchAt","autocompleteMessage","onSendInvitation","doSearchUsers","searchDebounce","onSearchUsers","onSelectUser","showIcon","renderUser","src_components_User","statusIconType","statusTooltip","statusIcon","statusIconColor","UserWrappedContainer","SENDABLE","onClickCancelToViewer","components_menu_component","renderMenuButtons","renderSearchButton","renderUsers","renderSelectedUser","renderInvitationForm","renderFooter","userClient","adminUsers","invited","requested","_users","orgUsers","INVITE_USER_SEARCH_USERS_START","INVITE_USER_SEARCH_USERS_ERROR","selectedUsername","orgViewModel","_ensureView","_ensureView2","INVITE_USER_SELECT_USER_START","InviteUserLoader","inviteUser_container","entities_UserSimple","iconType","UserSimpleContainer","renderGlobalPermission","renderNiceElapsed","renderNarrative","component_Narrative","OrganizationNarrative","requestAccess","shareButton","permissionTooltip","buttonTooltip","onRequestAccess","narrative_reduxAdapter","renderNarrativePermission","accessModal","drawer","closable","onClose","onCloseRequestAccess","Narratives","onRequestAddNarrative","onRemoveNarrative","onNarrativeMenu","onSearchNarratives","onSortNarratives","sortNarrativesBy","lastOrgVisitAt","OrganizationNarrative_OrganizationNarrative","renderNarrativeMenu","narrativesTable","extras","renderMemberNarrativeRow","narrativesToShow","hiddenNarrativeCount","renderMemberNarratives","renderNonMemberNarratives","evaluate","demoteSelfToMember","VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_START","VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS","demoteSelfToMemberSuccess","VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_ERROR","ManageMembership","confirmed","doLeaveOrgConfirmed","onLeaveOrganization","onDemoteSelfToMemberConfirmed","onDemoteSelfToMember","onUpdateTitle","leaveOrgButton","doLeaveOrg","adminTooltip","ownerTooltip","onTitleChange","onDone","renderTitleRow","renderLeaveOrgButton","renderDemoteToMemberButton","subViewModel","VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_START","VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_SUCCESS","VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_ERROR","_Validation$validateM","validateMemberTitle","_Validation$validateM2","validatedTitle","VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_ERROR","VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START","VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR","manageMembership_container","thisMember","editableProfile","editableOrg","editOrgSave","_state$views$editOrgV","updateOrg","editOrgEvaluate","editOrgUpdateDescriptionSuccess","NavigateTo","EditOrganization","navigateTo","onEditOrgSave","editOrganization_container","RowWrapper","containerDimensions","buffer","approximateRowHeight","containerVisibleTop","max","scrollTop","containerVisibleBottom","clientHeight","h","offsetHeight","offsetTop","isVisible","children","emptyRowRenderer","Renderable","currentItem","FlexibleColumnWrapper","wrapperContainerRef","listeners","limitingTimer","limitingTimeout","checkDimensions","currentDimensions","calcContainerBounds","lastDimensions","fun","scrollHandler","limiter","addEventListener","listener","resizeHandler","removeEventListener","out","renderable","RowWrapper_RowWrapper","renderEmpty","NarrativeRenderer","rowRenderer","rowCount","RequestAddNarrative","doSelectNarrative","doSendRequest","flag","narrativeRenderer","renderOrgNarrative","FlexibleColumnWrapper_FlexibleColumnWrapper","onSearchSubmit","NumberFormat","useGrouping","doSortBy","renderFilterSortBar","renderFeedbackBar","renderNarratives","buttonLabel","canSendRequest","warning","renderNarrativeSelector","renderSelectedNarrative","renderSelectedAlert","renderSelectedNarrativeButton","selectNarrative","_request2","addOrRequestNarrativeToGroup","REQUEST_ADD_NARRATIVE_SEND_ERROR","REQUEST_ADD_NARRATIVE_SORT_START","REQUEST_ADD_NARRATIVE_SORT_ERROR","sortOrganizationNarratives","requestAddNarrative_container","_narratives","getOrganization","getOwnNarratives","OrgMenu","onJoinOrg","onCancelJoinRequest","onAcceptInvitation","onRejectInvitation","onChangeSubView","MANAGE_MEMBERSHIP","EDIT_ORGANIZATION","INVITE_USER","ADD_NARRATIVE","ADD_APP","onJoinClick","onMenuClick","adminMenu","ownerMenu","renderOrgMenu","Apps","onRemoveApp","onAssociateApp","doRemoveApp","renderButtonRow","renderSearchRow","renderBrowseRows","addAppsViewModel","searchExpression","expr","moduleMatch","AddApps","onSelectApp","onRequestAssociation","onSort","doSelectApp","renderAppStatus","renderApps","alertType","doRequestAssociation","renderSelectedApp","renderMessage","renderAppSelectionControls","renderAppSelector","renderAppAdder","selectedAppId","_ensureViewModel","_ensureViewModel2","_ensureViewModel3","_ensureViewModel4","_getState$app$config$","groupsUrl","userProfileUrl","groupsAppId","addOrRequestAppToGroup","VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_ERROR","_ensureViewModel5","_ensureViewModel6","_rawApps","foundApps","VIEW_ORG_ADD_APPS_SEARCH_START","VIEW_ORG_ADD_APPS_SEARCH_ERROR","_ensureViewModel7","_ensureViewModel8","sortedApps","VIEW_ORG_ADD_APPS_SORT_START","VIEW_ORG_ADD_APPS_SORT_ERROR","addApps_reduxAdapter","AccordionState","nmsClient","hasInboxRequest","hasOutboxRequest","methods","appResources","list_methods","appResource","appsModel","ViewOrganization","showInfo","accordionState","UP","subView","renderEditRow","reduxAdapter","onReloadOrg","inner","twoToneColor","renderGroupRequestsRow","_this$props$viewModel","renderGroupRequests","renderMembersToolbar","onInviteUser","doAddRelatedOrgs","tabs","renderMembersTab","totalRequestCount","totalRequests","requests_container","titleCount","outboxSize","relatedOrgCount","relatedOrgTab","renderRelatedOrgsToolbar","relatedOrgs_reduxAdapter","tabPosition","BROWSER","VIEW_MEMBERS","MANAGE_REQUESTS","DOWN","toggleAccordion","component_Narratives","searchNarrativesBy","component_Apps","aboutTabTitle","renderDescriptionTab","narrativesTabTitle","renderNarrativesTab","appsTabTitle","renderAppsTab","renderMainTabs","renderCombo","manageRelatedOrganizations_loader","inviteUser_loader","manageMembership_loader","editOrganization_loader","requestAddNarrative_loader","_this8","addApps_loader","renderManageRelatedOrgsView","renderInviteUsersView","renderManageMembership","renderEditOrganization","renderAddNarrative","renderAddApp","renderNormalView","borg","OrgMenu_OrgMenu","BriefOrganizationHeader_BriefOrganization","getSubView","onViewOrg","VIEW_ORG_REMOVE_NARRATIVE_START","removeNarrativeFromOrg","_viewModel$narratives","filteredNarratives","VIEW_ORG_ACCESS_NARRATIVE_START","grantNarrativeAccess","acceptInboxRequestActions","VIEW_ORG_SORT_NARRATIVES_START","renderJoinButton","onShowInfo","renderOrg","ownProps","previousOrganizationId","inaccessible_container","accessible_container","previousProps","visitOrg","Auth","tokenRef","checkAuth","onRemoveAuthorization","onAddAuthorization","onLoginClick","onLogoutClick","buildAuthToolbar","buildAuthForm","hosted","buildAuthProd","buildAuthDev","endpoints","AuthClient","makePath","Cookies","getTokenInfo","getMe","account","desc","Listener","onSuccess","onError","WaitingListener","Message","channelId","created","envelope","uuidv4","Channel","host","awaitingResponse","waitingListeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","messageEvent","handler","awaiting","messageId","success","listen","postMessage","getMessage","sendMessage","sendRequest","_loop","startMonitor","listenOnce","received","receiveMessage","IFrameSimulator","channel","frameId","authServiceURL","originalPath","viewParams","parentHost","IFrameIntegration","frameElement","hasAttribute","getAttribute","decodeURIComponent","KBaseIntegration","on","send","greeting","onAppStart","setupChannel","teardownChannel","_state$app","_state$app$config","defaultPath","iframeParams","getParamsFromIFrame","pushState","baseUrl","StateInstances","DataServices","DATA_SERVICE_UNLOAD","AppContextProvider","Provider","Consumer","library","faSpinner","faSearch","faGlobe","faUserLock","faSquare","faCube","DescriptionRenderer","sanitize","prot","unescape","replace","toLowerCase","Renderer","MarkedOptions","renderer","setOptions","initialState","makeInitialState","store","createStore","theReducer","compose","applyMiddleware","thunk","F","react_default","createElement","viewOrganization_loader","es","containers_KBaseIntegration","containers_Auth","storeAdapter","basename","component","exact","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.131700bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nouserpic.9af42ba9.png\";","import * as userProfile from \"../data/apis/userProfile\"\nimport * as groups from \"../data/apis/groups\"\nimport * as orgModel from '../data/models/organization/model'\nimport * as userModel from \"../data/models/user\"\nimport * as requestModel from '../data/models/requests'\nimport * as narrativeModel from '../data/models/narrative'\nimport * as appModel from '../data/models/apps'\nimport { AnError } from \"../combo/error/api\";\n\n/* Types from the organization service (approximately) */\n\n/*\n    Organization\n*/\n\n\nexport enum ComponentView {\n    COMPACT = 0,\n    NORMAL\n}\n\nexport enum UIErrorType {\n    NONE = 0,\n    INFO,\n    WARNING,\n    ERROR\n}\n\nexport interface UIError {\n    type: UIErrorType\n    message?: string\n}\n\nexport enum SyncState {\n    NONE = 0,\n    NEW,\n    DIRTY,\n    CLEAN\n}\n\nexport enum EditState {\n    NONE = 'NONE',\n    UNEDITED = 'UNEDITED',\n    EDITED = 'EDITED'\n}\n\n\n// export enum ValidationState {\n//     NONE = 0,\n//     VALID,\n//     INVALID,\n//     // DIRTY = 'DIRTY',\n//     MISSING\n// }\n\nexport enum ValidationErrorType {\n    OK = 0,\n    ERROR,\n    REQUIRED_MISSING\n}\n\nexport interface ValidationStateBase {\n    type: ValidationErrorType\n    validatedAt: Date\n}\n\nexport interface ValidationStateOk extends ValidationStateBase {\n    type: ValidationErrorType.OK\n}\n\nexport interface ValidationStateError extends ValidationStateBase {\n    type: ValidationErrorType.ERROR\n    message: string\n}\n\nexport interface ValidationStateRequiredMissing extends ValidationStateBase {\n    type: ValidationErrorType.REQUIRED_MISSING\n    message: string\n}\n\n// export interface ValidationStateAsyncError extends ValidationStateBase {\n//     type: ValidationErrorType.ASYNC_ERROR\n//     message: string\n//     \n// }\n\nexport type ValidationState = ValidationStateOk | ValidationStateError | ValidationStateRequiredMissing\n\nexport interface Editable {\n    value: any\n    remoteValue: any\n    syncState: SyncState\n    // editState: EditState\n    // validationState: ValidationState\n    validationState: ValidationState\n    // validatedAt: Date | null\n    // error: UIError\n}\nexport interface EditableString extends Editable {\n    value: string,\n    remoteValue: string | null\n}\n\nexport interface EditableNullableString extends Editable {\n    value: string | null\n    remoteValue: string | null\n}\n\nexport interface EditableBoolean extends Editable {\n    value: boolean\n    remoteValue: boolean | null\n}\n\nexport interface EditableOrganization {\n    id: EditableString\n    name: EditableString\n    description: EditableString\n    isPrivate: EditableBoolean\n    logoUrl: EditableNullableString\n    homeUrl: EditableNullableString\n    researchInterests: EditableString\n}\n\n\n// TODO: or CLEAN to replace new and saved\nexport enum SaveState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    READY = 'READY',\n    SAVING = 'SAVING',\n    SAVED = 'SAVED',\n    SAVE_ERROR = 'SAVE_ERROR'\n}\n\nexport interface User {\n    username: string\n    realname: string\n    title: string | null\n    organization: string | null\n    city: string | null\n    state: string | null\n    country: string | null\n    avatarOption: string | null\n    gravatarHash: string | null\n    gravatarDefault: string | null\n}\n\nexport enum MemberType {\n    MEMBER = 0,\n    ADMIN,\n    OWNER\n}\nexport interface Member {\n    user: User,\n    type: MemberType\n}\n\nexport enum RequestResourceType {\n    USER = 0,\n    WORKSPACE,\n    APP\n}\n\nexport enum RequestStatus {\n    OPEN = 0,\n    CANCELED,\n    EXPIRED,\n    ACCEPTED,\n    DENIED\n}\n\nexport type Username = string\n\nexport interface App {\n    id: string,\n    module: string,\n    func: string,\n    version: string,\n    title: string,\n    category: string\n}\n\nexport interface AppResource {\n    id: string\n}\n\nexport interface EditedOrganization {\n    id: {\n        value: string,\n        error?: UIError\n    }\n    name: {\n        value: string,\n        error?: UIError\n    }\n    description: {\n        value: string,\n        error?: UIError\n    }\n}\n\n/*\n    Collection of organizations\n*/\n\n/* REDUX */\n\nexport enum AuthState {\n    NONE = 0,\n    CHECKING,\n    AUTHORIZED,\n    UNAUTHORIZED,\n    ERROR\n}\n\nexport interface UserAuthorization {\n    token: string,\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\n\nexport interface Authorization {\n    status: AuthState,\n    message: string,\n    authorization: UserAuthorization\n}\n\nexport enum ViewOrgState {\n    NONE = 0,\n    INITIAL,\n    FETCHING,\n    READY,\n    ERROR\n}\n\nexport enum AppState {\n    NONE = 0,\n    LOADING,\n    READY,\n    ERROR\n}\n\nexport enum SortDirection {\n    ASCENDING = 'asc',\n    DESCENDING = 'desc'\n}\n\nexport enum ComponentLoadingState {\n    NONE = 0,\n    LOADING,\n    SUCCESS,\n    ERROR\n}\n\nexport interface ManageOrganizationRequestsViewModel {\n    organization: orgModel.Organization\n    requests: Array<requestModel.Request>\n    invitations: Array<requestModel.Request>\n}\n\nexport interface ManageOrganizationRequestsView {\n    loadingState: ComponentLoadingState\n    error: AppError | null\n    viewModel: ManageOrganizationRequestsViewModel | null\n}\n\nexport interface ViewMembersViewModel {\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n}\n\nexport interface ViewMembersView {\n    loadingState: ComponentLoadingState,\n    error: AppError | null,\n    viewModel: ViewMembersViewModel | null\n}\n\nexport enum BrowseOrgsState {\n    NONE = 0,\n    SEARCHING,\n    SUCCESS,\n    ERROR\n}\n\nexport interface BrowseOrgsViewModel {\n    rawOrganizations: Array<orgModel.BriefOrganization>\n    organizations: Array<orgModel.BriefOrganization>\n    openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>\n    totalCount: number\n    filteredCount: number\n    sortField: string\n    sortDirection: SortDirection\n    filter: orgModel.Filter\n    searchTerms: Array<string>\n    selectedOrganizationId: string | null,\n    // TODO: let's make a new interface for running operations...\n    searching: boolean\n    error: AppError | null\n}\n\nexport interface BrowseOrgsView {\n    loadingState: ComponentLoadingState,\n    error: AppError | null,\n    viewModel: BrowseOrgsViewModel | null\n}\n\nexport enum InviteUserViewState {\n    NONE = 0,\n    EDITING,\n    SENDABLE,\n    SENDING,\n    SUCCESS,\n    ERROR\n}\n\n// user info we get out of user profile search\n\n\n// a user who may or may not be in an org, with org relation info\n// todo: fetch more profile info.\nexport interface OrganizationUser {\n    username: string\n    realname: string\n    relation: orgModel.UserRelationToOrganization\n}\n\n// View Model / Invite User (for admins)\n\nexport interface InviteUserViewModel {\n    organization: orgModel.Organization\n    users: Array<OrganizationUser> | null\n    selectedUser: {\n        user: User,\n        relation: orgModel.UserRelationToOrganization\n    } | null\n    editState: InviteUserViewState\n}\n\n\n\nexport interface ManageMembershipViewModel {\n    organization: orgModel.Organization\n    editableMemberProfile: orgModel.EditableMemberProfile\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n}\n\n// export interface ManageMembershipView {\n//     loadingState: ComponentLoadingState\n//     error: AnError | null\n//     viewModel: ManageMembershipViewModel | null\n// }\n\nexport enum NarrativeState {\n    NONE = 0,\n    ASSOCIATED,\n    REQUESTED\n}\n\nexport interface Narrative {\n    workspaceId: number\n    objectId: number\n    title: string\n    status: NarrativeState\n    owner: Username\n    modifiedAt: Date\n}\n\nexport enum ProcessingState {\n    NONE = 0,\n    PROCESSING,\n    SUCCESS,\n    ERROR\n}\n\n\nexport enum RequestNarrativeState {\n    NONE = 0,\n    LOADING,\n    ERROR,\n    LOADED,\n    SELECTING,\n    SELECTED,\n    SENDING,\n    SENT\n}\n\nexport enum SelectionState {\n    NONE = 0,\n    SELECTING,\n    SELECTED\n}\n\n// Add app view model\n\nexport enum ResourceRelationToOrg {\n    NONE = 0,\n    ASSOCIATED,\n    ASSOCIATION_PENDING\n}\nexport interface SelectableApp {\n    app: appModel.AppBriefInfo\n    selected: boolean\n    relation: ResourceRelationToOrg,\n    appId: string // according to groups (module.method, not module/method)\n}\nexport interface AddAppsViewModel {\n    rawApps: Array<SelectableApp>\n    selectedApp: SelectableApp | null\n    searchBy: string\n    sortBy: string\n    apps: Array<SelectableApp>\n}\n\n// ViewModel / RequestAddNarrative\n\nexport interface RequestNarrativeViewModel {\n    organization: orgModel.Organization\n    narratives: Array<narrativeModel.OrganizationNarrative>\n    selectedNarrative: narrativeModel.OrganizationNarrative | null\n    relation: orgModel.Relation\n    error: AnError | null\n    selectionState: SelectionState\n    saveState: SaveState\n}\n\n// Add Org\n\nexport interface AddOrgViewModel {\n    editState: EditState\n    saveState: SaveState\n    error: AppError | null\n    validationState: ValidationState\n    newOrganization: EditableOrganization\n}\n\nexport interface AddOrgView {\n    loadingState: ComponentLoadingState\n    error: AppError | null\n    viewModel: AddOrgViewModel | null\n}\n\n// Entities\n\nexport interface UserEntity {\n    userId: string\n    profile: userProfile.UserProfile\n}\n\nexport interface OrganizationEntity {\n    groupId: string\n    group: groups.Group\n}\n\nexport interface RequestEntity {\n    requestId: string\n    request: groups.Request\n}\n\nexport enum ViewOrgViewModelKind {\n    NORMAL = 0,\n    PRIVATE_INACCESSIBLE\n}\n\n// TODO: just for view org view, should be namespaced or something.\nexport enum SubViews {\n    NORMAL = 0,\n    MANAGE_RELATED_ORGS,\n    INVITE_USER,\n    MANAGE_MEMBERSHIP,\n    EDIT_ORGANIZATION,\n    ADD_NARRATIVE,\n    ADD_APP\n}\n\nexport interface ViewOrgViewModel {\n    kind: ViewOrgViewModelKind.NORMAL,\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    openRequest: orgModel.RequestStatus\n    groupRequests: Array<requestModel.Request> | null\n    groupInvitations: Array<requestModel.Request> | null\n    requestOutbox: Array<requestModel.Request>\n    requestInbox: Array<requestModel.Request>\n    narratives: {\n        sortBy: string\n        searchBy: string\n        narratives: Array<orgModel.NarrativeResource>\n    }\n    apps: {\n        sortBy: string\n        searchBy: string\n        apps: Array<orgModel.AppResource>\n    }\n    // sortNarrativesBy: string\n    // searchNarrativesBy: string\n    // narratives: Array<orgModel.NarrativeResource>\n    sortMembersBy: string\n    searchMembersBy: string\n    members: Array<orgModel.Member>\n\n    subViews: {\n        manageRelatedOrganizationsView: View<ManageRelatedOrgsViewModel>\n        inviteUserView: View<InviteUserViewModel>\n        requestNarrativeView: View<RequestNarrativeViewModel>\n        manageMembershipView: View<ManageMembershipViewModel>\n        addAppsView: View<AddAppsViewModel>\n    }\n}\n\nexport interface ViewInaccessiblePrivateOrgViewModel {\n    kind: ViewOrgViewModelKind.PRIVATE_INACCESSIBLE,\n    organization: orgModel.InaccessiblePrivateOrganization\n    relation: orgModel.Relation\n    requestOutbox: Array<requestModel.Request>\n}\n\nexport interface ViewOrgView {\n    loadingState: ComponentLoadingState\n    error: AppError | null\n    viewModel: ViewOrgViewModel | ViewInaccessiblePrivateOrgViewModel | null\n}\n\nexport enum ViewOrgSubViewKind {\n    NONE = 0,\n    MANAGE_RELATED_ORGS\n}\n\nexport interface NoneViewModel {\n    kind: ViewOrgSubViewKind.NONE\n}\n\nexport enum ViewState {\n    NONE = 0,\n    LOADING,\n    OK,\n    ERROR\n}\nexport interface View<T> {\n    state: ViewState\n    error: AnError | null\n    viewModel: T | null\n}\n\nexport interface SelectableRelatableOrganization {\n    organization: orgModel.BriefOrganization\n    isRelated: boolean\n    isSelected: boolean\n}\n\nexport interface ManageRelatedOrgsViewModel {\n    kind: ViewOrgSubViewKind.MANAGE_RELATED_ORGS\n    organization: orgModel.Organization\n    availableOrganizations: {\n        organizations: Array<SelectableRelatableOrganization>\n        queried: Array<SelectableRelatableOrganization>\n        searchBy: string\n    }\n    relatedOrganizations: Array<string>\n    selectedOrganization: SelectableRelatableOrganization | null\n}\n\nexport type ViewOrgSubView = View<NoneViewModel> | View<ManageRelatedOrgsViewModel>\n\n\nexport interface EditOrgViewModel {\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n    editedOrganization: EditableOrganization\n    organization: orgModel.Organization\n    saveError: AppError | null\n}\n\nexport interface EditOrgView {\n    loadingState: ComponentLoadingState,\n    error: AppError | null,\n    viewModel: EditOrgViewModel | null\n}\n\nexport interface StoreState {\n    // new!!\n    entities: {\n        users: {\n            byId: Map<userModel.Username, userModel.User>\n            all: Array<string>\n        }\n        orgs: {\n            byId: Map<orgModel.OrganizationID, orgModel.Organization | orgModel.InaccessiblePrivateOrganization>\n            all: Array<string>\n        }\n        requests: {\n            byId: Map<requestModel.RequestID, requestModel.Request>\n            all: Array<string>\n        }\n        narratives: {\n            byId: Map<narrativeModel.WorkspaceID, narrativeModel.Narrative>\n        }\n        organizations: {\n            byId: Map<orgModel.OrganizationID, orgModel.Organization | orgModel.InaccessiblePrivateOrganization>\n        }\n        apps: {\n            byId: Map<appModel.AppID, appModel.AppFullInfo>\n        }\n    }\n\n    db: {\n    }\n\n    auth: Authorization\n    error: AppError | null\n\n    app: {\n        status: AppState\n        config: AppConfig\n        error?: AppError,\n    }\n\n    views: {\n        browseOrgsView: BrowseOrgsView\n        addOrgView: AddOrgView\n        viewOrgView: ViewOrgView\n        editOrgView: EditOrgView\n        manageOrganizationRequestsView: ManageOrganizationRequestsView\n        viewMembersView: ViewMembersView\n        // inviteUserView: InviteUserView\n        // manageMembershipView: ManageMembershipView\n        // requestNarrativeView: RequestNarrativeView\n        // organizationCentricView: OrganizationCentricView\n    }\n    updateOrg: {\n        pending: boolean\n    }\n}\n\nexport enum ErrorCode {\n    NONE = 0,\n    ERROR\n}\n\n/* COMPONENT PROPS */\n\nexport interface SomeError {\n    code: ErrorCode\n    message: string\n    detail: string\n    id: string\n    at: Date\n\n    errorHistory?: Array<AppError>\n    trace?: Array<string>\n    info?: any\n}\n\nexport interface AppError {\n    code: string\n    message: string\n    generatedAt?: Date\n    trace?: Array<string>\n    errors?: Array<AppError>\n    exception?: AppException\n}\n\nexport class AppException extends Error {\n    code: string\n    message: string\n    detail?: string\n    trace?: Array<string>\n    errors?: Array<AppException>\n    info?: Map<string, any>\n    constructor({ code, message, detail, info }: { code: string, message: string, detail?: string, info?: Map<string, any> }) {\n        super(message)\n        this.name = 'AppException'\n        this.code = code\n        this.message = message\n        this.detail = detail\n        this.info = info\n\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, AppException)\n        }\n\n        if (this.stack) {\n            if (this.stack.indexOf('\\n') >= 0) {\n                this.trace = this.stack.split('\\n')\n            } else {\n                this.trace = [this.stack]\n            }\n        }\n    }\n}\n\nexport interface AppConfig {\n    baseUrl: string\n    services: {\n        Groups: {\n            url: string\n        }\n        UserProfile: {\n            url: string\n        }\n        Workspace: {\n            url: string\n        }\n        ServiceWizard: {\n            url: string\n        }\n        Auth: {\n            url: string\n        }\n        NarrativeMethodStore: {\n            url: string\n        }\n    }\n    defaultPath: string,\n    channelId: string | null\n}\n\nexport interface AuthProps {\n    authorization: Authorization,\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n    hosted: boolean,\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nexport interface IFrameParams {\n    channelId: string\n    frameId: string\n    params: {\n        groupsServiceURL: string\n        userProfileServiceURL: string\n        workspaceServiceURL: string\n        serviceWizardURL: string\n        authServiceURL: string\n        narrativeMethodStoreURL: string\n        originalPath: string | null\n        view: string | null\n        viewParams: any\n    },\n    parentHost: string\n}","export enum ActionFlag {\n    APP = 1,\n    APP_START,\n    APP_SUCCESS,\n    // APP_SUCCESS_IFRAME,\n    // APP_SUCCESS_SOLO,\n    APP_ERROR,\n\n    BROWSE_ORGS_LOAD,\n    BROWSE_ORGS_LOAD_START,\n    BROWSE_ORGS_LOAD_SUCCESS,\n    BROWSE_ORGS_LOAD_ERROR,\n    BROWSE_ORGS_UNLOAD,\n\n    BROWSE_ORGS_SORT,\n    BROWSE_ORGS_SORT_START,\n    BROWSE_ORGS_SORT_SUCCESS,\n    BROWSE_ORGS_SORT_ERROR,\n\n    BROWSE_ORGS_FILTER,\n    BROWSE_ORGS_FILTER_START,\n    BROWSE_ORGS_FILTER_SUCCESS,\n    BROWSE_ORGS_FILTER_ERROR,\n\n    BROWSE_ORGS_SEARCH,\n    BROWSE_ORGS_SEARCH_START,\n    BROWSE_ORGS_SEARCH_SUCCESS,\n    BROWSE_ORGS_SEARCH_ERROR,\n\n    UPDATE_ORG,\n    UPDATE_ORG_START,\n    UPDATE_ORG_SUCCESS,\n    UPDATE_ORG_ERROR,\n\n    // viewing org\n    VIEW_ORG_LOAD,\n    VIEW_ORG_LOAD_START,\n    VIEW_ORG_LOAD_SUCCESS,\n    VIEW_ORG_LOAD_ERROR,\n    VIEW_ORG_UNLOAD,\n    VIEW_ORG_RELOAD,\n    VIEW_ORG_ADD_NARRATIVE,\n\n    VIEW_ORG_LOAD_INACCESSIBLE_PRIVATE_SUCCESS,\n    VIEW_ORG_LOAD_NORMAL_SUCCESS,\n    VIEW_ORG_RELOAD_NORMAL_SUCCESS,\n\n    // Requests\n\n    VIEW_ORG_JOIN_REQUEST,\n    VIEW_ORG_JOIN_REQUEST_START,\n    VIEW_ORG_JOIN_REQUEST_SUCCESS,\n    VIEW_ORG_JOIN_REQUEST_ERROR,\n\n    VIEW_ORG_CANCEL_JOIN_REQUEST,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_START,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n\n    VIEW_ORG_ACCEPT_JOIN_INVITATION,\n    VIEW_ORG_ACCEPT_JOIN_INVITATION_START,\n    VIEW_ORG_ACCEPT_JOIN_INVITATION_SUCCESS,\n    VIEW_ORG_ACCEPT_JOIN_INVITATION_ERROR,\n\n    VIEW_ORG_ACCEPT_INBOX_REQUEST,\n    VIEW_ORG_ACCEPT_INBOX_REQUEST_START,\n    VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS,\n    VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n\n    VIEW_ORG_REJECT_INBOX_REQUEST,\n    VIEW_ORG_REJECT_INBOX_REQUEST_START,\n    VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS,\n    VIEW_ORG_REJECT_INBOX_REQUEST_ERROR,\n\n    VIEW_ORG_REJECT_JOIN_INVITATION,\n    VIEW_ORG_REJECT_JOIN_INVITATION_START,\n    VIEW_ORG_REJECT_JOIN_INVITATION_SUCCESS,\n    VIEW_ORG_REJECT_JOIN_INVITATION_ERROR,\n\n    VIEW_ORG_REMOVE_NARRATIVE,\n    VIEW_ORG_REMOVE_NARRATIVE_START,\n    VIEW_ORG_REMOVE_NARRATIVE_SUCCESS,\n    VIEW_ORG_REMOVE_NARRATIVE_ERROR,\n\n    VIEW_ORG_ACCESS_NARRATIVE,\n    VIEW_ORG_ACCESS_NARRATIVE_START,\n    VIEW_ORG_ACCESS_NARRATIVE_SUCCESS,\n    VIEW_ORG_ACCESS_NARRATIVE_ERROR,\n\n    VIEW_ORG_SORT_NARRATIVES,\n    VIEW_ORG_SORT_NARRATIVES_START,\n    VIEW_ORG_SORT_NARRATIVES_SUCCESS,\n    VIEW_ORG_SORT_NARRATIVES_ERROR,\n\n    VIEW_ORG_SEARCH_NARRATIVES,\n    VIEW_ORG_SEARCH_NARRATIVES_START,\n    VIEW_ORG_SEARCH_NARRATIVES_SUCCESS,\n    VIEW_ORG_SEARCH_NARRATIVES_ERROR,\n\n    VIEW_ORG_SORT_MEMBERS,\n    VIEW_ORG_SORT_MEMBERS_START,\n    VIEW_ORG_SORT_MEMBERS_SUCCESS,\n    VIEW_ORG_SORT_MEMBERS_ERROR,\n\n    VIEW_ORG_SEARCH_MEMBERS,\n    VIEW_ORG_SEARCH_MEMBERS_START,\n    VIEW_ORG_SEARCH_MEMBERS_SUCCESS,\n    VIEW_ORG_SEARCH_MEMBERS_ERROR,\n\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_START,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_ERROR,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD,\n\n    // keep these ones simple...\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR,\n\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n\n    VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION,\n    VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START,\n    VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n    VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_START,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS,\n    VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_ERROR,\n\n    // PRIVATE ORG\n\n    VIEW_PRIVATE_ORG_JOIN_REQUEST,\n    VIEW_PRIVATE_ORG_JOIN_REQUEST_START,\n    VIEW_PRIVATE_ORG_JOIN_REQUEST_SUCCESS,\n    VIEW_PRIVATE_ORG_JOIN_REQUEST_ERROR,\n\n    // MEMBERS\n\n    VIEW_ORG_VIEW_MEMBERS_LOAD,\n    VIEW_ORG_VIEW_MEMBERS_LOAD_START,\n    VIEW_ORG_VIEW_MEMBERS_LOAD_SUCCESS,\n    VIEW_ORG_VIEW_MEMBERS_LOAD_ERROR,\n    VIEW_ORG_VIEW_MEMBERS_UNLOAD,\n\n    VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER,\n    VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_START,\n    VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS,\n    VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_ERROR,\n\n    VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN,\n    VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_START,\n    VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS,\n    VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_ERROR,\n\n    VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER,\n    VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_START,\n    VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS,\n    VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_ERROR,\n\n    // Manage Membership\n    VIEW_ORG_MANAGE_MEMBERSHIP_LOAD,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR,\n    VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD,\n\n    VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_CONFIRMED,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_START,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_ERROR,\n\n    VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE,\n    VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_START,\n    VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_ERROR,\n\n    VIEW_ORG_MANAGE_MEMBERSHIP_SAVE,\n    VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START,\n    VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR,\n\n    VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE,\n    VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR,\n\n    VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER,\n    VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_START,\n    VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS,\n    VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_ERROR,\n\n    // Apps\n\n    VIEW_ORG_ADD_APPS_LOAD,\n    VIEW_ORG_ADD_APPS_LOAD_START,\n    VIEW_ORG_ADD_APPS_LOAD_SUCCESS,\n    VIEW_ORG_ADD_APPS_LOAD_ERROR,\n    VIEW_ORG_ADD_APPS_UNLOAD,\n    VIEW_ORG_ADD_APPS_SELECT,\n    VIEW_ORG_ADD_APPS_SELECT_SUCCESS,\n    VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP,\n    VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_START,\n    VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS,\n    VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_ERROR,\n    VIEW_ORG_ADD_APPS_SEARCH,\n    VIEW_ORG_ADD_APPS_SEARCH_START,\n    VIEW_ORG_ADD_APPS_SEARCH_SUCCESS,\n    VIEW_ORG_ADD_APPS_SEARCH_ERROR,\n    VIEW_ORG_ADD_APPS_SORT,\n    VIEW_ORG_ADD_APPS_SORT_START,\n    VIEW_ORG_ADD_APPS_SORT_SUCCESS,\n    VIEW_ORG_ADD_APPS_SORT_ERROR,\n\n\n    VIEW_ORG_REMOVE_APP,\n    VIEW_ORG_REMOVE_APP_START,\n    VIEW_ORG_REMOVE_APP_SUCCESS,\n    VIEW_ORG_REMOVE_APP_ERROR,\n\n\n    // add org fields\n\n    ADD_ORG_LOAD,\n    ADD_ORG_LOAD_START,\n    ADD_ORG_LOAD_SUCCESS,\n    ADD_ORG_LOAD_ERROR,\n    ADD_ORG_UNLOAD,\n\n    ADD_ORG_UPDATE_NAME,\n    ADD_ORG_UPDATE_NAME_SUCCESS,\n    ADD_ORG_UPDATE_NAME_ERROR,\n\n    ADD_ORG_UPDATE_LOGO_URL,\n    ADD_ORG_UPDATE_LOGO_URL_SUCCESS,\n    ADD_ORG_UPDATE_LOGO_URL_ERROR,\n\n    ADD_ORG_UPDATE_ID,\n    ADD_ORG_UPDATE_ID_SUCCESS,\n    ADD_ORG_UPDATE_ID_ERROR,\n    ADD_ORG_UPDATE_ID_PASS,\n    ADD_ORG_EVALUATE_ID,\n\n    ADD_ORG_UPDATE_DESCRIPTION,\n    ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    ADD_ORG_UPDATE_IS_PRIVATE,\n    ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n    ADD_ORG_UPDATE_IS_PRIVATE_ERROR,\n\n    ADD_ORG_UPDATE_HOME_URL,\n    ADD_ORG_UPDATE_HOME_URL_SUCCESS,\n    ADD_ORG_UPDATE_HOME_URL_ERROR,\n\n    ADD_ORG_UPDATE_RESEARCH_INTERESTS,\n    ADD_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS,\n    ADD_ORG_UPDATE_RESEARCH_INTERESTS_ERROR,\n\n    ADD_ORG_EVALUATE,\n    ADD_ORG_EVALUATE_OK,\n    ADD_ORG_EVALUATE_ERRORS,\n\n    ADD_ORG_SAVE,\n    ADD_ORG_SAVE_START,\n    ADD_ORG_SAVE_SUCCESS,\n    ADD_ORG_SAVE_ERROR,\n\n\n    // editing org\n    EDIT_ORG_LOAD,\n    EDIT_ORG_LOAD_START,\n    EDIT_ORG_LOAD_SUCCESS,\n    EDIT_ORG_LOAD_ERROR,\n    EDIT_ORG_UNLOAD,\n\n    EDIT_ORG_SAVE,\n    EDIT_ORG_SAVE_START,\n    EDIT_ORG_SAVE_SUCCESS,\n    EDIT_ORG_SAVE_ERROR,\n\n    // edit org, field level updates\n    EDIT_ORG_UPDATE_NAME,\n    EDIT_ORG_UPDATE_NAME_SUCCESS,\n    EDIT_ORG_UPDATE_NAME_ERROR,\n\n    EDIT_ORG_UPDATE_LOGO_URL,\n    EDIT_ORG_UPDATE_LOGO_URL_SUCCESS,\n    EDIT_ORG_UPDATE_LOGO_URL_ERROR,\n\n    EDIT_ORG_UPDATE_DESCRIPTION,\n    EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    EDIT_ORG_UPDATE_IS_PRIVATE,\n    EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n    EDIT_ORG_UPDATE_IS_PRIVATE_ERROR,\n\n    EDIT_ORG_UPDATE_HOME_URL,\n    EDIT_ORG_UPDATE_HOME_URL_SUCCESS,\n    EDIT_ORG_UPDATE_HOME_URL_ERROR,\n\n    EDIT_ORG_UPDATE_RESEARCH_INTERESTS,\n    EDIT_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS,\n    EDIT_ORG_UPDATE_RESEARCH_INTERESTS_ERROR,\n\n    EDIT_ORG_EVALUATE,\n    EDIT_ORG_EVALUATE_OK,\n    EDIT_ORG_EVALUATE_ERRORS,\n\n    // Auth\n    AUTH_CHECK,\n    AUTH_CHECK_START,\n    AUTH_CHECK_ERROR,\n    AUTH_AUTHORIZED,\n    AUTH_UNAUTHORIZED,\n    AUTH_REMOVE_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_LOAD,\n    ADMIN_MANAGE_REQUESTS_LOAD_START,\n    ADMIN_MANAGE_REQUESTS_LOAD_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_LOAD_ERROR,\n    ADMIN_MANAGE_REQUESTS_UNLOAD,\n\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_START,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_START,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_CANCEL_JOIN_INVITATION,\n    ADMIN_MANAGE_REQUESTS_CANCEL_JOIN_INVITATION_START,\n    ADMIN_MANAGE_REQUESTS_CANCEL_JOIN_INVITATION_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_CANCEL_JOIN_INVITATION_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS,\n    ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS_START,\n    ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS_ERROR,\n\n    // MEMBERS\n    VIEW_MEMBERS_LOAD,\n    VIEW_MEMBERS_LOAD_START,\n    VIEW_MEMBERS_LOAD_SUCCESS,\n    VIEW_MEMBERS_LOAD_ERROR,\n    VIEW_MEMBERS_UNLOAD,\n\n    VIEW_MEMBERS_REMOVE_MEMBER,\n    VIEW_MEMBERS_REMOVE_MEMBER_START,\n    VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS,\n    VIEW_MEMBERS_REMOVE_MEMBER_ERROR,\n\n    VIEW_MEMBERS_PROMOTE_TO_ADMIN,\n    VIEW_MEMBERS_PROMOTE_TO_ADMIN_START,\n    VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS,\n    VIEW_MEMBERS_PROMOTE_TO_ADMIN_ERROR,\n\n    VIEW_MEMBERS_DEMOTE_TO_MEMBER,\n    VIEW_MEMBERS_DEMOTE_TO_MEMBER_START,\n    VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS,\n    VIEW_MEMBERS_DEMOTE_TO_MEMBER_ERROR,\n\n    // INVITE USER\n    INVITE_USER_LOAD,\n    INVITE_USER_LOAD_START,\n    INVITE_USER_LOAD_SUCCESS,\n    INVITE_USER_LOAD_ERROR,\n    INVITE_USER_UNLOAD,\n\n    INVITE_USER_SEARCH_USERS,\n    INVITE_USER_SEARCH_USERS_START,\n    INVITE_USER_SEARCH_USERS_SUCCESS,\n    INVITE_USER_SEARCH_USERS_ERROR,\n\n    INVITE_USER_SELECT_USER,\n    INVITE_USER_SELECT_USER_START,\n    INVITE_USER_SELECT_USER_SUCCESS,\n    INVITE_USER_SELECT_USER_ERROR,\n\n    INVITE_USER_SEND_INVITATION,\n    INVITE_USER_SEND_INVITATION_START,\n    INVITE_USER_SEND_INVITATION_SUCCESS,\n    INVITE_USER_SEND_INVITATION_ERROR,\n\n\n    // Narrative add requests\n    REQUEST_ADD_NARRATIVE_LOAD,\n    REQUEST_ADD_NARRATIVE_LOAD_START,\n    REQUEST_ADD_NARRATIVE_LOAD_SUCCESS,\n    REQUEST_ADD_NARRATIVE_LOAD_ERROR,\n    REQUEST_ADD_NARRATIVE_UNLOAD,\n\n    REQUEST_ADD_NARRATIVE_SEND,\n    REQUEST_ADD_NARRATIVE_SEND_START,\n    REQUEST_ADD_NARRATIVE_SEND_SUCCESS,\n    REQUEST_ADD_NARRATIVE_SEND_ERROR,\n\n    REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE,\n    REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_START,\n    REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS,\n    REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_ERROR,\n\n    REQUEST_ADD_NARRATIVE_SORT,\n    REQUEST_ADD_NARRATIVE_SORT_START,\n    REQUEST_ADD_NARRATIVE_SORT_SUCCESS,\n    REQUEST_ADD_NARRATIVE_SORT_ERROR,\n\n    // VIEWS\n\n    ORGANIZATION_CENTRIC_VIEW_LOAD,\n    ORGANIZATION_CENTRIC_VIEW_LOAD_START,\n    ORGANIZATION_CENTRIC_VIEW_LOAD_SUCCESS,\n    ORGANIZATION_CENTRIC_VIEW_LOAD_ERROR,\n    ORGANIZATION_CENTRIC_VIEW_UNLOAD,\n\n    // ENTITIES\n\n    ENTITY_USER_LOADER,\n    ENTITY_USER_LOADER_START,\n    ENTITY_USER_LOADER_SUCCESS,\n    ENTITY_USER_LOADER_ERROR,\n\n    ENTITY_ORGANIZATION_LOADER,\n    ENTITY_ORGANIZATION_LOADER_START,\n    ENTITY_ORGANIZATION_LOADER_SUCCESS,\n    ENTITY_ORGANIZATION_LOADER_ERROR,\n\n    ENTITY_NARRATIVE_LOAD,\n    ENTITY_NARRATIVE_LOAD_START,\n    ENTITY_NARRATIVE_LOAD_SUCCESS,\n    ENTITY_NARRATIVE_LOAD_ERROR,\n\n    ENTITY_ORGANIZATION_LOAD,\n    ENTITY_ORGANIZATION_LOAD_START,\n    ENTITY_ORGANIZATION_LOAD_SUCCESS,\n    ENTITY_ORGANIZATION_LOAD_ERROR,\n\n    ENTITY_LOAD_APP,\n    ENTITY_LOAD_APP_START,\n    ENTITY_LOAD_APP_SUCCESS,\n    ENTITY_LOAD_APP_ERROR,\n\n    // GLOBAL ACTIONS\n    // GLOBAL_ACCESS_NARRATIVE,\n    // GLOBAL_ACCESS_NARRATIVE_START,\n    // GLOBAL_ACCESS_NARRATIVE_SUCCESS,\n    // GLOBAL_ACCESS_NARRATIVE_ERROR,\n\n    // USER PROFILE\n    DATA_SERVICE_LOAD,\n    DATA_SERVICE_LOAD_START,\n    DATA_SERVICE_LOAD_SUCCESS,\n    DATA_SERVICE_LOAD_ERROR,\n    DATA_SERVICE_UNLOAD,\n\n    DATA_SERVICE_LOAD_REFRESH,\n    DATA_SERVICE_LOAD_REFRESH_START,\n    DATA_SERVICE_LOAD_REFRESH_SUCCESS,\n    DATA_SERVICE_LOAD_REFRESH_ERROR\n}\n","import { Action } from 'redux'\nimport {\n    StoreState, EditState, SaveState, ComponentLoadingState,\n    SyncState, ValidationErrorType\n} from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    LoadStart, Unload,\n    SaveError, SaveStart, SaveSuccess, AddOrgEvaluateOK, AddOrgEvaluateErrors,\n    LoadSuccess, UpdateNameSuccess, UpdateNameError,\n    UpdateIdSuccess, UpdateIdError, UpdateDescriptionSuccess,\n    UpdateDescriptionError,\n    LoadError,\n    UpdateIdPass,\n    UpdateIsPrivateSuccess,\n    UpdateLogoUrlSuccess,\n    UpdateLogoUrlError,\n    UpdateHomeUrlSuccess,\n    UpdateHomeUrlError,\n    UpdateResearchInterestsSuccess,\n    UpdateResearchInterestsError\n} from '../actions/addOrg'\n\n// ADD ORG\n\nexport function saveStart(state: StoreState, action: SaveStart): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting saveStart without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    saveState: SaveState.SAVING\n                }\n            }\n        }\n    }\n}\n\nexport function saveSuccess(state: StoreState, action: SaveSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting saveSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.UNEDITED,\n                    saveState: SaveState.SAVED\n                }\n            }\n        }\n    }\n}\n\nexport function saveError(state: StoreState, action: SaveError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting saveError without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    saveState: SaveState.SAVE_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEvaluateOk(state: StoreState, action: AddOrgEvaluateOK): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting saveSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    validationState: {\n                        type: ValidationErrorType.OK,\n                        validatedAt: new Date()\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEvaluateErrors(state: StoreState, action: AddOrgEvaluateErrors): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting saveSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    validationState: {\n                        type: ValidationErrorType.ERROR,\n                        message: 'TODO: form error',\n                        validatedAt: new Date()\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function loadStart(state: StoreState, action: LoadStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                loadingState: ComponentLoadingState.LOADING,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function loadSuccess(state: StoreState, action: LoadSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                loadingState: ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    editState: EditState.UNEDITED,\n                    validationState: {\n                        type: ValidationErrorType.OK,\n                        validatedAt: new Date()\n                    },\n                    saveState: SaveState.NEW,\n                    error: null,\n                    newOrganization: action.newOrganization\n                }\n            }\n        }\n    }\n}\nexport function loadError(state: StoreState, action: LoadError): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                loadingState: ComponentLoadingState.SUCCESS,\n                error: action.error,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function unload(state: StoreState, action: Unload): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                loadingState: ComponentLoadingState.NONE,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\n// Name\nexport function updateNameSuccess(state: StoreState, action: UpdateNameSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateNameSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        name: {\n                            ...state.views.addOrgView.viewModel.newOrganization.name,\n                            value: action.name,\n                            syncState: SyncState.DIRTY,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateNameError(state: StoreState, action: UpdateNameError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateNameError without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        name: {\n                            ...state.views.addOrgView.viewModel.newOrganization.name,\n                            value: action.name,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Logo URL\nexport function updateLogoUrlSuccess(state: StoreState, action: UpdateLogoUrlSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting Logo URL without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        logoUrl: {\n                            ...state.views.addOrgView.viewModel.newOrganization.logoUrl,\n                            syncState: SyncState.DIRTY,\n                            value: action.logoUrl,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateLogoUrlError(state: StoreState, action: UpdateLogoUrlError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting Logo URL error without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        logoUrl: {\n                            ...state.views.addOrgView.viewModel.newOrganization.logoUrl,\n                            syncState: SyncState.DIRTY,\n                            value: action.logoUrl,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Home URL\nexport function updateHomeUrlSuccess(state: StoreState, action: UpdateHomeUrlSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting Home URL (success) without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        homeUrl: {\n                            ...state.views.addOrgView.viewModel.newOrganization.homeUrl,\n                            syncState: SyncState.DIRTY,\n                            value: action.homeUrl,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateHomeUrlError(state: StoreState, action: UpdateHomeUrlError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting update to home url without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        homeUrl: {\n                            ...state.views.addOrgView.viewModel.newOrganization.homeUrl,\n                            syncState: SyncState.DIRTY,\n                            value: action.homeUrl,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Research Interests\nexport function updateResearchInterestsSuccess(state: StoreState, action: UpdateResearchInterestsSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting Research Interests without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        researchInterests: {\n                            ...state.views.addOrgView.viewModel.newOrganization.researchInterests,\n                            syncState: SyncState.DIRTY,\n                            value: action.researchInterests,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateResearchInterestsError(state: StoreState, action: UpdateResearchInterestsError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting update to research interests (error) without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        researchInterests: {\n                            ...state.views.addOrgView.viewModel.newOrganization.researchInterests,\n                            syncState: SyncState.DIRTY,\n                            value: action.researchInterests,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Id\n\nexport function updateIdSuccess(state: StoreState, action: UpdateIdSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateIdSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        id: {\n                            ...state.views.addOrgView.viewModel.newOrganization.id,\n                            syncState: SyncState.DIRTY,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateIdError(state: StoreState, action: UpdateIdError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateIdError without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        id: {\n                            ...state.views.addOrgView.viewModel.newOrganization.id,\n                            value: action.id,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateIdPass(state: StoreState, action: UpdateIdPass): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateIdSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        id: {\n                            ...state.views.addOrgView.viewModel.newOrganization.id,\n                            value: action.id,\n                            syncState: SyncState.DIRTY\n                            // validationState: {\n                            //     type: ValidationErrorType.OK,\n                            //     validatedAt: new Date()\n                            // }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateDescriptionSuccess(state: StoreState, action: UpdateDescriptionSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateDescriptionSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        description: {\n                            ...state.views.addOrgView.viewModel.newOrganization.description,\n                            value: action.description,\n                            syncState: SyncState.DIRTY,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateDescriptionError(state: StoreState, action: UpdateDescriptionError): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateDescriptionError without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        description: {\n                            ...state.views.addOrgView.viewModel.newOrganization.description,\n                            value: action.description,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateIsPrivateSuccess(state: StoreState, action: UpdateIsPrivateSuccess): StoreState {\n    if (!state.views.addOrgView.viewModel) {\n        console.warn('attempting updateIdSuccess without view model')\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            addOrgView: {\n                ...state.views.addOrgView,\n                viewModel: {\n                    ...state.views.addOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    newOrganization: {\n                        ...state.views.addOrgView.viewModel.newOrganization,\n                        isPrivate: {\n                            ...state.views.addOrgView.viewModel.newOrganization.isPrivate,\n                            value: action.isPrivate,\n                            syncState: SyncState.DIRTY,\n                            validationState: {\n                                type: ValidationErrorType.OK,\n                                validatedAt: new Date()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.ADD_ORG_SAVE:\n            return saveStart(state, action as SaveStart)\n        case ActionFlag.ADD_ORG_SAVE_SUCCESS:\n            return saveSuccess(state, action as SaveSuccess)\n        case ActionFlag.ADD_ORG_SAVE_ERROR:\n            return saveError(state, action as SaveError)\n\n        case ActionFlag.ADD_ORG_LOAD_START:\n            return loadStart(state, action as LoadStart)\n        case ActionFlag.ADD_ORG_LOAD_SUCCESS:\n            return loadSuccess(state, action as LoadSuccess)\n        case ActionFlag.ADD_ORG_LOAD_ERROR:\n            return loadError(state, action as LoadError)\n        case ActionFlag.ADD_ORG_UNLOAD:\n            return unload(state, action as Unload)\n\n        case ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS:\n            return updateNameSuccess(state, action as UpdateNameSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_ERROR:\n            return updateNameError(state, action as UpdateNameError)\n\n        case ActionFlag.ADD_ORG_UPDATE_LOGO_URL_SUCCESS:\n            return updateLogoUrlSuccess(state, action as UpdateLogoUrlSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_LOGO_URL_ERROR:\n            return updateLogoUrlError(state, action as UpdateLogoUrlError)\n\n        case ActionFlag.ADD_ORG_UPDATE_HOME_URL_SUCCESS:\n            return updateHomeUrlSuccess(state, action as UpdateHomeUrlSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_HOME_URL_ERROR:\n            return updateHomeUrlError(state, action as UpdateHomeUrlError)\n\n        case ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS:\n            return updateResearchInterestsSuccess(state, action as UpdateResearchInterestsSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_ERROR:\n            return updateResearchInterestsError(state, action as UpdateResearchInterestsError)\n\n        case ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS:\n            return updateIdSuccess(state, action as UpdateIdSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_ID_ERROR:\n            return updateIdError(state, action as UpdateIdError)\n        case ActionFlag.ADD_ORG_UPDATE_ID_PASS:\n            return updateIdPass(state, action as UpdateIdPass)\n\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return updateDescriptionSuccess(state, action as UpdateDescriptionSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR:\n            return updateDescriptionError(state, action as UpdateDescriptionError)\n\n        case ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS:\n            return updateIsPrivateSuccess(state, action as UpdateIsPrivateSuccess)\n\n        case ActionFlag.ADD_ORG_EVALUATE_OK:\n            return addOrgEvaluateOk(state, action as AddOrgEvaluateOK)\n        case ActionFlag.ADD_ORG_EVALUATE_ERRORS:\n            return addOrgEvaluateErrors(state, action as AddOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport {\n    StoreState, EditState, SaveState, ComponentLoadingState,\n    ValidationErrorType, SyncState, ValidationState, ValidationStateOk, EditOrgViewModel\n} from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    LoadStart, LoadSuccess, LoadError,\n    EditOrgEvaluateOK, EditOrgEvaluateErrors,\n    EditOrgSave, EditOrgSaveStart, EditOrgSaveError, EditOrgSaveSuccess,\n    EditOrgUpdateNameSuccess, EditOrgUpdateNameError,\n    // EditOrgUpdateIdSuccess, EditOrgUpdateIdError,\n    EditOrgUpdateDescriptionSuccess, EditOrgUpdateDescriptionError,\n    UpdateIsPrivateSuccess, UpdateLogoUrlSuccess, UpdateLogoUrlError,\n    UpdateHomeUrlSuccess, UpdateHomeUrlError, UpdateResearchInterestsError,\n    UpdateResearchInterestsSuccess, Unload\n} from '../actions/editOrg'\nimport { StateInstances } from '../state';\n\n\n\n// EDIT ORG\n\n// Edit session loading\n\nexport function loadStart(state: StoreState, action: LoadStart): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                loadingState: ComponentLoadingState.LOADING,\n                error: null,\n                viewModel: null\n\n            }\n        }\n    }\n}\n\nfunction validationStateOk(): ValidationStateOk {\n    const x: ValidationState = {\n        type: ValidationErrorType.OK,\n        validatedAt: new Date()\n    }\n    return x\n}\n\nexport function loadSuccess(state: StoreState, action: LoadSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                loadingState: ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    editState: EditState.UNEDITED,\n                    validationState: validationStateOk(),\n                    // validationState: {\n                    //     type: ValidationErrorType.OK,\n                    //     validatedAt: new Date()\n                    // },\n                    saveState: SaveState.NEW,\n                    // TODO: get rid of this...\n                    // organizationId: action.id,\n                    organization: action.organization,\n                    saveError: null,\n                    editedOrganization: action.editedOrganization\n                }\n            }\n        }\n    }\n}\n\nexport function loadError(state: StoreState, action: LoadError): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                loadingState: ComponentLoadingState.ERROR,\n                error: action.error,\n                viewModel: null\n\n            }\n        }\n    }\n}\n\nexport function unload(state: StoreState, action: Unload): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                loadingState: ComponentLoadingState.NONE,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\n// save\n\nexport function editOrgSaveStart(state: StoreState, action: EditOrgSaveStart): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    saveState: SaveState.SAVING\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgSaveSuccess(state: StoreState, action: EditOrgSaveSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.UNEDITED,\n                    saveState: SaveState.SAVED,\n                    editedOrganization: {\n                        id: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.id,\n                            syncState: SyncState.CLEAN\n                        },\n                        name: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.name,\n                            syncState: SyncState.CLEAN\n                        },\n                        logoUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.logoUrl,\n                            syncState: SyncState.CLEAN\n                        },\n                        homeUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.homeUrl,\n                            syncState: SyncState.CLEAN\n                        },\n                        researchInterests: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.researchInterests,\n                            syncState: SyncState.CLEAN\n                        },\n                        isPrivate: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.isPrivate,\n                            syncState: SyncState.CLEAN\n                        },\n                        description: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.description,\n                            syncState: SyncState.CLEAN\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgSaveError(state: StoreState, action: EditOrgSaveError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    saveState: SaveState.SAVE_ERROR,\n                    saveError: action.error\n                }\n            }\n        }\n    }\n}\n\n// Evaluate edit session\n\nexport function editOrgEvaluateOk(state: StoreState, action: EditOrgEvaluateOK): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    validationState: {\n                        type: ValidationErrorType.OK,\n                        validatedAt: new Date()\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgEvaluateErrors(state: StoreState, action: EditOrgEvaluateErrors): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    validationState: {\n                        type: ValidationErrorType.ERROR,\n                        message: 'Validation errors',\n                        validatedAt: new Date()\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction evaluateEditorState(viewModel: EditOrgViewModel): EditState {\n    if (viewModel.editedOrganization.name.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.id.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.logoUrl.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.homeUrl.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.researchInterests.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.isPrivate.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    if (viewModel.editedOrganization.description.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    return EditState.UNEDITED\n}\n\n\n\n// Name\nexport function editOrgUpdateNameSuccess(state: StoreState, action: EditOrgUpdateNameSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    const editedOrg = state.views.editOrgView.viewModel.editedOrganization\n    let syncState\n    if (action.name !== editedOrg.name.remoteValue) {\n        syncState = SyncState.DIRTY\n    } else {\n        syncState = SyncState.CLEAN\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    // editState: editState,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        name: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.name,\n                            value: action.name,\n                            syncState: syncState,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateNameError(state: StoreState, action: EditOrgUpdateNameError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        name: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.name,\n                            value: action.name,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Logo url\nexport function editOrgUpdateLogoUrlSuccess(state: StoreState, action: UpdateLogoUrlSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        logoUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.logoUrl,\n                            value: action.logoUrl,\n                            syncState: SyncState.DIRTY,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateLogoUrlError(state: StoreState, action: UpdateLogoUrlError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        logoUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.logoUrl,\n                            value: action.logoUrl,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Update Home Url\n\n// Logo url\nexport function editOrgUpdateHomeUrlSuccess(state: StoreState, action: UpdateHomeUrlSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        homeUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.homeUrl,\n                            value: action.homeUrl,\n                            syncState: SyncState.DIRTY,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateHomeUrlError(state: StoreState, action: UpdateHomeUrlError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        homeUrl: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.homeUrl,\n                            value: action.homeUrl,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Update Research Interests\n\n// Logo url\nexport function updateResearchInterestsSuccess(state: StoreState, action: UpdateResearchInterestsSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        researchInterests: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.researchInterests,\n                            value: action.researchInterests,\n                            syncState: SyncState.DIRTY,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function updateResearchInterestsError(state: StoreState, action: UpdateResearchInterestsError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        researchInterests: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.researchInterests,\n                            value: action.researchInterests,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateDescriptionSuccess(state: StoreState, action: EditOrgUpdateDescriptionSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    const editedOrg = state.views.editOrgView.viewModel.editedOrganization\n    let syncState\n    if (action.description !== editedOrg.description.remoteValue) {\n        syncState = SyncState.DIRTY\n    } else {\n        syncState = SyncState.CLEAN\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        description: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.description,\n                            value: action.description,\n                            syncState: syncState,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateDescriptionError(state: StoreState, action: EditOrgUpdateDescriptionError): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        description: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.description,\n                            value: action.description,\n                            syncState: SyncState.DIRTY,\n                            validationState: action.error\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function updateIsPrivateSuccess(state: StoreState, action: UpdateIsPrivateSuccess): StoreState {\n    if (!state.views.editOrgView.viewModel) {\n        return state\n    }\n\n\n    const editedOrg = state.views.editOrgView.viewModel.editedOrganization\n    let syncState\n    if (action.isPrivate !== editedOrg.isPrivate.remoteValue) {\n        syncState = SyncState.DIRTY\n    } else {\n        syncState = SyncState.CLEAN\n    }\n\n    const newState = {\n        ...state,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...state.views.editOrgView,\n                viewModel: {\n                    ...state.views.editOrgView.viewModel,\n                    editState: EditState.EDITED,\n                    editedOrganization: {\n                        ...state.views.editOrgView.viewModel.editedOrganization,\n                        isPrivate: {\n                            ...state.views.editOrgView.viewModel.editedOrganization.isPrivate,\n                            value: action.isPrivate,\n                            syncState: syncState,\n                            validationState: validationStateOk()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // This bit is just to ensure that the overall edit state (used for controlling, e.g., the \n    // enablement of a save button).\n    const editState = evaluateEditorState(newState.views.editOrgView.viewModel)\n\n    return {\n        ...newState,\n        views: {\n            ...state.views,\n            editOrgView: {\n                ...newState.views.editOrgView,\n                viewModel: {\n                    ...newState.views.editOrgView.viewModel,\n                    editState: editState\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.EDIT_ORG_LOAD_START:\n            return loadStart(state, action as LoadStart)\n        case ActionFlag.EDIT_ORG_LOAD_SUCCESS:\n            return loadSuccess(state, action as LoadSuccess)\n        case ActionFlag.EDIT_ORG_LOAD_ERROR:\n            return loadError(state, action as LoadError)\n\n        case ActionFlag.EDIT_ORG_UNLOAD:\n            return unload(state, action as Unload)\n\n        case ActionFlag.EDIT_ORG_SAVE_START:\n            return editOrgSaveStart(state, action as EditOrgSaveStart)\n        case ActionFlag.EDIT_ORG_SAVE_SUCCESS:\n            return editOrgSaveSuccess(state, action as EditOrgSaveSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_ERROR:\n            return editOrgSaveError(state, action as EditOrgSaveError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS:\n            return editOrgUpdateNameSuccess(state, action as EditOrgUpdateNameSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR:\n            return editOrgUpdateNameError(state, action as EditOrgUpdateNameError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_SUCCESS:\n            return editOrgUpdateLogoUrlSuccess(state, action as UpdateLogoUrlSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_ERROR:\n            return editOrgUpdateLogoUrlError(state, action as UpdateLogoUrlError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_HOME_URL_SUCCESS:\n            return editOrgUpdateHomeUrlSuccess(state, action as UpdateHomeUrlSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_HOME_URL_ERROR:\n            return editOrgUpdateHomeUrlError(state, action as UpdateHomeUrlError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS:\n            return updateResearchInterestsSuccess(state, action as UpdateResearchInterestsSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_ERROR:\n            return updateResearchInterestsError(state, action as UpdateResearchInterestsError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS:\n            return updateIsPrivateSuccess(state, action as UpdateIsPrivateSuccess)\n\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS:\n        //     return editOrgUpdateIdSuccess(state, action as EditOrgUpdateIdSuccess)\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_ERROR:\n        //     return editOrgUpdateIdError(state, action as EditOrgUpdateIdError)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return updateDescriptionSuccess(state, action as EditOrgUpdateDescriptionSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR:\n            return editOrgUpdateDescriptionError(state, action as EditOrgUpdateDescriptionError)\n        case ActionFlag.EDIT_ORG_EVALUATE_OK:\n            return editOrgEvaluateOk(state, action as EditOrgEvaluateOK)\n        case ActionFlag.EDIT_ORG_EVALUATE_ERRORS:\n            return editOrgEvaluateErrors(state, action as EditOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/acceptInboxRequest'\nimport { StoreState, ViewOrgViewModelKind } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\n\nexport function acceptInboxRequestSuccess(state: StoreState, action: actions.AcceptRequestSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    requestInbox: action.requests\n                }\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS:\n            return acceptInboxRequestSuccess(state, action as actions.AcceptRequestSuccess)\n        default:\n            return null\n    }\n}\n\n","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/viewMembers'\nimport { StoreState, MemberType, ViewOrgViewModelKind } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\n// export function loadStart(state: StoreState, action: actions.LoadStart) {\n//     return {\n//         ...state,\n//         views: {\n//             ...state.views,\n//             viewMembersView: {\n//                 ...state.views.viewMembersView,\n//                 loadingState: ComponentLoadingState.LOADING,\n//                 viewModel: null,\n//                 error: null\n//             }\n//         }\n//     }\n// }\n\n// export function unload(state: StoreState, action: actions.Unload): StoreState {\n//     return {\n//         ...state,\n//         views: {\n//             ...state.views,\n//             viewMembersView: {\n//                 ...state.views.viewMembersView,\n//                 loadingState: ComponentLoadingState.NONE,\n//                 viewModel: null,\n//                 error: null\n//             }\n//         }\n//     }\n// }\n\n// export function loadSuccess(state: StoreState, action: actions.LoadSuccess): StoreState {\n//     return {\n//         ...state,\n//         views: {\n//             ...state.views,\n//             viewMembersView: {\n//                 ...state.views.viewMembersView,\n//                 loadingState: ComponentLoadingState.SUCCESS,\n//                 viewModel: {\n//                     organization: action.organization,\n//                     relation: action.relation\n//                 },\n//                 error: null\n//             }\n//         }\n//     }\n// }\n\n// export function loadError(state: StoreState, action: actions.LoadError): StoreState {\n//     return {\n//         ...state,\n//         views: {\n//             ...state.views,\n//             viewMembersView: {\n//                 ...state.views.viewMembersView,\n//                 loadingState: ComponentLoadingState.ERROR,\n//                 viewModel: null,\n//                 error: action.error\n//             }\n//         }\n//     }\n// }\n\nexport function promoteToAdminSuccess(state: StoreState, action: actions.PromoteToAdminSuccess): StoreState {\n\n    const {\n        views: { viewOrgView: { viewModel } }\n    } = state\n\n    if (viewModel === null) {\n        return state\n    }\n\n    // TODO: ugh, cut this off before getting here.\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    // TODO: probably better is to have to have the action handler do a call to get the members\n    // and to populate the orgs membership struct from that...\n    const members = viewModel.organization.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            return {\n                ...member,\n                type: MemberType.ADMIN\n            }\n        } else {\n            return member\n        }\n    })\n\n    const sortedMembers = viewModel.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            return {\n                ...member,\n                type: MemberType.ADMIN\n            }\n        } else {\n            return member\n        }\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...viewModel,\n                    organization: {\n                        ...viewModel.organization,\n                        members: members\n                    },\n                    members: sortedMembers\n                }\n            }\n        }\n    }\n}\n\nexport function demoteToMemberSuccess(state: StoreState, action: actions.DemoteToMemberSuccess): StoreState {\n    const {\n        views: { viewOrgView: { viewModel } }\n    } = state\n\n    if (viewModel === null) {\n        return state\n    }\n\n    // TODO: ugh, cut this off before getting here.\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    // TODO: probably better is to have to have the action handler do a call to get the members\n    // and to populate the orgs membership struct from that...\n    const members = viewModel.organization.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            return {\n                ...member,\n                type: MemberType.MEMBER\n            }\n        } else {\n            return member\n        }\n    })\n\n    const sortedMembers = viewModel.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            return {\n                ...member,\n                type: MemberType.MEMBER\n            }\n        } else {\n            return member\n        }\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...viewModel,\n                    organization: {\n                        ...viewModel.organization,\n                        members: members\n                    },\n                    members: sortedMembers\n                }\n            }\n        }\n    }\n}\n\n\nexport function removeMemberSuccess(state: StoreState, action: actions.RemoveMemberSuccess): StoreState {\n    const {\n        views: { viewOrgView: { viewModel } }\n    } = state\n\n    if (viewModel === null) {\n        return state\n    }\n\n    // TODO: ugh, cut this off before getting here.\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    // TODO: probably better is to have to have the action handler do a call to get the members\n    // and to populate the orgs membership struct from that...\n    const members = viewModel.organization.members.filter((member) => {\n        return (member.username !== action.memberUsername)\n    })\n\n    const sortedMembers = viewModel.members.filter((member) => {\n        return (member.username !== action.memberUsername)\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...viewModel,\n                    organization: {\n                        ...viewModel.organization,\n                        members: members\n                    },\n                    members: sortedMembers\n                }\n            }\n        }\n    }\n}\n\n\nexport function sortMembersSuccess(state: StoreState, action: actions.SortMembersSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    sortMembersBy: action.sortBy,\n                    members: action.members\n                }\n            }\n        }\n    }\n}\n\nexport function searchMembersSuccess(state: StoreState, action: actions.SearchMembersSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    searchMembersBy: action.searchBy,\n                    members: action.members\n                }\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        // case ActionFlag.VIEW_MEMBERS_LOAD_START:\n        //     return loadStart(state, action as actions.LoadStart)\n        // case ActionFlag.VIEW_MEMBERS_LOAD_SUCCESS:\n        //     return loadSuccess(state, action as actions.LoadSuccess)\n        // case ActionFlag.VIEW_MEMBERS_LOAD_ERROR:\n        //     return loadError(state, action as actions.LoadError)\n        // case ActionFlag.VIEW_MEMBERS_UNLOAD:\n        //     return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS:\n            return promoteToAdminSuccess(state, action as actions.PromoteToAdminSuccess)\n        case ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS:\n            return demoteToMemberSuccess(state, action as actions.DemoteToMemberSuccess)\n        case ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS:\n            return removeMemberSuccess(state, action as actions.RemoveMemberSuccess)\n        case ActionFlag.VIEW_ORG_SORT_MEMBERS_SUCCESS:\n            return sortMembersSuccess(state, action as actions.SortMembersSuccess)\n        case ActionFlag.VIEW_ORG_SEARCH_MEMBERS_SUCCESS:\n            return searchMembersSuccess(state, action as actions.SearchMembersSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/denyInboxRequest'\nimport { StoreState, ViewOrgViewModelKind } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\n\nexport function rejectInboxRequestSuccess(state: StoreState, action: actions.RejectInboxRequestSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    requestInbox: action.requests\n                }\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS:\n            return rejectInboxRequestSuccess(state, action as actions.RejectInboxRequestSuccess)\n        default:\n            return null\n    }\n}\n\n","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/cancelOutboxRequest'\nimport { StoreState, ViewOrgViewModelKind } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\n\nexport function cancelRequestSuccess(state: StoreState, action: actions.CancelJoinRequestSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    requestOutbox: action.requests\n                }\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS:\n            return cancelRequestSuccess(state, action as actions.CancelJoinRequestSuccess)\n        default:\n            return null\n    }\n}\n\n","import { AppException } from '../../types';\n\nexport const MAX_GROUPS_PER_LIST_REQUEST = 100;\n\nexport interface GroupsServiceInfo {\n    servname: string;\n    version: string;\n    servertime: number;\n    gitcommithash: string;\n}\n\nexport type Username = string;\nexport type GroupID = string;\n\nexport interface Member {\n    name: Username;\n    joined: number;\n    lastvisit: number | null;\n    custom: {\n        title: string;\n    };\n}\n\nexport interface Resource {\n    rid: string;\n    added: number | null;\n}\n\nexport interface WorkspaceInfo extends Resource {\n    name: string;\n    narrname: string;\n    narrcreate: number;\n    public: boolean;\n    perm: string;\n    description: string;\n    moddate: number;\n}\n\nexport interface AppInfo extends Resource {}\n\nexport type Role = 'None' | 'Member' | 'Admin' | 'Owner';\n\nexport interface GroupCustomFields {\n    logourl?: string;\n    description: string;\n    researchinterests: string;\n    homeurl?: string;\n    relatedgroups?: string;\n}\n\nexport interface BriefGroup {\n    id: GroupID;\n    name: string;\n    createdate: number;\n    moddate: number;\n    lastvisit: number | null;\n    private: boolean;\n    role: Role;\n\n    custom: GroupCustomFields;\n    // owner: Member\n    owner: Username;\n\n    memcount: number;\n    rescount: {\n        workspace: number;\n    };\n}\n\nexport interface InaccessiblePrivateGroup {\n    id: GroupID;\n    private: boolean;\n    role: Role;\n}\n\nexport interface Group {\n    id: GroupID;\n    private: boolean;\n    privatemembers: boolean;\n    name: string;\n    role: Role;\n    owner: Member;\n    admins: Array<Member>;\n    members: Array<Member>;\n    memcount: number;\n    createdate: number;\n    moddate: number;\n    lastvisit: number;\n    resources: {\n        workspace: Array<WorkspaceInfo>;\n        catalogmethod: Array<AppInfo>;\n    };\n    rescount: {\n        workspace: number;\n        catalogmethod: number;\n    };\n    custom: GroupCustomFields;\n}\n\nexport interface NewGroup {\n    id: string;\n    name: string;\n    logoUrl: string | null;\n    homeUrl: string | null;\n    researchInterests: string;\n    description: string;\n    isPrivate: boolean;\n}\n\nexport interface GroupUpdate {\n    name: string;\n    logoUrl: string | null;\n    homeUrl: string | null;\n    researchInterests: string;\n    description: string;\n    private: boolean;\n}\n\nexport interface Request {\n    id: string;\n    groupid: string;\n    requester: Username;\n    type: string;\n    status: string;\n    resource: string;\n    resourcetype: string;\n    createdate: number;\n    expiredate: number;\n    moddate: number;\n}\n\nexport interface RequestWithCompletion extends Request {\n    complete: false;\n}\n\nexport interface Completion {\n    complete: true;\n}\n\nexport interface ErrorInfo {\n    appcode: number;\n    apperror: string;\n    callid: string;\n    httpcode: number;\n    httpstatus: string;\n    message: string;\n    time: number;\n}\n\nexport interface ErrorResult {\n    error: ErrorInfo;\n}\n\n// Error types: (appcode)\n// 10000\tAuthentication failed\n// 10010\tNo authentication token\n// 10020\tInvalid token\n// 20000\tUnauthorized\n// 30000\tMissing input parameter\n// 30001\tIllegal input parameter\n// 30010\tIllegal user name\n// 40000\tGroup already exists\n// 40010\tRequest already exists\n// 40020\tUser already group member\n// 40030\tWorkspace already in group\n// 50000\tNo such group\n// 50010\tNo such request\n// 50020\tNo such user\n// 50030\tNo such workspace\n// 60000\tUnsupported operation\n\nexport interface GroupExists {\n    exists: boolean;\n}\n\n// export interface GroupRequest {\n//     id: string,\n//     groupid: string,\n//     requester: Username,\n//     type: string,\n//     status: string,\n//     resource: string\n//     resourcetype: string\n//     createdate: number,\n//     expiredate: number,\n//     moddate: number\n// }\n\nexport enum SortDirection {\n    ASCENDING = 0,\n    DESCENDING\n}\n\nexport interface GetRequestsParams {\n    includeClosed?: boolean;\n    sortDirection?: SortDirection;\n    startAt?: Date;\n}\n\nexport interface RequestMemebershipParams {\n    groupId: string;\n}\n\nexport interface RequestNarrativeParams {\n    workspaceId: number;\n    groupId: string;\n}\n\nexport interface RequestResourceParams {\n    type: string;\n    resourceId: string;\n    groupId: string;\n}\n\nfunction promiseTry<T>(fun: () => Promise<T>): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        try {\n            return resolve(fun());\n        } catch (ex) {\n            reject(ex);\n        }\n    });\n}\n\nexport interface GroupError {\n    httpcode: number;\n    httpstatus: string;\n    appcode: number;\n    apperror: string;\n    message: string;\n    callid: string;\n    time: number;\n}\n\nexport class Exception extends Error {}\n\nexport class GroupException extends AppException {\n    originalError: GroupError;\n    constructor(error: GroupError) {\n        super({\n            code: 'group-exception',\n            message: error.apperror,\n            detail: error.message,\n            info: new Map<string, any>([\n                ['httpcode', error.httpcode],\n                ['httpstatus', error.httpstatus],\n                ['appcode', error.appcode],\n                ['apperror', error.apperror],\n                ['message', error.message],\n                ['callid', error.callid],\n                ['time', error.time]\n            ])\n        });\n        this.name = 'GroupException';\n        this.originalError = error;\n    }\n}\n\nexport interface RequestStatus {\n    new: 'None' | 'New' | 'Old';\n}\n\nexport class ServerException extends AppException {\n    constructor(detail: string) {\n        super({ code: 'server-exception', message: 'Server Exception', detail: detail });\n        this.name = 'ServerException';\n    }\n}\n\nexport class GroupsClient {\n    token: string;\n    url: string;\n\n    constructor({ token, url }: { token: string; url: string }) {\n        this.token = token;\n        this.url = url;\n    }\n\n    getInfo(): Promise<GroupsServiceInfo> {\n        return fetch(this.url + '/', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((result) => {\n                return result as GroupsServiceInfo;\n            });\n    }\n\n    groupExists(id: string): Promise<GroupExists> {\n        return fetch(this.url + '/group/' + id + '/exists')\n            .then((response) => {\n                return response.json();\n            })\n            .then((exists) => {\n                return exists as GroupExists;\n            });\n    }\n\n    // getGroups(): Promise<GroupList> {\n    //     return fetch(this.url + '/group', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json()\n    //         })\n    //         .then((result: GroupList) => {\n    //             return result.filter(({ type }) => type === 'Organization')\n    //         })\n    // }\n\n    async listGroups(): Promise<Array<BriefGroup>> {\n        const response = await fetch(this.url + '/group', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        });\n        if (response.status !== 200) {\n            console.error('error fetching groups', response);\n            throw new Error('Error fetching groups');\n        }\n        return await response.json();\n    }\n\n    getGroupById(id: string): Promise<Group | InaccessiblePrivateGroup> {\n        return fetch(this.url + '/group/' + id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    throw new Error('Organization \"' + id + '\" not found');\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Group;\n            });\n    }\n\n    put<T>(path: Array<string>, body: any): Promise<T> {\n        const url = [this.url].concat(path).join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n            body: JSON.stringify(body)\n        }).then((response) => {\n            if (response.status === 500) {\n                switch (response.headers.get('Content-Type')) {\n                    case 'application/json':\n                        return response.json().then((result) => {\n                            throw new GroupException(result);\n                        });\n                    case 'text/plain':\n                        return response.text().then((result) => {\n                            throw new ServerException(result);\n                        });\n                    default:\n                        throw new Error('Unexpected content type: ' + response.headers.get('Content-Type'));\n                }\n            } else if (response.status === 200) {\n                return response.json().then((result) => {\n                    return result as T;\n                });\n            } else if (response.status === 204) {\n                const result = null as unknown;\n                return result as T;\n            } else {\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n            }\n        });\n    }\n\n    async post<T>(path: Array<string>, body: any): Promise<T | null> {\n        const url = [this.url].concat(path).join('/');\n        const response = await fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'POST',\n            body: body ? JSON.stringify(body) : ''\n        });\n\n        if (response.status === 500) {\n            switch (response.headers.get('Content-Type')) {\n                case 'application/json':\n                    const result = await response.json();\n                    throw new GroupException(result);\n                case 'text/plain':\n                    const errorText = await response.text();\n                    throw new ServerException(errorText);\n                default:\n                    throw new Error('Unexpected content type: ' + response.headers.get('Content-Type'));\n            }\n        } else if (response.status === 200) {\n            return (await response.json()) as T;\n        } else if (response.status === 204) {\n            return null;\n        } else {\n            throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n        }\n    }\n\n    async get<T>(path: Array<string>): Promise<T> {\n        const url = [this.url].concat(path).join('/');\n        const response = await fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        });\n\n        if (response.status === 500) {\n            switch (response.headers.get('Content-Type')) {\n                case 'application/json':\n                    const result = await response.json();\n                    throw new GroupException(result);\n                case 'text/plain':\n                    const errorText = await response.text();\n                    throw new ServerException(errorText);\n                default:\n                    throw new Error('Unexpected content type: ' + response.headers.get('Content-Type'));\n            }\n        } else if (response.status === 200) {\n            return (await response.json()) as T;\n        } else {\n            throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n        }\n    }\n\n    createGroup(newGroup: NewGroup): Promise<Group> {\n        // argh!! description should be mandatory, but now it is a custom\n        // field and it is not yet defined in the service.\n        // TODO: we need the groups service to have default custom fields.\n        // At that point, what IS the point of custom fields ... oh, I know that\n        // there are internal reasons for this due to re-using \"group\" for\n        // organization, project, etc., but that should not leak through the\n        // api.\n\n        // mandatory fields.\n        const payload: any = {\n            name: newGroup.name,\n            private: newGroup.isPrivate,\n            custom: {\n                logourl: newGroup.logoUrl,\n                researchinterests: newGroup.researchInterests,\n                homeurl: newGroup.homeUrl\n            }\n        };\n\n        // optional fields\n        if (newGroup.description.length > 0) {\n            payload.custom.description = newGroup.description;\n        }\n\n        return this.put<Group>(['group', newGroup.id], payload);\n    }\n\n    updateGroup(id: string, groupUpdate: GroupUpdate): Promise<void> {\n        const payload: any = {\n            name: groupUpdate.name,\n            custom: {\n                logourl: groupUpdate.logoUrl,\n                homeurl: groupUpdate.homeUrl,\n                researchinterests: groupUpdate.researchInterests\n            },\n            private: groupUpdate.private\n        };\n        // TODO: remove this when we have descriptions restored to the\n        // groups service.\n        if (groupUpdate.description) {\n            payload.custom.description = groupUpdate.description;\n        }\n        return fetch(this.url + '/group/' + id + '/update', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n\n            // TODO: build more intelligently\n            body: JSON.stringify(payload)\n        }).then((response) => {\n            // response is an empty body.\n            if (response.status === 204) {\n                return;\n            }\n            throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n        });\n    }\n\n    async addRelatedGroup(groupId: GroupID, relatedGroupId: GroupID): Promise<string> {\n        // get the existing related groups\n        const group = await this.get<Group>(['group', groupId]);\n\n        // split into list\n        let relatedGroups: Array<GroupID>;\n        if (group.custom.relatedgroups) {\n            relatedGroups = group.custom.relatedgroups.split(',');\n        } else {\n            relatedGroups = [];\n        }\n\n        // ensure that this one is not already there\n        if (relatedGroups.includes(relatedGroupId)) {\n            return relatedGroupId;\n        }\n\n        // append it\n        relatedGroups.push(relatedGroupId);\n\n        // join back into string\n        const update = {\n            custom: {\n                relatedgroups: relatedGroups.join(',')\n            }\n        };\n\n        // save as the relatedgroups property\n        await this.put<void>(['group', groupId, 'update'], update);\n\n        return relatedGroupId;\n    }\n\n    async removeRelatedGroup(groupId: GroupID, relatedGroupId: GroupID): Promise<string> {\n        // get the existing related groups\n        const group = await this.get<Group>(['group', groupId]);\n\n        // split into list\n        let relatedGroups: Array<GroupID>;\n        if (group.custom.relatedgroups) {\n            relatedGroups = group.custom.relatedgroups.split(',');\n        } else {\n            relatedGroups = [];\n        }\n\n        // ensure that this one is already there\n        if (!relatedGroups.includes(relatedGroupId)) {\n            return relatedGroupId;\n        }\n\n        // append it\n        relatedGroups.push(relatedGroupId);\n\n        const newRelatedGroups = relatedGroups.filter((groupId) => {\n            return groupId !== relatedGroupId;\n        });\n\n        // join back into string\n        const update = {\n            custom: {\n                relatedgroups: newRelatedGroups.join(',')\n            }\n        };\n\n        // save as the relatedgroups property\n        await this.put<void>(['group', groupId, 'update'], update);\n\n        return relatedGroupId;\n    }\n\n    async getRequest(requestId: string): Promise<Request> {\n        const path = ['request', 'id', requestId];\n        return await this.get<Request>(path);\n    }\n\n    getGroupRequests(groupId: string, params: GetRequestsParams): Promise<Array<Request>> {\n        const query = new URLSearchParams();\n        if (params.includeClosed) {\n            query.append('closed', 'closed');\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc');\n            } else {\n                query.append('order', 'asc');\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()));\n        }\n\n        return fetch(this.url + '/group/' + groupId + '/requests?' + query.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n            }\n            return response.json();\n        });\n    }\n\n    getTargetedRequests(params: GetRequestsParams): Promise<Array<Request>> {\n        const query = new URLSearchParams();\n        if (params.includeClosed) {\n            query.append('closed', 'closed');\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc');\n            } else {\n                query.append('order', 'asc');\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()));\n        }\n        return fetch(this.url + '/request/targeted?' + query.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n            }\n            return response.json();\n        });\n    }\n\n    getCreatedRequests(params: GetRequestsParams): Promise<Array<Request>> {\n        const query = new URLSearchParams();\n        if (params.includeClosed) {\n            query.append('closed', 'closed');\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc');\n            } else {\n                query.append('order', 'asc');\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()));\n        }\n        return fetch(this.url + '/request/created?' + query.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'appcliation/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n            }\n            return response.json();\n        });\n    }\n\n    addOrRequestNarrative(params: RequestNarrativeParams): Promise<RequestWithCompletion | Completion> {\n        const url = [this.url, 'group', params.groupId, 'resource', 'workspace', String(params.workspaceId)].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'POST'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                if (result.complete === false) {\n                    return result as RequestWithCompletion;\n                } else {\n                    return result as Completion;\n                }\n            });\n    }\n\n    addOrRequestResource(params: RequestResourceParams): Promise<RequestWithCompletion | Completion> {\n        const url = [this.url, 'group', params.groupId, 'resource', params.type, params.resourceId].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'POST'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                if (result.complete === false) {\n                    return result as RequestWithCompletion;\n                } else {\n                    return result as Completion;\n                }\n            });\n    }\n\n    async grantResourceAccess(groupId: string, resourceType: string, resourceId: string): Promise<null> {\n        const path = ['group', groupId, 'resource', resourceType, resourceId, 'getperm'];\n        return this.post<null>(path, null);\n    }\n\n    deleteResource(groupId: string, resourceType: string, resourceId: string): Promise<void> {\n        const url = [this.url, 'group', groupId, 'resource', resourceType, resourceId].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'DELETE'\n        }).then((response) => {\n            if (response.status !== 204) {\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n            }\n        });\n    }\n\n    cancelRequest({ requestId }: { requestId: string }): Promise<Request> {\n        return fetch(this.url + '/request/id/' + requestId + '/cancel', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Request;\n            });\n    }\n\n    acceptRequest({ requestId }: { requestId: string }): Promise<Request> {\n        return fetch(this.url + '/request/id/' + requestId + '/accept', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Request;\n            });\n    }\n\n    grantReadAccessToRequestedResource({ requestId }: { requestId: string }): Promise<null> {\n        const path = ['request', 'id', requestId, 'getperm'];\n        return this.post<null>(path, null);\n    }\n\n    denyRequest({ requestId }: { requestId: string }): Promise<Request> {\n        return fetch(this.url + '/request/id/' + requestId + '/deny', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Request;\n            });\n    }\n\n    memberToAdmin({ groupId, member }: { groupId: string; member: string }): Promise<void> {\n        const url = [this.url, 'group', groupId, 'user', member, 'admin'].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        }).then((response) => {\n            if (response.status !== 204) {\n                throw new Error('Unexpected response: ' + response.status + ':' + response.statusText);\n            }\n        });\n    }\n\n    adminToMember({ groupId, member }: { groupId: string; member: string }): Promise<void> {\n        const url = [this.url, 'group', groupId, 'user', member, 'admin'].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors',\n            method: 'DELETE'\n        }).then((response) => {\n            if (response.status !== 204) {\n                throw new Error('Unexpected response: ' + response.status + ':' + response.statusText);\n            }\n        });\n    }\n\n    updateMember({\n        groupId,\n        memberUsername,\n        update\n    }: {\n        groupId: string;\n        memberUsername: string;\n        update: any;\n    }): Promise<void> {\n        const path = ['group', groupId, 'user', memberUsername, 'update'];\n\n        return this.put<void>(path, { custom: update });\n    }\n\n    removeMember({ groupId, member }: { groupId: string; member: string }): Promise<void> {\n        const url = [this.url, 'group', groupId, 'user', member].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors',\n            method: 'DELETE'\n        }).then((response) => {\n            if (response.status !== 204) {\n                throw new Error('Unexpected response: ' + response.status + ':' + response.statusText);\n            }\n        });\n    }\n\n    requestMembership(params: RequestMemebershipParams): Promise<Request> {\n        return fetch(this.url + '/group/' + params.groupId + '/requestmembership', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'POST'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Request;\n            });\n    }\n\n    inviteUserToGroup({ groupId, username }: { groupId: string; username: string }): Promise<Request> {\n        const url = [this.url, 'group', groupId, 'user', username].join('/');\n        return fetch(url, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors',\n            method: 'POST'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ':' + response.statusText);\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result as Request;\n            });\n    }\n\n    async visitGroup({ groupId }: { groupId: string }): Promise<void> {\n        const path = ['group', groupId, 'visit'];\n        return this.put<void>(path, null);\n    }\n\n    async getOpenRequests({ groupIds }: { groupIds: Array<string> }): Promise<Map<GroupID, RequestStatus>> {\n        const path = ['request', 'groups', groupIds.join(','), 'new'];\n        const result = await this.get<any>(path);\n        const requestStatuses = new Map<GroupID, RequestStatus>();\n        for (const [groupId, requestStatus] of Object.entries(result)) {\n            requestStatuses.set(groupId, <RequestStatus>requestStatus);\n        }\n        return requestStatuses;\n    }\n}\n","import * as groupsApi from '../apis/groups'\nimport * as orgModel from './organization/model'\n\nexport type Username = string\n\nexport type RequestID = string\n\nexport enum RequestType {\n    REQUEST = 'REQUEST',\n    INVITATION = 'INVITATION'\n}\n\nexport enum RequestResourceType {\n    USER = 0,\n    WORKSPACE,\n    APP\n}\n\nexport enum RequestStatus {\n    OPEN = 0,\n    CANCELED,\n    EXPIRED,\n    ACCEPTED,\n    DENIED\n}\n\nexport interface BaseRequest {\n    id: string\n    organizationId: string\n    requester: Username\n    type: RequestType\n    status: RequestStatus\n    resourceType: RequestResourceType\n    createdAt: Date\n    expireAt: Date\n    modifiedAt: Date\n}\n\nexport interface UserRequest extends BaseRequest {\n    resourceType: RequestResourceType.USER\n    type: RequestType.REQUEST\n    user: Username\n}\n\nexport interface UserInvitation extends BaseRequest {\n    resourceType: RequestResourceType.USER\n    type: RequestType.INVITATION\n    user: Username\n}\n\nexport interface WorkspaceRequest extends BaseRequest {\n    resourceType: RequestResourceType.WORKSPACE\n    type: RequestType.REQUEST\n    narrativeId: string,\n}\n\nexport interface WorkspaceInvitation extends BaseRequest {\n    resourceType: RequestResourceType.WORKSPACE\n    type: RequestType.INVITATION\n    narrativeId: string\n}\n\nexport interface AppRequest extends BaseRequest {\n    resourceType: RequestResourceType.APP\n    type: RequestType.REQUEST\n    appId: string\n}\n\nexport interface AppInvitation extends BaseRequest {\n    resourceType: RequestResourceType.APP\n    type: RequestType.INVITATION\n    appId: string\n}\n\nexport type Request = UserRequest | UserInvitation | WorkspaceRequest | WorkspaceInvitation | AppRequest | AppInvitation\n\n\nfunction stringToRequestType(type: string): RequestType {\n    switch (type) {\n        case 'Invite':\n            return RequestType.INVITATION\n        case 'Request':\n            return RequestType.REQUEST\n        default:\n            throw new Error('unknown request type: ' + type)\n    }\n}\n\nfunction stringToResourceType(type: string) {\n    switch (type) {\n        case 'user':\n            return RequestResourceType.USER\n        case 'workspace':\n            return RequestResourceType.WORKSPACE\n        case 'catalogmethod':\n            return RequestResourceType.APP\n        default:\n            throw new Error('unknown resource type: ' + type)\n    }\n}\n\nfunction stringToRequestStatus(status: string): RequestStatus {\n    return RequestStatus.OPEN\n}\n\nexport function groupRequestToOrgRequest(request: groupsApi.Request): Request {\n\n    const requestType = stringToRequestType(request.type)\n    const resourceType = stringToResourceType(request.resourcetype)\n    const requestStatus = stringToRequestStatus(request.status)\n\n    switch (resourceType) {\n        case RequestResourceType.USER:\n            if (requestType === RequestType.REQUEST) {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    user: request.resource as Username,\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as UserRequest\n            } else {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    user: request.resource as Username,\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as UserInvitation\n            }\n\n        case RequestResourceType.WORKSPACE:\n            if (requestType === RequestType.REQUEST) {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    narrativeId: request.resource,\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as WorkspaceRequest\n            } else {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    narrativeId: request.resource,\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as WorkspaceInvitation\n            }\n\n        case RequestResourceType.APP:\n            if (requestType === RequestType.REQUEST) {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    appId: request.resource.split('.').join('/'),\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as AppRequest\n            } else {\n                return {\n                    id: request.id,\n                    organizationId: request.groupid,\n                    resourceType: resourceType,\n                    requester: request.requester,\n                    type: requestType,\n                    status: requestStatus,\n                    appId: request.resource.split('.').join('/'),\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                } as AppInvitation\n            }\n        default:\n            throw new Error('resource type not handled yet: ' + request.resourcetype)\n    }\n}\n\ninterface RequestsModelParams {\n    groupsServiceURL: string\n    token: string\n    username: Username\n}\n\nexport class RequestsModel {\n\n    params: RequestsModelParams\n    groupsClient: groupsApi.GroupsClient\n    cache: Map<RequestID, Request>\n\n    constructor(params: RequestsModelParams) {\n        this.params = params\n        this.groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        this.cache = new Map()\n    }\n\n    async getRequest(requestId: RequestID): Promise<Request> {\n        if (this.cache.has(requestId)) {\n            return this.cache.get(requestId)!\n        }\n\n        const grequest = await this.groupsClient.getRequest(requestId)\n        const request = groupRequestToOrgRequest(grequest)\n\n        this.cache.set(request.id, request)\n        return request\n    }\n\n    async getOutboundRequests(): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getCreatedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        const requests = grequests.map((request) => {\n            return groupRequestToOrgRequest(request)\n        })\n\n        requests.forEach((request) => {\n            if (!this.cache.has(request.id)) {\n                this.cache.set(request.id, request)\n            }\n        })\n\n        return requests\n    }\n\n    async getUserRequestForOrg(organizationId: orgModel.OrganizationID): Promise<UserRequest | null> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getCreatedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        // TODO should work in synchrony with above...\n        const grequest = grequests.find((r) => {\n            return r.groupid === organizationId\n        })\n\n        if (!grequest) {\n            return null\n        }\n\n        return groupRequestToOrgRequest(grequest) as UserRequest\n    }\n\n    async getPendingRequestsForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getCreatedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        // TODO should work in synchrony with above...\n        return grequests\n            .filter((r) => {\n                return r.groupid === organizationId\n            })\n            .map((r) => {\n                return groupRequestToOrgRequest(r)\n            })\n    }\n\n    async getRequestInboxForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getTargetedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        // TODO should work in synchrony with above...\n        return grequests\n            .filter((r) => {\n                return r.groupid === organizationId\n            })\n            .map((r) => {\n                return groupRequestToOrgRequest(r)\n            })\n    }\n\n    /*\n        For a given organization (by id), return a list of all requests to that org \n    */\n    async getCombinedRequestInboxForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        let requests: Array<Request>\n\n        // const grequests = await groupsClient.getTargetedRequests({\n        //     includeClosed: false,\n        //     sortDirection: groupsApi.SortDirection.DESCENDING\n        // })\n\n        // // TODO should work in synchrony with above...\n        // return grequests\n        //     .filter((r) => {\n        //         return r.groupid === organizationId\n        //     })\n        //     .map((r) => {\n        //         return groupRequestToOrgRequest(r)\n        //     })\n\n        try {\n            requests = (await groupsClient.getGroupRequests(organizationId, {\n                includeClosed: false,\n                sortDirection: groupsApi.SortDirection.DESCENDING\n            }))\n                .map((request) => {\n                    return groupRequestToOrgRequest(request)\n                })\n        } catch (ex) {\n            requests = []\n        }\n\n        return requests\n    }\n\n    async getRequestOutboxForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getCreatedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        // TODO should work in synchrony with above...\n        return grequests\n            .filter((r) => {\n                return r.groupid === organizationId\n            })\n            .map((r) => {\n                return groupRequestToOrgRequest(r)\n            })\n    }\n\n\n    async getOrganizationInvitations(): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getCreatedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        const requests = grequests.map((request) => {\n            return groupRequestToOrgRequest(request)\n        }).filter((request) => {\n            return (request.type === RequestType.INVITATION)\n        })\n\n        requests.forEach((request) => {\n            if (!this.cache.has(request.id)) {\n                this.cache.set(request.id, request)\n            }\n        })\n\n        return requests\n    }\n\n    async getOrganizationInvitationsForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const invitations = await this.getOrganizationInvitations()\n        return invitations.filter((invitation) => {\n            return (invitation.organizationId === organizationId)\n        })\n    }\n\n    async getInboundRequests(): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getTargetedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        const requests = grequests.map((request) => {\n            return groupRequestToOrgRequest(request)\n        })\n\n        requests.forEach((request) => {\n            if (!this.cache.has(request.id)) {\n                this.cache.set(request.id, request)\n            }\n        })\n\n        return requests\n    }\n\n    async getUserInvitationForOrg(organizationId: orgModel.OrganizationID): Promise<UserInvitation | null> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const grequests = await groupsClient.getTargetedRequests({\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        // TODO should work in synchrony with above...\n        const grequest = grequests.find((r) => {\n            return (r.groupid === organizationId)\n        })\n\n        if (!grequest) {\n            return null\n        }\n\n        return groupRequestToOrgRequest(grequest) as UserInvitation\n    }\n\n    async getPendingOrganizationRequestsForOrg(organizationId: orgModel.OrganizationID): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const groupRequests = await groupsClient.getGroupRequests(organizationId, {\n            includeClosed: false,\n            sortDirection: groupsApi.SortDirection.DESCENDING\n        })\n\n        return groupRequests.map((request) => {\n            return groupRequestToOrgRequest(request)\n        })\n\n        // const [groupRequests, adminRequests] = await Promise.all([\n        //     groupsClient.getGroupRequests(groupId, {\n        //         includeClosed: false,\n        //         sortDirection: groupsApi.SortDirection.DESCENDING\n        //     }),\n        //     groupsClient.getCreatedRequests({\n        //         includeClosed: false,\n        //         sortDirection: groupsApi.SortDirection.DESCENDING\n        //     })\n        // ])\n        // const groupAdminRequests = adminRequests.filter((request) => {\n        //     return (request.groupid === groupId)\n        // })\n\n        // return Promise.all(groupRequests.concat(groupAdminRequests).map((request) => {\n        //     return groupRequestToOrgRequest(request)\n        // }))\n    }\n\n    async getPendingOrganizationRequests(groupIds: Array<string>): Promise<Array<Request>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const groupRequests = await Promise.all(groupIds.map((groupId) => {\n            return groupsClient.getGroupRequests(groupId, {\n                includeClosed: false,\n                sortDirection: groupsApi.SortDirection.DESCENDING\n            })\n        }))\n\n        const allRequests = groupRequests.reduce((allRequests, requests) => {\n            return allRequests.concat(requests)\n        }, [])\n\n        return allRequests.map((request) => {\n            return groupRequestToOrgRequest(request)\n        })\n    }\n\n    async cancelRequest(requestId: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const request = await groupsClient.cancelRequest({\n            requestId\n        })\n        return groupRequestToOrgRequest(request)\n    }\n\n    async acceptRequest(requestId: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const request = await groupsClient.acceptRequest({\n            requestId\n        })\n        return groupRequestToOrgRequest(request)\n    }\n\n    async denyRequest(requestId: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const request = await groupsClient.denyRequest({\n            requestId\n        })\n        return groupRequestToOrgRequest(request)\n    }\n\n    async acceptJoinInvitation(requestId: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const request = await groupsClient.acceptRequest({\n            requestId\n        })\n        return groupRequestToOrgRequest(request)\n    }\n\n    async rejectJoinInvitation(requestId: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        const request = await groupsClient.denyRequest({\n            requestId\n        })\n        return groupRequestToOrgRequest(request)\n    }\n\n    async inviteUserToJoinOrg(groupId: string, username: string): Promise<Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.inviteUserToGroup({\n            groupId,\n            username\n        })\n            .then((request) => {\n                return groupRequestToOrgRequest(request)\n            })\n    }\n}","export interface ServiceClientParams {\n    url: string\n    token?: string\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport interface JSONResponse {\n    id: string\n    version: string\n    result: any\n    error: any\n}\n\nexport class ServiceClient {\n    url: string;\n    token: string | null;\n\n    static module: string;\n\n    constructor({ url, token }: ServiceClientParams) {\n        this.url = url\n        this.token = token || null\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: (<typeof ServiceClient>this.constructor).module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: (<typeof ServiceClient>this.constructor).module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n\n}\n\nexport class AuthorizedServiceClient extends ServiceClient {\n    token: string;\n\n    constructor(params: ServiceClientParams) {\n        super(params)\n        if (!params.token) {\n            throw new Error('Authorized client requires token')\n        }\n        this.token = params.token\n    }\n\n    callFunc(func: string, param: any): Promise<JSONResponse> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token!,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload(func, param))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Request error: ' + response.status + ', ' + response.statusText)\n                }\n                return <unknown>response.json() as JSONResponse\n            })\n    }\n}\n\n","import {\n    ServiceClientParams,\n    AuthorizedServiceClient\n} from \"./serviceClient\";\n\nexport interface User {\n    username: string,\n    realname: string,\n    thumbnail: string\n}\n\nexport type OrganizationSetting = {\n    settings: {\n        lastVisitedAt: Date | null\n    }\n}\n\nexport type OrganizationsSettings = {\n    orgSettings: any //Map<string, OrganizationSetting>\n}\n\nexport interface UserProfile {\n    user: User,\n    profile: {\n        synced: {\n            gravatarHash: string\n        }\n        userdata: {\n            jobTitle: string,\n            jobTitleOther: string,\n            organization: string\n            city: string\n            state: string\n            country: string\n            avatarOption: string\n            gravatarDefault: string\n        }\n        metadata: {\n            createdBy: string\n            created: string\n        }\n        plugins: {\n            organizations?: OrganizationsSettings\n        }\n    }\n}\n\n// Note that we are only supporting updating of the orgs plugin settings, \n// so make this strict-ish.\nexport interface UserProfileUpdate {\n    user: User,\n    profile: {\n        plugins: {\n            organizations: OrganizationsSettings\n        }\n    }\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\n\nexport interface UserProfileClientParams extends ServiceClientParams {\n}\n\nexport class UserProfileClient extends AuthorizedServiceClient {\n    static module: string = 'UserProfile'\n    static profileCache: Map<string, UserProfile> = new Map()\n\n    constructor(params: UserProfileClientParams) {\n        super(params)\n    }\n\n    // makePayload(method: string, param: any): JSONPayload {\n    //     return {\n    //         version: '1.1',\n    //         method: 'UserProfile.' + method,\n    //         id: String(Math.random()).slice(2),\n    //         params: [param]\n    //     }\n    // }\n\n    // makeEmptyPayload(method: string): JSONPayload {\n    //     return {\n    //         version: '1.1',\n    //         method: 'UserProfile.' + method,\n    //         id: String(Math.random()).slice(2),\n    //         params: []\n    //     }\n    // }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('version'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    async getUserProfile(username: string): Promise<UserProfile> {\n        if (UserProfileClient.profileCache.has(username)) {\n            return Promise.resolve(UserProfileClient.profileCache.get(username)!)\n        }\n\n        return this.callFunc('get_user_profile', [username])\n            .then((result) => {\n                return result.result[0][0] as UserProfile\n            })\n    }\n\n    async updateUserProfile(update: UserProfileUpdate): Promise<void> {\n        // TODO: update user profile cache here...\n        UserProfileClient.profileCache.delete(update.user.username)\n        return this.callFunc('update_user_profile', { profile: update })\n            .then(() => {\n                return\n            })\n    }\n\n    // async setUserProfile(username: string, profile: UserProfile): Promise<void> {\n    //     // TODO: update user profile cache here...\n    //     this.callFunc('update_user_profile', profile)\n    // }\n\n    async getUserProfiles(usernames: Array<string>): Promise<Array<UserProfile>> {\n        return this.callFunc('get_user_profile', usernames)\n            .then((result) => {\n                return result.result[0] as Array<UserProfile>\n            })\n    }\n\n    async getAllUsers(): Promise<Array<User>> {\n        return this.callFunc('filter_users', { filter: '' })\n            .then((result) => {\n                return result.result[0] as Array<User>\n            })\n    }\n\n    async searchUsers(query: string): Promise<Array<User>> {\n        return this.callFunc('filter_users', { filter: query })\n            .then((result) => {\n                return result.result[0] as Array<User>\n            })\n    }\n}","export function getProp<T>(obj: any, propPath: Array<string> | string, defaultValue: T): T {\n    if (typeof propPath === 'string') {\n        propPath = propPath.split('.');\n    } else if (!(propPath instanceof Array)) {\n        throw new TypeError('Invalid type for key: ' + (typeof propPath));\n    }\n    for (let i = 0; i < propPath.length; i += 1) {\n        if ((obj === undefined) ||\n            (typeof obj !== 'object') ||\n            (obj === null)) {\n            return defaultValue;\n        }\n        obj = obj[propPath[i]];\n    }\n    if (obj === undefined) {\n        return defaultValue;\n    }\n    return obj;\n}\n\n\nexport function hasProp(obj: any, propPath: Array<string> | string): boolean {\n    if (typeof propPath === 'string') {\n        propPath = propPath.split('.');\n    } else if (!(propPath instanceof Array)) {\n        throw new TypeError('Invalid type for key: ' + (typeof propPath));\n    }\n    for (let i = 0; i < propPath.length; i += 1) {\n        if ((obj === undefined) ||\n            (typeof obj !== 'object') ||\n            (obj === null)) {\n            return false;\n        }\n        obj = obj[propPath[i]];\n    }\n    if (obj === undefined) {\n        return false;\n    }\n    return true;\n}\n\n\nexport function setProp(obj: any, propPath: Array<string> | string, value: any): any {\n    if (typeof propPath === 'string') {\n        propPath = propPath.split('.');\n    } else if (!(propPath instanceof Array)) {\n        throw new TypeError('Invalid type for key: ' + (typeof propPath));\n    }\n    if (propPath.length === 0) {\n        return;\n    }\n    // pop off the last property for setting at the end.\n    const propKey = propPath[propPath.length - 1];\n    let key;\n    // Walk the path, creating empty objects if need be.\n    for (let i = 0; i < propPath.length - 1; i += 1) {\n        key = propPath[i];\n        if (obj[key] === undefined) {\n            obj[key] = {};\n        }\n        obj = obj[key];\n    }\n    // Finally set the property.\n    obj[propKey] = value;\n    return value;\n}\n\n\n\nexport function incrProp(obj: any, propPath: Array<string> | string, increment: number): number | void {\n    if (typeof propPath === 'string') {\n        propPath = propPath.split('.');\n    } else if (!(propPath instanceof Array)) {\n        throw new TypeError('Invalid type for key: ' + (typeof propPath));\n    }\n    if (propPath.length === 0) {\n        return;\n    }\n    increment = (increment === undefined) ? 1 : increment;\n    const propKey = propPath[propPath.length - 1];\n    for (let i = 0; i < propPath.length - 1; i += 1) {\n        const key = propPath[i];\n        if (obj[key] === undefined) {\n            obj[key] = {};\n        }\n        obj = obj[key];\n    }\n    if (obj[propKey] === undefined) {\n        obj[propKey] = increment;\n    } else {\n        if (typeof obj[propKey] === 'number') {\n            obj[propKey] += increment;\n        } else {\n            throw new Error('Can only increment a number');\n        }\n    }\n    return obj[propKey];\n}\n\n\nexport function deleteProp(obj: any, propPath: Array<string> | string) {\n    if (typeof propPath === 'string') {\n        propPath = propPath.split('.')\n    } else if (!(propPath instanceof Array)) {\n        throw new TypeError('Invalid type for key: ' + (typeof propPath))\n    }\n    if (propPath.length === 0) {\n        return false\n    }\n    const propKey = propPath[propPath.length - 1];\n    for (let i = 0; i < propPath.length - 1; i += 1) {\n        const key = propPath[i]\n        if (obj[key] === undefined) {\n            // for idempotency, and utility, do not throw error if\n            // the key doesn't exist.\n            return false;\n        }\n        obj = obj[key]\n    }\n    if (obj[propKey] === undefined) {\n        return false\n    }\n    delete obj[propKey]\n    return true\n}\n\nexport interface PropsConfig {\n    data?: any\n}\n\nexport class Props {\n\n    obj: any\n\n    constructor(data = {}) {\n        this.obj = data\n    }\n\n    getItem(props: Array<string> | string, defaultValue: any) {\n        return getProp(this.obj, props, defaultValue)\n    }\n\n    hasItem(propPath: Array<string> | string) {\n        return hasProp(this.obj, propPath)\n\n    }\n\n    setItem(path: Array<string> | string, value: any) {\n        return setProp(this.obj, path, value)\n    }\n\n    incrItem(path: Array<string> | string, increment: number) {\n        return incrProp(this.obj, path, increment)\n    }\n\n    deleteItem(path: Array<string> | string) {\n        return deleteProp(this.obj, path)\n    }\n\n    toJSON() {\n        return Object.assign({}, this.obj)\n    }\n}\n","import { UserProfileClient, UserProfile } from '../apis/userProfile'\nimport { getProp } from '../../lib/props'\n\n\nexport type Username = string\n\nexport interface User {\n    username: string\n    realname: string\n    title: string | null\n    organization: string | null\n    city: string | null\n    state: string | null\n    country: string | null\n    avatarOption: string | null\n    gravatarHash: string | null\n    gravatarDefault: string | null\n}\n\n\nfunction profileToUser(profile: UserProfile): User {\n    let jobTitle\n    if (!profile.profile.userdata) {\n        return {\n            username: profile.user.username,\n            realname: profile.user.realname,\n            city: null,\n            state: null,\n            country: null,\n            title: null,\n            organization: null,\n            avatarOption: null,\n            gravatarHash: null,\n            gravatarDefault: null\n        }\n    }\n    if (getProp<string | null>(profile, 'profile.userdata.jobTitle', null) === 'Other') {\n        jobTitle = getProp<string | null>(profile, 'profile.userdata.jobTitleOther', null)\n    } else {\n        jobTitle = getProp<string | null>(profile, 'profile.userdata.jobTitle', null)\n    }\n\n    return {\n        username: profile.user.username,\n        realname: profile.user.realname,\n        city: getProp<string | null>(profile, 'profile.userdata.city', null),\n        state: getProp<string | null>(profile, 'profile.userdata.state', null),\n        country: getProp<string | null>(profile, 'profile.userdata.country', null),\n        title: jobTitle,\n        organization: getProp<string | null>(profile, 'profile.userdata.organization', null),\n        avatarOption: getProp<string | null>(profile, 'profile.userdata.avatarOption', null),\n        gravatarHash: getProp<string | null>(profile, 'profile.synced.gravatarHash', null),\n        gravatarDefault: getProp<string | null>(profile, 'profile.userdata.gravatarDefault', null)\n    }\n}\n\nexport interface UserQuery {\n    query: string\n    excludedUsers: Array<string>\n}\n\nexport interface BriefUser {\n    username: string\n    realname: string\n}\n\n\n\n\ninterface UserModelParams {\n    userProfileServiceURL: string\n    token: string\n}\n\nexport class UserModel {\n\n    params: UserModelParams\n    userProfileClient: UserProfileClient\n\n    cache: Map<Username, User>\n\n    constructor(params: UserModelParams) {\n        this.params = params\n        this.userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        this.cache = new Map<Username, User>()\n    }\n\n    async getUser(username: Username): Promise<User> {\n        if (this.cache.has(username)) {\n            return this.cache.get(username)!\n        }\n\n        const userProfile = await this.userProfileClient.getUserProfile(username)\n        const user = profileToUser(userProfile)\n        this.cache.set(username, user)\n        return user\n    }\n\n    async getUsers(usernames: Array<Username>): Promise<Map<Username, User>> {\n        const result: Map<Username, User> = new Map()\n\n        const toFetch: Array<Username> = []\n\n        usernames.forEach((username) => {\n            if (this.cache.has(username)) {\n                result.set(username, this.cache.get(username)!)\n            } else {\n                toFetch.push(username)\n            }\n        })\n\n        const userProfiles = await this.userProfileClient.getUserProfiles(toFetch)\n        const users = userProfiles.map((profile) => {\n            return profileToUser(profile)\n        })\n\n        userProfiles.forEach((userProfile) => {\n            const user = profileToUser(userProfile)\n            this.cache.set(user.username, user)\n            result.set(user.username, user)\n        })\n\n        return result\n    }\n\n    async searchUsers(query: UserQuery): Promise<Array<BriefUser>> {\n        const users = await this.userProfileClient.searchUsers(query.query)\n        return users\n            .filter(({ username }) => {\n                return (query.excludedUsers.indexOf(username) === -1)\n            })\n            .map(({ username, realname }) => {\n                return {\n                    username, realname\n                }\n            })\n    }\n\n    // searchUsers(query: UserQuery): Promise<Array<BriefUser>> {\n    //     const userProfileClient = new userProfile.UserProfileClient({\n    //         url: this.params.userProfileServiceURL,\n    //         token: this.params.token\n    //     })\n\n    //     return userProfileClient.searchUsers(query.query)\n    //         .then((users) => {\n    //             return users\n    //                 .filter(({ username }) => {\n    //                     return (query.excludedUsers.indexOf(username) === -1)\n    //                 })\n    //                 .map(({ username, realname }) => {\n    //                     return {\n    //                         username, realname\n    //                     }\n    //                 })\n\n    //         })\n    // }\n\n    // getUser(username: string): Promise<User> {\n    //     const userProfileClient = new userProfile.UserProfileClient({\n    //         url: this.params.userProfileServiceURL,\n    //         token: this.params.token\n    //     })\n\n    //     return userProfileClient.getUserProfile(username)\n    //         .then((userProfile) => {\n    //             return this.profileToUser(userProfile)\n    //         })\n    // }\n}","import * as groupsApi from '../../apis/groups';\nimport {\n    SortDirection,\n    EditableOrganization,\n    ValidationState,\n    EditableString,\n    ValidationErrorType\n} from '../../../types';\nimport * as requestModel from '../requests';\nimport * as userModel from '../user';\nimport Validation from './validation';\nimport { string } from 'prop-types';\n\nexport interface OrganizationUpdate {\n    name: string;\n    logoUrl: string | null;\n    description: string;\n    isPrivate: boolean;\n    homeUrl: string | null;\n    researchInterests: string;\n}\n\nexport interface User {\n    username: string;\n    realname: string;\n    title: string | null;\n    organization: string | null;\n    city: string | null;\n    state: string | null;\n    country: string | null;\n    avatarOption: string | null;\n    gravatarHash: string | null;\n    gravatarDefault: string | null;\n}\n\nexport interface EditableMemberProfile {\n    title: EditableString;\n}\nexport enum UserRelationToOrganization {\n    NONE = 'NONE',\n    VIEW = 'VIEW',\n    MEMBER_REQUEST_PENDING = 'MEMBER_REQUEST_PENDING',\n    MEMBER_INVITATION_PENDING = 'MEMBER_INVITATION_PENDING',\n    MEMBER = 'MEMBER',\n    ADMIN = 'ADMIN',\n    OWNER = 'OWNER'\n}\n\nexport interface UserOrgRelation {\n    type: UserRelationToOrganization;\n}\n\nexport interface NoRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.NONE;\n}\n\nexport interface ViewRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.VIEW;\n}\n\nexport interface MembershipRequestPendingRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER_REQUEST_PENDING;\n    requestId: string;\n}\n\nexport interface MembershipInvitationPendingRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER_INVITATION_PENDING;\n    requestId: string;\n}\n\nexport interface MemberRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER;\n}\n\nexport interface AdminRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.ADMIN;\n}\n\nexport interface OwnerRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.OWNER;\n}\n\nexport type Relation =\n    | NoRelation\n    | ViewRelation\n    | MembershipRequestPendingRelation\n    | MembershipInvitationPendingRelation\n    | MemberRelation\n    | AdminRelation\n    | OwnerRelation;\n\nexport type Username = string;\n\nexport enum MemberType {\n    MEMBER = 0,\n    ADMIN,\n    OWNER\n}\nexport interface Member {\n    username: groupsApi.Username;\n    realname: string;\n    joinedAt: Date;\n    lastVisitedAt: Date | null;\n    type: MemberType;\n    title: string | null;\n}\n\nexport interface MemberUpdate {\n    title?: string;\n}\n\nexport enum UserWorkspacePermission {\n    NONE = 0,\n    VIEW,\n    EDIT,\n    ADMIN,\n    OWNER\n}\n\nexport type WorkspaceID = number;\n\nexport interface NarrativeResource {\n    workspaceId: number;\n    title: string;\n    permission: UserWorkspacePermission;\n    isPublic: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n    addedAt: Date | null;\n    description: string;\n}\n\nexport type AppID = string;\n\nexport interface AppResource {\n    appId: AppID;\n    addedAt: Date | null;\n}\n\nexport interface BriefOrganization {\n    id: string;\n    name: string;\n    logoUrl: string | null;\n    isPrivate: boolean;\n    homeUrl: string | null;\n    researchInterests: string | null;\n    // TODO: we need researchInterests here\n    owner: Member;\n    relation: UserRelationToOrganization;\n\n    isMember: boolean;\n    isAdmin: boolean;\n    isOwner: boolean;\n\n    createdAt: Date;\n    modifiedAt: Date;\n    lastVisitedAt: Date | null;\n\n    memberCount: number;\n    narrativeCount: number;\n    relatedOrganizations: Array<OrganizationID>;\n}\n\nexport enum OrganizationKind {\n    NORMAL = 0,\n    INACCESSIBLE_PRIVATE\n}\n\nexport interface InaccessiblePrivateOrganization {\n    kind: OrganizationKind.INACCESSIBLE_PRIVATE;\n    id: string;\n    isPrivate: boolean;\n    relation: UserRelationToOrganization;\n}\n\nexport interface Organization {\n    kind: OrganizationKind.NORMAL;\n    id: string;\n    name: string;\n\n    isPrivate: boolean;\n    isMember: boolean;\n    isAdmin: boolean;\n    isOwner: boolean;\n\n    relation: UserRelationToOrganization;\n    logoUrl: string | null;\n    homeUrl: string | null;\n    researchInterests: string;\n    description: string;\n    owner: Member;\n    areMembersPrivate: boolean;\n    members: Array<Member>;\n    // relation: UserOrgRelation\n    createdAt: Date;\n    modifiedAt: Date;\n    lastVisitedAt: Date | null;\n    narratives: Array<NarrativeResource>;\n    apps: Array<AppResource>;\n    memberCount: number;\n    narrativeCount: number;\n    appCount: number;\n    relatedOrganizations: Array<OrganizationID>;\n}\n\n// export interface RequestStatus {\n//     new: boolean,\n//     old: boolean\n// }\n\n// LEFT OF HERE - inapplicable should be set if the user is not an admin.\nexport enum RequestStatus {\n    INAPPLICABLE = 'INAPPLICABLE',\n    NONE = 'NONE',\n    OLD = 'OLD',\n    NEW = 'NEW'\n}\n\nexport function determineRelation(\n    org: Organization | InaccessiblePrivateOrganization,\n    username: userModel.Username,\n    request: requestModel.UserRequest | null,\n    invitation: requestModel.UserInvitation | null\n): Relation {\n    if (org.kind === OrganizationKind.INACCESSIBLE_PRIVATE) {\n        if (request && request.user === username) {\n            return {\n                type: UserRelationToOrganization.MEMBER_REQUEST_PENDING,\n                requestId: request.id\n            } as MembershipRequestPendingRelation;\n        } else if (invitation && invitation.user === username) {\n            return {\n                type: UserRelationToOrganization.MEMBER_INVITATION_PENDING,\n                requestId: invitation.id\n            } as MembershipInvitationPendingRelation;\n        } else {\n            return {\n                type: UserRelationToOrganization.NONE\n            } as NoRelation;\n        }\n    }\n\n    if (username === org.owner.username) {\n        return {\n            type: UserRelationToOrganization.OWNER\n        } as OwnerRelation;\n    } else {\n        const member = org.members.find((member) => {\n            return member.username === username;\n        });\n        if (member) {\n            switch (member.type) {\n                case MemberType.MEMBER:\n                    return {\n                        type: UserRelationToOrganization.MEMBER\n                    } as MemberRelation;\n                case MemberType.ADMIN:\n                    return {\n                        type: UserRelationToOrganization.ADMIN\n                    } as AdminRelation;\n                case MemberType.OWNER:\n                    return {\n                        type: UserRelationToOrganization.OWNER\n                    } as OwnerRelation;\n                default:\n                    return {\n                        type: UserRelationToOrganization.NONE\n                    } as NoRelation;\n            }\n        } else if (request && request.user === username) {\n            return {\n                type: UserRelationToOrganization.MEMBER_REQUEST_PENDING,\n                requestId: request.id\n            } as MembershipRequestPendingRelation;\n        } else if (invitation && invitation.user === username) {\n            return {\n                type: UserRelationToOrganization.MEMBER_INVITATION_PENDING,\n                requestId: invitation.id\n            } as MembershipInvitationPendingRelation;\n        } else {\n            return {\n                type: UserRelationToOrganization.NONE\n            } as NoRelation;\n        }\n    }\n}\n\nfunction groupPermissionToWorkspacePermission(groupsPermission: string): UserWorkspacePermission {\n    switch (groupsPermission) {\n        case 'None':\n            return UserWorkspacePermission.NONE;\n        case 'Read':\n            return UserWorkspacePermission.VIEW;\n        case 'Write':\n            return UserWorkspacePermission.EDIT;\n        case 'Admin':\n            return UserWorkspacePermission.ADMIN;\n        case 'Own':\n            return UserWorkspacePermission.OWNER;\n        default:\n            throw new Error('Invalid groups user permission: ' + groupsPermission);\n    }\n}\n\nfunction getRealname(users: Map<userModel.Username, userModel.User>, username: string, defaultValue: string) {\n    const user = users.get(username);\n    if (!user) {\n        return defaultValue;\n    }\n    return user.realname;\n}\n\nexport function groupToOrganization(\n    group: groupsApi.Group,\n    currentUser: Username,\n    users: Map<userModel.Username, userModel.User>\n): Organization {\n    const owner: Member = {\n        username: group.owner.name,\n        realname: getRealname(users, group.owner.name, 'n/a'),\n        joinedAt: new Date(group.owner.joined),\n        lastVisitedAt: group.owner.lastvisit ? new Date(group.owner.lastvisit) : null,\n        type: MemberType.OWNER,\n        title: group.owner.custom.title\n    };\n\n    // We join admins and members, since they are all members, just different privileges in the org\n    const members = (<Array<Member>>[\n        // owner\n    ])\n        .concat(\n            group.admins.map((admin) => {\n                return {\n                    username: admin.name,\n                    realname: getRealname(users, admin.name, 'n/a'),\n                    joinedAt: new Date(admin.joined),\n                    lastVisitedAt: admin.lastvisit ? new Date(admin.lastvisit) : null,\n                    type: MemberType.ADMIN,\n                    title: admin.custom.title\n                };\n            })\n        )\n        .concat(\n            group.members.map((member) => {\n                return {\n                    username: member.name,\n                    realname: getRealname(users, member.name, 'n/a'),\n                    joinedAt: new Date(member.joined),\n                    lastVisitedAt: member.lastvisit ? new Date(member.lastvisit) : null,\n                    type: MemberType.MEMBER,\n                    title: member.custom.title\n                };\n            })\n        );\n\n    const narratives: Array<NarrativeResource> = group.resources.workspace.map((info) => {\n        return {\n            workspaceId: parseInt(info.rid, 10),\n            title: info.narrname,\n            isPublic: info.public,\n            permission: groupPermissionToWorkspacePermission(info.perm),\n            createdAt: new Date(info.narrcreate),\n            updatedAt: new Date(info.moddate),\n            description: info.description,\n            addedAt: info.added === null ? null : new Date(info.added)\n        };\n    });\n    const apps: Array<AppResource> = group.resources.catalogmethod.map((info) => {\n        return {\n            appId: info.rid.split('.').join('/'),\n            addedAt: info.added === null ? null : new Date(info.added)\n        };\n    });\n\n    return {\n        kind: OrganizationKind.NORMAL,\n        id: group.id,\n        name: group.name,\n        isPrivate: group.private,\n        isMember: group.role !== 'None',\n        isAdmin: group.role === 'Admin' || group.role === 'Owner',\n        isOwner: group.role === 'Owner',\n        relation: groupRoleToUserRelation(group.role),\n        logoUrl: group.custom.logourl || null,\n        homeUrl: group.custom.homeurl || null,\n        researchInterests: group.custom.researchinterests || '',\n        description: group.custom.description,\n        owner: owner,\n        areMembersPrivate: group.privatemembers,\n        members: members,\n        modifiedAt: new Date(group.moddate),\n        createdAt: new Date(group.createdate),\n        lastVisitedAt: group.lastvisit ? new Date(group.lastvisit) : null,\n        narratives: narratives,\n        apps: apps,\n        memberCount: group.memcount,\n        narrativeCount: group.rescount.workspace || 0,\n        appCount: group.rescount.catalogmethod || 0,\n        relatedOrganizations: group.custom\n            ? group.custom.relatedgroups\n                ? group.custom.relatedgroups.split(',')\n                : []\n            : []\n    };\n}\n\nexport function groupToPrivateOrganization(\n    group: groupsApi.InaccessiblePrivateGroup,\n    currentUser: Username\n): InaccessiblePrivateOrganization {\n    return {\n        kind: OrganizationKind.INACCESSIBLE_PRIVATE,\n        id: group.id,\n        isPrivate: group.private,\n        // isMember: false,\n        relation: groupRoleToUserRelation(group.role)\n    };\n}\n\nexport type GroupID = string;\nexport type OrganizationID = GroupID;\n\nexport interface QueryResults {\n    organizations: Array<BriefOrganization>;\n    total: number;\n}\n\nexport interface Query {\n    searchTerms: Array<string>;\n    username: groupsApi.Username;\n    sortField: string;\n    sortDirection: SortDirection;\n    filter: Filter;\n}\n\nexport function applySearch(orgs: Array<BriefOrganization>, searchTerms: Array<string>): Array<BriefOrganization> {\n    const searchTermsRe = searchTerms.map((term) => {\n        return new RegExp(term, 'i');\n    });\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTermsRe.every((termRe) => {\n            return (\n                termRe.test(org.name) ||\n                termRe.test(org.researchInterests || '') ||\n                termRe.test(org.owner.username) ||\n                termRe.test(org.owner.realname)\n            );\n        });\n    });\n    return filteredOrgs;\n}\n\nfunction dateDays(d: Date) {\n    const t = d.getTime();\n    return Math.round(t / (1000 * 60 * 60 * 24));\n}\n\nfunction applySortComparison(sortField: string, direction: number, a: BriefOrganization, b: BriefOrganization) {\n    switch (sortField) {\n        case 'created':\n            return direction * (dateDays(a.createdAt) - dateDays(b.createdAt));\n        case 'modified':\n        case 'changed':\n            return direction * (dateDays(a.modifiedAt) - dateDays(b.modifiedAt));\n        case 'name':\n            return direction * a.name.localeCompare(b.name);\n        case 'owner':\n            // TODO: after the dust settles for org -> brief org conversion,\n            // we may need to convert the owner to a member via profile...\n            return direction * a.owner.username.localeCompare(b.owner.username);\n        case 'narrativeCount':\n            return direction * (a.narrativeCount - b.narrativeCount);\n        case 'memberCount':\n            return direction * (a.memberCount - b.memberCount);\n        default:\n            console.warn('unimplemented sort field: ' + sortField);\n            return 0;\n    }\n}\n\nfunction applySort(\n    organizations: Array<BriefOrganization>,\n    sortField: string,\n    sortDirection: SortDirection\n): Array<BriefOrganization> {\n    const direction = sortDirection === SortDirection.ASCENDING ? 1 : -1;\n    return organizations.slice().sort((a, b) => {\n        return applySortComparison(sortField, direction, a, b) || applySortComparison('name', 1, a, b);\n    });\n}\n\nfunction groupRoleToUserRelation(role: groupsApi.Role): UserRelationToOrganization {\n    switch (role) {\n        case 'None':\n            return UserRelationToOrganization.NONE;\n        case 'Member':\n            return UserRelationToOrganization.MEMBER;\n        case 'Admin':\n            return UserRelationToOrganization.ADMIN;\n        case 'Owner':\n            return UserRelationToOrganization.OWNER;\n        default:\n            throw new Error('Unknown role: ' + role);\n    }\n}\n\nexport interface Filter {\n    roleType: string;\n    roles: Array<string>;\n    privacy: string;\n}\n\nfunction applyFilter(\n    organizations: Array<BriefOrganization>,\n    { roleType, roles, privacy }: Filter,\n    username: groupsApi.Username\n): Array<BriefOrganization> {\n    function applyRoleType(org: BriefOrganization) {\n        switch (roleType) {\n            case 'myorgs':\n                return [\n                    UserRelationToOrganization.MEMBER,\n                    UserRelationToOrganization.ADMIN,\n                    UserRelationToOrganization.OWNER\n                ].includes(org.relation);\n            case 'notmyorgs':\n                return ![\n                    UserRelationToOrganization.MEMBER,\n                    UserRelationToOrganization.ADMIN,\n                    UserRelationToOrganization.OWNER\n                ].includes(org.relation);\n            case 'all':\n            default:\n                return true;\n        }\n    }\n    function applyRole(org: BriefOrganization) {\n        if (roles.length === 0) {\n            return true;\n        }\n        return roles.some((role) => {\n            switch (role) {\n                case 'member':\n                    return org.relation === UserRelationToOrganization.MEMBER;\n                case 'admin':\n                    return org.relation === UserRelationToOrganization.ADMIN;\n                case 'owner':\n                    return org.relation === UserRelationToOrganization.OWNER;\n                default:\n                    return false;\n            }\n        });\n    }\n    function applyPrivacy(org: BriefOrganization) {\n        switch (privacy) {\n            case 'public':\n                return !org.isPrivate;\n            case 'private':\n                return org.isPrivate;\n            case 'any':\n                return true;\n            default:\n                return false;\n        }\n    }\n    return organizations.filter((org) => {\n        return applyRoleType(org) && applyRole(org) && applyPrivacy(org);\n    });\n}\n\n// Narrative Sort and Search\nfunction narrativeSortByToComparator(sortBy: string) {\n    switch (sortBy) {\n        case 'name':\n            return (a: NarrativeResource, b: NarrativeResource) => {\n                return a.title.localeCompare(b.title);\n            };\n        case 'updated':\n            return (a: NarrativeResource, b: NarrativeResource) => {\n                return b.updatedAt.getTime() - a.updatedAt.getTime();\n            };\n        default:\n        case 'added':\n            return (a: NarrativeResource, b: NarrativeResource) => {\n                if (a.addedAt === null) {\n                    if (b.addedAt === null) {\n                        return 0;\n                    } else {\n                        // nulls sort to bottom\n                        return 1;\n                    }\n                } else {\n                    if (b.addedAt === null) {\n                        return -1;\n                    } else {\n                        return b.addedAt.getTime() - a.addedAt.getTime();\n                    }\n                }\n            };\n    }\n}\n\nexport function applyNarrativeSort(narratives: Array<NarrativeResource>, sortBy: string) {\n    if (!sortBy) {\n        return narratives;\n    }\n    return narratives.slice().sort((a: NarrativeResource, b: NarrativeResource) => {\n        const c1 = narrativeSortByToComparator(sortBy)(a, b);\n        if (c1 === 0) {\n            if (sortBy !== 'name') {\n                return narrativeSortByToComparator('name')(a, b);\n            }\n        }\n        return c1;\n    });\n}\n\nexport function applyNarrativeSearch(narratives: Array<NarrativeResource>, searchBy: string) {\n    const tokens = searchBy.split(/\\s+/).map((token) => {\n        return new RegExp(token, 'i');\n    });\n    if (tokens.length === 0) {\n        return narratives;\n    }\n    return narratives.slice().filter((narrative: NarrativeResource) => {\n        return tokens.every((token: RegExp) => {\n            return token.test(narrative.title);\n        });\n    });\n}\n\nexport interface NarrativeQuery {\n    searchBy: string;\n    sortBy: string;\n}\n\nexport function queryNarratives(narratives: Array<NarrativeResource>, query: NarrativeQuery) {\n    const searched = applyNarrativeSearch(narratives, query.searchBy);\n    const sorted = applyNarrativeSort(searched, query.sortBy);\n    return sorted;\n}\n\n// Members Sort and Search\n\nfunction memberSortByToComparator(sortBy: string) {\n    switch (sortBy) {\n        case 'name':\n            // TODO: need to use user real name\n\n            return (a: Member, b: Member) => {\n                return a.username.localeCompare(b.username);\n            };\n        default:\n        case 'added':\n            return (a: Member, b: Member) => {\n                return b.joinedAt.getTime() - a.joinedAt.getTime();\n            };\n    }\n}\n\nexport function applyMembersSort(members: Array<Member>, sortBy: string) {\n    if (!sortBy) {\n        return members;\n    }\n    return members.slice().sort((a: Member, b: Member) => {\n        const c1 = memberSortByToComparator(sortBy)(a, b);\n        if (c1 === 0) {\n            if (sortBy !== 'name') {\n                return memberSortByToComparator('name')(a, b);\n            }\n        }\n        return c1;\n    });\n}\n\nexport function applyMembersSearch(members: Array<Member>, searchBy: string) {\n    const tokens = searchBy.split(/\\s+/).map((token) => {\n        return new RegExp(token, 'i');\n    });\n    if (tokens.length === 0) {\n        return members;\n    }\n    return members.slice().filter((member: Member) => {\n        return tokens.every((token: RegExp) => {\n            return token.test(member.username) || token.test(member.title || '');\n        });\n    });\n}\n\nexport interface MembersQuery {\n    searchBy: string;\n    sortBy: string;\n}\n\nexport function queryMembers(members: Array<Member>, query: MembersQuery) {\n    const searched = applyMembersSearch(members, query.searchBy);\n    const sorted = applyMembersSort(searched, query.sortBy);\n    return sorted;\n}\n\n// function getCustomField(group: groupsApi.Group | groupsApi.BriefGroup, name: string): string | null {\n//     if (!group.custom) {\n//         return null\n//     }\n//     if (name in group.custom) {\n//         return group.custom[name]\n//     }\n//     return null\n// }\n\nexport interface ConstructorParams {\n    groupsServiceURL: string;\n    userProfileServiceURL: string;\n    token: string;\n    username: groupsApi.Username;\n}\n\nexport class OrganizationModel {\n    params: ConstructorParams;\n    groupsClient: groupsApi.GroupsClient;\n    usersClient: userModel.UserModel;\n    // organizations: Map<OrganizationID, Organization | InaccessiblePrivateOrganization>\n\n    constructor(params: ConstructorParams) {\n        this.params = params;\n        this.groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        this.usersClient = new userModel.UserModel({\n            userProfileServiceURL: this.params.userProfileServiceURL,\n            token: this.params.token\n        });\n        // this.organizations = new Map<OrganizationID, Organization>()\n    }\n\n    async getOrg(id: OrganizationID): Promise<Organization | InaccessiblePrivateOrganization> {\n        const group = await this.groupsClient.getGroupById(id);\n\n        // get users from user model (profile)\n        console.log('group to get org?', group);\n        if (group.role === 'None' && group.private) {\n            return groupToPrivateOrganization(group as groupsApi.InaccessiblePrivateGroup, this.params.username);\n        } else {\n            const g = group as groupsApi.Group;\n            // gather usernames from group\n            const usernames: Array<string> = [];\n            usernames.push(g.owner.name);\n            g.admins.forEach((admin) => {\n                usernames.push(admin.name);\n            });\n            g.members.forEach((member) => {\n                usernames.push(member.name);\n            });\n\n            const users = await this.usersClient.getUsers(usernames);\n\n            return groupToOrganization(g, this.params.username, users);\n        }\n    }\n\n    async getGroupUsers(group: groupsApi.Group) {\n        // gather usernames from group\n        const usernames: Array<string> = [];\n        usernames.push(group.owner.name);\n        group.admins.forEach((admin) => {\n            usernames.push(admin.name);\n        });\n        group.members.forEach((member) => {\n            usernames.push(member.name);\n        });\n\n        return await this.usersClient.getUsers(usernames);\n    }\n\n    async getOrganization(id: OrganizationID): Promise<Organization> {\n        const group = await this.groupsClient.getGroupById(id);\n        if (group.role === 'None' && group.private) {\n            throw new Error('Inaccessible Organization');\n        }\n\n        const users = await this.getGroupUsers(<groupsApi.Group>group);\n\n        return groupToOrganization(group as groupsApi.Group, this.params.username, users);\n    }\n\n    async getOrgs(ids: Array<OrganizationID>): Promise<Array<Organization | InaccessiblePrivateOrganization>> {\n        return Promise.all(\n            ids.map((id) => {\n                return this.getOrg(id);\n            })\n        );\n    }\n\n    async getOwnOrgs(): Promise<Array<BriefOrganization>> {\n        const orgs = await this.getAllOrgs2();\n\n        const ownOrgs = orgs.filter((org: BriefOrganization) => {\n            // ensure that user has some relationship to the org:\n            // member, admin, or owner\n            return org.relation !== UserRelationToOrganization.NONE;\n        });\n\n        return ownOrgs;\n    }\n\n    listGroupToBriefOrganization(\n        group: groupsApi.BriefGroup,\n        users: Map<userModel.Username, userModel.User>\n    ): BriefOrganization {\n        return {\n            id: group.id,\n            name: group.name,\n            logoUrl: group.custom.logourl || null,\n            isPrivate: group.private,\n            homeUrl: group.custom.homeurl || null,\n            researchInterests: group.custom.researchinterests || null,\n            owner: {\n                username: group.owner,\n                realname: getRealname(users, group.owner, 'n/a'),\n                lastVisitedAt: null,\n                type: MemberType.OWNER,\n                joinedAt: new Date(group.createdate),\n                title: 'Owner'\n            },\n            relation: groupRoleToUserRelation(group.role),\n            isMember: group.role !== 'None',\n            isAdmin: group.role === 'Admin' || group.role === 'Owner',\n            isOwner: group.role === 'Owner',\n            createdAt: new Date(group.createdate),\n            modifiedAt: new Date(group.moddate),\n            lastVisitedAt: group.lastvisit ? new Date(group.lastvisit) : null,\n            memberCount: group.memcount || 0,\n            narrativeCount: group.rescount.workspace || 0,\n            relatedOrganizations: group.custom\n                ? group.custom.relatedgroups\n                    ? group.custom.relatedgroups.split(',')\n                    : []\n                : []\n        };\n    }\n\n    async getAllOrgs2(): Promise<Array<BriefOrganization>> {\n        let allGroups: Array<groupsApi.BriefGroup> = [];\n        let groups: Array<groupsApi.BriefGroup>;\n        do {\n            groups = await this.groupsClient.listGroups();\n            allGroups = allGroups.concat(groups);\n        } while (groups.length === groupsApi.MAX_GROUPS_PER_LIST_REQUEST);\n\n        const usernames: Set<string> = new Set();\n        allGroups.forEach((g) => {\n            usernames.add(g.owner);\n        });\n\n        const users = await this.usersClient.getUsers(Array.from(usernames.values()));\n\n        return allGroups.map((group) => {\n            return this.listGroupToBriefOrganization(group, users);\n        });\n    }\n\n    async queryOrgs(query: Query): Promise<QueryResults> {\n        const orgs = await this.getAllOrgs2();\n\n        const filtered = applyFilter(orgs, query.filter, query.username);\n        const searched = applySearch(filtered, query.searchTerms);\n        const sorted = applySort(searched, query.sortField, query.sortDirection);\n\n        return {\n            organizations: sorted,\n            total: orgs.length\n        };\n    }\n\n    async ownOrgs(username: groupsApi.Username): Promise<QueryResults> {\n        const orgs = await this.getAllOrgs2();\n        const ownOrgs = orgs.filter((org: BriefOrganization) => {\n            return org.relation !== UserRelationToOrganization.NONE;\n        });\n\n        return {\n            organizations: ownOrgs,\n            total: ownOrgs.length\n        };\n    }\n\n    async grantViewAccess(requestId: string): Promise<requestModel.Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        await groupsClient.grantReadAccessToRequestedResource({ requestId });\n        const req = await groupsClient.getRequest(requestId);\n        return requestModel.groupRequestToOrgRequest(req);\n    }\n\n    async addOrg(newOrg: EditableOrganization, username: groupsApi.Username): Promise<Organization> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        // do record-level validation\n        if (\n            newOrg.id.validationState.type !== ValidationErrorType.OK ||\n            newOrg.name.validationState.type !== ValidationErrorType.OK ||\n            newOrg.logoUrl.validationState.type !== ValidationErrorType.OK ||\n            newOrg.description.validationState.type !== ValidationErrorType.OK ||\n            newOrg.isPrivate.validationState.type !== ValidationErrorType.OK\n        ) {\n            return Promise.reject(new Error('One or more fields are invalid'));\n        }\n\n        const group = await groupsClient.createGroup({\n            id: newOrg.id.value,\n            name: newOrg.name.value,\n            logoUrl: newOrg.logoUrl.value,\n            homeUrl: newOrg.homeUrl.value,\n            researchInterests: newOrg.researchInterests.value,\n            description: newOrg.description.value,\n            isPrivate: newOrg.isPrivate.value\n        });\n\n        const users = await this.getGroupUsers(group);\n\n        return groupToOrganization(group, username, users);\n    }\n\n    async orgExists(id: string): Promise<boolean> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        return groupsClient.groupExists(id).then(({ exists }) => {\n            return exists;\n        });\n    }\n\n    async updateOrg(id: string, orgUpdate: OrganizationUpdate): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        // do record-level validation\n\n        return groupsClient.updateGroup(id, {\n            name: orgUpdate.name,\n            logoUrl: orgUpdate.logoUrl,\n            homeUrl: orgUpdate.homeUrl,\n            researchInterests: orgUpdate.researchInterests,\n            description: orgUpdate.description,\n            private: orgUpdate.isPrivate\n        });\n    }\n\n    validateOrgId(id: string): [string, ValidationState] {\n        return Validation.validateOrgId(id);\n    }\n\n    validateOrgName(name: string): [string, ValidationState] {\n        return Validation.validateOrgName(name);\n    }\n\n    validateOrgDescription(description: string): [string, ValidationState] {\n        return Validation.validateOrgDescription(description);\n    }\n\n    async removeNarrativeFromOrg(organizationId: OrganizationID, workspaceId: number): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        return groupsClient.deleteResource(organizationId, 'workspace', String(workspaceId));\n    }\n\n    async removeAppFromOrg(organizationId: OrganizationID, appId: string): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        const groupFunnyAppId = appId.split('/').join('.');\n\n        return groupsClient.deleteResource(organizationId, 'catalogmethod', groupFunnyAppId);\n    }\n\n    async grantNarrativeAccess(groupId: string, resourceId: string): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        await groupsClient.grantResourceAccess(groupId, 'workspace', resourceId);\n    }\n\n    async requestMembership(id: string): Promise<requestModel.Request> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        const request = await groupsClient.requestMembership({\n            groupId: id\n        });\n        return requestModel.groupRequestToOrgRequest(request);\n    }\n\n    async addOrRequestNarrativeToGroup(\n        groupId: string,\n        workspaceId: WorkspaceID\n    ): Promise<requestModel.Request | boolean> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        const request = await groupsClient.addOrRequestNarrative({\n            groupId: groupId,\n            workspaceId: workspaceId\n        });\n        if (request.complete === true) {\n            return true;\n        } else {\n            return requestModel.groupRequestToOrgRequest(request);\n        }\n    }\n\n    async addOrRequestAppToGroup(groupId: string, appId: string): Promise<requestModel.Request | boolean> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        const request = await groupsClient.addOrRequestResource({\n            groupId,\n            type: 'catalogmethod',\n            resourceId: appId\n        });\n        if (request.complete === true) {\n            return true;\n        } else {\n            return requestModel.groupRequestToOrgRequest(request);\n        }\n    }\n\n    async memberToAdmin(groupId: string, member: string): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        return groupsClient.memberToAdmin({\n            groupId,\n            member\n        });\n    }\n\n    async adminToMember(groupId: string, member: string): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        return groupsClient.adminToMember({\n            groupId,\n            member\n        });\n    }\n    async removeMember(groupId: string, member: string): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        return groupsClient.removeMember({\n            groupId,\n            member\n        });\n    }\n\n    async updateMember(groupId: string, memberUsername: string, update: MemberUpdate) {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n\n        return groupsClient.updateMember({ groupId, memberUsername, update });\n    }\n\n    async visitOrg({ organizationId }: { organizationId: string }): Promise<void> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        return groupsClient.visitGroup({ groupId: organizationId });\n    }\n\n    async getOpenRequestsStatus({\n        organizationIds\n    }: {\n        organizationIds: Array<OrganizationID>;\n    }): Promise<Map<OrganizationID, RequestStatus>> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        const openRequests = await groupsClient.getOpenRequests({ groupIds: organizationIds });\n        const result = new Map<OrganizationID, RequestStatus>();\n        for (const [groupId, status] of openRequests.entries()) {\n            const requestStatus: RequestStatus = stringToRequestStatus(status);\n            result.set(<OrganizationID>groupId, requestStatus);\n        }\n        return result;\n    }\n\n    async getOpenRequestStatus({ organizationId }: { organizationId: OrganizationID }): Promise<RequestStatus> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        const openRequests = await groupsClient.getOpenRequests({ groupIds: [organizationId] });\n        for (const [groupId, status] of openRequests.entries()) {\n            return stringToRequestStatus(status);\n        }\n        throw new Error('expected request status, got none');\n    }\n\n    async addRelatedOrganization({\n        organizationId,\n        relatedOrganizationId\n    }: {\n        organizationId: OrganizationID;\n        relatedOrganizationId: OrganizationID;\n    }): Promise<OrganizationID> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        return await groupsClient.addRelatedGroup(organizationId, relatedOrganizationId);\n    }\n\n    async removeRelatedOrganization({\n        organizationId,\n        relatedOrganizationId\n    }: {\n        organizationId: OrganizationID;\n        relatedOrganizationId: OrganizationID;\n    }): Promise<OrganizationID> {\n        const groupsClient = new groupsApi.GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        });\n        return await groupsClient.removeRelatedGroup(organizationId, relatedOrganizationId);\n    }\n}\n\nfunction stringToRequestStatus(status: groupsApi.RequestStatus): RequestStatus {\n    switch (status.new) {\n        case 'None':\n            return RequestStatus.NONE;\n        case 'Old':\n            return RequestStatus.OLD;\n        case 'New':\n            return RequestStatus.NEW;\n        default:\n            throw new Error('Invalid open request status: ' + status);\n    }\n}\n\nexport function userPermissionToWorkspacePermission(userPermission: string, isOwner: boolean) {\n    if (isOwner) {\n        return UserWorkspacePermission.OWNER;\n    }\n    switch (userPermission) {\n        case 'r':\n            return UserWorkspacePermission.VIEW;\n        case 'w':\n            return UserWorkspacePermission.EDIT;\n        case 'a':\n            return UserWorkspacePermission.ADMIN;\n        default:\n            throw new Error('Invalid workspace user permission: ' + userPermission);\n    }\n}\n","import { ValidationState, ValidationErrorType } from \"../../../types\"\n\nexport default class Validation {\n    static nonPrintableRe = /[\\000-\\031]/\n\n    static testNonPrintableCharacters(s: string) {\n        const firstNonPrintable = s.search(Validation.nonPrintableRe)\n        if (firstNonPrintable === -1) {\n            return false\n        }\n        const beforeStart = firstNonPrintable - 5 < 0 ? 0 : firstNonPrintable - 5\n        const before = s.slice(beforeStart, firstNonPrintable)\n        const after = s.slice(firstNonPrintable + 1, firstNonPrintable + 6)\n        return `Non-printable character at position ${firstNonPrintable}: \"${before}___${after}`\n    }\n\n    static validateOrgId(id: string): [string, ValidationState] {\n        // May not be empty\n        if (id.length === 0) {\n            return [\n                id, {\n                    type: ValidationErrorType.REQUIRED_MISSING,\n                    message: 'Organization id may not be empty',\n                    validatedAt: new Date()\n                }]\n        }\n        // No spaces\n        if (id.match(/\\s/)) {\n            return [\n                id, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Organization id may not contain a space',\n                    validatedAt: new Date()\n                }]\n        }\n        // May not exceed maximum size\n        // todo: what is the real limit?\n        if (id.length > 100) {\n            return [\n                id, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Organization id may not be longer than 100 characters',\n                    validatedAt: new Date()\n                }]\n        }\n\n        // May only consist if lower case alphanumeric\n        const alphaRe = /^[a-z0-9-]+$/\n        if (!id.match(alphaRe)) {\n            return [\n                id, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Organization ID may only contain lower case letters (a-z), numeric digits (0-9) and the dash \"-\"',\n                    validatedAt: new Date()\n                }\n            ]\n        }\n\n        return [id, {\n            type: ValidationErrorType.OK,\n            validatedAt: new Date()\n        }]\n    }\n\n    static validateOrgName(name: string): [string, ValidationState] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: ValidationErrorType.REQUIRED_MISSING,\n                    message: 'Organization name may not be empty',\n                    validatedAt: new Date()\n                }]\n        }\n        if (name.length > 256) {\n            return [\n                name, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Organization name may not be longer than 256 characters',\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            name, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }]\n    }\n\n    static validateOrgLogoUrl(logoUrl: string | null): [string | null, ValidationState] {\n        if (logoUrl === null || logoUrl === '') {\n            return [\n                logoUrl, {\n                    type: ValidationErrorType.OK,\n                    validatedAt: new Date()\n                }\n            ]\n        }\n        if (logoUrl.length > 1000) {\n            return [\n                logoUrl, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Logo url may not be longer than 1000 characters',\n                    validatedAt: new Date()\n                }]\n        }\n        try {\n            const url = new URL(logoUrl)\n            if (!url.protocol.match(/^http[s]?:$/)) {\n                return [\n                    logoUrl, {\n                        type: ValidationErrorType.ERROR,\n                        message: 'Error parsing url: ' + url.protocol + ' is not a valid protocol',\n                        validatedAt: new Date()\n                    }]\n            }\n            if (!url.protocol.match(/^https:$/)) {\n                return [\n                    logoUrl, {\n                        type: ValidationErrorType.ERROR,\n                        message: 'Only https (secure) urls are supported',\n                        validatedAt: new Date()\n                    }]\n            }\n        } catch (ex) {\n            return [\n                logoUrl, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Error parsing url: ' + ex.message,\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            logoUrl, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }]\n    }\n\n    static validateOrgHomeUrl(homeUrl: string | null): [string | null, ValidationState] {\n        if (homeUrl === null || homeUrl === '') {\n            return [\n                homeUrl, {\n                    type: ValidationErrorType.OK,\n                    validatedAt: new Date()\n                }\n            ]\n        }\n        if (homeUrl.length > 1000) {\n            return [\n                homeUrl, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Home url may not be longer than 1000 characters',\n                    validatedAt: new Date()\n                }]\n        }\n        try {\n            const url = new URL(homeUrl)\n            // ensure either http or https, followed by :// and then\n            // something then a dot then something then anything\n            // if (!url.protocol.match(/^http[s]?:\\/\\/[^.]+[.][^.]+.*$/)) {\n            if (!url.protocol.match(/^http[s]?:$/)) {\n                return [\n                    homeUrl, {\n                        type: ValidationErrorType.ERROR,\n                        message: 'Error parsing url: ' + url.protocol + ' is not a valid protocol',\n                        validatedAt: new Date()\n                    }]\n            }\n        } catch (ex) {\n            return [\n                homeUrl, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Error parsing url: ' + ex.message,\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            homeUrl, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }]\n    }\n\n    static validateOrgResearchInterests(researchInterests: string): [string, ValidationState] {\n        if (researchInterests.length === 0) {\n            return [\n                name, {\n                    type: ValidationErrorType.REQUIRED_MISSING,\n                    message: 'Research Interests may not be empty',\n                    validatedAt: new Date()\n                }]\n        }\n\n        if (researchInterests.length > 280) {\n            return [\n                researchInterests, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Research Interests may not be longer than 280 characters',\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            researchInterests, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }]\n    }\n\n    static validateOrgDescription(description: string): [string, ValidationState] {\n        if (description.length === 0) {\n            // return [name, {\n            //     type: ValidationErrorType.OK,\n            //     validatedAt: new Date()\n            // }]\n            return [name, {\n                type: ValidationErrorType.ERROR,\n                message: 'Organization description may not be empty',\n                validatedAt: new Date()\n            }]\n        }\n        // TODO: Is there really a limit?\n        // const nonPrintable = Validation.testNonPrintableCharacters(description)\n        // if (nonPrintable) {\n        //     return [\n        //         description, {\n        //             type: UIErrorType.ERROR,\n        //             message: nonPrintable\n        //         }\n        //     ]\n        // }\n        if (description.length > 4096) {\n            return [\n                description, {\n                    type: ValidationErrorType.ERROR,\n                    message: 'Organization description may not be longer than 4,096 characters',\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            description, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }\n        ]\n    }\n\n    static validateMemberTitle(title: string): [string, ValidationState] {\n        const maxTitleLength = 100\n        if (title.length > maxTitleLength) {\n            return [\n                title, {\n                    type: ValidationErrorType.ERROR,\n                    message: `member title may not be longer than ${maxTitleLength} characters`,\n                    validatedAt: new Date()\n                }]\n        }\n        return [\n            title, {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }]\n    }\n}","import uuid from 'uuid/v4'\n\nexport interface AnError {\n    code: string\n    message: string\n    id: string\n    at: Date\n\n\n    detail?: string\n    history?: Array<AnError>\n    trace?: Array<string>\n    info?: any\n}\n\nexport function makeError(\n    { code, message, detail, history, trace, info }:\n        {\n            code: string, message: string,\n            detail?: string,\n            history?: Array<AnError>, trace?: Array<string>, info?: any\n        }\n) {\n    return {\n        code, message, detail,\n        id: uuid(),\n        at: new Date(),\n        history, trace, info\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from '../index'\nimport { AnError } from '../../../lib/error'\nimport { StoreState, ViewOrgViewModelKind, SelectableRelatableOrganization } from '../../../types'\nimport * as orgModel from '../../../data/models/organization/model'\nimport { makeError } from '../../../combo/error/api'\n\nexport interface Load extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD\n}\n\nexport interface LoadStart extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_START> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_START\n}\n\nexport interface LoadSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS,\n    organizations: Array<SelectableRelatableOrganization>\n}\n\nexport interface LoadError extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_ERROR\n    error: AnError\n}\n\nexport interface Unload extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD\n}\n\nexport function load() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_START\n        } as LoadStart)\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            throw new Error('view is not normal')\n        }\n        const { organization } = viewModel\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const orgs = await orgClient.getAllOrgs2()\n            const selectableOrgs = orgs.map((org) => {\n                const isRelated = organization.relatedOrganizations.includes(org.id)\n                return {\n                    isRelated: isRelated,\n                    isSelected: false,\n                    organization: org\n                } as SelectableRelatableOrganization\n            })\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS,\n                organizations: selectableOrgs\n            })\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD\n    }\n}\n\nexport interface SelectOrganization extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION,\n    selectedOrganization: SelectableRelatableOrganization\n}\n\nexport function selectOrganization(org: SelectableRelatableOrganization): SelectOrganization {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION,\n        selectedOrganization: org\n    }\n}\n\n// Add Org\n\nexport interface AddOrganization extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface AddOrganizationStart extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START\n}\n\nexport interface AddOrganizationSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface AddOrganizationError extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR,\n    error: AnError\n}\n\nexport function addOrganization(organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START\n        } as AddOrganizationStart)\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        try {\n            await orgClient.addRelatedOrganization({ organizationId, relatedOrganizationId })\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS,\n                organizationId: relatedOrganizationId\n            })\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n    }\n}\n\n// Remove Org\n\nexport interface RemoveOrganization extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface RemoveOrganizationStart extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START\n}\n\nexport interface RemoveOrganizationSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface RemoveOrganizationError extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n    error: AnError\n}\n\nexport function removeOrganization(organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START\n        } as RemoveOrganizationStart)\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        try {\n            await orgClient.removeRelatedOrganization({ organizationId, relatedOrganizationId })\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n                organizationId: relatedOrganizationId\n            } as RemoveOrganizationSuccess)\n            // dispatch(viewOrgActions.reload(organizationId))\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n    }\n}\n\n// Search Orgs\n\nexport interface Search extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH,\n    query: string\n}\n\nexport interface SearchStart extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_START> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_START\n}\n\nexport interface SearchSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS,\n    organizations: Array<SelectableRelatableOrganization>\n    searchBy: string\n}\n\nexport interface SearchError extends Action<ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_ERROR,\n    error: AnError\n}\n\nexport function applyQuery(orgs: Array<SelectableRelatableOrganization>, query: string) {\n    const searchExp = query.split(/\\s+/).map((term) => {\n        return new RegExp(term, 'i')\n    })\n\n    return orgs.filter(({ organization }) => {\n        return searchExp.every((re) => {\n            return (\n                re.test(organization.name) ||\n                // TODO: realname\n                re.test(organization.owner.username)\n            )\n        })\n    })\n}\n\nexport function search(query: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_START\n        } as SearchStart)\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            throw new Error('view is not normal')\n        }\n\n        const vm = viewModel.subViews.manageRelatedOrganizationsView.viewModel\n        if (vm === null) {\n            throw new Error('vm is null')\n        }\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        try {\n            const availableOrgs = applyQuery(vm.availableOrganizations.organizations, query)\n\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS,\n                organizations: availableOrgs,\n                searchBy: query\n            } as SearchSuccess)\n            // dispatch(viewOrgActions.reload(organizationId))\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n    }\n}","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/manageRelatedOrganizations'\nimport { StoreState, ViewOrgViewModelKind, ViewOrgSubViewKind, ViewState, SelectableRelatableOrganization } from '../../../types';\nimport { ActionFlag } from '../../actions';\nimport { OrganizationModel } from '../../../data/models/organization/model';\n\nexport function loadSuccess(state: StoreState, action: actions.LoadSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            state: ViewState.OK,\n                            error: null,\n                            viewModel: {\n                                kind: ViewOrgSubViewKind.MANAGE_RELATED_ORGS,\n                                relatedOrganizations: state.views.viewOrgView.viewModel.organization.relatedOrganizations,\n                                organization: state.views.viewOrgView.viewModel.organization,\n                                availableOrganizations: {\n                                    organizations: action.organizations,\n                                    queried: action.organizations,\n                                    searchBy: ''\n                                },\n                                selectedOrganization: null\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function unload(state: StoreState, action: actions.Unload): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            state: ViewState.NONE,\n                            error: null,\n                            viewModel: null\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function selectOrganization(state: StoreState, action: actions.SelectOrganization): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel === null) {\n        return state\n    }\n    const availableOrgs = state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel.availableOrganizations;\n\n    const organizations = availableOrgs.organizations.map((relatedOrg: SelectableRelatableOrganization) => {\n        if (relatedOrg.organization.id === action.selectedOrganization.organization.id) {\n            relatedOrg.isSelected = true\n        } else {\n            relatedOrg.isSelected = false\n        }\n        return relatedOrg\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView,\n                            viewModel: {\n                                ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel,\n                                selectedOrganization: action.selectedOrganization,\n                                availableOrganizations: {\n                                    organizations: organizations,\n                                    queried: actions.applyQuery(organizations, availableOrgs.searchBy),\n                                    searchBy: availableOrgs.searchBy\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrganization(state: StoreState, action: actions.AddOrganizationSuccess): StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel === null) {\n        return state\n    }\n    const availableOrgs = state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel.availableOrganizations\n    const newRelatedOrgs = state.views.viewOrgView.viewModel.organization.relatedOrganizations.concat([action.organizationId])\n\n    const newAvailableOrgs = availableOrgs.organizations.map((relatedOrg: SelectableRelatableOrganization) => {\n        if (newRelatedOrgs.includes(relatedOrg.organization.id)) {\n            relatedOrg.isRelated = true\n        } else {\n            relatedOrg.isRelated = false\n        }\n        return relatedOrg\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: {\n                        ...state.views.viewOrgView.viewModel.organization,\n                        relatedOrganizations: newRelatedOrgs\n                    },\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView,\n                            viewModel: {\n                                ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel,\n                                availableOrganizations: {\n                                    organizations: newAvailableOrgs,\n                                    queried: actions.applyQuery(newAvailableOrgs, availableOrgs.searchBy),\n                                    searchBy: availableOrgs.searchBy\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function removeOrganization(state: StoreState, action: actions.RemoveOrganizationSuccess): StoreState {\n\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    if (state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel === null) {\n        return state\n    }\n\n    // Remove from the related orgs\n    const relatedOrgs = state.views.viewOrgView.viewModel.organization.relatedOrganizations.filter((organizationId: string) => {\n        return (organizationId !== action.organizationId)\n    })\n\n    const availableOrgs = state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel.availableOrganizations\n\n    // Update the related status of the org in the management interface.\n    const newAvailableOrgs = availableOrgs.organizations.filter((relatedOrg: SelectableRelatableOrganization) => {\n        if (relatedOrg.organization.id === action.organizationId) {\n            relatedOrg.isRelated = false\n        }\n        return relatedOrg\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: {\n                        ...state.views.viewOrgView.viewModel.organization,\n                        relatedOrganizations: relatedOrgs\n                    },\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView,\n                            viewModel: {\n                                ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel,\n                                availableOrganizations: {\n                                    organizations: newAvailableOrgs,\n                                    queried: actions.applyQuery(newAvailableOrgs, availableOrgs.searchBy),\n                                    searchBy: availableOrgs.searchBy\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nexport function searchSuccess(state: StoreState, action: actions.SearchSuccess): StoreState {\n\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    if (state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel === null) {\n        return state\n    }\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageRelatedOrganizationsView: {\n                            ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView,\n                            viewModel: {\n                                ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel,\n                                availableOrganizations: {\n                                    ...state.views.viewOrgView.viewModel.subViews.manageRelatedOrganizationsView.viewModel.availableOrganizations,\n                                    queried: action.organizations,\n                                    searchBy: action.searchBy\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SELECT_ORGANIZATION:\n            return selectOrganization(state, action as actions.SelectOrganization)\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS:\n            return addOrganization(state, action as actions.AddOrganizationSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS:\n            return removeOrganization(state, action as actions.RemoveOrganizationSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_RELATED_ORGANIZATIONS_SEARCH_SUCCESS:\n            return searchSuccess(state, action as actions.SearchSuccess)\n        default:\n            return null\n    }\n}\n","import * as actions from '../../actions/viewOrganization/relatedOrganizations'\nimport { StoreState, ViewOrgViewModelKind } from '../../../types'\nimport { Action } from 'redux'\nimport { ActionFlag } from '../../actions'\n\nexport function removeOrganization(state: StoreState, action: actions.RemoveOrganization): StoreState {\n\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    const relatedOrgs = state.views.viewOrgView.viewModel.organization.relatedOrganizations.filter((organizationId: string) => {\n        return (organizationId !== action.organizationId)\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: {\n                        ...state.views.viewOrgView.viewModel.organization,\n                        relatedOrganizations: relatedOrgs\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS:\n            return removeOrganization(state, action as actions.RemoveOrganization)\n        default:\n            return null\n    }\n}\n","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/addApps'\nimport { AddAppsViewModel, View, ViewState, StoreState, ViewOrgViewModelKind, ResourceRelationToOrg } from '../../../types'\nimport { ActionFlag } from '../../actions';\n\nexport function loadStart(state: View<AddAppsViewModel>, action: actions.LoadStart): View<AddAppsViewModel> {\n    return {\n        state: ViewState.LOADING,\n        viewModel: null,\n        error: null\n    }\n}\n\nexport function loadSuccess(state: View<AddAppsViewModel>, action: actions.LoadSuccess): View<AddAppsViewModel> {\n    return {\n        state: ViewState.OK,\n        error: null,\n        viewModel: {\n            rawApps: action.rawApps,\n            sortBy: action.sortBy,\n            searchBy: action.searchBy,\n            apps: action.apps,\n            selectedApp: action.selectedApp\n        }\n    }\n}\n\nexport function loadError(state: View<AddAppsViewModel>, action: actions.LoadError): View<AddAppsViewModel> {\n    return {\n        state: ViewState.ERROR,\n        error: action.error,\n        viewModel: null\n    }\n}\n\nexport function unload(state: View<AddAppsViewModel>, action: actions.Unload): View<AddAppsViewModel> {\n    return {\n        state: ViewState.NONE,\n        error: null,\n        viewModel: null\n    }\n}\n\nexport function selectSuccess(state: View<AddAppsViewModel>, action: actions.SelectSuccess): View<AddAppsViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const newRawApps = state.viewModel.rawApps.slice(0)\n    // TODO might need more item setting here\n    newRawApps.forEach((app) => {\n        if (app === action.selectedApp) {\n            app.selected = true\n        } else {\n            app.selected = false\n        }\n    })\n\n    // TODO: reapply sort and search??\n    const newApps = state.viewModel.apps.slice(0)\n    newApps.forEach((app) => {\n        if (app === action.selectedApp) {\n            app.selected = true\n        } else {\n            app.selected = false\n        }\n    })\n\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            apps: newApps,\n            rawApps: newRawApps,\n            selectedApp: action.selectedApp\n        } as AddAppsViewModel\n    }\n}\n\nexport function requestAssociationSuccess(state: View<AddAppsViewModel>, action: actions.RequestAssociationSuccess): View<AddAppsViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const newRawApps = state.viewModel.rawApps.slice(0)\n    // TODO might need more item setting here\n    newRawApps.forEach((app) => {\n        if (app.app.id === action.appId) {\n            if (action.pending) {\n                app.relation = ResourceRelationToOrg.ASSOCIATION_PENDING\n            } else {\n                app.relation = ResourceRelationToOrg.ASSOCIATED\n            }\n        }\n    })\n\n    // TODO: reapply sort and search??\n    const newApps = state.viewModel.apps.slice(0)\n    newApps.forEach((app) => {\n        if (app.app.id === action.appId) {\n            if (action.pending) {\n                app.relation = ResourceRelationToOrg.ASSOCIATION_PENDING\n            } else {\n                app.relation = ResourceRelationToOrg.ASSOCIATED\n            }\n        }\n    })\n\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            apps: newApps,\n            rawApps: newRawApps\n            // selectedApp: action.selectedApp\n        } as AddAppsViewModel\n    }\n}\n\n// TODO: route the search and/or search expression here too???\nfunction searchSuccess(state: View<AddAppsViewModel>, action: actions.SearchSuccess): View<AddAppsViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            apps: action.apps\n        }\n    }\n}\n\nfunction sortSuccess(state: View<AddAppsViewModel>, action: actions.SortSuccess): View<AddAppsViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            apps: action.apps\n        }\n    }\n}\n\nfunction haveReducer(action: Action): boolean {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_START:\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_SUCCESS:\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_ERROR:\n        case ActionFlag.VIEW_ORG_ADD_APPS_UNLOAD:\n        case ActionFlag.VIEW_ORG_ADD_APPS_SELECT_SUCCESS:\n        case ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS:\n        case ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_SUCCESS:\n        case ActionFlag.VIEW_ORG_ADD_APPS_SORT_SUCCESS:\n            return true\n        default: return false\n    }\n}\n\nfunction localReducer(state: View<AddAppsViewModel>, action: actions.AddAppsAction): View<AddAppsViewModel> | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.VIEW_ORG_ADD_APPS_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.VIEW_ORG_ADD_APPS_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_ORG_ADD_APPS_SELECT_SUCCESS:\n            return selectSuccess(state, action as actions.SelectSuccess)\n        case ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS:\n            return requestAssociationSuccess(state, action as actions.RequestAssociationSuccess)\n        case ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_SUCCESS:\n            return searchSuccess(state, action as actions.SearchSuccess)\n        case ActionFlag.VIEW_ORG_ADD_APPS_SORT_SUCCESS:\n            return sortSuccess(state, action as actions.SortSuccess)\n        default:\n            return null\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    if (!haveReducer(action)) {\n        return null\n    }\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    const viewState: View<AddAppsViewModel> = state.views.viewOrgView.viewModel.subViews.addAppsView\n    const newViewState = localReducer(viewState, action)\n    if (newViewState === null) {\n        return null\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        addAppsView: newViewState\n                    }\n                }\n            }\n        }\n    }\n}","import { Action } from 'redux'\nimport * as actions from '../actions/viewOrg'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport acceptInboxRequest from './viewOrganization/acceptInboxRequest'\nimport viewMembers from './viewOrganization/viewMembers'\nimport denyInboxRequest from './viewOrganization/denyInboxRequest'\nimport cancelOutboxRequest from './viewOrganization/cancelOutboxRequests'\nimport manageRelatedOrganizations from './viewOrganization/manageRelatedOrganizations'\nimport relatedOrganizations from './viewOrganization/relatedOrganizations'\nimport requestAddNarrative from './viewOrganization/requestAddNarrative'\nimport addApps from './viewOrganization/addApp'\n\n\nexport function loadStart(state: types.StoreState, action: actions.LoadStart): types.StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                loadingState: types.ComponentLoadingState.LOADING,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function loadNormalSuccess(state: types.StoreState, action: actions.LoadNormalSuccess): types.StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                loadingState: types.ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    kind: types.ViewOrgViewModelKind.NORMAL,\n                    organization: action.organization,\n                    relation: action.relation,\n                    openRequest: action.openRequest,\n                    groupRequests: action.groupRequests,\n                    groupInvitations: action.groupInvitations,\n                    requestInbox: action.requestInbox,\n                    requestOutbox: action.requestOutbox,\n                    narratives: {\n                        sortBy: action.narrativesSortBy,\n                        searchBy: '',\n                        narratives: action.narratives\n                    },\n                    apps: {\n                        sortBy: '',\n                        searchBy: '',\n                        apps: action.apps\n                    },\n                    sortMembersBy: action.sortMembersBy,\n                    members: action.members,\n                    searchMembersBy: '',\n                    subViews: {\n                        manageRelatedOrganizationsView: {\n                            state: types.ViewState.NONE,\n                            viewModel: null,\n                            error: null\n                        },\n                        inviteUserView: {\n                            state: types.ViewState.NONE,\n                            viewModel: null,\n                            error: null\n                        },\n                        requestNarrativeView: {\n                            state: types.ViewState.NONE,\n                            viewModel: null,\n                            error: null\n                        },\n                        manageMembershipView: {\n                            state: types.ViewState.NONE,\n                            viewModel: null,\n                            error: null\n                        },\n                        addAppsView: {\n                            state: types.ViewState.NONE,\n                            viewModel: null,\n                            error: null\n                        }\n                    }\n                } as types.ViewOrgViewModel\n            }\n        }\n    }\n}\n\nexport function reloadNormalSuccess(state: types.StoreState, action: actions.ReloadNormalSuccess): types.StoreState {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (viewModel === null) {\n        return state\n    }\n    if (viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                loadingState: types.ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    kind: types.ViewOrgViewModelKind.NORMAL,\n                    organization: action.organization,\n                    relation: action.relation,\n                    openRequest: action.openRequest,\n                    groupRequests: action.groupRequests,\n                    groupInvitations: action.groupInvitations,\n                    requestInbox: action.requestInbox,\n                    requestOutbox: action.requestOutbox,\n                    narratives: {\n                        sortBy: action.narrativesSortBy,\n                        searchBy: '',\n                        narratives: action.narratives\n                    },\n                    apps: {\n                        ...viewModel.apps,\n                        apps: action.apps\n                    },\n                    sortMembersBy: action.sortMembersBy,\n                    members: action.members,\n                    searchMembersBy: '',\n                    subViews: {\n                        ...viewModel.subViews,\n                    }\n                } as types.ViewOrgViewModel\n            }\n        }\n    }\n}\n\nexport function loadInaccessiblePrivateSuccess(state: types.StoreState, action: actions.LoadInaccessiblePrivateSuccess): types.StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                loadingState: types.ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    kind: types.ViewOrgViewModelKind.PRIVATE_INACCESSIBLE,\n                    organization: action.organization,\n                    relation: action.relation,\n                    requestOutbox: action.requestOutbox\n                } as types.ViewInaccessiblePrivateOrgViewModel\n            }\n        }\n    }\n}\n\nexport function loadError(state: types.StoreState, action: actions.LoadError): types.StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                loadingState: types.ComponentLoadingState.ERROR,\n                error: action.error,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function unload(state: types.StoreState, action: actions.Unload): types.StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                loadingState: types.ComponentLoadingState.NONE,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function removeNarrativeSuccess(state: types.StoreState, action: actions.RemoveNarrativeSuccess): types.StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    // Argh!@\n    if (state.views.viewOrgView.viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    const narratives = state.views.viewOrgView.viewModel.organization.narratives\n    const newNarratives = narratives.filter((narrative) => {\n        return (narrative.workspaceId !== action.narrativeId)\n    })\n    const newDisplayNarratives = state.views.viewOrgView.viewModel.narratives.narratives.filter((narrative) => {\n        return (narrative.workspaceId !== action.narrativeId)\n    })\n    // const filteredSortedNarratives = \n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: {\n                        ...state.views.viewOrgView.viewModel.organization,\n                        narratives: newNarratives,\n                        narrativeCount: newNarratives.length\n                    },\n                    narratives: {\n                        ...state.views.viewOrgView.viewModel.narratives,\n                        narratives: newDisplayNarratives,\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function accessNarrativeSuccess(state: types.StoreState, action: actions.AccessNarrativeSuccess): types.StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: action.organization,\n                    narratives: {\n                        ...state.views.viewOrgView.viewModel.narratives,\n                        narratives: action.narratives\n                    }\n\n                }\n            }\n        }\n    }\n}\n\nexport function sortNarrativesSuccess(state: types.StoreState, action: actions.SortNarrativesSuccess): types.StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    narratives: {\n                        ...state.views.viewOrgView.viewModel.narratives,\n                        sortBy: action.sortBy,\n                        narratives: action.narratives\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function searchNarrativesSuccess(state: types.StoreState, action: actions.SearchNarrativesSuccess): types.StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    narratives: {\n                        ...state.views.viewOrgView.viewModel.narratives,\n                        searchBy: action.searchBy,\n                        narratives: action.narratives\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction removeAppSuccess(state: types.StoreState, action: actions.RemoveAppSuccess): types.StoreState {\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n\n    const newOrgApps = state.views.viewOrgView.viewModel.organization.apps.filter((app) => {\n        return (app.appId !== action.appId)\n    })\n\n    const newApps = state.views.viewOrgView.viewModel.apps.apps.filter((app) => {\n        return (app.appId !== action.appId)\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    organization: {\n                        ...state.views.viewOrgView.viewModel.organization,\n                        apps: newOrgApps,\n                        appCount: newOrgApps.length\n                    },\n                    apps: {\n                        ...state.views.viewOrgView.viewModel.apps,\n                        apps: newApps\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nexport default function reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.VIEW_ORG_LOAD_NORMAL_SUCCESS:\n            return loadNormalSuccess(state, action as actions.LoadNormalSuccess)\n        case ActionFlag.VIEW_ORG_RELOAD_NORMAL_SUCCESS:\n            return reloadNormalSuccess(state, action as actions.ReloadNormalSuccess)\n        case ActionFlag.VIEW_ORG_LOAD_INACCESSIBLE_PRIVATE_SUCCESS:\n            return loadInaccessiblePrivateSuccess(state, action as actions.LoadInaccessiblePrivateSuccess)\n        case ActionFlag.VIEW_ORG_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.VIEW_ORG_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_SUCCESS:\n            return removeNarrativeSuccess(state, action as actions.RemoveNarrativeSuccess)\n        case ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_SUCCESS:\n            return accessNarrativeSuccess(state, action as actions.AccessNarrativeSuccess)\n        case ActionFlag.VIEW_ORG_SORT_NARRATIVES_SUCCESS:\n            return sortNarrativesSuccess(state, action as actions.SortNarrativesSuccess)\n        case ActionFlag.VIEW_ORG_SEARCH_NARRATIVES_SUCCESS:\n            return searchNarrativesSuccess(state, action as actions.SearchNarrativesSuccess)\n        case ActionFlag.VIEW_ORG_REMOVE_APP_SUCCESS:\n            return removeAppSuccess(state, action as actions.RemoveAppSuccess)\n    }\n\n    return acceptInboxRequest(state, action) ||\n        denyInboxRequest(state, action) ||\n        cancelOutboxRequest(state, action) ||\n        viewMembers(state, action) ||\n        manageRelatedOrganizations(state, action) ||\n        relatedOrganizations(state, action) ||\n        relatedOrganizations(state, action) ||\n        addApps(state, action)\n}\n\n","import { Action } from 'redux'\nimport * as actions from '../actions/browseOrgs'\nimport { StoreState, SortDirection, ComponentLoadingState, BrowseOrgsView } from '../../types'\nimport { ActionFlag } from '../actions'\nimport * as orgModel from '../../data/models/organization/model'\n\nexport function applyOrgSearch(orgs: Array<orgModel.Organization>, searchTerms: Array<string>) {\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTerms.every((term) => {\n            // todo : make more efficient!!!\n            return (new RegExp(term, 'i').test(org.name));\n        })\n    })\n\n    return {\n        organizations: filteredOrgs,\n        totalCount: orgs.length,\n        filteredCount: filteredOrgs.length\n    }\n}\n\n// TODO:\n// dispatch the start of the request\n// do the request\n// dispatch the success (will be same for all queries?)\n// dispatch the error\n// FOR NOW:\n// do it here...\nexport function searchOrgs(state: BrowseOrgsView, action: actions.SearchOrgs): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n\n    // const { viewModel: { filter, sortBy, sortDirection } } = state\n\n    // const query: Query = {\n    //     searchTerms: action.searchTerms,\n    //     filter: filter,\n    //     sortBy: sortBy,\n    //     sortDirection: sortDirection,\n    //     username: state.auth.authorization.username\n    // }\n    // const result = queryOrgs(state.rawOrganizations, query)\n    // rawOrganizations: Array<Organization>\n    // organizations: Array<Organization>\n    // totalCount: number\n    // filteredCount: number\n    // sortBy: string\n    // sortDirection: SortDirection\n    // filter: string\n    // searchTerms: Array<string>\n    // selectedOrganizationId: string | null\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            selectedOrganizationId: null,\n            searchTerms: action.searchTerms,\n            searching: true\n        }\n    }\n}\n\nexport function searchOrgsStart(state: BrowseOrgsView, action: actions.SearchOrgsStart): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            searchTerms: action.searchTerms,\n            searching: true\n        }\n    }\n}\n\nexport function searchOrgsSuccess(state: BrowseOrgsView, action: actions.SearchOrgsSuccess): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            organizations: action.organizations,\n            openRequests: action.openRequests,\n            totalCount: action.totalCount,\n            filteredCount: action.organizations.length,\n            searching: false\n        }\n    }\n}\n\n// TODO: hmm, uses the global error -- this was early in the development of this (a whole two weeks ago!)\n// and this should now go in the \"browseOrgs\" (or better named \"searchOrgs\") branch.\nexport function searchOrgsError(state: BrowseOrgsView, action: actions.SearchOrgsError): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            searching: false,\n            error: action.error\n        }\n    }\n}\n\n\nexport function sortOrgsStart(state: BrowseOrgsView, action: actions.SortOrgsStart): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            sortField: action.sortField,\n            sortDirection: action.sortDirection,\n            searching: true\n        }\n    }\n}\n\n\ninterface Query {\n    searchTerms: Array<string>,\n    username: string,\n    sortField: string,\n    sortDirection: SortDirection,\n    filter: string\n}\n\ninterface QueryResults {\n    organizations: Array<orgModel.Organization>,\n    total: number\n}\n\nfunction filterOrgsStart(state: BrowseOrgsView, action: actions.FilterOrgsStart): BrowseOrgsView {\n    if (state.viewModel === null) {\n        console.warn('Cannot start browseOrgs view')\n        return state\n    }\n\n    const { filter } = action\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            filter,\n            searching: true\n        }\n    }\n}\n\nfunction loadSuccess(state: BrowseOrgsView, action: actions.LoadSuccess): BrowseOrgsView {\n    const { defaultViewModel: {\n        rawOrganizations, organizations, openRequests, searchTerms, sortField, sortDirection, filter,\n        totalCount, filteredCount, selectedOrganizationId, error, searching\n    } } = action\n\n    return {\n        ...state,\n        loadingState: ComponentLoadingState.SUCCESS,\n        error: null,\n        viewModel: {\n            rawOrganizations, organizations, openRequests, searchTerms, sortField, sortDirection, filter,\n            totalCount, filteredCount, selectedOrganizationId, error, searching\n        }\n    }\n}\n\nfunction unload(state: BrowseOrgsView, action: actions.Unload): BrowseOrgsView {\n    return {\n        loadingState: ComponentLoadingState.NONE,\n        error: null,\n        viewModel: null\n    }\n}\n\nfunction localReducer(state: BrowseOrgsView, action: Action): BrowseOrgsView | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.BROWSE_ORGS_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.BROWSE_ORGS_SEARCH:\n            return searchOrgs(state, action as actions.SearchOrgs)\n        case ActionFlag.BROWSE_ORGS_SEARCH_START:\n            return searchOrgsStart(state, action as actions.SearchOrgsStart)\n        case ActionFlag.BROWSE_ORGS_SEARCH_SUCCESS:\n            return searchOrgsSuccess(state, action as actions.SearchOrgsSuccess)\n        case ActionFlag.BROWSE_ORGS_SEARCH_ERROR:\n            return searchOrgsError(state, action as actions.SearchOrgsError)\n        // case ActionFlag.SORT_ORGS_STAR:\n        //     return sortOrgs(state, action as actions.SortOrgs)\n        case ActionFlag.BROWSE_ORGS_SORT_START:\n            return sortOrgsStart(state, action as actions.SortOrgsStart)\n        case ActionFlag.BROWSE_ORGS_FILTER_START:\n            return filterOrgsStart(state, action as actions.FilterOrgsStart)\n        case ActionFlag.BROWSE_ORGS_UNLOAD:\n            return unload(state, action as actions.Unload)\n        default:\n            return null\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action<any>): StoreState | null {\n    const browseOrgsView = localReducer(state.views.browseOrgsView, action)\n    if (!browseOrgsView) {\n        return null\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            browseOrgsView\n        }\n    }\n}\n","import { Action } from 'redux'\n\nimport { ActionFlag } from '../actions'\nimport { StoreState, AuthState } from '../../types'\nimport { AuthCheckStart, AuthAuthorized, AuthUnauthorized, AuthCheckError } from '../actions/auth';\n\nexport function authCheckStart(state: StoreState, action: AuthCheckStart): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.CHECKING,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authCheckError(state: StoreState, action: AuthCheckError): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.ERROR,\n            message: action.error.message,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authAuthorized(state: StoreState, action: AuthAuthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.AUTHORIZED,\n            message: '',\n            authorization: {\n                token: action.token,\n                username: action.username,\n                realname: action.realname,\n                roles: action.roles\n            }\n        }\n    }\n}\n\nexport function authUnauthorized(state: StoreState, action: AuthUnauthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.UNAUTHORIZED,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.AUTH_CHECK_START:\n            return authCheckStart(state, action as AuthCheckStart)\n        case ActionFlag.AUTH_AUTHORIZED:\n            return authAuthorized(state, action as AuthAuthorized)\n        case ActionFlag.AUTH_UNAUTHORIZED:\n            return authUnauthorized(state, action as AuthUnauthorized)\n        case ActionFlag.AUTH_CHECK_ERROR:\n            return authCheckError(state, action as AuthCheckError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { ActionFlag } from '../actions'\nimport { AppSuccess } from '../actions/app';\nimport { StoreState, AppState } from '../../types';\n\nexport function appSuccess(state: StoreState, action: AppSuccess): StoreState {\n    return {\n        ...state,\n        app: {\n            status: AppState.READY,\n            config: action.config\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.APP_SUCCESS:\n            return appSuccess(state, action as AppSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/manageOrganizationRequests'\nimport { StoreState, ComponentLoadingState } from '../../types'\nimport { ActionFlag } from '../actions'\n\nexport function loadStart(\n    state: StoreState,\n    action: actions.LoadStart): StoreState {\n    return state\n}\n\nexport function loadSuccess(\n    state: StoreState,\n    action: actions.LoadSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            manageOrganizationRequestsView: {\n                loadingState: ComponentLoadingState.SUCCESS,\n                error: null,\n                viewModel: {\n                    organization: action.organization,\n                    requests: action.requests,\n                    invitations: action.invitations\n                },\n            }\n        }\n    }\n}\n\nexport function loadError(\n    state: StoreState,\n    action: actions.LoadError): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            manageOrganizationRequestsView: {\n                loadingState: ComponentLoadingState.ERROR,\n                error: action.error,\n                viewModel: null\n            }\n        }\n\n    }\n}\n\nexport function unload(state: StoreState, action: actions.Unload): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            manageOrganizationRequestsView: {\n                loadingState: ComponentLoadingState.NONE,\n                error: null,\n                viewModel: null\n            }\n        }\n    }\n}\n\nexport function getViewAccessSuccess(state: StoreState, action: actions.GetViewAccessSuccess): StoreState {\n    // Note: we use the state object rather than peeling off the viewModel because\n    // TS can't trace the assertion (not falsy) of the variable back to the object \n    // property it was taken from.\n    if (!state.views.manageOrganizationRequestsView.viewModel) {\n        return state\n    }\n    const requests = state.views.manageOrganizationRequestsView.viewModel.requests\n    const newRequests = requests.map((request) => {\n        if (request.id = action.request.id) {\n            return action.request\n        }\n        return request\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            manageOrganizationRequestsView: {\n                ...state.views.manageOrganizationRequestsView,\n                viewModel: {\n                    // TODO: below, \n                    ...state.views.manageOrganizationRequestsView.viewModel,\n                    requests: newRequests\n                }\n            }\n        }\n    }\n}\n\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_GET_VIEW_ACCESS_SUCCESS:\n            return getViewAccessSuccess(state, action as actions.GetViewAccessSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/viewMembers'\nimport { StoreState, ComponentLoadingState, MemberType } from '../../types'\nimport { ActionFlag } from '../actions'\n\nexport function loadStart(state: StoreState, action: actions.LoadStart) {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                loadingState: ComponentLoadingState.LOADING,\n                viewModel: null,\n                error: null\n            }\n        }\n    }\n}\n\nexport function unload(state: StoreState, action: actions.Unload): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                loadingState: ComponentLoadingState.NONE,\n                viewModel: null,\n                error: null\n            }\n        }\n    }\n}\n\nexport function loadSuccess(state: StoreState, action: actions.LoadSuccess): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                loadingState: ComponentLoadingState.SUCCESS,\n                viewModel: {\n                    organization: action.organization,\n                    relation: action.relation\n                },\n                error: null\n            }\n        }\n    }\n}\n\nexport function loadError(state: StoreState, action: actions.LoadError): StoreState {\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                loadingState: ComponentLoadingState.ERROR,\n                viewModel: null,\n                error: action.error\n            }\n        }\n    }\n}\n\nexport function promoteToAdminSuccess(state: StoreState, action: actions.PromoteToAdminSuccess): StoreState {\n    if (state.views.viewMembersView.viewModel === null) {\n        return state\n    }\n\n    const {\n        views: { viewMembersView: { viewModel } }\n    } = state\n\n    // TODO: probably better is to have to have the action handler do a call to get the members\n    // and to populate the orgs membership struct from that...\n    const members = viewModel.organization.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            member.type = MemberType.ADMIN\n            return member\n        } else {\n            return member\n        }\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                viewModel: {\n                    ...state.views.viewMembersView.viewModel,\n                    organization: {\n                        ...state.views.viewMembersView.viewModel!.organization,\n                        members: members\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function demoteToMemberSuccess(state: StoreState, action: actions.DemoteToMemberSuccess): StoreState {\n    if (state.views.viewMembersView.viewModel === null) {\n        return state\n    }\n\n    const {\n        views: { viewMembersView: { viewModel } }\n    } = state\n\n    // TODO: probably better is to have to have the action handler do a call to get the members\n    // and to populate the orgs membership struct from that...\n    const members = viewModel.organization.members.map((member) => {\n        if (member.username === action.memberUsername) {\n            member.type = MemberType.MEMBER\n            return member\n        } else {\n            return member\n        }\n    })\n\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewMembersView: {\n                ...state.views.viewMembersView,\n                viewModel: {\n                    ...state.views.viewMembersView.viewModel,\n                    organization: {\n                        ...state.views.viewMembersView.viewModel!.organization,\n                        members: members\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_MEMBERS_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.VIEW_MEMBERS_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.VIEW_MEMBERS_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.VIEW_MEMBERS_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS:\n            return promoteToAdminSuccess(state, action as actions.PromoteToAdminSuccess)\n        case ActionFlag.VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS:\n            return demoteToMemberSuccess(state, action as actions.DemoteToMemberSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/inviteUser'\nimport {\n    StoreState, InviteUserViewModel, ViewState,\n    View, InviteUserViewState\n} from '../../../types'\nimport { ActionFlag } from '../../actions'\nimport * as orgModel from '../../../data/models/organization/model'\nimport { ViewOrgViewModelKind } from '../../../types';\n\nexport function loadStart(state: View<InviteUserViewModel>, action: actions.LoadStart): View<InviteUserViewModel> {\n    return {\n        state: ViewState.LOADING,\n        viewModel: null,\n        error: null\n    }\n}\n\nexport function loadSuccess(state: View<InviteUserViewModel>, action: actions.LoadSuccess): View<InviteUserViewModel> {\n    return {\n        state: ViewState.OK,\n        error: null,\n        viewModel: {\n            editState: InviteUserViewState.EDITING,\n            users: action.users,\n            organization: action.organization,\n            selectedUser: null\n        }\n    }\n}\n\nexport function loadError(state: View<InviteUserViewModel>, action: actions.LoadError): View<InviteUserViewModel> {\n    return {\n        state: ViewState.ERROR,\n        error: action.error,\n        viewModel: null\n    }\n}\n\nexport function unload(state: View<InviteUserViewModel>, action: actions.Unload): View<InviteUserViewModel> {\n    return {\n\n        state: ViewState.NONE,\n        error: null,\n        viewModel: null\n    }\n}\n\nexport function searchUsersSuccess(state: View<InviteUserViewModel>, action: actions.SearchUsersSuccess): View<InviteUserViewModel> {\n    // TODO: better guards!\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            users: action.users\n        }\n    }\n}\n\nexport function selectUserSuccess(state: View<InviteUserViewModel>, action: actions.SelectUserSuccess): View<InviteUserViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            selectedUser: {\n                user: action.user,\n                relation: action.relation\n            }\n        }\n    }\n}\n\nexport function sendInvitationStart(state: View<InviteUserViewModel>, action: actions.SendInvitationStart): View<InviteUserViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            editState: InviteUserViewState.SENDING\n        }\n    }\n}\n\nexport function sendInvitationSuccess(state: View<InviteUserViewModel>, action: actions.SendInvitationSuccess): View<InviteUserViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const { viewModel: { selectedUser, users } } = state\n\n    // const selectedUser = state.inviteUserView.value.selectedUser\n    if (!selectedUser) {\n        throw new Error('selected user is null')\n    }\n    selectedUser.relation = orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING\n\n    if (!users) {\n        throw new Error('users is null')\n    }\n    const newUsers = users.map((user) => {\n        if (user.username === selectedUser.user.username) {\n            user.relation = orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING\n        }\n        return user\n    })\n\n    return {\n        ...state,\n\n        viewModel: {\n            ...state.viewModel,\n            editState: InviteUserViewState.SUCCESS,\n            selectedUser: selectedUser,\n            users: newUsers\n        }\n    }\n}\n\nexport function sendInvitationError(state: View<InviteUserViewModel>, action: actions.SendInvitationError): View<InviteUserViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            editState: InviteUserViewState.ERROR\n        }\n    }\n}\n\nfunction localReducer(state: View<InviteUserViewModel>, action: Action): View<InviteUserViewModel> | null {\n    switch (action.type) {\n        case ActionFlag.INVITE_USER_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.INVITE_USER_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.INVITE_USER_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.INVITE_USER_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.INVITE_USER_SEARCH_USERS_SUCCESS:\n            return searchUsersSuccess(state, action as actions.SearchUsersSuccess)\n        case ActionFlag.INVITE_USER_SELECT_USER_SUCCESS:\n            return selectUserSuccess(state, action as actions.SelectUserSuccess)\n        case ActionFlag.INVITE_USER_SEND_INVITATION_START:\n            return sendInvitationStart(state, action as actions.SendInvitationStart)\n        case ActionFlag.INVITE_USER_SEND_INVITATION_SUCCESS:\n            return sendInvitationSuccess(state, action as actions.SendInvitationSuccess)\n        case ActionFlag.INVITE_USER_SEND_INVITATION_ERROR:\n            return sendInvitationError(state, action as actions.SendInvitationError)\n        default:\n            return null\n    }\n}\n\nfunction haveReducer(action: Action): boolean {\n    switch (action.type) {\n        case ActionFlag.INVITE_USER_LOAD_START:\n        case ActionFlag.INVITE_USER_LOAD_SUCCESS:\n        case ActionFlag.INVITE_USER_LOAD_ERROR:\n        case ActionFlag.INVITE_USER_UNLOAD:\n        case ActionFlag.INVITE_USER_SEARCH_USERS_SUCCESS:\n        case ActionFlag.INVITE_USER_SELECT_USER_SUCCESS:\n        case ActionFlag.INVITE_USER_SEND_INVITATION_START:\n        case ActionFlag.INVITE_USER_SEND_INVITATION_SUCCESS:\n        case ActionFlag.INVITE_USER_SEND_INVITATION_ERROR:\n            return true\n        default:\n            return false\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    if (!haveReducer(action)) {\n        return null\n    }\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    const viewState: View<InviteUserViewModel> = state.views.viewOrgView.viewModel.subViews.inviteUserView\n    const newViewState = localReducer(viewState, action)\n    if (newViewState === null) {\n        return null\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        inviteUserView: newViewState\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/manageMembership'\nimport { StoreState, ComponentLoadingState, SyncState, ValidationStateOk, ValidationState, ValidationErrorType, SaveState, EditState, ManageMembershipViewModel, ViewOrgViewModelKind, View, ViewState } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\nexport function loadStart(state: View<ManageMembershipViewModel>, action: actions.LoadStart): View<ManageMembershipViewModel> {\n    return {\n        ...state,\n        state: ViewState.LOADING,\n        error: null,\n        viewModel: null\n    }\n}\n\nexport function loadSuccess(state: View<ManageMembershipViewModel>, action: actions.LoadSuccess): View<ManageMembershipViewModel> {\n    return {\n        ...state,\n        state: ViewState.OK,\n        error: null,\n        viewModel: {\n            organization: action.organization,\n            editableMemberProfile: action.editableMemberProfile,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.NEW,\n            validationState: validationStateOk()\n        }\n    }\n}\n\nexport function loadError(state: View<ManageMembershipViewModel>, action: actions.LoadError): View<ManageMembershipViewModel> {\n    return {\n        state: ViewState.ERROR,\n        error: action.error,\n        viewModel: null\n    }\n}\n\nexport function unload(state: View<ManageMembershipViewModel>, action: actions.Unload): View<ManageMembershipViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    return {\n        ...state,\n        state: ViewState.NONE,\n        error: null,\n        viewModel: null\n    }\n}\n\nfunction validationStateOk(): ValidationStateOk {\n    const x: ValidationState = {\n        type: ValidationErrorType.OK,\n        validatedAt: new Date()\n    }\n    return x\n}\n\nexport function updateTitleSuccess(state: View<ManageMembershipViewModel>, action: actions.UpdateTitleSuccess): View<ManageMembershipViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const editedMember = state.viewModel.editableMemberProfile\n    let syncState\n    if (action.title !== editedMember.title.remoteValue) {\n        syncState = SyncState.DIRTY\n    } else {\n        syncState = SyncState.CLEAN\n    }\n    const newState = {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            editableMemberProfile: {\n                ...state.viewModel.editableMemberProfile,\n                title: {\n                    value: action.title,\n                    remoteValue: action.title,\n                    syncState: syncState,\n                    validationState: validationStateOk()\n                }\n            }\n        }\n    }\n\n    const editState = evaluateEditorState(newState.viewModel)\n\n    return {\n        ...newState,\n        viewModel: {\n            ...newState.viewModel,\n            editState: editState\n        }\n    }\n}\nfunction evaluateEditorState(viewModel: ManageMembershipViewModel): EditState {\n    if (viewModel.editableMemberProfile.title.syncState === SyncState.DIRTY) {\n        return EditState.EDITED\n    }\n\n    return EditState.UNEDITED\n}\n\nfunction evaluateSuccess(state: View<ManageMembershipViewModel>, action: actions.EvaluateSuccess): View<ManageMembershipViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const editState = evaluateEditorState(state.viewModel)\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            editState: editState,\n            validationState: {\n                type: ValidationErrorType.OK,\n                validatedAt: new Date()\n            }\n        }\n    }\n}\n\nfunction evaluateError(state: View<ManageMembershipViewModel>, action: actions.EvaluateError): View<ManageMembershipViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            validationState: {\n                type: ValidationErrorType.ERROR,\n                message: 'Validation error(s)',\n                validatedAt: new Date()\n            }\n        }\n    }\n}\n\nexport function saveSuccess(state: View<ManageMembershipViewModel>, action: actions.SaveSuccess): View<ManageMembershipViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED,\n            editableMemberProfile: {\n                ...state.viewModel.editableMemberProfile,\n                title: {\n                    ...state.viewModel.editableMemberProfile.title,\n                    syncState: SyncState.CLEAN\n                }\n            }\n        }\n    }\n}\n\n\n// export function demoteSelfToMemberSuccess(state: View<ManageMembershipViewModel>, action: actions.DemoteSelfToMemberSuccess): View<ManageMembershipViewModel> {\n//     if (!state.views.manageMembershipView.viewModel) {\n//         return state\n//     }\n\n//     const {\n//         views: { viewOrgView: { viewModel } }\n//     } = state\n\n//     if (viewModel === null) {\n//         return state\n//     }\n\n//     // TODO: ugh, cut this off before getting here.\n//     if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n//         return state\n//     }\n\n//     // TODO: probably better is to have to have the action handler do a call to get the members\n//     // and to populate the orgs membership struct from that...\n//     const members = viewModel.organization.members.map((member) => {\n//         if (member.username === action.memberUsername) {\n//             return {\n//                 ...member,\n//                 type: MemberType.MEMBER\n//             }\n//         } else {\n//             return member\n//         }\n//     })\n\n//     const sortedMembers = viewModel.members.map((member) => {\n//         if (member.username === action.memberUsername) {\n//             return {\n//                 ...member,\n//                 type: MemberType.MEMBER\n//             }\n//         } else {\n//             return member\n//         }\n//     })\n\n//     return {\n//         ...state,\n//         views: {\n//             ...state.views,\n//             viewOrgView: {\n//                 ...state.views.viewOrgView,\n//                 viewModel: {\n//                     ...viewModel,\n//                     organization: {\n//                         ...viewModel.organization,\n//                         members: members\n//                     },\n//                     members: sortedMembers\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// function reducer(state: StoreState, action: Action): StoreState | null {\n//     switch (action.type) {\n//         case ActionFlag.MANAGE_MEMBERSHIP_LOAD_START:\n//             return loadStart(state, action as actions.LoadStart)\n//         case ActionFlag.MANAGE_MEMBERSHIP_LOAD_SUCCESS:\n//             return loadSuccess(state, action as actions.LoadSuccess)\n//         case ActionFlag.MANAGE_MEMBERSHIP_LOAD_ERROR:\n//             return loadError(state, action as actions.LoadError)\n//         case ActionFlag.MANAGE_MEMBERSHIP_UNLOAD:\n//             return unload(state, action as actions.Unload)\n//         case ActionFlag.MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS:\n//             return updateTitleSuccess(state, action as actions.UpdateTitleSuccess)\n//         case ActionFlag.MANAGE_MEMBERSHIP_EVALUATE_SUCCESS:\n//             return evaluateSuccess(state, action as actions.EvaluateSuccess)\n//         case ActionFlag.MANAGE_MEMBERSHIP_EVALUATE_ERROR:\n//             return evaluateError(state, action as actions.EvaluateError)\n//         case ActionFlag.MANAGE_MEMBERSHIP_SAVE_SUCCESS:\n//             return saveSuccess(state, action as actions.SaveSuccess)\n//         // case ActionFlag.MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS:\n//         //     return demoteSelfToMemberSuccess(state, action as actions.DemoteSelfToMemberSuccess)\n//         default:\n//             return null\n//     }\n// }\n\nfunction localReducer(state: View<ManageMembershipViewModel>, action: Action): View<ManageMembershipViewModel> | null {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS:\n            return updateTitleSuccess(state, action as actions.UpdateTitleSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS:\n            return evaluateSuccess(state, action as actions.EvaluateSuccess)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR:\n            return evaluateError(state, action as actions.EvaluateError)\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS:\n            return saveSuccess(state, action as actions.SaveSuccess)\n        // case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS:\n        //     return demoteSelfToMemberSuccess(state, action as actions.DemoteSelfToMemberSuccess)\n        default:\n            return null\n    }\n}\n\nfunction haveReducer(action: Action): boolean {\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR:\n        case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS:\n            // case ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS:\n            return true\n        default:\n            return false\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    if (!haveReducer(action)) {\n        return null\n    }\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    const viewState: View<ManageMembershipViewModel> = state.views.viewOrgView.viewModel.subViews.manageMembershipView\n    const newViewState = localReducer(viewState, action)\n    if (newViewState === null) {\n        return null\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        manageMembershipView: newViewState\n                    }\n                }\n            }\n        }\n    }\n}\n\n","import { Action } from 'redux'\nimport * as actions from '../../actions/viewOrganization/requestAddNarrative'\nimport {\n    StoreState, SaveState, NarrativeState, View,\n    RequestNarrativeViewModel, ViewOrgViewModelKind,\n    ViewState,\n    SelectionState\n} from '../../../types'\nimport { ActionFlag } from '../../actions'\n\nexport function loadStart(state: View<RequestNarrativeViewModel>, action: actions.LoadStart): View<RequestNarrativeViewModel> {\n    return {\n\n        state: ViewState.LOADING,\n        error: null,\n        viewModel: null\n    }\n\n}\n\nexport function loadSuccess(state: View<RequestNarrativeViewModel>, action: actions.LoadSuccess): View<RequestNarrativeViewModel> {\n    return {\n        state: ViewState.OK,\n        error: null,\n        viewModel: {\n            organization: action.organization,\n            narratives: action.narratives,\n            selectedNarrative: null,\n            relation: action.relation,\n            error: null,\n            selectionState: SelectionState.NONE,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function loadError(state: View<RequestNarrativeViewModel>, action: actions.LoadError): View<RequestNarrativeViewModel> {\n    return {\n        state: ViewState.ERROR,\n        error: action.error,\n        viewModel: null\n    }\n}\n\nexport function sendRequestStart(state: View<RequestNarrativeViewModel>, action: actions.SendRequestStart): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function sendRequestSuccess(state: View<RequestNarrativeViewModel>, action: actions.SendRequestSuccess): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n\n    const newState: View<RequestNarrativeViewModel> = {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            saveState: SaveState.SAVED\n        }\n    }\n\n    const viewModel = newState.viewModel\n\n    // hmm, TS can't trace this fact from the original state (which we proved\n    // at the top of this function.)\n    if (!viewModel) {\n        throw new Error('view model missing')\n    }\n\n    const selectedNarrative = viewModel.selectedNarrative\n\n    // If the request is by an admin, it will be returned as true, not the request\n    // (the api returns {complete: true})\n    if (action.request === true) {\n        viewModel.narratives = viewModel.narratives.map((orgNarrative) => {\n            if (orgNarrative.narrative.workspaceId === selectedNarrative!.narrative.workspaceId) {\n                orgNarrative.status = NarrativeState.ASSOCIATED\n            }\n            return orgNarrative\n        })\n    } else {\n        viewModel.narratives = viewModel.narratives.map((orgNarrative) => {\n            if (orgNarrative.narrative.workspaceId === selectedNarrative!.narrative.workspaceId) {\n                orgNarrative.status = NarrativeState.REQUESTED\n            }\n            return orgNarrative\n        })\n    }\n\n    return newState\n}\n\nexport function sendRequestError(state: View<RequestNarrativeViewModel>, action: actions.SendRequestError): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function selectNarrativeStart(state: View<RequestNarrativeViewModel>, action: actions.SelectNarrativeStart): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        error: null,\n        viewModel: {\n            ...state.viewModel\n        }\n    }\n}\n\nexport function selectNarrativeSuccess(state: View<RequestNarrativeViewModel>, action: actions.SelectNarrativeSuccess): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    const newState = {\n        ...state,\n        error: null,\n        viewModel: {\n            ...state.viewModel,\n            selectedNarrative: action.narrative\n        }\n    }\n    return newState\n}\n\nexport function unload(state: View<RequestNarrativeViewModel>, action: actions.Unload): View<RequestNarrativeViewModel> {\n    return {\n        state: ViewState.NONE,\n        error: null,\n        viewModel: null\n    }\n}\n\nfunction sortSuccess(state: View<RequestNarrativeViewModel>, action: actions.SortSuccess): View<RequestNarrativeViewModel> {\n    if (state.viewModel === null) {\n        return state\n    }\n    return {\n        ...state,\n        viewModel: {\n            ...state.viewModel,\n            narratives: action.narratives\n        }\n    }\n}\n\nfunction localReducer(state: View<RequestNarrativeViewModel>, action: Action): View<RequestNarrativeViewModel> | null {\n    switch (action.type) {\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_START:\n            return loadStart(state, action as actions.LoadStart)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR:\n            return loadError(state, action as actions.LoadError)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SEND_START:\n            return sendRequestStart(state, action as actions.SendRequestStart)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SEND_SUCCESS:\n            return sendRequestSuccess(state, action as actions.SendRequestSuccess)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR:\n            return sendRequestStart(state, action as actions.SendRequestStart)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_START:\n            return selectNarrativeStart(state, action as actions.SelectNarrativeStart)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS:\n            return selectNarrativeSuccess(state, action as actions.SelectNarrativeSuccess)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_UNLOAD:\n            return unload(state, action as actions.Unload)\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SORT_SUCCESS:\n            return sortSuccess(state, action as actions.SortSuccess)\n        default:\n            return null\n    }\n}\n\nfunction haveReducer(action: Action): boolean {\n    switch (action.type) {\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_START:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_SUCCESS:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SEND_START:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SEND_SUCCESS:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_UNLOAD:\n        case ActionFlag.REQUEST_ADD_NARRATIVE_SORT_SUCCESS:\n            return true\n        default:\n            return false\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    if (!haveReducer(action)) {\n        return null\n    }\n    if (!state.views.viewOrgView.viewModel) {\n        return state\n    }\n    if (state.views.viewOrgView.viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        return state\n    }\n    const viewState: View<RequestNarrativeViewModel> = state.views.viewOrgView.viewModel.subViews.requestNarrativeView\n    const newViewState = localReducer(viewState, action)\n    if (newViewState === null) {\n        return null\n    }\n    return {\n        ...state,\n        views: {\n            ...state.views,\n            viewOrgView: {\n                ...state.views.viewOrgView,\n                viewModel: {\n                    ...state.views.viewOrgView.viewModel,\n                    subViews: {\n                        ...state.views.viewOrgView.viewModel.subViews,\n                        requestNarrativeView: newViewState\n                    }\n                }\n            }\n        }\n    }\n}\n\n","import * as actions from '../../actions/entities/organization'\nimport { StoreState } from '../../../types'\nimport { ActionFlag } from '../../actions'\n\nfunction loadSuccess(state: StoreState, action: actions.LoadSuccess) {\n    const newOrgs = new Map(state.entities.organizations.byId)\n    newOrgs.set(action.organization.id, action.organization)\n\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            organizations: {\n                ...state.entities.organizations.byId,\n                byId: newOrgs\n            }\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: actions.OrganizationEntityAction): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.ENTITY_ORGANIZATION_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        default:\n            return null\n    }\n}\n","\nimport * as actions from '../actions/entities'\nimport { StoreState } from '../../types'\nimport { ActionFlag } from '../actions'\nimport organizationsReducer from './entities/organization'\n\nfunction userLoaderSuccess(state: StoreState, action: actions.UserLoaderSuccess) {\n    const users = state.entities.users\n    // mutation ... horrible ;)\n    users.byId.set(action.user.username, action.user)\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            users: {\n                ...state.entities.users,\n                byId: new Map(users.byId)\n            }\n        }\n    }\n}\n\nfunction organizationLoaderSuccess(state: StoreState, action: actions.OrganizationLoaderSuccess) {\n    const orgsMap = state.entities.orgs.byId\n    orgsMap.set(action.organization.id, action.organization)\n\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            orgs: {\n                ...state.entities.orgs,\n                byId: new Map(orgsMap)\n            }\n        }\n    }\n}\n\nfunction loadNarrativeSuccess(state: StoreState, action: actions.LoadNarrativeSuccess): StoreState {\n    const narratives = state.entities.narratives\n    narratives.byId.set(action.narrative.workspaceId, action.narrative)\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            narratives: {\n                ...state.entities.narratives,\n                byId: new Map(narratives.byId)\n            }\n        }\n    }\n}\n\nfunction loadAppSuccess(state: StoreState, action: actions.LoadAppSuccess): StoreState {\n    const apps = state.entities.apps\n    apps.byId.set(action.app.id, action.app)\n    return {\n        ...state,\n        entities: {\n            ...state.entities,\n            apps: {\n                ...state.entities.narratives,\n                byId: new Map(apps.byId)\n            }\n        }\n    }\n}\n\n// TODO: start and error\n\nexport default function reducer(state: StoreState, action: actions.EntityAction): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.ENTITY_USER_LOADER_SUCCESS:\n            return userLoaderSuccess(state, action as actions.UserLoaderSuccess)\n        case ActionFlag.ENTITY_ORGANIZATION_LOADER_SUCCESS:\n            return organizationLoaderSuccess(state, action as actions.OrganizationLoaderSuccess)\n        case ActionFlag.ENTITY_NARRATIVE_LOAD_SUCCESS:\n            return loadNarrativeSuccess(state, action as actions.LoadNarrativeSuccess)\n        case ActionFlag.ENTITY_LOAD_APP_SUCCESS:\n            return loadAppSuccess(state, action as actions.LoadAppSuccess)\n    }\n\n    return organizationsReducer(state, action)\n}\n","import { Action } from 'redux'\nimport * as actions from '../actions/dataServices'\nimport { StoreState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport * as userProfileModel from '../../data/models/profile'\n\nfunction loadSuccess(state: StoreState, action: actions.LoadSuccess): StoreState {\n    return {\n        ...state,\n        db: {\n            ...state.db,\n        }\n    }\n}\n\nexport default function reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.DATA_SERVICE_LOAD_SUCCESS:\n            return loadSuccess(state, action as actions.LoadSuccess)\n        default:\n            return null\n    }\n}","import { Action } from 'redux'\nimport { StoreState } from '../../types'\nimport addOrgReducer from './addOrg'\nimport editOrgReducer from './editOrg'\nimport viewOrgReducer from './viewOrg'\nimport browseOrgsReducer from './browseOrgs'\nimport authReducer from './auth'\nimport appReducer from './app'\nimport manageOrganizatiopRequests from './manageOrganizationRequests'\nimport viewMembers from './viewMembers'\nimport inviteUser from './viewOrganization/inviteUser'\nimport manageMembership from './viewOrganization/manageMembership'\nimport requestAddNarrative from './viewOrganization/requestAddNarrative'\nimport entities from './entities'\nimport dataServices from './dataServices'\n\n\nexport function reducer(state: StoreState, action: Action): StoreState {\n    return addOrgReducer(state, action) ||\n        editOrgReducer(state, action) ||\n        browseOrgsReducer(state, action) ||\n        viewOrgReducer(state, action) ||\n        authReducer(state, action) ||\n        appReducer(state, action) ||\n        manageOrganizatiopRequests(state, action) ||\n        viewMembers(state, action) ||\n        inviteUser(state, action) ||\n        manageMembership(state, action) ||\n        requestAddNarrative(state, action) ||\n        entities(state, action) ||\n        dataServices(state, action) ||\n        state;\n}\n\nexport default reducer","import * as React from 'react'\nimport './Owner.css'\n\nimport Avatar from './Avatar'\nimport { Icon, Tooltip } from 'antd';\nimport * as userModel from '../../data/models/user'\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\nexport interface OwnerProps {\n    user: userModel.User\n    avatarSize?: number\n    showAvatar: boolean\n}\n\ninterface OwnerState {\n    view: View\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\nexport default class Owner extends React.Component<OwnerProps, OwnerState> {\n    constructor(props: OwnerProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderRole() {\n        return (\n            <span>\n                <Icon type=\"crown\" /> owner\n        </span>\n        )\n    }\n\n    renderAvatar() {\n        if (this.props.showAvatar) {\n            return (\n                <div className=\"Owner-avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n            )\n        }\n    }\n\n    renderCompact() {\n        const tooltip = (\n            <div>\n                <div>\n                    {this.props.user.realname}\n                </div>\n                <div>\n                    <span><Avatar user={this.props.user} size={20} /></span>\n                    {' '}\n                    <span>{this.props.user.username}</span>\n                </div>\n            </div>\n        )\n        return (\n            <div className=\"Owner-owner\" >\n                {/* <div className=\"Owner-controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div> */}\n                {this.renderAvatar()}\n\n                <div className=\"Owner-infoCol\">\n                    <div className=\"Owner-name\">\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            title={tooltip}>\n                            <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                        </Tooltip>\n\n                    </div>\n                    {/* <div className=\"Owner-username\">\n                        {this.props.user.username}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n\n    renderNormal() {\n        return (\n            <div className=\"Owner View-NORMAL\" >\n                <div className=\"Owner-controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"Owner-avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"Owner-infoCol\">\n                    <div className=\"Owner-name\">\n                        <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                    </div>\n                    <div className=\"Owner-username\">\n                        {this.props.user.username}\n                    </div>\n                    {/* <div className=\"role\">\n                        {this.renderRole()}\n                    </div> */}\n                    {/* <div className=\"joinedAt\">\n                        <span className=\"field-label\">joined</span>{' '}{Intl.DateTimeFormat('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                        }).format(this.props.member.joinedAt)}\n                    </div> */}\n                    <div className=\"Owner-title\">\n                        {this.props.user.title || <i>no title in user profile</i>}\n                    </div>\n                    <div className=\"Owner-organization\">\n                        {this.props.user.organization || <i>no organization in user profile</i>}\n                    </div>\n                    <div className=\"Owner-location\">\n                        {[this.props.user.city, this.props.user.state, this.props.user.country].filter(x => x).join(', ') || <i>no location information in user profile</i>}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n    render() {\n        return this.renderCompact()\n        // switch (this.state.view) {\n        //     case View.COMPACT:\n        //         return this.renderCompact()\n\n        //     case View.NORMAL:\n        //         return this.renderNormal()\n        // }\n    }\n}\n\n","import * as React from 'react'\nimport md5 from 'md5'\n\nexport interface OrgLogoProps {\n    logoUrl: string | null\n    size: number\n    organizationName: string\n    organizationId: string\n}\n\nexport interface OrgLogoState {\n\n}\n\nexport default class OrgLogo extends React.Component<OrgLogoProps, OrgLogoState> {\n    constructor(props: OrgLogoProps) {\n        super(props)\n    }\n\n    renderLogoUrl() {\n        if (!this.props.logoUrl) {\n            return (\n                <span>n/a</span>\n            )\n        }\n        return (\n            <img src={this.props.logoUrl} width={this.props.size} />\n        )\n    }\n\n    // see: https://github.com/lautis/unicode-substring/blob/master/index.js\n    charAt(inString: string, position: number) {\n        // const c1 = inString.charAt(position)\n        const c1 = inString.charCodeAt(position)\n        if (c1 >= 0xD800 && c1 <= 0xDBFF && inString.length > position + 1) {\n            const c2 = inString.charCodeAt(position + 1)\n            if (c2 > 0xDC00 && c2 <= 0xDFFF) {\n                return inString.substring(position, 2)\n            }\n        }\n        return inString.substring(position, 1)\n    }\n\n    renderDefaultInitial() {\n        const initial = this.charAt(this.props.organizationName, 0).toUpperCase()\n        // const initial = this.props.organizationName.substr(0, 1).toUpperCase()\n        const hash = md5(this.props.organizationId)\n\n        const color = hash.substr(0, 6)\n        // return (\n        //     <span style={{ color: '\"#' + color + '\"', width: this.props.size, height: this.props.size, fontSize: this.props.size - 6 }}\n        //     >{initial}</span>\n        // )\n        return (\n            <svg width={this.props.size} height={this.props.size} style={{ border: '1px rgba(200, 200, 200, 0.5) solid' }}>\n                <text x=\"50%\" y=\"50%\" dy={4} textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize={this.props.size - 12} fill={'#' + color} fontFamily=\"sans-serif\">{initial}</text>\n            </svg>\n        )\n    }\n\n    renderLogo() {\n        if (this.props.logoUrl) {\n            return this.renderLogoUrl()\n        }\n        return this.renderDefaultInitial();\n    }\n\n    render() {\n        return this.renderLogo()\n    }\n}","import * as React from 'react'\nimport './Avatar.css'\nimport noUserPic from './nouserpic.png'\n\nimport { User } from '../../types'\n\nexport interface AvatarProps {\n    user: User,\n    size: number\n}\n\ninterface AvatarState {\n\n}\n\nexport class Avatar extends React.Component<AvatarProps, AvatarState> {\n    constructor(props: AvatarProps) {\n        super(props)\n    }\n\n    getAvatarUrl(user: User) {\n        switch (user.avatarOption || 'gravatar') {\n            case 'gravatar':\n                const gravatarDefault = user.gravatarDefault || 'identicon';\n                const gravatarHash = user.gravatarHash;\n                if (gravatarHash) {\n                    return 'https://www.gravatar.com/avatar/' + gravatarHash + '?s=60&amp;r=pg&d=' + gravatarDefault;\n                } else {\n                    return noUserPic;\n                }\n            case 'silhouette':\n            case 'mysteryman':\n            default:\n                return noUserPic;\n        }\n    }\n\n    render() {\n        const avatarUrl = this.getAvatarUrl(this.props.user)\n        return (\n            <img\n                src={avatarUrl}\n                style={{ width: this.props.size }}\n            />\n        )\n    }\n\n}\n\nexport default Avatar","export type Metadata = {}\n\nexport type RawObjectInfo = [\n    number, // objid - object id\n    string, // name - object name\n    string, // type - object type\n    string, // save_date - iso8601 timestamp when last saved\n    number, // ver - object version\n    string, // saved_by - username who saved it last\n    number, // wsid - workspace id\n    string, // workspace - workspace name,\n    string, // chsum - checksum of the object\n    number, // size - size of the object (bytes)\n    Metadata   // meta - string to string object of stuff\n]\n\nexport type RawWorkspaceInfo = [\n    number, // id - workspace id\n    string, // workspace - workspace name\n    string, // owner - username who owns it\n    string, // moddate - iso8601 timestamp when last modified\n    number, // max_objid - last object id assigned to object in workspace\n    string, // user_permission - permission of user who made reqeust wrt workspace\n    string, // globalread - int bool whether this workspace is shared globally\n    string, // lockstat - status of the workspace lock\n    Metadata // metadata\n]\n\nexport interface WorkspaceInfo {\n    id: number\n    name: string\n    owner: string\n    modifiedAt: Date\n    objectCount: number\n    userPermission: string\n    globalReadPermission: boolean\n    lockStatus: string\n    metadata: Metadata\n}\n\nexport interface ObjectInfo {\n    id: number\n    name: string\n    type: {\n        module: string\n        name: string\n        majorVersion: number\n        minorVersion: number\n        id: string\n    }\n    version: number\n    savedAt: Date\n    savedBy: string\n    workspaceId: number\n    workspaceName: string\n    checksum: string\n    size: number\n    ref: string\n    metadata: Metadata\n}\n\nfunction iso8601ToDate(dateString: string) {\n    const isoRE = /(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)([\\+\\-])(\\d\\d)(:?[\\:]*)(\\d\\d)/;\n    const dateParts = isoRE.exec(dateString);\n    if (!dateParts) {\n        throw new TypeError('Invalid Date Format for ' + dateString);\n    }\n    // This is why we do this -- JS insists on the colon in the tz offset.\n    const offset = dateParts[7] + dateParts[8] + ':' + dateParts[10];\n    const newDateString = dateParts[1] + '-' + dateParts[2] + '-' + dateParts[3] + 'T' + dateParts[4] + ':' + dateParts[5] + ':' + dateParts[6] + offset;\n    return new Date(newDateString);\n}\n\nexport function workspaceInfoToObject(wsInfo: RawWorkspaceInfo): WorkspaceInfo {\n    return {\n        id: wsInfo[0],\n        name: wsInfo[1],\n        owner: wsInfo[2],\n        modifiedAt: iso8601ToDate(wsInfo[3]),\n        objectCount: wsInfo[4],\n        userPermission: wsInfo[5],\n        globalReadPermission: wsInfo[6] === 'r' ? true : false,\n        lockStatus: wsInfo[7],\n        metadata: wsInfo[8]\n    }\n}\n\nexport function objectInfoToObject(data: RawObjectInfo): ObjectInfo {\n    const type = data[2].split(/[-.]/)\n\n    return {\n        id: data[0],\n        name: data[1],\n        // type: data[2],\n        type: {\n            id: data[2],\n            module: type[0],\n            name: type[1],\n            majorVersion: parseInt(type[2], 10),\n            minorVersion: parseInt(type[3], 10)\n        },\n        savedAt: iso8601ToDate(data[3]),\n        version: data[4],\n        savedBy: data[5],\n        workspaceId: data[6],\n        workspaceName: data[7],\n        checksum: data[8],\n        size: data[9],\n        metadata: data[10],\n        ref: data[6] + '/' + data[0] + '/' + data[4]\n    }\n}\n\n","import { string } from \"prop-types\";\n\nexport interface ServiceClientParams {\n    url: string\n    token?: string\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport interface JSONRPCError {\n    name: string\n    code: number\n    message: string\n    error: string\n}\n\nexport interface MethodSuccessResult<T> {\n    result: T\n    error: null\n}\n\nexport interface MethodErrorResult {\n    result: null\n    error: JSONRPCError\n}\n\nexport type MethodResponse<T> = MethodSuccessResult<T> | MethodErrorResult\n\nexport interface JSONRPCResponse<T> {\n    version: string\n    id: string\n    result: [T, ...any[]]\n    error: JSONRPCError | null\n}\n\n\nexport class JSONRPCException extends Error {\n    name: string\n    code: number\n    // message: string\n    error: string\n    constructor({ name, code, message, error }: JSONRPCError) {\n        super(message)\n        this.name = name\n        this.code = code\n        this.error = error\n    }\n}\n\nexport class classJSONRPCServerException extends Error {\n    constructor(message: string) {\n        super(message)\n    }\n}\n\nexport class ServiceClient {\n    url: string;\n    token: string | null\n\n    static module: string;\n\n    constructor({ url, token }: ServiceClientParams) {\n        this.url = url\n        this.token = token || null\n    }\n\n    makePayload<T>(method: string, param: T): JSONPayload {\n        return {\n            version: '1.1',\n            method: (<typeof ServiceClient>this.constructor).module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: (<typeof ServiceClient>this.constructor).module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    async processResponse<T>(response: Response): Promise<T> {\n        if (response.status === 200) {\n            const { result: [methodResult] } = await response.json() as JSONRPCResponse<T>\n            return methodResult as T\n        } else if (response.status === 204) {\n            // The SDK has a weird edge case in which a method can specify no\n            // result, which is translated to a 204 response and no content.\n            // IMO it should return a valid json value, like null so we don't\n            // have to work around it.\n            // const result = null\n            // result as unknown as T\n            const result: unknown = undefined\n            return result as T\n        }\n        if (response.status === 500) {\n            if (response.headers.get('Content-Type') === 'application/json') {\n                const { error } = await response.json()\n                throw new JSONRPCException(error)\n            } else {\n                const text = await response.text()\n                throw new classJSONRPCServerException(text)\n            }\n        }\n        throw new Error('Unexpected response: ' + response.status + ', ' + response.statusText)\n    }\n\n    async callFunc<Tinput, Toutput>(func: string, param: Tinput): Promise<Toutput> {\n        const headers: Headers = new Headers()\n        headers.set('Content-Type', 'application/json')\n        headers.set('Accept', 'application/json')\n\n        if (this.token) {\n            headers.set('Authorization', this.token)\n        }\n        const response = await fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers,\n            body: JSON.stringify(this.makePayload<Tinput>(func, param))\n        })\n        // The response may be a 200 success, a 200 with method error,\n        // an sdk 500 error, an internal 500 server error, \n        // or any other http error code.\n        return this.processResponse<Toutput>(response)\n    }\n}\n\nexport interface AuthorizedServiceClientParams {\n    url: string\n    token: string\n}\n\nexport class AuthorizedServiceClient extends ServiceClient {\n    token: string;\n\n    constructor(params: AuthorizedServiceClientParams) {\n        super(params)\n        if (!params.token) {\n            throw new Error('Authorized client requires token')\n        }\n        this.token = params.token\n    }\n\n    async callFunc<Tinput, Toutput>(func: string, param: Tinput): Promise<Toutput> {\n        const response = await fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload<Tinput>(func, param))\n        })\n        return this.processResponse<Toutput>(response)\n    }\n}\n\n","import {\n    AuthorizedServiceClient,\n    AuthorizedServiceClientParams\n} from \"./serviceClientBase\"\n\n\nexport interface ObjectIdentity {\n    workspace?: string\n    wsid?: number\n    name?: string\n    objid?: string\n    ver?: number\n    ref?: string\n}\n\nexport interface WorkspaceIdentity {\n    workspace?: string\n    id?: number\n}\n\nexport interface ObjectSpecification {\n    workspace?: string\n    wsid?: number\n    name?: string\n    objid?: number\n    ver?: number\n    ref?: string\n    obj_path?: Array<ObjectIdentity>\n    obj_ref_path?: Array<string>\n    to_obj_path?: Array<ObjectIdentity>\n    to_obj_ref_path?: Array<string>\n    find_reference_path?: number // bool \n    included?: string\n    strict_maps?: number // bool\n    strict_arrays?: number // bool\n}\n\nexport interface GetObjectInfo3Params {\n    objects: Array<ObjectSpecification>\n    includeMetadata: number // bool\n    ignoreErrors: number // bool\n}\n\nexport type ObjectInfo = [\n    number, // objid\n    string, // object name\n    string, // object type\n    string, // save date timestamp YYYY-MM-DDThh:mm:ssZ\n    number, // object version\n    string, // saved by\n    number, // workspace id\n    string, // workspace name\n    string, // md5 checksum\n    number, // size in bytes\n    Map<string, string> // metadata\n]\n\nexport type WorkspaceInfo = [\n    number, // workspace id\n    string, // workspace name\n    string, // workspace owner (username)\n    string, // modification timestamp (iso 8601)\n    number, // last object id\n    string, // user permission (one char)\n    string, // global permission (one char)\n    string, // lock status\n    Map<string, string>  // metadata\n]\n\nexport interface GetObjectInfo3Result {\n    infos: Array<ObjectInfo>\n    paths: Array<Array<string>>\n}\n\nexport interface GetWorkspaceInfoParams extends WorkspaceIdentity {\n}\n\nexport interface GetWorkspaceInfoResult {\n\n}\n\nexport interface WorkspaceClientParams extends AuthorizedServiceClientParams {\n}\n\n\nexport class WorkspaceClient extends AuthorizedServiceClient {\n    static module: string = 'Workspace'\n\n    constructor(params: WorkspaceClientParams) {\n        super(params)\n    }\n\n    // TODO: should be void not null\n    async getVersion(): Promise<string> {\n        return this.callFunc<null, string>('ver', null)\n    }\n\n    async getObjectInfo3(params: GetObjectInfo3Params): Promise<GetObjectInfo3Result> {\n        const objectInfo = this.callFunc<GetObjectInfo3Params, GetObjectInfo3Result>('get_object_info3', params)\n        return objectInfo\n    }\n\n    async getWorkspaceInfo(params: GetWorkspaceInfoParams): Promise<WorkspaceInfo> {\n        return this.callFunc<GetWorkspaceInfoParams, WorkspaceInfo>('get_workspace_info', params)\n    }\n\n}","import { AuthorizedServiceClient, ServiceClientParams } from './serviceClient'\n\n// types from module\n\nexport interface Service {\n    module_name: string\n    version: string | null\n}\n\nexport interface ServiceStatus {\n    module_name: string\n    version: string\n    git_commit_hash: string\n    release_tags: Array<string>\n    hash: string\n    url: string\n    up: number // aka boolean\n    status: string\n    health: string\n}\n\n// impl\n\nexport interface ServiceWizardClientParams extends ServiceClientParams {\n\n}\n\nexport interface GetServiceStatusParams extends Service { }\n\nexport interface GetServiceStatusResult extends ServiceStatus { }\n\nexport class ServiceWizardClient extends AuthorizedServiceClient {\n\n    static module: string = 'ServiceWizard'\n\n    constructor(params: ServiceWizardClientParams) {\n        super(params)\n    }\n\n    async getServiceStatus(params: GetServiceStatusParams): Promise<GetServiceStatusResult> {\n        const result = await this.callFunc('get_service_status', params)\n\n        if (result.result &&\n            result.result.length > 0) {\n            const theResult = result.result[0]\n            if (!theResult) {\n                throw new Error('Crazy at it seems, no result')\n            }\n            return theResult as GetServiceStatusResult\n        } else {\n            throw new Error('Crazy at it seems, no result')\n        }\n    }\n\n}","export interface GenericClientParams {\n    url: string\n    module: string\n    token?: string\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport interface JSONRPCError {\n    name: string\n    code: number\n    message: string\n    error: string\n}\n\nexport interface MethodSuccessResult<T> {\n    result: T\n    error: null\n}\n\nexport interface MethodErrorResult {\n    result: null\n    error: JSONRPCError\n}\n\nexport type MethodResponse<T> = MethodSuccessResult<T> | MethodErrorResult\n\nexport type JSONRPCResponse<T> =\n    // success\n    [T, null, null] |\n    // success, but void result\n    [null, null, null] |\n    // error returned by method, not sdk wrapper\n    [null, MethodErrorResult, null] |\n    // error returned by sdk wrapper (caught exception)\n    [null, null, JSONRPCError]\n\nexport class JSONRPCException extends Error {\n    name: string\n    code: number\n    // message: string\n    error: string\n    constructor({ name, code, message, error }: JSONRPCError) {\n        super(message)\n        this.name = name\n        this.code = code\n        this.error = error\n    }\n}\n\nexport class classJSONRPCServerException extends Error {\n    constructor(message: string) {\n        super(message)\n    }\n}\n\nexport class GenericClient {\n    url: string;\n    token: string | null\n    module: string\n\n    constructor({ url, token, module }: GenericClientParams) {\n        this.url = url\n        this.token = token || null\n        this.module = module\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: this.module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: param\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: this.module + '.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    async processResponse<T>(response: Response): Promise<T> {\n        if (response.status === 200) {\n            const { result } = await response.json()\n            return result as T\n        } else if (response.status === 204) {\n            // The SDK has a weird edge case in which a method can specify no\n            // result, which is translated to a 204 response and no content.\n            // IMO it should return a valid json value, like null so we don't\n            // have to work around it.\n            // const result = null\n            // result as unknown as T\n            const result: unknown = null\n            return result as T\n        }\n        if (response.status === 500) {\n            if (response.headers.get('Content-Type') === 'application/json') {\n                const { error } = await response.json()\n                throw new JSONRPCException(error)\n            } else {\n                const text = await response.text()\n                throw new classJSONRPCServerException(text)\n            }\n        }\n        throw new Error('Unexpected response: ' + response.status + ', ' + response.statusText)\n    }\n\n    async callFunc<T>(func: string, param: any): Promise<T> {\n        const response = await fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload(func, param))\n        })\n        // The response may be a 200 success, a 200 with method error,\n        // an sdk 500 error, an internal 500 server error, \n        // or any other http error code.\n        return this.processResponse<T>(response)\n    }\n}\n\nexport interface AuthorizedGenericClientParams {\n    url: string\n    module: string\n    token: string\n}\n\nexport class AuthorizedGenericClient extends GenericClient {\n    token: string;\n\n    constructor(params: AuthorizedGenericClientParams) {\n        super(params)\n        if (!params.token) {\n            throw new Error('Authorized client requires token')\n        }\n        this.token = params.token\n    }\n\n    async callFunc<T>(func: string, param: any): Promise<T> {\n        const response = await fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload(func, param))\n        })\n        return this.processResponse(response)\n    }\n}\n\n","import Bluebird from 'bluebird'\nimport { AuthorizedServiceClient } from './serviceClient'\n\nimport { ServiceWizardClient } from './serviceWizard'\nimport { GenericClient, AuthorizedGenericClient } from './genericClient'\n// now import the service wizard, and one auth generic client\n\n// type Promise<T> = Bluebird<T>\n\nexport interface CacheParams {\n    itemLifetime: number\n    monitoringFrequency: number\n    waiterTimeout: number\n    waiterFrequency: number\n}\n\nexport interface CacheItem<T> {\n    id: string\n    value: T | null\n    createdAt: number\n    fetcher: () => Bluebird<T>\n    reserved: boolean\n}\n\nexport class Cache<T> {\n\n    cache: Map<string, CacheItem<T>>\n    cacheLifetime: number\n    monitoringFrequency: number\n    waiterTimeout: number\n    waiterFrequency: number\n    isMonitoring: boolean\n\n    constructor({ itemLifetime, monitoringFrequency, waiterTimeout, waiterFrequency }: CacheParams) {\n        this.cache = new Map<string, CacheItem<T>>()\n\n        // 10 minute cache lifetime\n        this.cacheLifetime = itemLifetime || 1800000;\n\n        // Frequency with which to monitor the cache for expired items\n        // or refreshing them.\n        this.monitoringFrequency = monitoringFrequency || 60000;\n\n        // The waiter waits for a cache item to become available if it has\n        // been reserved. These settings determine how long to wait\n        // for a waiter to wait, and how often to check the cache item to see if it has\n        // yet been fulfilled.\n        this.waiterTimeout = waiterTimeout || 30000;\n        this.waiterFrequency = waiterFrequency || 100;\n\n        this.isMonitoring = false;\n    }\n\n    runMonitor() {\n        if (this.isMonitoring) {\n            return;\n        }\n        this.isMonitoring = true;\n        window.setTimeout(() => {\n            const newCache = new Map<string, any>();\n            let cacheRenewed = false;\n            Object.keys(this.cache).forEach((id) => {\n                const item = this.cache.get(id);\n                if (!this.isExpired(item)) {\n                    newCache.set(id, item)\n                    cacheRenewed = true\n                }\n            });\n            this.cache = newCache\n            this.isMonitoring = false\n            if (cacheRenewed) {\n                this.runMonitor()\n            }\n        }, this.monitoringFrequency)\n    }\n\n    isExpired(cacheItem: any) {\n        const now = new Date().getTime();\n        const elapsed = now - cacheItem.createdAt;\n        return (elapsed > this.cacheLifetime);\n    }\n\n    isReserved(cacheItem: any) {\n        return cacheItem.reserved;\n    }\n\n    getItem(id: string) {\n        if (this.cache.get(id) === undefined) {\n            return null\n        }\n        const cached = this.cache.get(id)\n        if (this.isExpired(cached)) {\n            this.cache.delete(id)\n            return;\n        }\n        return cached;\n    }\n\n    reserveWaiter(item: CacheItem<T>): Bluebird<CacheItem<T>> {\n        return new Bluebird<CacheItem<T>>((resolve, reject) => {\n            const started = new Date().getTime();\n            const waiting = true;\n\n            const waiter = () => {\n                if (!waiting) {\n                    return;\n                }\n                window.setTimeout(() => {\n                    if (this.cache.has(item.id)) {\n                        // If on a wait-loop cycle we discover that the\n                        // cache item has been deleted, we volunteer\n                        // to attempt to fetch it ourselves.\n                        // The only case now for this is a cancellation\n                        // of the first request to any dynamic service,\n                        // which may cancel the initial service wizard\n                        // call rather than the service call.\n                        return this.reserveAndFetch({\n                            id: item.id,\n                            fetcher: item.fetcher\n                        })\n                            .then(() => {\n                                // resolve(result);\n                                // we resolve with the cache item just\n                                // as if we had waited for it.\n                                resolve(this.cache.get(item.id))\n                            })\n                            .catch((err: Error) => {\n                                reject(err);\n                            });\n                    }\n                    if (!item.reserved) {\n                        resolve(item);\n                    } else {\n                        const elapsed = new Date().getTime() - started;\n                        if (elapsed > this.waiterTimeout) {\n                            this.cache.delete(item.id)\n                            reject(new Error(\n                                'Timed-out waiting for cache item to become available; timeout '\n                                + this.waiterTimeout + ', waited ' + elapsed));\n                        } else {\n                            waiter();\n                        }\n                    }\n                }, this.waiterFrequency);\n            };\n            waiter();\n        });\n    }\n\n    reserveAndFetch({ id, fetcher }: { id: string, fetcher: () => Bluebird<T> }) {\n        // now, reserve it.\n        this.reserveItem(id, fetcher)\n\n        // and then fetch it.\n        const fetchPromise = fetcher()\n            .then((result: any) => {\n                this.setItem(id, result, fetcher)\n                return result\n            })\n            .finally(() => {\n                // If the fetch was cancelled, we need to remove\n                // the reserved item. This should signal any queued waiters\n                // to spawn their own fetch.\n                if (fetchPromise.isCancelled()) {\n                    this.cache.get(id)\n                }\n            });\n        return fetchPromise;\n    }\n\n    getItemWithWait({ id, fetcher }: { id: string, fetcher: () => Bluebird<T> }) {\n        const cached = this.cache.get(id)\n        if (cached) {\n            if (this.isExpired(cached)) {\n                this.cache.delete(id)\n            } else if (this.isReserved(cached)) {\n                return this.reserveWaiter(cached)\n                    .then((cached) => {\n                        return cached.value;\n                    });\n            } else {\n                return Bluebird.resolve(cached.value)\n            }\n        }\n\n        return this.reserveAndFetch({ id, fetcher });\n    }\n\n    reserveItem(id: string, fetcher: () => Bluebird<T>) {\n        this.cache.set(id, {\n            id: id,\n            createdAt: new Date().getTime(),\n            reserved: true,\n            value: null,\n            fetcher: fetcher\n        });\n    }\n\n    setItem(id: string, value: T, fetcher: () => Bluebird<T>) {\n        if (this.cache.has(id)) {\n            const item = this.cache.get(id)\n            if (item && item.reserved) {\n                item.reserved = false\n                item.value = value\n                item.fetcher = fetcher\n            } else {\n                // overwriting? should we allow this?\n                this.cache.set(id, {\n                    id: id,\n                    createdAt: new Date().getTime(),\n                    fetcher: fetcher,\n                    reserved: false,\n                    value: value\n                })\n            }\n        } else {\n            this.cache.set(id, {\n                id: id,\n                createdAt: new Date().getTime(),\n                fetcher: fetcher,\n                reserved: false,\n                value: value\n            })\n        }\n        this.runMonitor();\n    }\n}\nvar moduleCache = new Cache<any>({\n    itemLifetime: 1800000,\n    monitoringFrequency: 60000,\n    waiterTimeout: 30000,\n    waiterFrequency: 100\n})\n\n\n/*\n * arg is:\n * url - service wizard url\n * timeout - request timeout\n * version - service release version or tag\n * auth - auth structure\n *   token - auth token\n *   username - username\n * rpcContext\n */\n\nexport interface DynamicServiceClientParams {\n    token: string\n    url: string\n    version?: string\n    timeout?: number\n    rpcContext?: any\n}\n\nexport class DynamicServiceClient {\n    token: string\n    timeout: number\n    rpcContext: any\n    url: string\n    version: string | null\n\n    static module: string\n\n    constructor({ token, url, version, timeout, rpcContext }: DynamicServiceClientParams) {\n        // Establish an auth object which has properties token and user_id.\n        this.token = token;\n        this.timeout = timeout || 10000;\n        this.rpcContext = rpcContext || null;\n\n        if (!url) {\n            throw new Error('The service discovery url was not provided');\n        }\n        this.url = url;\n\n        this.version = version || null;\n        if (version === 'auto') {\n            this.version = null;\n        }\n    }\n\n    options() {\n        return {\n            timeout: this.timeout,\n            authorization: this.token,\n            rpcContext: this.rpcContext\n        };\n    }\n\n    getModule() {\n        return (<typeof DynamicServiceClient>this.constructor).module\n    }\n\n    moduleId() {\n        let moduleId;\n        if (!this.version) {\n            moduleId = this.getModule() + ':auto';\n        } else {\n            moduleId = this.getModule() + ':' + this.version;\n        }\n        return moduleId;\n    }\n\n    getCached(fetcher: () => Bluebird<any>) {\n        return moduleCache.getItemWithWait({\n            id: this.moduleId(),\n            fetcher: fetcher\n        });\n    }\n\n    // setCached(value: any) {\n    //     moduleCache.setItem(this.moduleId(), value);\n    // }\n\n    lookupModule() {\n        return this.getCached((): Bluebird<any> => {\n            const client = new ServiceWizardClient({\n                url: this.url,\n                token: this.token\n            })\n            return Bluebird.resolve(\n                client.getServiceStatus({\n                    module_name: this.getModule(),\n                    version: this.version\n                })\n            )\n        })\n    }\n\n    callFunc<T>(funcName: string, params: any) {\n        return this.lookupModule()\n            .then((serviceStatus) => {\n                const client = new AuthorizedGenericClient({\n                    module: serviceStatus.module_name,\n                    url: serviceStatus.url,\n                    token: this.token\n                })\n                return Bluebird.resolve(\n                    client.callFunc<T>(funcName, params)\n                )\n            })\n            .catch((err) => {\n                console.error('ERROR: ' + err.name + \" = \" + err.message, err)\n                throw err\n            })\n    }\n}\n","// import { AuthorizedServiceClient, ServiceClientParams, JSONPayload } from './serviceClient'\n\nimport { DynamicServiceClient, DynamicServiceClientParams } from './dynamicServiceClient'\n\nimport { RawObjectInfo, RawWorkspaceInfo, WorkspaceInfo, ObjectInfo, workspaceInfoToObject, objectInfoToObject } from './workspaceUtils'\n\nexport interface NarrativeServiceClientParams extends DynamicServiceClientParams {\n\n}\n\nexport interface ListNarrativesParams {\n    type: string\n}\n\ntype Metadata = {}\n\n/* Information about an object, including user provided metadata.\n\n       obj_id objid - the numerical id of the object.\n       obj_name name - the name of the object.\n       type_string type - the type of the object.\n       timestamp save_date - the save date of the object.\n       obj_ver ver - the version of the object.\n       username saved_by - the user that saved or copied the object.\n       ws_id wsid - the workspace containing the object.\n       ws_name workspace - the workspace containing the object.\n       string chsum - the md5 checksum of the object.\n       int size - the size of the object in bytes.\n       usermeta meta - arbitrary user-supplied metadata about\n           the object.\n   */\n\nexport interface ListNarrativesResult {\n    narratives: Array<{\n        ws: RawWorkspaceInfo\n        nar: RawObjectInfo\n    }>\n}\n\nexport class NarrativeServiceClient extends DynamicServiceClient {\n    static module: string = 'NarrativeService'\n\n    constructor(params: NarrativeServiceClientParams) {\n        super(params)\n    }\n\n    async listNarratives(type: string): Promise<ListNarrativesResult> {\n        // note usage of unknown below -- Bluebird and native Promise!\n        const [result] = await this.callFunc('list_narratives', [{\n            type: type\n        }])\n        return result\n    }\n}","\nimport * as orgModel from './organization/model'\nimport * as requestModel from './requests'\nimport * as workspaceApi from '../apis/workspaceUtils'\nimport * as userModel from './user'\nimport { WorkspaceClient } from '../apis/workspace'\nimport { NarrativeServiceClient } from '../apis/narrativeService'\n\nexport enum NarrativeState {\n    NONE = 0,\n    ASSOCIATED,\n    REQUESTED\n}\n\nexport type NarrativeID = number\n\nexport type WorkspaceID = number\nexport type ObjectID = number\n\nexport enum NarrativeAccess {\n    NONE = 0,\n    VIEW,\n    EDIT,\n    ADMIN,\n    OWNER\n}\n\nexport interface NarrativeBase {\n    workspaceId: WorkspaceID,\n    access: NarrativeAccess\n}\n\nexport interface InaccessibleNarrative extends NarrativeBase {\n    access: NarrativeAccess.NONE\n}\n\nexport interface AccessibleNarrative extends NarrativeBase {\n    access: NarrativeAccess.VIEW | NarrativeAccess.EDIT | NarrativeAccess.ADMIN | NarrativeAccess.OWNER\n    isPublic: boolean\n    objectId: ObjectID\n    title: string\n    // description?: string\n    owner: userModel.Username\n    // creator: userModel.Username\n    // createdAt: Date\n    lastSavedAt: Date\n    lastSavedBy: userModel.Username\n}\n\nexport type Narrative = AccessibleNarrative | InaccessibleNarrative\n\n// export interface OrganizationNarrativex {\n//     workspaceId: WorkspaceID\n//     objectId: ObjectID\n//     title: string\n//     status: NarrativeState\n//     // inOrganization: boolean\n//     // createdAt: Date\n//     owner: userModel.Username\n//     modifiedAt: Date\n// }\n\nexport interface OrganizationNarrative {\n    status: NarrativeState\n    narrative: AccessibleNarrative\n}\n\nexport interface NarrativeWorkspaceInfo extends workspaceApi.WorkspaceInfo {\n    metadata: {\n        narrative_nice_name: string\n        narrative: string\n        is_temporary: string\n    }\n}\n// export interface GetOwnNarrativesResult {\n//     workspaceInfo: WorkspaceInfo\n//     objectInfo: ObjectInfo\n// }\n\nexport enum Sort {\n    TITLE = 'TITLE',\n    LAST_SAVED = 'LAST_SAVED'\n}\n\ninterface NarrativeModelParams {\n    workspaceServiceURL: string\n    serviceWizardURL: string\n    groupsServiceURL: string\n    userProfileServiceURL: string\n    username: string\n    token: string\n}\n\nexport class NarrativeModel {\n\n    params: NarrativeModelParams\n\n    constructor(params: NarrativeModelParams) {\n        this.params = params\n    }\n\n    // Narratives\n\n    async getOwnNarratives(organizationId: string): Promise<Array<OrganizationNarrative>> {\n        const narrativeServiceClient = new NarrativeServiceClient({\n            url: this.params.serviceWizardURL,\n            token: this.params.token,\n            timeout: 10000,\n        })\n\n        const groupsClient = new orgModel.OrganizationModel({\n            token: this.params.token,\n            username: this.params.username,\n            groupsServiceURL: this.params.groupsServiceURL,\n            userProfileServiceURL: this.params.userProfileServiceURL\n        })\n\n\n        const requestClient = new requestModel.RequestsModel({\n            token: this.params.token,\n            username: this.params.username,\n            groupsServiceURL: this.params.groupsServiceURL\n        })\n\n        const [narrativesResult, organization, pendingRequests] = await Promise.all([\n            narrativeServiceClient.listNarratives('mine'),\n            groupsClient.getOrg(organizationId),\n            requestClient.getPendingRequestsForOrg(organizationId)\n        ])\n\n        if (organization.kind === orgModel.OrganizationKind.INACCESSIBLE_PRIVATE) {\n            throw new Error('Cannot get own narratives for private inaccessible organization')\n        }\n\n        const workspacesInOrg = organization.narratives.map((narrative) => {\n            return narrative.workspaceId\n        })\n\n        return narrativesResult.narratives\n            .map((nar) => {\n                return {\n                    workspaceInfo: <unknown>workspaceApi.workspaceInfoToObject(nar.ws) as NarrativeWorkspaceInfo,\n                    objectInfo: workspaceApi.objectInfoToObject(nar.nar)\n                }\n            })\n            .filter((nar) => {\n                return (nar.workspaceInfo.metadata.is_temporary === 'false')\n            })\n            .map((narrative) => {\n                let status: NarrativeState\n\n                if (workspacesInOrg.indexOf(narrative.workspaceInfo.id) !== -1) {\n                    status = NarrativeState.ASSOCIATED\n                } else if (pendingRequests.find((request) => {\n                    // TODO: these requests should have already been converted to \n                    // model-friendly requests (typed!)\n                    return (request.resourceType === requestModel.RequestResourceType.WORKSPACE &&\n                        request.narrativeId === String(narrative.workspaceInfo.id))\n                })) {\n                    status = NarrativeState.REQUESTED\n                } else {\n                    status = NarrativeState.NONE\n                }\n                return {\n                    status: status,\n                    narrative: {\n                        access: NarrativeAccess.OWNER,\n                        isPublic: narrative.workspaceInfo.globalReadPermission,\n                        workspaceId: narrative.workspaceInfo.id,\n                        objectId: narrative.objectInfo.id,\n                        title: narrative.workspaceInfo.metadata.narrative_nice_name,\n                        owner: narrative.workspaceInfo.owner,\n                        lastSavedAt: narrative.objectInfo.savedAt,\n                        lastSavedBy: narrative.objectInfo.savedBy\n                    } as AccessibleNarrative\n\n                }\n            })\n            .sort((a, b) => {\n                return (a.narrative.title.localeCompare(b.narrative.title))\n            })\n    }\n\n    // async workspaceToNarrative(workspaceId: WorkspaceID): Promise<orgModel.NarrativeResource | null> {\n    //     const workspaceClient = new AuthorizedGenericClient({\n    //         module: 'Workspace',\n    //         url: this.params.workspaceServiceURL,\n    //         token: this.params.token\n    //     })\n    //     try {\n    //         const [[[rawObjectInfo], rawObjectInfoError], [[rawWorkspaceInfo], rawWorkspaceInfoError]] = await Promise.all([\n    //             workspaceClient.callFunc('get_object_info3', [{\n    //                 objects: [{\n    //                     wsid: workspaceId,\n    //                     // TODO: fix this!!\n    //                     objid: 1\n    //                 }],\n    //                 includeMetadata: 1,\n    //                 ignoreErrors: 0\n    //             }]),\n    //             workspaceClient.callFunc('get_workspace_info', [{\n    //                 id: workspaceId\n    //             }])\n    //         ])\n\n    //         if (rawObjectInfoError || rawWorkspaceInfoError) {\n    //             // console.warn('narrative not accessible', rawObjectInfoError, rawWorkspaceInfoError)\n    //             return null\n    //         }\n\n    //         const workspaceInfo: NarrativeWorkspaceInfo = workspaceApi.workspaceInfoToObject(rawWorkspaceInfo) as NarrativeWorkspaceInfo\n\n    //         return {\n    //             workspaceId: workspaceInfo.id,\n    //             title: workspaceInfo.metadata.narrative_nice_name || 'Unknown',\n    //             permission: orgModel.userPermissionToWorkspacePermission(workspaceInfo.userPermission, workspaceInfo.owner === this.params.username),\n    //             isPublic: workspaceInfo.globalReadPermission\n    //         }\n\n    //     } catch (ex) {\n    //         // assume it is an inaccessible workspace\n    //         // console.warn('narrative not accessible', ex)\n    //         return null\n    //     }\n    // }\n\n    getSorter(sort: Sort) {\n        switch (sort) {\n            case Sort.TITLE:\n                return (a: OrganizationNarrative, b: OrganizationNarrative) => {\n                    return a.narrative.title.localeCompare(b.narrative.title)\n                }\n            case Sort.LAST_SAVED:\n                return (a: OrganizationNarrative, b: OrganizationNarrative) => {\n                    return b.narrative.lastSavedAt.getTime() - a.narrative.lastSavedAt.getTime()\n                }\n            default:\n                throw new Error('invalid sort spec')\n        }\n    }\n\n    // sortNarratives(narratives: Array<AccessibleNarrative>, sort: Sort): Array<AccessibleNarrative> {\n    //     let sorter = this.getSorter(sort)\n\n    //     return narratives.sort(sorter)\n    // }\n\n    sortOrganizationNarratives(narratives: Array<OrganizationNarrative>, sort: Sort): Array<OrganizationNarrative> {\n        let sorter = this.getSorter(sort)\n\n        return narratives.sort(sorter).slice(0)\n    }\n\n    /*\n    getNarrative fetches the requested narrative and returns a Narrative object if found \n    and null otherwise. Note that this ignores the narrative state vis-a-vis any organization.\n    It also caches narratives.\n    */\n    async getNarrative(workspaceId: WorkspaceID): Promise<Narrative> {\n        const wsClient = new WorkspaceClient({\n            url: this.params.workspaceServiceURL,\n            token: this.params.token\n        })\n\n        try {\n            const rawWorkspaceInfo = await wsClient.getWorkspaceInfo({\n                id: workspaceId\n            })\n\n            // if (rawWorkspaceInfoError) {\n            //     return {\n            //         workspaceId: workspaceId,\n            //         access: NarrativeAccess.NONE\n            //     }\n            // }\n\n            const workspaceInfo: NarrativeWorkspaceInfo = workspaceApi.workspaceInfoToObject(rawWorkspaceInfo) as NarrativeWorkspaceInfo\n\n            const narrativeId = workspaceInfo.metadata.narrative\n            if (!narrativeId) {\n                return {\n                    workspaceId: workspaceId,\n                    access: NarrativeAccess.NONE\n                }\n            }\n            const objectId = parseInt(narrativeId, 10)\n\n            let rawObjectInfo\n            try {\n                rawObjectInfo = await wsClient.getObjectInfo3({\n                    objects: [{\n                        wsid: workspaceId,\n                        objid: objectId\n                    }],\n                    includeMetadata: 1,\n                    ignoreErrors: 0\n                })\n            } catch (ex) {\n                // TODO: actually detect the error condition?\n                return {\n                    workspaceId: workspaceId,\n                    access: NarrativeAccess.NONE\n                }\n            }\n\n            const objectInfo: workspaceApi.ObjectInfo = workspaceApi.objectInfoToObject(rawObjectInfo.infos[0])\n\n            let access: NarrativeAccess.VIEW | NarrativeAccess.EDIT | NarrativeAccess.ADMIN | NarrativeAccess.OWNER\n            switch (workspaceInfo.userPermission) {\n                case 'n':\n                    if (workspaceInfo.globalReadPermission) {\n                        access = NarrativeAccess.VIEW\n                        break\n                    } else {\n                        throw new Error('Cannot have no access and no global read permission!')\n                    }\n                case 'r':\n                    access = NarrativeAccess.VIEW\n                    break\n                case 'w':\n                    access = NarrativeAccess.EDIT\n                    break\n                case 'a':\n                    if (workspaceInfo.owner === this.params.username) {\n                        access = NarrativeAccess.OWNER\n                    } else {\n                        access = NarrativeAccess.ADMIN\n                    }\n                    break\n                default:\n                    throw new Error('Unknown workspace permission: ' + workspaceInfo.userPermission)\n            }\n\n            return {\n                workspaceId: workspaceInfo.id,\n                access: access,\n                isPublic: workspaceInfo.globalReadPermission,\n                objectId: objectInfo.id,\n                title: workspaceInfo.metadata.narrative_nice_name || 'Unknown',\n                owner: workspaceInfo.owner,\n                lastSavedAt: objectInfo.savedAt,\n                lastSavedBy: objectInfo.savedBy\n            }\n        } catch (ex) {\n            console.error('Error fetching narrative!', ex)\n            throw ex\n        }\n    }\n}\n","import * as narrativeMethodStoreAPI from '../apis/narrativeMethodStore'\nimport * as userModel from './user'\n\nexport type AppID = string\n\nexport type KBaseDataType = string // for now!\n\nexport interface AppBriefInfo {\n    id: string\n    moduleName: string\n    gitCommitHash: string\n    name: string\n    version: string\n    subtitle: string\n    tooltip: string\n    iconURL: string | null\n    categories: Array<string>\n    loadingError: string\n    authors: Array<userModel.Username>\n    inputTypes: Array<KBaseDataType>\n    outputTypes: Array<KBaseDataType>\n    appType: AppType\n}\n\nexport enum AppType {\n    APP = 'app',\n    VIEWER = 'viewer',\n    EDITOR = 'editor',\n    ADVANCED_VIEWER = 'advanced_viewer'\n}\n\nexport type EMail = string\n\nexport interface Suggestions {\n    relatedMethods: Array<AppID>\n    nextMethods: Array<AppID>\n    relatedApps: Array<AppID>\n    nextApps: Array<AppID>\n}\n\nexport type Url = string\n\nexport interface Icon {\n    url: Url | null\n}\n\nexport interface ScreenShot {\n    url: Url | null\n}\n\nexport interface Publication {\n    pubMedID: string\n    displayText: string\n    link: Url\n}\n\nexport interface AppFullInfo {\n    id: string\n    moduleName: string\n    gitCommitHash: string\n    name: string\n    version: string\n    authors: Array<userModel.Username>\n    kbaseContributors: Array<userModel.Username>\n    contact: EMail\n\n    subtitle: string\n    tooltip: string\n    description: string\n    technicalDescription: string\n\n    appType: AppType\n\n    suggestions: Suggestions\n    icon: Icon\n\n    categories: Array<string>\n    screenshots: Array<ScreenShot>\n    publications: Array<Publication>\n\n}\n\nexport enum SortBy {\n    NAME = 'name',\n    MODULE = 'module'\n}\n\nconst convertIcon = (icon: narrativeMethodStoreAPI.Icon): Icon => {\n    if (!icon) {\n        return {\n            url: null\n        }\n    }\n    return icon\n}\n\nconst convertAppType = (app_type: string): AppType => {\n    switch (app_type) {\n        case 'app':\n            return AppType.APP\n        case 'editor':\n            return AppType.EDITOR\n        case 'viewer':\n            return AppType.VIEWER\n        case 'advanced_viewer':\n            return AppType.ADVANCED_VIEWER\n        default:\n            throw new Error('Invalid app type: ' + app_type)\n    }\n}\n\nconst convertSuggestions = (suggestions: narrativeMethodStoreAPI.Suggestions): Suggestions => {\n    return {\n        relatedMethods: suggestions.related_methods,\n        nextMethods: suggestions.next_methods,\n        relatedApps: suggestions.related_apps,\n        nextApps: suggestions.next_apps\n    }\n}\n\nconst convertPublications = (publications: Array<narrativeMethodStoreAPI.Publication>): Array<Publication> => {\n    return publications.map((publication) => {\n        return {\n            pubMedID: publication.pmid,\n            displayText: publication.display_text,\n            link: publication.link\n        }\n    })\n}\n\nexport function methodFullInfoToApp(from: narrativeMethodStoreAPI.MethodFullInfo): AppFullInfo {\n\n    const {\n        id, module_name, git_commit_hash, name, ver,\n        authors, kb_contributors, contact,\n        subtitle, tooltip, description, technical_description, app_type,\n        suggestions, icon, categories, screenshots, publications\n    } = from\n\n\n\n\n    return {\n        id, moduleName: module_name, gitCommitHash: git_commit_hash, name, version: ver,\n        authors, kbaseContributors: kb_contributors, contact,\n        subtitle, tooltip, description, technicalDescription: technical_description,\n        appType: convertAppType(app_type),\n        suggestions: convertSuggestions(suggestions), icon: convertIcon(icon),\n        categories, screenshots, publications: convertPublications(publications)\n    }\n}\n\nexport function methodBriefInfoToAppBriefInfo(from: narrativeMethodStoreAPI.MethodBriefInfo): AppBriefInfo {\n    const {\n        id, module_name, git_commit_hash, name, ver, subtitle, tooltip,\n        icon, categories, loading_error, authors, input_types, output_types, app_type\n    } = from\n\n    let iconURL\n    if (!icon) {\n        iconURL = null\n    } else {\n        iconURL = icon.url\n    }\n\n    return {\n        id, moduleName: module_name, gitCommitHash: git_commit_hash, name, version: ver, subtitle,\n        tooltip, iconURL, categories, loadingError: loading_error,\n        authors, inputTypes: input_types, outputTypes: output_types, appType: convertAppType(app_type)\n    }\n}\n\nexport interface AppClientParams {\n    token: string,\n    narrativeMethodStoreURL: string\n}\n\nexport class AppClient {\n    token: string\n    narrativeMethodStoreURL: string\n    constructor(params: AppClientParams) {\n        this.token = params.token\n        this.narrativeMethodStoreURL = params.narrativeMethodStoreURL\n    }\n\n    async getApp(appId: AppID): Promise<AppFullInfo> {\n        const client = new narrativeMethodStoreAPI.NarrativeMethodStoreClient({\n            url: this.narrativeMethodStoreURL,\n            token: this.token\n        })\n\n        const [methodInfo] = await client.get_method_full_info({\n            ids: [appId],\n            tag: 'release'\n        })\n\n        return methodFullInfoToApp(methodInfo)\n    }\n\n\n}","import {\n    AuthorizedServiceClientParams,\n    AuthorizedServiceClient\n} from './serviceClientBase'\n\nexport interface Icon {\n    url: string\n}\n\nexport type Username = string\n\nexport type EMail = string\n\nexport interface Suggestions {\n    related_methods: Array<string>\n    next_methods: Array<string>\n    related_apps: Array<string>\n    next_apps: Array<string>\n}\n\nexport type Url = string\n\nexport interface ScreenShot {\n    url: Url\n}\n\nexport interface Publication {\n    pmid: string\n    display_text: string\n    link: Url\n}\n\nexport interface MethodBriefInfo {\n    id: string\n    module_name: string\n    git_commit_hash: string\n    name: string\n    ver: string\n    subtitle: string\n    tooltip: string\n    icon: Icon\n    categories: Array<string>\n    loading_error: string\n    authors: Array<Username>\n    input_types: Array<string>\n    output_types: Array<string>\n    app_type: string\n}\n\nexport interface MethodFullInfo {\n    id: string\n    module_name: string\n    git_commit_hash: string\n    name: string\n    ver: string\n    authors: Array<Username>\n    kb_contributors: Array<Username>\n    contact: EMail\n\n    subtitle: string\n    tooltip: string\n    description: string\n    technical_description: string\n    app_type: string\n\n    suggestions: Suggestions\n\n    icon: Icon\n    categories: Array<string>\n    screenshots: Array<ScreenShot>\n    publications: Array<Publication>\n}\n\n// Method Params\n\nexport interface ListMethodsParams {\n    limit?: number\n    offset?: number\n    tag?: string\n}\n\nexport type ListMethodResult = Array<MethodBriefInfo>\n\nexport interface GetMethodFullInfoParams {\n    ids: Array<string>\n    tag?: string\n}\n\nexport type GetMethodFullInfoResult = Array<MethodFullInfo>\n\n// Client\n\nexport interface NarrativeMethodStoreClientParams extends AuthorizedServiceClientParams {\n}\n\n\nexport class NarrativeMethodStoreClient extends AuthorizedServiceClient {\n    static module: string = 'NarrativeMethodStore'\n\n    constructor(params: NarrativeMethodStoreClientParams) {\n        super(params)\n    }\n\n    async version(): Promise<string> {\n        return await this.callFunc<undefined, string>('version', undefined)\n    }\n\n    async list_methods(params: ListMethodsParams): Promise<ListMethodResult> {\n        return await this.callFunc<ListMethodsParams, ListMethodResult>('list_methods', params)\n    }\n\n    async get_method_full_info(params: GetMethodFullInfoParams): Promise<GetMethodFullInfoResult> {\n        return await this.callFunc<GetMethodFullInfoParams, GetMethodFullInfoResult>('get_method_full_info', params)\n    }\n}","import uuid from 'uuid/v4'\n\nexport interface AnError {\n    code: string\n    message: string\n    id: string\n    at: Date\n\n\n    detail?: string\n    history?: Array<AnError>\n    trace?: Array<string>\n    info?: any\n}\n\nexport function makeError(\n    { code, message, detail, history, trace, info }:\n        {\n            code: string, message: string,\n            detail?: string,\n            history?: Array<AnError>, trace?: Array<string>, info?: any\n        }\n) {\n    return {\n        code, message, detail,\n        id: uuid(),\n        at: new Date(),\n        history, trace, info\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as userModel from '../../data/models/user'\nimport * as orgModel from '../../data/models/organization/model'\nimport * as narrativeModel from '../../data/models/narrative'\nimport { AppError, StoreState } from '../../types'\nimport * as appModel from '../../data/models/apps'\nimport { AnError, makeError } from '../../lib/error';\n\n\nexport interface EntityAction extends Action {\n}\n\nexport interface UserLoader extends EntityAction {\n    type: ActionFlag.ENTITY_USER_LOADER,\n    userId: userModel.Username\n}\n\nexport interface UserLoaderStart extends EntityAction {\n    type: ActionFlag.ENTITY_USER_LOADER_START\n}\n\nexport interface UserLoaderSuccess extends EntityAction {\n    type: ActionFlag.ENTITY_USER_LOADER_SUCCESS,\n    user: userModel.User\n}\n\nexport interface UserLoaderError extends EntityAction {\n    type: ActionFlag.ENTITY_USER_LOADER_ERROR,\n    error: AppError\n}\n\n\nexport function userLoaderStart(): UserLoaderStart {\n    return {\n        type: ActionFlag.ENTITY_USER_LOADER_START\n    }\n}\n\nexport function userLoaderSuccess(user: userModel.User): UserLoaderSuccess {\n    return {\n        type: ActionFlag.ENTITY_USER_LOADER_SUCCESS,\n        user: user\n    }\n}\n\nexport function userLoaderError(error: AppError): UserLoaderError {\n    return {\n        type: ActionFlag.ENTITY_USER_LOADER_ERROR,\n        error: error\n    }\n}\n\nexport function userLoader(userId: userModel.Username) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(userLoaderStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const model = new userModel.UserModel({\n            token,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const user = await model.getUser(userId)\n            dispatch(userLoaderSuccess(user))\n        } catch (ex) {\n            dispatch(userLoaderError({\n                code: 'error',\n                message: ex.message\n            }))\n        }\n    }\n}\n\n\nexport interface OrganizationLoader extends EntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOADER,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface OrganizationLoaderStart extends EntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOADER_START\n}\n\nexport interface OrganizationLoaderSuccess extends EntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOADER_SUCCESS,\n    organization: orgModel.Organization | orgModel.InaccessiblePrivateOrganization\n}\n\nexport interface OrganizationLoaderError extends EntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOADER_ERROR,\n    error: AppError\n}\n\n\nexport function organizationLoaderStart(): OrganizationLoaderStart {\n    return {\n        type: ActionFlag.ENTITY_ORGANIZATION_LOADER_START\n    }\n}\n\nexport function organizationLoaderSuccess(organization: orgModel.Organization | orgModel.InaccessiblePrivateOrganization): OrganizationLoaderSuccess {\n    return {\n        type: ActionFlag.ENTITY_ORGANIZATION_LOADER_SUCCESS,\n        organization: organization\n    }\n}\n\nexport function organizationLoaderError(error: AppError): OrganizationLoaderError {\n    return {\n        type: ActionFlag.ENTITY_ORGANIZATION_LOADER_ERROR,\n        error: error\n    }\n}\n\nexport function organizationLoader(organizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(organizationLoaderStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const model = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const organization = await model.getOrg(organizationId)\n            dispatch(organizationLoaderSuccess(organization))\n        } catch (ex) {\n            dispatch(organizationLoaderError({\n                code: 'error',\n                message: ex.message\n            }))\n        }\n    }\n}\n\n// Narratives\n\nexport interface LoadNarrative {\n    type: ActionFlag.ENTITY_NARRATIVE_LOAD\n}\n\ninterface LoadNarrativeStart {\n    type: ActionFlag.ENTITY_NARRATIVE_LOAD_START\n}\n\nexport interface LoadNarrativeSuccess {\n    type: ActionFlag.ENTITY_NARRATIVE_LOAD_SUCCESS\n    narrative: narrativeModel.Narrative\n}\n\ninterface LoadNarrativeError {\n    type: ActionFlag.ENTITY_NARRATIVE_LOAD_ERROR\n    error: AppError\n}\n\nexport function loadNarrative(workspaceId: narrativeModel.WorkspaceID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(<LoadNarrativeStart>{\n            type: ActionFlag.ENTITY_NARRATIVE_LOAD_START\n        })\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const narrativeClient = new narrativeModel.NarrativeModel({\n            token, username,\n            workspaceServiceURL: config.services.Workspace.url,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const narrative = await narrativeClient.getNarrative(workspaceId)\n            dispatch(<LoadNarrativeSuccess>{\n                type: ActionFlag.ENTITY_NARRATIVE_LOAD_SUCCESS,\n                narrative: narrative\n            })\n        } catch (ex) {\n            dispatch(<LoadNarrativeError>{\n                type: ActionFlag.ENTITY_NARRATIVE_LOAD_ERROR,\n                error: {\n                    code: ex.name,\n                    message: ex.message\n                }\n            })\n        }\n    }\n}\n\n// Access narrative\n\nexport interface AccessNarrative extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE,\n    narrative: orgModel.NarrativeResource\n}\n\nexport interface AccessNarrativeStart extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_START\n}\n\nexport interface AccessNarrativeSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_SUCCESS,\n    organization: orgModel.Organization\n}\n\nexport interface AccessNarrativeError extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_ERROR,\n    error: AppError\n}\n\n// Generators\nexport function accessNarrativeStart(): AccessNarrativeStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_START\n    }\n}\n\nexport function accessNarrativeSuccess(organization: orgModel.Organization): AccessNarrativeSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_SUCCESS,\n        organization: organization\n    }\n}\n\nexport function accessNarrativeError(error: AppError): AccessNarrativeError {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_ERROR,\n        error: error\n    }\n}\n\n// Thunk\n\nexport function accessNarrative(narrative: orgModel.NarrativeResource) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(accessNarrativeStart())\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(accessNarrativeError({\n                code: 'error',\n                message: 'No view model'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: {\n                    viewModel: {\n                        organization\n                    }\n                }\n            }\n        } = state\n\n        if (!organization) {\n            return\n        }\n\n        const groupId = organization.id\n        const resourceId = String(narrative.workspaceId)\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            await orgClient.grantNarrativeAccess(groupId, resourceId)\n            const org = await orgClient.getOrg(groupId)\n            if (org.kind !== orgModel.OrganizationKind.NORMAL) {\n                dispatch(accessNarrativeError({\n                    code: 'invalid state',\n                    message: 'Cannot access a Narrative for an inaccessible Organization'\n                }))\n                return\n            }\n            dispatch(accessNarrativeSuccess(org))\n        } catch (ex) {\n            dispatch(accessNarrativeError({\n                code: 'error',\n                message: ex.message\n            }))\n        }\n\n    }\n}\n\n// App\n\nexport interface LoadApp {\n    type: ActionFlag.ENTITY_LOAD_APP\n    appId: appModel.AppID\n}\n\nexport interface LoadAppStart {\n    type: ActionFlag.ENTITY_LOAD_APP_START\n}\n\n\nexport interface LoadAppSuccess {\n    type: ActionFlag.ENTITY_LOAD_APP_SUCCESS,\n    app: appModel.AppFullInfo\n}\n\nexport interface LoadAppError {\n    type: ActionFlag.ENTITY_LOAD_APP_ERROR,\n    error: AnError\n}\n\nfunction loadAppStart() {\n    return {\n        type: ActionFlag.ENTITY_LOAD_APP_START\n    }\n}\n\nfunction loadAppSuccess(app: appModel.AppFullInfo) {\n    return {\n        type: ActionFlag.ENTITY_LOAD_APP_SUCCESS,\n        app\n    }\n}\n\nfunction loadAppError(error: AnError) {\n    return {\n        type: ActionFlag.ENTITY_LOAD_APP_ERROR,\n        error: error\n    }\n}\n\nexport function loadApp(appId: appModel.AppID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadAppStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const appClient = new appModel.AppClient({\n            token,\n            narrativeMethodStoreURL: config.services.NarrativeMethodStore.url\n        })\n\n        try {\n            const app = await appClient.getApp(appId)\n            dispatch(loadAppSuccess(app))\n        } catch (ex) {\n            dispatch(loadAppError(makeError({\n                code: 'error',\n                message: ex.message\n            })))\n        }\n    }\n}\n\n\n","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\nimport Owner from './Owner'\n\ninterface LoaderProps {\n    username: orgModel.Username\n    user: userModel.User | undefined\n    avatarSize: number\n    showAvatar: boolean\n    onLoad: (userId: userModel.Username) => void\n}\n\ninterface LoaderState {\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    times: number\n    constructor(props: LoaderProps) {\n        super(props)\n        this.times = 0\n    }\n\n    render() {\n        this.times += 1;\n        if (this.props.user) {\n            return (\n                <Owner user={this.props.user} avatarSize={this.props.avatarSize} showAvatar={this.props.showAvatar} />\n            )\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" />{' '}Loading owner...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.onLoad(this.props.username)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/entities'\nimport * as orgModel from '../../data/models/organization/model'\nimport { Icon } from 'antd'\n\n\nexport interface OwnProps {\n    username: orgModel.Username\n    avatarSize: number\n    showAvatar: boolean\n}\n\ninterface StateProps {\n    user: userModel.User | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (userId: userModel.Username) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        user: state.entities.users.byId.get(props.username)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (userId: userModel.Username) => {\n            dispatch(actions.userLoader(userId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","export interface niceElapsedOptions {\n    absoluteAfter?: number,\n    compactDate?: boolean,\n    now?: Date\n}\n\nexport function niceElapsed(someDate: Date, options: niceElapsedOptions = {}) {\n    const nowDate = options.now || new Date()\n\n    const elapsed = Math.round((nowDate.getTime() - someDate.getTime()) / 1000);\n    const elapsedAbs = Math.abs(elapsed);\n\n    let measure, measureAbs, unit;\n    const maxDays = options.absoluteAfter || 90\n    if (elapsedAbs < 60 * 60 * 24 * maxDays) {\n        if (elapsedAbs === 0) {\n            return 'now';\n        } else if (elapsedAbs < 60) {\n            measure = elapsed;\n            measureAbs = elapsedAbs;\n            unit = 'second';\n        } else if (elapsedAbs < 60 * 60) {\n            measure = Math.round(elapsed / 60);\n            measureAbs = Math.round(elapsedAbs / 60);\n            unit = 'minute';\n        } else if (elapsedAbs < 60 * 60 * 24) {\n            measure = Math.round(elapsed / 3600);\n            measureAbs = Math.round(elapsedAbs / 3600);\n            unit = 'hour';\n        } else {\n            measure = Math.round(elapsed / (3600 * 24));\n            measureAbs = Math.round(elapsedAbs / (3600 * 24));\n            unit = 'day';\n        }\n\n        if (measureAbs > 1) {\n            unit += 's';\n        }\n\n        let prefix = null;\n        let suffix = null;\n        if (measure < 0) {\n            prefix = 'in';\n        } else if (measure > 0) {\n            suffix = 'ago';\n        }\n\n        return (prefix ? prefix + ' ' : '') + measureAbs + ' ' + unit + (suffix ? ' ' + suffix : '');\n    } else {\n        // otherwise show the actual date, with or without the year.\n        if (options.compactDate && nowDate.getFullYear() === someDate.getFullYear()) {\n            return Intl.DateTimeFormat('en-US', {\n                month: 'short',\n                day: 'numeric'\n            }).format(someDate)\n        } else {\n            return Intl.DateTimeFormat('en-US', {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric'\n            }).format(someDate)\n        }\n    }\n}","import * as React from 'react'\nimport { niceElapsed } from '../lib/time'\nimport { Tooltip } from 'antd';\nimport { updateHomeUrl } from '../redux/actions/addOrg';\n\nexport interface NiceElapsedTimeProps {\n    time: Date\n    showTooltip?: boolean\n    tooltipPrefix?: string\n}\n\ninterface NiceElapsedTimeState {\n    now: Date\n}\n\n// dynamic intervals, based on the range of elapsed time\n// TODO: using intervals we should actually set the interval to \n// trigger based on the datetime to display.\nconst intervals = [\n    // below 1 minute, every 1/2 sec\n    [60 * 1000, 500],\n    // between 1 minute and 1 hour, every 30 seconds\n    [60 * 60 * 1000, 30 * 1000],\n    // between 1 hour and 1 day, every 30 minutes\n    [60 * 60 * 24 * 1000, 60 * 1000 * 30],\n    // over 1 day, once per day\n    [Infinity, 60 * 60 * 24 * 1000]\n]\n\nexport default class NiceElapsedTime extends React.Component<NiceElapsedTimeProps, NiceElapsedTimeState> {\n    nowTimer: number | null\n    interval: number\n    constructor(props: NiceElapsedTimeProps) {\n        super(props)\n\n        this.nowTimer = null\n\n        this.state = {\n            now: new Date()\n        }\n\n        this.interval = this.calcInterval()\n    }\n\n    calcInterval(): number {\n        const elapsed = this.state.now.getTime() - this.props.time.getTime()\n        for (const [upto, interval] of intervals) {\n            if (elapsed < upto) {\n                return interval\n            }\n        }\n        throw new Error('did not find interval')\n    }\n\n    handleInterval() {\n        this.setState({ now: new Date() })\n        const interval = this.calcInterval()\n        if (this.interval !== interval) {\n            this.interval = interval\n            this.startIntervalTimer()\n        }\n    }\n\n    startIntervalTimer() {\n        if (this.nowTimer) {\n            window.clearInterval(this.nowTimer)\n        }\n        this.nowTimer = window.setInterval(() => {\n            this.handleInterval()\n        }, this.interval)\n    }\n\n    componentDidMount() {\n        this.startIntervalTimer()\n    }\n\n    componentWillUnmount() {\n        if (this.nowTimer) {\n            window.clearInterval(this.nowTimer)\n        }\n    }\n\n    render() {\n        if (this.props.showTooltip === false) {\n            return (\n                <span>\n                    {niceElapsed(this.props.time, { absoluteAfter: 30, now: this.state.now })}\n                </span>\n            )\n        }\n\n        const fullDate = (\n            <span>\n                {\n                    Intl.DateTimeFormat('en-US', {\n                        month: 'short',\n                        day: 'numeric',\n                        year: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        timeZoneName: 'short'\n                    }).format(this.props.time)\n                }\n            </span>\n        )\n        let tooltip\n        if (this.props.tooltipPrefix) {\n            tooltip = (\n                <span>\n                    {this.props.tooltipPrefix}\n                    {fullDate}\n                </span>\n            )\n        } else {\n            tooltip = fullDate\n        }\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                {niceElapsed(this.props.time, { absoluteAfter: 30, now: this.state.now })}\n            </Tooltip>\n        )\n    }\n}","import * as React from 'react'\nimport * as orgModel from '../data/models/organization/model'\nimport { NavLink } from 'react-router-dom'\nimport OrgLogo from './OrgLogo'\nimport { Icon, Tooltip, Menu, Dropdown, Modal } from 'antd'\nimport Owner from './entities/OwnerContainer'\nimport { ComponentView } from '../types'\nimport './BriefOrganization.css'\nimport NiceElapsedTime from './NiceElapsedTime';\n\nexport interface BriefOrganizationProps {\n    organization: orgModel.BriefOrganization\n    openRequestsStatus: orgModel.RequestStatus | null\n}\n\ninterface BriefOrganizationState {\n    view: ComponentView\n}\n\nfunction reverseView(v: ComponentView) {\n    switch (v) {\n        case ComponentView.COMPACT:\n            return ComponentView.NORMAL\n        case ComponentView.NORMAL:\n            return ComponentView.COMPACT\n    }\n}\n\nexport default class BriefOrganization extends React.Component<BriefOrganizationProps, BriefOrganizationState> {\n    constructor(props: BriefOrganizationProps) {\n        super(props)\n        this.state = {\n            view: ComponentView.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderLogo(org: orgModel.BriefOrganization) {\n        return (\n            <OrgLogo logoUrl={org.logoUrl} size={80} organizationName={org.name} organizationId={org.id} />\n        )\n    }\n\n    renderHomeUrl(org: orgModel.BriefOrganization) {\n        if (!org.homeUrl) {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    title=\"This organization has not set a home page url\"\n                >\n                    <Icon type=\"home\" style={{ color: 'rgba(200, 200, 200, 0.3)' }} />\n                </Tooltip>\n            )\n        }\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Home page for this Organization (external to KBase)\n                </p>\n            </React.Fragment>\n        )\n        return (\n            <div className=\"BriefOrganization-homeUrl\">\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title={tooltip}\n                >\n                    <a href={org.homeUrl} target=\"_blank\">\n                        <Icon type=\"home\" />\n                    </a>\n                </Tooltip>\n            </div >\n        )\n    }\n\n    renderNarrativeCount(org: orgModel.BriefOrganization) {\n        if (!org.narrativeCount) {\n            return (\n                <span style={{ color: 'gray' }}>\n                    Ø\n                </span>\n            )\n        }\n        return (\n            <span>\n                {org.narrativeCount}\n            </span>\n        )\n    }\n\n    renderMemberCount(org: orgModel.BriefOrganization) {\n        if (org.memberCount == 1) {\n            return (\n                <span style={{ color: 'gray' }}>\n                    Ø\n                </span>\n            )\n        }\n        return (\n            <span>\n                {org.memberCount - 1}\n            </span>\n        )\n    }\n\n    renderRelation(org: orgModel.BriefOrganization) {\n        switch (org.relation) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org; you may request membership\"\n                    >\n                        <span>\n                            <Icon type=\"stop\" />\n                        </span>\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org; you may request membership\"\n                    >\n                        <Icon type=\"stop\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"Your membership request is pending\"\n                    >\n                        <Icon type=\"user\" style={{ color: 'orange' }} /> Your membership <b>request</b> is pending\n                </Tooltip>\n                )\n\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You have been invited to join this organization\"\n                    >\n                        <Icon type=\"user\" style={{ color: 'blue' }} />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are a member of this organization\"\n                    >\n                        <Icon type=\"user\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.ADMIN):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are an administrator of this organization\"\n                    >\n                        <Icon type=\"robot\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are the owner of this organization\"\n                    >\n                        <Icon type=\"crown\" />\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderPrivacy() {\n        const org = this.props.organization\n        if (org.isPrivate) {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title=\"This organization is private - may only be viewed by members\">\n                    <span>\n                        <Icon type=\"unlock\" />\n                    </span>\n                </Tooltip>\n            )\n        } else {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title=\"This organization is public - may be viewed by any KBase user\">\n                    <span>\n                        <Icon type=\"global\" />\n                    </span>\n                </Tooltip>\n            )\n        }\n    }\n\n    renderOrgFreshness(org: orgModel.BriefOrganization) {\n        const isNew = org.lastVisitedAt && (org.modifiedAt.getTime() > org.lastVisitedAt.getTime())\n        let newAlert\n        if (isNew) {\n            const title = 'This org has changed since your last visit to it; new or updated items are highlighted'\n            newAlert = (\n                <div>\n                    <Tooltip placement=\"topRight\" title={title}>\n                        <span style={{ color: 'red', fontSize: '120%' }}>\n                            {/* ● */}\n                            <Icon type=\"bell\" theme=\"filled\" />\n                        </span>\n                    </Tooltip>\n                </div>\n            )\n        } else {\n            newAlert = (\n                <div>\n                    <span style={{ color: 'transparent', fontSize: '120%' }}>\n                        <Icon type=\"bell\" theme=\"filled\" />\n                    </span>\n                </div>\n            )\n        }\n\n        const hasRequests = false\n\n        let requestsAlert\n        if (hasRequests) {\n            requestsAlert = (\n                <div>\n                    <Icon type=\"bulb\" style={{ color: \"blue\" }} />\n                </div>\n            )\n        } else {\n            requestsAlert = null\n        }\n\n        return (\n            <div>\n                {newAlert}\n                {requestsAlert}\n            </div>\n        )\n    }\n\n    renderRequests() {\n        if (!(this.props.organization.relation === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.organization.relation === orgModel.UserRelationToOrganization.OWNER)) {\n            return\n        }\n        let message\n        let iconColor\n        switch (this.props.openRequestsStatus) {\n            case orgModel.RequestStatus.NONE:\n                // case null:\n                message = 'There are no open requests for this organization'\n                iconColor = 'rgba(200, 200, 200, 0.3)'\n                break\n            case orgModel.RequestStatus.NEW:\n                message = 'There are new requests since you last visited this organization'\n                iconColor = 'red'\n                break\n            case orgModel.RequestStatus.OLD:\n                message = 'There are open requests for this organization'\n                iconColor = 'blue'\n                break\n            case orgModel.RequestStatus.INAPPLICABLE:\n                return\n            default:\n                console.warn('Invalid open request status: ' + this.props.openRequestsStatus)\n                return\n        }\n        const title = (\n            <span>\n                {message}\n            </span>\n        )\n        return (\n            <Tooltip\n                placement=\"topRight\"\n                title={title}>\n                <span style={{ color: iconColor, fontSize: '80%' }}>\n                    <Icon type=\"mail\" theme=\"filled\" />\n                </span>\n            </Tooltip>\n        )\n    }\n\n    renderPermalink() {\n        const permalink = (\n            <div>\n                <p>\n                    Below is the \"permalink\" for this organization. You may copy\n                    this url and use it to access this organization in a web browser.\n                </p>\n                <p style={{ fontFamily: 'monospace', fontWeight: 'bold' }}>\n                    {window.location.origin}/#org/{this.props.organization.id}\n                </p>\n            </div>\n        )\n        const menuClick = ({ key }: { key: string }) => {\n            Modal.info({\n                title: 'Org Permalink',\n                content: permalink\n            })\n        }\n        const menu = (\n            <Menu\n                onClick={menuClick}\n            >\n                <Menu.Item key=\"view\">\n                    View Permalink\n                </Menu.Item>\n            </Menu>\n        )\n        return (\n            <Dropdown\n                overlay={menu}\n                trigger={['click', 'contextMenu']}>\n                <a href={\"/#orgs/\" + this.props.organization.id}>\n                    <Icon type=\"link\" />\n                </a>\n            </Dropdown>\n        )\n    }\n\n    renderLogoColumn(org: orgModel.BriefOrganization) {\n        return (\n            <React.Fragment>\n                <div className=\"BriefOrganization-logoRow\">\n                    <NavLink to={`/viewOrganization/${org.id}`}>\n                        {this.renderLogo(org)}\n                    </NavLink>\n                </div>\n                <div className=\"BriefOrganization-statusRow\">\n                    <div className=\"BriefOrganization-relationCol\">\n                        {this.renderRelation(org)}\n                    </div>\n                    <div className=\"BriefOrganization-privacyCol\">\n                        {this.renderPrivacy()}\n                    </div>\n\n                    <div className=\"BriefOrganization-homeLinkCol\">\n                        {this.renderHomeUrl(org)}\n                    </div>\n                </div>\n                <div className=\"BriefOrganization-freshnessRow\">\n                    <div className=\"BriefOrganization-orgFreshnessCol\">\n                        {this.renderOrgFreshness(org)}\n                    </div>\n                    <div className=\"BriefOrganization-openRequestsCol\">\n                        {this.renderRequests()}\n                    </div>\n                    <div className=\"BriefOrganization-openNewRequestsCol\">\n                        {this.renderPermalink()}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    fullTimestamp(d: Date) {\n        return Intl.DateTimeFormat('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZoneName: 'short'\n        }).format(d)\n    }\n\n    renderInfoCol(org: orgModel.BriefOrganization) {\n        return (\n            <React.Fragment>\n                <div className=\"BriefOrganization-researchInterests BriefOrganization-infoTableRow\">\n                    {org.researchInterests}\n                </div>\n\n                <div className=\"BriefOrganization-orgOwner BriefOrganization-infoTableRow\">\n                    <div className=\"BriefOrganization-infoTableCol1\">\n                        <span className=\"field-label BriefOrganization-fieldLabel\">owner</span>\n                    </div>\n                    <div className=\"BriefOrganization-infoTableCol2\">\n                        {/* TODO: render as Member or Owner component */}\n                        <Owner username={org.owner.username} avatarSize={16} showAvatar={false} key={org.owner.username} />\n                    </div>\n                </div>\n                <div className=\"BriefOrganization-orgCreated BriefOrganization-infoTableRow\">\n                    <div className=\"BriefOrganization-infoTableCol1\">\n                        <span className=\"field-label BriefOrganization-fieldLabel\">created</span>\n                    </div>\n                    <div className=\"BriefOrganization-infoTableCol2\">\n                        {/* {niceElapsed(org.createdAt, 30)} */}\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            mouseEnterDelay={0.5}\n                            title={this.fullTimestamp(org.createdAt)}>\n                            <span>\n                                {Intl.DateTimeFormat('en-US', {\n                                    month: 'short',\n                                    day: 'numeric',\n                                    year: 'numeric'\n                                }).format(org.createdAt)}\n                            </span>\n                        </Tooltip>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    renderMemberRow(org: orgModel.BriefOrganization) {\n        const memberCount = org.memberCount - 1\n        let memberCountTooltip\n        if (memberCount) {\n            if (memberCount === 1) {\n                memberCountTooltip = (\n                    <span>\n                        There is <b>1</b> member in this organization\n                    </span>\n                )\n            } else {\n                memberCountTooltip = (\n                    <span>\n                        There are <b>{memberCount}</b> members in this organization\n                    </span>\n                )\n            }\n        } else {\n            memberCountTooltip = (\n                <span>\n                    There are <b>no members</b> in this organization\n                </span>\n            )\n        }\n        return (\n            <Tooltip placement=\"bottomRight\" title={memberCountTooltip}>\n                <div className=\"BriefOrganization-orgCreated BriefOrganization-infoTableRow\">\n                    <div className=\"BriefOrganization-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"team\" /></span>\n                    </div>\n                    <div className=\"BriefOrganization-infoTableCol2\">\n                        {this.renderMemberCount(org)}\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderNarrativeRow(org: orgModel.BriefOrganization) {\n        const count = org.narrativeCount\n        let tooltip\n        if (count) {\n            if (count === 1) {\n                tooltip = (\n                    <span>\n                        There is <b>1</b> narrative in this organization\n                    </span>\n                )\n            } else {\n                tooltip = (\n                    <span>\n                        There are <b>{count}</b> narratives in this organization\n                    </span>\n                )\n            }\n        } else {\n            tooltip = (\n                <span>\n                    There are <b>no narratives</b> in this organization\n                </span>\n            )\n        }\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                <div className=\"BriefOrganization-orgCreated BriefOrganization-infoTableRow\">\n                    <div className=\"BriefOrganization-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"file\" /></span>\n                    </div>\n                    <div className=\"BriefOrganization-infoTableCol2\">\n                        {this.renderNarrativeCount(org)}\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderModifiedRow(org: orgModel.BriefOrganization) {\n        const tooltip = (\n            <span>\n                This organization was last updated\n                {' '}\n                <NiceElapsedTime time={org.modifiedAt} showTooltip={true} />\n            </span>\n        )\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                <div className=\"BriefOrganization-orgCreated BriefOrganization-infoTableRow\">\n                    <div className=\"BriefOrganization-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"save\" /></span>\n                    </div>\n                    <div className=\"BriefOrganization-infoTableCol2\">\n                        <NiceElapsedTime time={org.modifiedAt} showTooltip={true} />\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderStatsCol(org: orgModel.BriefOrganization) {\n        return (\n            <React.Fragment>\n                {this.renderMemberRow(org)}\n                {this.renderNarrativeRow(org)}\n                {this.renderModifiedRow(org)}\n            </React.Fragment>\n        )\n    }\n\n    renderNormal() {\n        const org = this.props.organization\n        return (\n            <div className=\"BriefOrganization\">\n                <div className=\"BriefOrganization-body\">\n                    {/* <div className=\"BriefOrganization-freshnessCol\">\n                        {this.renderFreshness(org)}\n                    </div> */}\n                    <div className=\"BriefOrganization-logoCol\">\n                        {this.renderLogoColumn(org)}\n                    </div>\n                    <div className=\"BriefOrganization-infoCol\">\n                        <div className=\"BriefOrganization-infoCol-row\">\n                            <div className=\"BriefOrganization-infoCol-col1\">\n                                <div className=\"BriefOrganization-orgName BriefOrganization-infoTableRow\">\n                                    <NavLink to={`/viewOrganization/${org.id}`}>\n                                        {org.name}\n                                    </NavLink>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"BriefOrganization-infoCol-row\">\n                            <div className=\"BriefOrganization-infoCol-col1\">\n                                {this.renderInfoCol(org)}\n                            </div>\n                            <div className=\"BriefOrganization-infoCol-col2\">\n                                {this.renderStatsCol(org)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n    render() {\n        return this.renderNormal()\n    }\n}\n","import * as React from 'react';\nimport './component.css';\nimport { Alert, Button } from 'antd';\nimport * as orgModel from '../../../../data/models/organization/model'\nimport BriefOrganization from '../../../BriefOrganization';\n\n// TODO: need more ergonomic way to resolve the common issue of data types interfering with \n// component types.\n\nexport interface OrganizationsProps {\n    organizations: Array<orgModel.BriefOrganization>\n    openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>\n    myOrgsUnfiltered: boolean\n}\n\nexport interface OrganizationsState {\n    searchTerms: Array<string>\n}\n\nexport class Organizations extends React.Component<OrganizationsProps, OrganizationsState> {\n    constructor(props: OrganizationsProps) {\n        super(props)\n\n        this.state = {\n            searchTerms: []\n        }\n    }\n\n    renderAdminInfo(org: orgModel.Organization) {\n        return (\n            <div>\n                disabled\n            </div>\n        )\n    }\n\n    pluralize(count: number, singular: string, plural: string) {\n        if (count === 0 || count > 1) {\n            return plural\n        }\n        return singular\n    }\n\n    renderNoOrgs() {\n        const browseButton = (\n            <Button size=\"small\" type=\"default\">browse</Button>\n        )\n        const createButton = (\n            <Button size=\"small\" type=\"default\">create</Button>\n        )\n        let message\n        if (this.props.myOrgsUnfiltered) {\n            message = (\n                <div>\n                    <p>\n                        You neither own nor are a member of any Organizations, so there is nothing to show you here.\n                    </p>\n                    <p>\n                        You may use the <b>Create Organization</b> button on the upper right to\n                        create your own Organization, or use the <b>All Orgs</b> filter on the right\n                        to browse and search all public Organizations.\n                    </p>\n                    {/* <p>\n                        You can use the filter on the right to {browseButton} through existing public Organizations,\n                        or you may {createButton} your own Organization.\n                    </p> */}\n                </div>\n            )\n        } else {\n            message = (\n                <div>\n                    <p>\n                        Sorry, no Organizations found.\n                    </p>\n                </div>\n            )\n        }\n\n        return (\n            <Alert type=\"warning\"\n                style={{ maxWidth: '50em', margin: '20px auto 0 auto' }}\n                message={message} />\n        )\n    }\n\n    renderOrgs() {\n        if (this.props.organizations.length > 0) {\n            return (\n                this.props.organizations.map((organization, index) => {\n                    const status = this.props.openRequests.get(organization.id) || null\n                    return (\n                        <div key={String(index)} className=\"SimpleCard\">\n                            <BriefOrganization organization={organization} openRequestsStatus={status} />\n                        </div>\n                    )\n                })\n            )\n        } else {\n            return this.renderNoOrgs()\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Organizations\">\n                <div style={{ overflowY: 'auto', display: 'flex', flexDirection: 'column' }}>\n                    {this.renderOrgs()}\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Organizations;","import { connect } from 'react-redux'\nimport { Dispatch, Action } from 'redux'\nimport * as orgModel from '../../../../data/models/organization/model'\nimport { Organizations } from './component'\nimport { StoreState } from '../../../../types'\n\nexport interface OwnProps {\n    myOrgsUnfiltered: boolean\n}\nexport interface StateProps {\n    organizations: Array<orgModel.BriefOrganization>\n    openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>\n}\n\nexport interface DispatchProps {\n}\n\nexport function mapStateToProps(state: StoreState): StateProps {\n    // TODO: wow, should not do this here\n    if (state.views.browseOrgsView.viewModel === null) {\n        throw new Error('view not ready')\n    }\n    const {\n        views: {\n            browseOrgsView: {\n                viewModel: { organizations, openRequests }\n            }\n        }\n    } = state;\n\n    return {\n        organizations, openRequests\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {}\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Organizations)","import * as React from 'react'\nimport Organizations from './organizations/container'\nimport { SortDirection, AppError } from '../../../types'\nimport { Button, Icon, Radio, Select, Alert, Checkbox } from 'antd'\nimport { RadioChangeEvent } from 'antd/lib/radio'\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group'\nimport { Filter } from '../../../data/models/organization/model'\nimport { NavLink } from 'react-router-dom'\nimport './component.css'\n\nexport interface OrganizationsBrowserProps {\n    totalCount: number;\n    filteredCount: number;\n    sortBy: string;\n    filter: Filter;\n    searching: boolean;\n    error: AppError | null;\n    onSearchOrgs: (searchTerms: Array<string>) => void;\n    onSortOrgs: (sortField: string, sortDirection: SortDirection) => void;\n    onFilterOrgs: (filter: Filter) => void;\n}\n\nexport interface OrganizationsBrowserState {\n    searchInput: string\n    filterByRoleType: string\n    filterByRole: Array<CheckboxValueType>\n    filterByPrivacy: string\n    showAdvancedControls: boolean\n    // filterByPrivacyType: Array<CheckboxValueType>\n}\n\nclass OrganizationsBrowser extends React.Component<OrganizationsBrowserProps, OrganizationsBrowserState> {\n    searchInput: React.RefObject<HTMLInputElement>;\n    searchButton: React.RefObject<Button>;\n    filterByRoleValues: Array<any>\n\n    constructor(props: OrganizationsBrowserProps) {\n        super(props)\n\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.filterByRoleValues = [\n            {\n                label: 'Member',\n                value: 'member'\n            },\n            {\n                label: 'Admin',\n                value: 'admin'\n            },\n            {\n                label: 'Owner',\n                value: 'owner'\n            }\n        ]\n\n        this.state = {\n            searchInput: '',\n            filterByRoleType: 'myorgs',\n            filterByRole: [],\n            filterByPrivacy: 'any',\n            showAdvancedControls: false\n        }\n    }\n\n    // https://reactjs.org/docs/react-component.html#componentdidmount\n    componentDidMount() {\n        this.props.onSearchOrgs([])\n    }\n\n    doSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        const searchTerms = this.searchInput.current.value.split(/[\\s+]/)\n        // dispatch the search event\n        this.props.onSearchOrgs(searchTerms);\n    }\n\n    haveSearchInput() {\n        if (this.state.searchInput && this.state.searchInput.length > 0) {\n            return true\n        }\n        return false\n    }\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.setState({ searchInput: currentSearchInputValue })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.doSearch()\n    }\n\n    onSortByChange(value: string) {\n        switch (value) {\n            case 'owner':\n                this.props.onSortOrgs('owner', SortDirection.ASCENDING)\n                break\n            case 'name':\n                this.props.onSortOrgs('name', SortDirection.ASCENDING)\n                break\n            case 'recentlyAdded':\n                this.props.onSortOrgs('created', SortDirection.DESCENDING)\n                break\n            case 'recentlyChanged':\n                this.props.onSortOrgs('changed', SortDirection.DESCENDING)\n                break\n            case 'memberCount':\n                this.props.onSortOrgs('memberCount', SortDirection.DESCENDING)\n                break\n            case 'narrativeCount':\n                this.props.onSortOrgs('narrativeCount', SortDirection.DESCENDING)\n                break\n        }\n    }\n\n    onSortDirectionChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(this.props.sortBy, e.target.value)\n    }\n\n    onFilterByRoleTypeChange(e: RadioChangeEvent) {\n        let newFilter: Filter\n        this.setState({ filterByRoleType: e.target.value })\n        if (e.target.value === 'select') {\n            this.setState({ filterByRole: [] })\n            newFilter = {\n                ...this.props.filter,\n                roleType: e.target.value\n            }\n        } else {\n            newFilter = {\n                ...this.props.filter,\n                roleType: e.target.value,\n                roles: []\n            }\n            this.setState({ filterByRole: [] })\n        }\n        this.props.onFilterOrgs(newFilter)\n    }\n\n    onFilterByRoleChange(checkedValues: CheckboxValueType[]) {\n        let newFilter: Filter\n        this.setState({ filterByRole: checkedValues })\n        if (checkedValues.length === 0) {\n            this.setState({ filterByRoleType: 'myorgs' })\n            newFilter = {\n                ...this.props.filter,\n                roleType: 'myorgs',\n                roles: checkedValues\n            } as Filter\n        } else {\n            this.setState({ filterByRoleType: 'select' })\n            newFilter = {\n                ...this.props.filter,\n                roleType: 'select',\n                roles: checkedValues\n            } as Filter\n        }\n\n        this.props.onFilterOrgs(newFilter)\n    }\n\n    onFilterByPrivacyChange(e: RadioChangeEvent) {\n        this.setState({ filterByPrivacy: e.target.value })\n        const newFilter = {\n            ...this.props.filter,\n            privacy: e.target.value\n        } as Filter\n        this.props.onFilterOrgs(newFilter)\n    }\n\n    onClearSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        this.searchInput.current.value = ''\n        this.onSearchInputChange()\n        this.doSearch()\n    }\n\n    renderSearchFeedback() {\n        if (this.props.totalCount === 0) {\n            return (\n                <div className=\"OrganizationsBrowser-searchFeedback\">\n                    None available\n                </div>\n            )\n        }\n        if (this.props.filteredCount === 0) {\n            return (\n                <div className=\"OrganizationsBrowser-searchFeedback\">\n                    Ø\n                    /\n                    {this.props.totalCount}\n                    {' '}\n                    orgs\n                </div>\n            )\n\n        }\n        if (this.props.totalCount === this.props.filteredCount) {\n            return (\n                <div className=\"OrganizationsBrowser-searchFeedback\">\n                    <b>{this.props.totalCount}</b>\n                    {' '}\n                    orgs\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"OrganizationsBrowser-searchFeedback\">\n                <b>{this.props.filteredCount}</b>\n                /\n                {this.props.totalCount}\n                {' '}\n                orgs\n            </div>\n        )\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchForm() {\n        return (\n            <form id=\"searchForm\" className=\"OrganizationsBrowser-searchBar\" onSubmit={this.onSubmit.bind(this)}>\n                <input\n                    className=\"OrganizationsBrowser-searchInput\"\n                    placeholder=\"Search Organizations\"\n                    onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                    ref={this.searchInput}></input>\n                <Button\n                    disabled={!this.haveSearchInput()}\n                    ref={this.searchButton}\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                </Button>\n                <Button\n                    onClick={this.onClearSearch.bind(this)}\n                    disabled={!this.haveSearchInput()}\n                    icon=\"close\"\n                >\n                </Button>\n                {this.renderSearchFeedback()}\n            </form>\n        )\n    }\n\n    renderSearchBar() {\n        return (\n            <div className=\"OrganizationsBrowser-searchBarRow\">\n                <div className=\"OrganizationsBrowser-searchBarCol1\">\n                    {this.renderSearchForm()}\n                </div>\n                <div className=\"OrganizationsBrowser-searchBarCol2\">\n                    <NavLink to=\"/newOrganization\"><Button type=\"primary\" icon=\"plus-circle\" style={{ marginRight: '10px' }}>Create Organization</Button></NavLink>\n\n                </div>\n                {/* <div className=\"OrganizationsBrowser-searchBarCol3\">\n                </div> */}\n            </div>\n        )\n    }\n\n    renderSortByControl() {\n        return (\n            <Select\n                onChange={this.onSortByChange.bind(this)}\n                defaultValue={this.props.sortBy}\n                dropdownMatchSelectWidth={true}\n                style={{ width: '10em' }}>\n                <Select.Option value=\"recentlyChanged\" key=\"changed\">Date Changed</Select.Option>\n                <Select.Option value=\"recentlyAdded\" key=\"recent\">Date Established</Select.Option>\n                <Select.Option value=\"name\" key=\"name\">Org Name</Select.Option>\n                <Select.Option value=\"memberCount\" key=\"memberCount\"># members</Select.Option>\n                <Select.Option value=\"narrativeCount\" key=\"narrativeCount\"># narratives</Select.Option>\n            </Select>\n        )\n    }\n\n    onToggleAdvanced() {\n        // When switching back to basic filter mode, we need to ensure that advanced \n        // filtering is removed.\n        if (this.state.showAdvancedControls) {\n            this.setState({ showAdvancedControls: false })\n            let { roleType, roles, privacy } = this.props.filter\n            if (!['myorgs', 'all'].includes(roleType)) {\n                roleType = 'myorgs'\n                this.setState({ filterByRoleType: 'myorgs' })\n            }\n            this.setState({ filterByRole: [], filterByPrivacy: 'any' })\n            roles = []\n            privacy = 'any'\n            this.props.onFilterOrgs({\n                roleType, roles, privacy\n            })\n        } else {\n            this.setState({ showAdvancedControls: true })\n        }\n    }\n\n    renderAdvancedToggle() {\n        if (this.state.showAdvancedControls) {\n            return (\n                <Icon\n                    type=\"ellipsis\"\n                    className=\"IconButton-hover-pressed\"\n                    onClick={this.onToggleAdvanced.bind(this)} />\n            )\n        } else {\n            return (\n                <Icon\n                    type=\"ellipsis\"\n                    className=\"IconButton-hover\"\n                    onClick={this.onToggleAdvanced.bind(this)} />\n            )\n        }\n    }\n\n    renderFilterByRole() {\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px'\n        }\n        if (this.state.showAdvancedControls) {\n            return (\n                <React.Fragment>\n                    <Radio.Group\n                        onChange={this.onFilterByRoleTypeChange.bind(this)}\n                        value={this.state.filterByRoleType}>\n\n                        <Radio value=\"myorgs\" style={radioStyle}>My Orgs</Radio>\n                        <Radio value=\"all\" style={radioStyle}>All Orgs</Radio>\n                        {this.renderAdvancedToggle()}\n                        <Radio value=\"notmyorgs\" style={radioStyle}>Not My Orgs</Radio>\n                        <Radio value=\"select\" style={radioStyle}>Specific Role</Radio>\n                    </Radio.Group>\n\n                    <Checkbox.Group\n                        options={this.filterByRoleValues}\n                        value={this.state.filterByRole}\n                        className=\"OrganizationsBrowser-checkboxGroup\"\n                        onChange={this.onFilterByRoleChange.bind(this)} />\n                </React.Fragment>\n            )\n        } else {\n            return (\n                <React.Fragment>\n                    <Radio.Group\n                        onChange={this.onFilterByRoleTypeChange.bind(this)}\n                        value={this.state.filterByRoleType}>\n\n                        <Radio value=\"myorgs\" style={radioStyle}>My Orgs</Radio>\n                        <Radio value=\"all\" style={radioStyle}>All Orgs</Radio>\n                        {this.renderAdvancedToggle()}\n                    </Radio.Group>\n                </React.Fragment>\n            )\n        }\n    }\n\n    renderFilterByPrivacy() {\n        if (!this.state.showAdvancedControls) {\n            return\n        }\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n            margin: '0px'\n        }\n        return (\n            <React.Fragment>\n                <Radio.Group\n                    onChange={this.onFilterByPrivacyChange.bind(this)}\n                    value={this.state.filterByPrivacy}>\n                    <Radio value=\"any\" style={radioStyle}>Any</Radio>\n                    <Radio value=\"public\" style={radioStyle}>Visible</Radio>\n                    <Radio value=\"private\" style={radioStyle}>Hidden</Radio>\n                </Radio.Group>\n            </React.Fragment>\n        )\n    }\n\n    renderOrganizations() {\n        if (this.props.error) {\n            return (\n                <Alert\n                    type=\"error\"\n                    message={this.props.error.code}\n                    description={this.props.error.message} />\n            )\n        } else {\n            let myOrgsUnfiltered: boolean\n            // TODO: the filter values should be enums.\n            if (this.props.filter.roleType === 'myorgs' &&\n                this.props.filter.roles.length === 0 &&\n                this.props.filter.privacy === 'any' &&\n                // todo should be based on parsed search\n                (!this.searchInput.current ||\n                    this.searchInput.current.value.length === 0)) {\n                myOrgsUnfiltered = true\n            } else {\n                myOrgsUnfiltered = false\n            }\n\n            return (\n                <Organizations myOrgsUnfiltered={myOrgsUnfiltered} />\n            )\n        }\n    }\n\n    renderFilterColumn() {\n        return (\n            <React.Fragment>\n                <div className=\"field-label\">sort by</div>\n                {this.renderSortByControl()}\n\n                <div className=\"field-label\" style={{ marginTop: '10px' }}>filter</div>\n\n                {this.renderFilterByRole()}\n\n                {this.state.showAdvancedControls ? (\n                    <div className=\"field-label\" style={{ marginTop: '10px' }}>visibility</div>\n                ) : (null)}\n                {this.renderFilterByPrivacy()}\n\n                <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                    <hr style={{ border: 0, borderTop: '1px solid rgba(200, 200, 200, 0.4)', width: '80%' }} />\n                    <a href=\"https://docs.google.com/document/d/1xRpFjD3pqPIrHBjNDGht3hX-3y6A0eQRr_v51A5j2hk\" target=\"_blank\">FAQ</a>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationsBrowser scrollable-flex-column\">\n                {this.renderSearchBar()}\n                <div className=\"OrganizationsBrowser-bodyRow\">\n                    <div className=\"OrganizationsBrowser-bodyCol scrollable-flex-column\">\n                        {this.renderOrganizations()}\n                    </div>\n                    <div className=\"OrganizationsBrowser-filterCol\">\n                        {this.renderFilterColumn()}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default OrganizationsBrowser","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState,\n    AppError, SortDirection, BrowseOrgsViewModel\n} from '../../types'\n\nimport * as orgModel from '../../data/models/organization/model'\n\nexport interface Load extends Action<ActionFlag.BROWSE_ORGS_LOAD> {\n    type: ActionFlag.BROWSE_ORGS_LOAD\n}\n\nexport interface LoadStart extends Action<ActionFlag.BROWSE_ORGS_LOAD_START> {\n    type: ActionFlag.BROWSE_ORGS_LOAD_START\n}\n\nexport interface LoadSuccess extends Action<ActionFlag.BROWSE_ORGS_LOAD_SUCCESS> {\n    type: ActionFlag.BROWSE_ORGS_LOAD_SUCCESS\n    defaultViewModel: BrowseOrgsViewModel\n}\n\nexport interface LoadError extends Action<ActionFlag.BROWSE_ORGS_LOAD_ERROR> {\n    type: ActionFlag.BROWSE_ORGS_LOAD_ERROR\n    error: AppError\n}\n\nexport interface Unload extends Action<ActionFlag.BROWSE_ORGS_UNLOAD> {\n    type: ActionFlag.BROWSE_ORGS_UNLOAD\n}\n\nfunction loadStart(): LoadStart {\n    return {\n        type: ActionFlag.BROWSE_ORGS_LOAD_START\n    }\n}\n\nfunction loadSuccess(defaultViewModel: BrowseOrgsViewModel): LoadSuccess {\n    return {\n        type: ActionFlag.BROWSE_ORGS_LOAD_SUCCESS,\n        defaultViewModel: defaultViewModel\n    }\n}\n\nfunction loadError(error: AppError): LoadError {\n    return {\n        type: ActionFlag.BROWSE_ORGS_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.BROWSE_ORGS_UNLOAD\n    }\n}\n\n// SORTING\n\nexport interface SortOrgs extends Action<ActionFlag.BROWSE_ORGS_SORT> {\n    type: ActionFlag.BROWSE_ORGS_SORT,\n    sortField: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.BROWSE_ORGS_SORT_START> {\n    type: ActionFlag.BROWSE_ORGS_SORT_START,\n    sortField: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsSuccess extends Action<ActionFlag.BROWSE_ORGS_SORT_SUCCESS> {\n    type: ActionFlag.BROWSE_ORGS_SORT_SUCCESS\n}\n\nexport interface SortOrgsError extends Action<ActionFlag.BROWSE_ORGS_SORT_ERROR> {\n    type: ActionFlag.BROWSE_ORGS_SORT_ERROR,\n    error: AppError\n}\n\n\nexport function sortOrgsStart(sortField: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.BROWSE_ORGS_SORT_START,\n        sortField: sortField,\n        sortDirection: sortDirection\n    }\n}\n\n// SEARCHING\n\n// Called upon the start of a search call\n// Sets the ui state to enable a spinner\n// and also search query data to be reflected in the ui\nexport interface SearchOrgs extends Action<ActionFlag.BROWSE_ORGS_SEARCH> {\n    type: ActionFlag.BROWSE_ORGS_SEARCH,\n    searchTerms: Array<string>\n}\n\nexport interface SearchOrgsStart extends Action<ActionFlag.BROWSE_ORGS_SEARCH_START> {\n    type: ActionFlag.BROWSE_ORGS_SEARCH_START,\n    searchTerms: Array<string>\n}\n\n// Called upon successful completion of a search\n// Sets the organizations found\nexport interface SearchOrgsSuccess extends Action<ActionFlag.BROWSE_ORGS_SEARCH_SUCCESS> {\n    type: ActionFlag.BROWSE_ORGS_SEARCH_SUCCESS\n    organizations: Array<orgModel.BriefOrganization>\n    totalCount: number\n    openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>\n}\n\n// Called upon a search error\n// Sets error state\nexport interface SearchOrgsError extends Action<ActionFlag.BROWSE_ORGS_SEARCH_ERROR> {\n    type: ActionFlag.BROWSE_ORGS_SEARCH_ERROR\n    error: AppError\n}\n\n\n// searchTerms: Array<string>\nfunction searchOrgsStart(searchTerms: Array<string>): SearchOrgsStart {\n    return {\n        type: ActionFlag.BROWSE_ORGS_SEARCH_START,\n        searchTerms\n    }\n}\n\nfunction searchOrgsSuccess(organizations: Array<orgModel.BriefOrganization>, totalCount: number, openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>): SearchOrgsSuccess {\n    return {\n        type: ActionFlag.BROWSE_ORGS_SEARCH_SUCCESS,\n        organizations: organizations,\n        totalCount: totalCount,\n        openRequests: openRequests\n    }\n}\n\nfunction searchOrgsError(error: AppError): SearchOrgsError {\n    return {\n        type: ActionFlag.BROWSE_ORGS_SEARCH_ERROR,\n        error: error\n    }\n}\n\n// FILTER \n\n// Filter orgs\nexport interface FilterOrgs extends Action<ActionFlag.BROWSE_ORGS_FILTER> {\n    type: ActionFlag.BROWSE_ORGS_FILTER,\n    filter: string\n}\n\nexport interface FilterOrgsStart extends Action<ActionFlag.BROWSE_ORGS_FILTER_START> {\n    type: ActionFlag.BROWSE_ORGS_FILTER_START,\n    filter: orgModel.Filter\n}\n\n\nexport function filterOrgsStart(filter: orgModel.Filter): FilterOrgsStart {\n    return {\n        type: ActionFlag.BROWSE_ORGS_FILTER_START,\n        filter: filter\n    }\n}\n\nexport function load() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        const defaultSearchTerms: Array<string> = []\n        // TODO: the sort field and direction are still set directly at this level;\n        // in the ui narrativeCount is a single sortBy field, with the direction\n        // fixed in the model's applySortComparison\n        const defaultSortField = 'narrativeCount'\n        const defaultSortDirection = SortDirection.DESCENDING\n        const defaultFilter = { roleType: 'myorgs', roles: [], privacy: 'any' }\n\n        try {\n            const { organizations, total } = await orgClient.queryOrgs({\n                searchTerms: defaultSearchTerms,\n                sortField: defaultSortField,\n                sortDirection: defaultSortDirection,\n                filter: defaultFilter,\n                username\n            })\n\n            const adminOrgs = organizations\n                .filter((org) => {\n                    return (\n                        org.relation === orgModel.UserRelationToOrganization.ADMIN ||\n                        org.relation === orgModel.UserRelationToOrganization.OWNER\n                    )\n                })\n                .map((org) => {\n                    return org.id\n                })\n            let openRequests\n            if (adminOrgs.length > 0) {\n                openRequests = await orgClient.getOpenRequestsStatus({ organizationIds: adminOrgs })\n            } else {\n                openRequests = new Map()\n            }\n\n            // dispatch(searchOrgsSuccess(organizations, total, openRequests))\n            // populate default browse orgs props\n            const defaultViewModel: BrowseOrgsViewModel = {\n                rawOrganizations: organizations,\n                organizations: organizations,\n                openRequests: openRequests,\n                totalCount: total,\n                filteredCount: organizations.length,\n                sortField: defaultSortField,\n                sortDirection: defaultSortDirection,\n                filter: defaultFilter,\n                searchTerms: defaultSearchTerms,\n                selectedOrganizationId: null,\n                searching: false,\n                error: null\n            }\n            // done!\n            dispatch(loadSuccess(defaultViewModel))\n        } catch (ex) {\n            console.error('Error querying orgs', ex.name, ex.message)\n            dispatch(searchOrgsError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n\n    }\n}\n\n// TODO: proper typing here \nexport function searchOrgs(searchTerms: Array<string>) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchOrgsStart(searchTerms))\n\n        const {\n            views: { browseOrgsView },\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        if (browseOrgsView.viewModel === null) {\n            dispatch(searchOrgsError({\n                code: 'invalid-state',\n                message: 'Search orgs may not be called without a defined view'\n            }))\n            return\n        }\n\n        const { viewModel: { sortField, sortDirection, filter } } = browseOrgsView\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const { organizations, total } = await orgClient.queryOrgs({\n                searchTerms: searchTerms,\n                sortField, sortDirection, filter, username\n            })\n\n            // LEFT OFF HERE\n            // NOW GET THE PENDING REQUESTS...\n            const adminOrgs = organizations\n                .filter((org) => {\n                    return (\n                        org.relation === orgModel.UserRelationToOrganization.ADMIN ||\n                        org.relation === orgModel.UserRelationToOrganization.OWNER\n                    )\n                })\n                .map((org) => {\n                    return org.id\n                })\n            let openRequests\n            if (adminOrgs.length > 0) {\n                openRequests = await orgClient.getOpenRequestsStatus({ organizationIds: adminOrgs })\n            } else {\n                openRequests = new Map()\n            }\n\n            dispatch(searchOrgsSuccess(organizations, total, openRequests))\n        } catch (ex) {\n            console.error('Error querying orgs', ex.name, ex.message)\n            dispatch(searchOrgsError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function sortOrgs(sortField: string, sortDirection: SortDirection) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sortOrgsStart(sortField, sortDirection))\n\n        const {\n            views: { browseOrgsView },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        if (browseOrgsView.viewModel === null) {\n            dispatch(searchOrgsError({\n                code: 'invalid-state',\n                message: 'Search orgs may not be called without a defined view'\n            }))\n            return\n        }\n\n        const { viewModel: { searchTerms, filter } } = browseOrgsView\n\n        try {\n            const { organizations, total } = await orgClient.queryOrgs({\n                searchTerms, filter, username,\n                sortField, sortDirection,\n            })\n\n            // LEFT OFF HERE\n            // NOW GET THE PENDING REQUESTS...\n            const adminOrgs = organizations\n                .filter((org) => {\n                    return (\n                        org.relation === orgModel.UserRelationToOrganization.ADMIN ||\n                        org.relation === orgModel.UserRelationToOrganization.OWNER\n                    )\n                })\n                .map((org) => {\n                    return org.id\n                })\n            let openRequests\n            if (adminOrgs.length > 0) {\n                openRequests = await orgClient.getOpenRequestsStatus({ organizationIds: adminOrgs })\n            } else {\n                openRequests = new Map()\n            }\n\n            dispatch(searchOrgsSuccess(organizations, total, openRequests))\n        } catch (ex) {\n            console.error('Error querying orgs', ex.name, ex.message)\n            dispatch(searchOrgsError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function filterOrgs(filter: orgModel.Filter) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(filterOrgsStart(filter))\n\n        const {\n            views: { browseOrgsView },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        if (browseOrgsView.viewModel === null) {\n            dispatch(searchOrgsError({\n                code: 'invalid-state',\n                message: 'Search orgs may not be called without a defined view'\n            }))\n            return\n        }\n\n        const { viewModel: { searchTerms, sortField, sortDirection } } = browseOrgsView\n\n        try {\n            const { organizations, total } = await orgClient.queryOrgs({\n                searchTerms, filter, username,\n                sortField, sortDirection,\n            })\n\n            // LEFT OFF HERE\n            // NOW GET THE PENDING REQUESTS...\n            const adminOrgs = organizations\n                .filter((org) => {\n                    return (\n                        org.relation === orgModel.UserRelationToOrganization.ADMIN ||\n                        org.relation === orgModel.UserRelationToOrganization.OWNER\n                    )\n                })\n                .map((org) => {\n                    return org.id\n                })\n            let openRequests\n            if (adminOrgs.length > 0) {\n                openRequests = await orgClient.getOpenRequestsStatus({ organizationIds: adminOrgs })\n            } else {\n                openRequests = new Map()\n            }\n\n            dispatch(searchOrgsSuccess(organizations, total, openRequests))\n        } catch (ex) {\n            console.error('Error querying orgs', ex.name, ex.message)\n            dispatch(searchOrgsError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n","import OrganizationsBrowser from './component'\nimport { StoreState, SortDirection, AppError } from '../../../types'\nimport * as actions from '../../../redux/actions/browseOrgs'\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as orgModel from '../../../data/models/organization/model'\n//\n// Typing for the mapState and mapDispatch\n//\n\nexport interface OwnProps {\n    sortBy: string\n}\nexport interface LinkStateProps {\n    organizations: Array<orgModel.BriefOrganization>\n    openRequests: Map<orgModel.OrganizationID, orgModel.RequestStatus>\n    totalCount: number\n    filteredCount: number\n    filter: orgModel.Filter\n    searching: boolean,\n    error: AppError | null\n}\n\nexport interface LinkDispatchProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void,\n    onSortOrgs: (sortField: string, sortDirection: SortDirection) => void,\n    onFilterOrgs: (filter: orgModel.Filter) => void\n}\n\n// note second arg is the component props, but we don't have any component props to merge in.\nexport function mapStateToProps(storeState: StoreState): LinkStateProps {\n    if (!storeState.views.browseOrgsView.viewModel) {\n        throw new Error('No view model!')\n    }\n\n    const {\n        views: {\n            browseOrgsView: {\n                viewModel: {\n                    organizations, openRequests, error,\n                    totalCount, filteredCount, filter, searching }\n            }\n        }\n    } = storeState\n\n    return {\n        organizations,\n        openRequests,\n        totalCount,\n        filteredCount,\n        filter,\n        error,\n        searching: searching\n    }\n\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.SearchOrgs | actions.SortOrgs | actions.FilterOrgs>): LinkDispatchProps {\n    return {\n        onSearchOrgs: (searchTerms: Array<string>) => {\n            // TODO proper typing here\n            dispatch(actions.searchOrgs(searchTerms) as any)\n        },\n        onSortOrgs: (sortBy: string, sortDirection: SortDirection) => {\n            // TODO proper typing here\n            dispatch(actions.sortOrgs(sortBy, sortDirection) as any)\n        },\n        onFilterOrgs: (filter: orgModel.Filter) => {\n            dispatch(actions.filterOrgs(filter) as any)\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationsBrowser)","import * as React from 'react';\nimport { ComponentLoadingState, StoreState, BrowseOrgsView } from '../../../types';\nimport Container from './container';\n\n// THe redux connection\n\nimport { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../redux/actions/browseOrgs';\nimport { Spin, Alert } from 'antd';\n\n// First the loader component, which takes care of a loading view, error view, and the\n// container.\n\nexport interface LoaderProps {\n    view: BrowseOrgsView;\n    onLoad: () => void;\n    onUnload: () => void;\n}\n\ninterface LoaderState {}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props);\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading Organizations... <Spin />\n            </div>\n        );\n        return (\n            <Alert\n                type=\"info\"\n                message={message}\n                style={{\n                    width: '20em',\n                    padding: '20px',\n                    margin: '20px auto'\n                }}\n            />\n        );\n    }\n\n    renderError() {\n        if (!this.props.view.error) {\n            return;\n        }\n        return <Alert type=\"error\" message={this.props.view.error.message} />;\n    }\n\n    render() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                return this.renderLoading();\n            case ComponentLoadingState.LOADING:\n                return this.renderLoading();\n            case ComponentLoadingState.ERROR:\n                return this.renderError();\n            case ComponentLoadingState.SUCCESS:\n                return <Container sortBy=\"narrativeCount\" />;\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                // should only appear briefly as the LOAD event is processed.\n                this.props.onLoad();\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n}\n\nexport interface OwnProps {}\n\ninterface StateProps {\n    view: BrowseOrgsView;\n}\n\ninterface DispatchProps {\n    onLoad: () => void;\n    onUnload: () => void;\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        view: state.views.browseOrgsView\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(actions.load() as any);\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Loader);\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, AppError, UIError, UIErrorType, EditableOrganization, EditState, ValidationState, SyncState, ValidationErrorType } from '../../types'\n\nimport * as orgModel from '../../data/models/organization/model'\nimport Validation from '../../data/models/organization/validation'\nimport DebouncingProcess from '../../lib/DebouncingProcess'\nimport { UIServiceClient } from '../../data/apis/uiService'\n\n// ACTIONS\n\nexport interface Save extends Action<ActionFlag.ADD_ORG_SAVE> {\n    type: ActionFlag.ADD_ORG_SAVE\n}\n\nexport interface SaveStart extends Action<ActionFlag.ADD_ORG_SAVE_START> {\n    type: ActionFlag.ADD_ORG_SAVE_START\n}\n\nexport interface SaveSuccess extends Action<ActionFlag.ADD_ORG_SAVE_SUCCESS> {\n    type: ActionFlag.ADD_ORG_SAVE_SUCCESS,\n    organization: orgModel.Organization\n}\n\nexport interface SaveError extends Action<ActionFlag.ADD_ORG_SAVE_ERROR> {\n    type: ActionFlag.ADD_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Editing\n\nexport interface Load extends Action<ActionFlag.ADD_ORG_LOAD> {\n    type: ActionFlag.ADD_ORG_LOAD;\n}\n\nexport interface LoadStart {\n    type: ActionFlag.ADD_ORG_LOAD_START\n}\n\nexport interface LoadSuccess {\n    type: ActionFlag.ADD_ORG_LOAD_SUCCESS,\n    newOrganization: EditableOrganization\n}\n\nexport interface LoadError {\n    type: ActionFlag.ADD_ORG_LOAD_ERROR,\n    error: AppError\n}\n\nexport interface Unload {\n    type: ActionFlag.ADD_ORG_UNLOAD\n}\n\n// Evaluating state of form \n\nexport interface AddOrgEvaluate extends Action<ActionFlag.ADD_ORG_EVALUATE> {\n    type: ActionFlag.ADD_ORG_EVALUATE\n}\n\nexport interface AddOrgEvaluateOK extends Action<ActionFlag.ADD_ORG_EVALUATE_OK> {\n    type: ActionFlag.ADD_ORG_EVALUATE_OK\n}\n\nexport interface AddOrgEvaluateErrors extends Action<ActionFlag.ADD_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n}\n\n// Updating name field\n\nexport interface UpdateName extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME\n    name: string\n}\n\nexport interface UpdateNameSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS\n    name: string\n}\n\nexport interface UpdateNameError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR\n    name: string,\n    error: ValidationState\n}\n\n// Updating logo url field\n\nexport interface UpdateLogoUrl extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL\n    name: string\n}\n\nexport interface UpdateLogoUrlSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_SUCCESS\n    logoUrl: string | null\n}\n\nexport interface UpdateLogoUrlError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_ERROR\n    logoUrl: string | null,\n    error: ValidationState\n}\n\n// Updating home url field\nexport interface UpdateHomeUrl extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_HOME_URL\n    homeUrl: string | null\n}\n\nexport interface UpdateHomeUrlSuccess extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_SUCCESS\n    homeUrl: string | null\n}\n\nexport interface UpdateHomeUrlError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_ERROR\n    homeUrl: string | null\n    error: ValidationState\n}\n\n// Updating research interests field\nexport interface UpdateResearchInterests extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS\n    researchInterests: string\n}\n\nexport interface UpdateResearchInterestsSuccess extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS\n    researchInterests: string\n}\n\nexport interface UpdateResearchInterestsError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_ERROR\n    researchInterests: string\n    error: ValidationState\n}\n\n// Updating id Field\n\nexport interface UpdateId extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID,\n    id: string\n}\n\nexport interface UpdateIdSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n    id: string\n}\n\nexport interface UpdateIdError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n    id: string,\n    error: ValidationState\n}\n\nexport interface UpdateIdPass extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_PASS,\n    id: string\n}\n\n// Updating description field\n\nexport interface UpdateDescription extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface UpdateDescriptionSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface UpdateDescriptionError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: ValidationState\n}\n\n// Update is private field\n\nexport interface UpdateIsPrivate extends Action<ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE> {\n    type: ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE\n    isPrivate: boolean\n}\n\nexport interface UpdateIsPrivateSuccess extends Action<ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS> {\n    type: ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n    isPrivate: boolean\n}\n\nexport interface UpdateIsPrivateError extends Action<ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_ERROR> {\n    type: ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_ERROR,\n    error: ValidationState\n}\n\n\n// ACTION CREATORS\n\nexport function saveStart(): SaveStart {\n    return {\n        type: ActionFlag.ADD_ORG_SAVE_START\n    }\n}\n\nexport function saveSuccess(org: orgModel.Organization): SaveSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_SAVE_SUCCESS,\n        organization: org\n    }\n}\n\nexport function saveError(error: AppError): SaveError {\n    return {\n        type: ActionFlag.ADD_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n// Editing\n\nfunction loadStart() {\n    return {\n        type: ActionFlag.ADD_ORG_LOAD_START\n    }\n}\n\nfunction loadSuccess(newOrganization: EditableOrganization) {\n    return {\n        type: ActionFlag.ADD_ORG_LOAD_SUCCESS,\n        newOrganization: newOrganization\n    }\n}\n\nfunction loadError(error: AppError) {\n    return {\n        type: ActionFlag.ADD_ORG_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload() {\n    return {\n        type: ActionFlag.ADD_ORG_UNLOAD\n    }\n}\n\n// Evaluate\n\nexport function addOrgEvaluateOk(): AddOrgEvaluateOK {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_OK\n    }\n}\n\nexport function AddOrgEvaluateErrors(): AddOrgEvaluateErrors {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Update Name\n\nexport function updateNameSuccess(name: string): UpdateNameSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function updateNameError(name: string, error: ValidationState): UpdateNameError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\nexport function updateIdSuccess(id: string): UpdateIdSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n        id: id\n    }\n}\n\nexport function updateIdPass(id: string): UpdateIdPass {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_PASS,\n        id: id\n    }\n}\n\n// Update Logo URL Hash\n\nexport function updateLogoUrlSuccess(logoUrl: string | null): UpdateLogoUrlSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_SUCCESS,\n        logoUrl: logoUrl\n    }\n}\n\nexport function updateLogoUrlError(logoUrl: string | null, error: ValidationState): UpdateLogoUrlError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_ERROR,\n        logoUrl: logoUrl,\n        error: error\n    }\n}\n\n// Update Home URL Hash\n\nexport function updateHomeUrlSuccess(logoUrl: string | null): UpdateHomeUrlSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_SUCCESS,\n        homeUrl: logoUrl\n    }\n}\n\nexport function updateHomeUrlError(logoUrl: string | null, error: ValidationState): UpdateHomeUrlError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_ERROR,\n        homeUrl: logoUrl,\n        error: error\n    }\n}\n\n// Update Id\n\nexport function updateIdError(id: string, error: ValidationState): UpdateIdError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n        id: id,\n        error: error\n    }\n}\n\nexport function updateDescriptionSuccess(description: string): UpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function updateDescriptionError(description: string, error: ValidationState): UpdateDescriptionError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function load() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const newOrg: EditableOrganization = {\n            id: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgId('')[1]\n            },\n            name: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgName('')[1]\n            },\n            logoUrl: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgLogoUrl('')[1]\n            },\n            homeUrl: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgHomeUrl('')[1]\n            },\n            researchInterests: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgResearchInterests('')[1]\n            },\n            description: {\n                value: '',\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: Validation.validateOrgDescription('')[1]\n            },\n            isPrivate: {\n                value: false,\n                remoteValue: null,\n                syncState: SyncState.CLEAN,\n                validationState: {\n                    type: ValidationErrorType.OK,\n                    validatedAt: new Date()\n                }\n            }\n        }\n        dispatch(loadSuccess(newOrg))\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrg() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const state = getState()\n\n        // This check is to satisfy TS. Since viewModel is nullable, it has no way \n        // of knowing that our app flow ensures that it is populated.\n        // In terms of generalized usage of the redux store, though, there is no\n        // way to ensure this! So we really should perform our state checks before \n        // handling any event\n        if (!state.views.addOrgView.viewModel) {\n            dispatch(saveError({\n                code: 'invalid',\n                message: 'Unexpected condition: no view model'\n            }))\n            return\n        }\n\n        // TODO: other validations!!!\n\n        dispatch(saveStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            views: {\n                addOrgView: { viewModel: { newOrganization } },\n            },\n            app: { config }\n        } = state\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        if (!newOrganization) {\n            dispatch(saveError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        orgClient.addOrg(newOrganization, username)\n            .then((org: orgModel.Organization) => {\n                dispatch(saveSuccess(org))\n            })\n            .catch((error) => {\n                console.error('error adding', newOrganization, error)\n\n                // note that we dispatch an AppError compliant object,\n                // which wraps the original exception object.\n                dispatch(saveError({\n                    code: error.code || error.name,\n                    message: error.message,\n                    exception: error\n                }))\n            })\n    }\n}\n\nexport function addOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const state = getState()\n        if (!state.views.addOrgView.viewModel) {\n            dispatch(saveError({\n                code: 'invalid',\n                message: 'Unexpected condition: no view model'\n            }))\n            return\n        }\n\n        const {\n            views: {\n                addOrgView: {\n                    viewModel: { editState, newOrganization } }\n            }\n        } = state\n\n        if (!newOrganization) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.name.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.id.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        // TODO: quick hack to allow unmodified fields to evaluate to true.\n\n        if (newOrganization.logoUrl.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.homeUrl.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.researchInterests.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.description.validationState.type !== ValidationErrorType.OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(addOrgEvaluateOk())\n    }\n}\n\nfunction orgModelFromState(state: StoreState) {\n    const {\n        auth: { authorization: { token, username } },\n        app: { config } } = state\n    return new orgModel.OrganizationModel({\n        token, username,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url\n    })\n}\n\nexport function updateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(updateNameError(validatedName, error))\n        } else {\n            dispatch(updateNameSuccess(validatedName))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nlet checkLogoUrlProcess: DebouncingProcess\n\nclass CheckIfLogoUrlExistsProcess extends DebouncingProcess {\n    dispatch: ThunkDispatch<StoreState, void, Action>\n    url: string\n    timeout: number\n    serviceWizardURL: string\n    token: string\n    constructor({ delay, dispatch, url, timeout, serviceWizardURL, token }: { delay: number, dispatch: ThunkDispatch<StoreState, void, Action>, url: string, timeout: number, serviceWizardURL: string, token: string }) {\n        super({ delay })\n\n        this.dispatch = dispatch\n        this.url = url\n        this.serviceWizardURL = serviceWizardURL\n        this.token = token\n        this.timeout = timeout\n    }\n\n    async task(): Promise<void> {\n        try {\n            const client = new UIServiceClient({\n                url: this.serviceWizardURL,\n                token: this.token\n            })\n            const result = await client.checkImageURL({ url: this.url, timeout: this.timeout })\n\n            if (this.canceled) {\n                return\n            }\n\n            if (result.is_valid) {\n                this.dispatch(updateLogoUrlSuccess(this.url))\n            } else {\n                switch (result.error.code) {\n                    case 'not-found':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'This logo url does not exist'\n                        }))\n                        break\n                    case 'invalid-content-type':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Invalid content type: ' + result.error.info['content-type']\n                        }))\n                        break\n                    case 'missing-content-type':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Missing content type'\n                        }))\n                        break\n                    default:\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'unknown error'\n                        }))\n                        break\n                }\n            }\n        } catch (ex) {\n            if (this.canceled) {\n                return\n            }\n            this.dispatch(updateLogoUrlError(this.url, {\n                type: ValidationErrorType.ERROR,\n                validatedAt: new Date(),\n                message: 'Error checking logo url: ' + ex.message\n            }))\n        }\n        this.dispatch(addOrgEvaluate())\n    }\n}\n\nexport function updateLogoUrl(logoUrl: string | null) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        if (checkLogoUrlProcess) {\n            checkLogoUrlProcess.cancel()\n        }\n\n        const [validatedLogoUrl, error] = Validation.validateOrgLogoUrl(logoUrl)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_ERROR,\n                logoUrl: logoUrl,\n                error: error\n            } as UpdateLogoUrlError)\n            return\n        }\n\n        // initial success, but the check may invalidate it.\n        dispatch({\n            type: ActionFlag.ADD_ORG_UPDATE_LOGO_URL_SUCCESS,\n            logoUrl: validatedLogoUrl\n        })\n\n        dispatch(addOrgEvaluate())\n\n        if (validatedLogoUrl !== null && validatedLogoUrl.length > 0) {\n            const {\n                auth: { authorization: { token } },\n                app: { config: { services: { ServiceWizard: { url: serviceWizardURL } } } }\n            } = getState()\n\n            checkLogoUrlProcess = new CheckIfLogoUrlExistsProcess({\n                delay: 100,\n                url: validatedLogoUrl,\n                timeout: 1000,\n                dispatch, serviceWizardURL, token\n            })\n\n            checkLogoUrlProcess.start()\n        }\n    }\n}\n\n// export function updateLogoUrl(name: string | null) {\n//     return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n//         const [validatedLogoUrl, error] = Validation.validateOrgLogoUrl(name)\n\n//         if (error.type !== ValidationErrorType.OK) {\n//             dispatch(updateLogoUrlError(validatedLogoUrl, error))\n//         } else {\n//             dispatch(updateLogoUrlSuccess(validatedLogoUrl))\n//         }\n//         dispatch(addOrgEvaluate())\n//     }\n// }\n\nlet checkHomeUrlProcess: DebouncingProcess\n\nclass CheckIfHomeUrlExistsProcess extends DebouncingProcess {\n    dispatch: ThunkDispatch<StoreState, void, Action>\n    url: string\n    timeout: number\n    serviceWizardURL: string\n    token: string\n    constructor({ delay, dispatch, url, timeout, serviceWizardURL, token }: { delay: number, dispatch: ThunkDispatch<StoreState, void, Action>, url: string, timeout: number, serviceWizardURL: string, token: string }) {\n        super({ delay })\n\n        this.dispatch = dispatch\n        this.url = url\n        this.serviceWizardURL = serviceWizardURL\n        this.token = token\n        this.timeout = timeout\n    }\n\n    async task(): Promise<void> {\n        try {\n            const client = new UIServiceClient({\n                url: this.serviceWizardURL,\n                token: this.token\n            })\n            const result = await client.checkHTMLURL({ url: this.url, timeout: this.timeout })\n\n            if (this.canceled) {\n                return\n            }\n\n            if (result.is_valid) {\n                this.dispatch(updateHomeUrlSuccess(this.url))\n            } else {\n                switch (result.error.code) {\n                    case 'not-found':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'This home url does not exist'\n                        }))\n                        break\n                    case 'invalid-content-type':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Invalid content type: ' + result.error.info['content-type']\n                        }))\n                        break\n                    case 'missing-content-type':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Missing content type'\n                        }))\n                        break\n                    default:\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'unknown error'\n                        }))\n                        break\n                }\n            }\n        } catch (ex) {\n            if (this.canceled) {\n                return\n            }\n            this.dispatch(updateHomeUrlError(this.url, {\n                type: ValidationErrorType.ERROR,\n                validatedAt: new Date(),\n                message: 'Error checking home url: ' + ex.message\n            }))\n        }\n        this.dispatch(addOrgEvaluate())\n    }\n}\n\nexport function updateHomeUrl(homeUrl: string | null) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        if (checkHomeUrlProcess) {\n            checkHomeUrlProcess.cancel()\n        }\n\n        const [validatedHomeUrl, error] = Validation.validateOrgHomeUrl(homeUrl)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_ERROR,\n                homeUrl: homeUrl,\n                error: error\n            } as UpdateHomeUrlError)\n            return\n        }\n\n        // initial success, but the check may invalidate it.\n        dispatch({\n            type: ActionFlag.ADD_ORG_UPDATE_HOME_URL_SUCCESS,\n            homeUrl: validatedHomeUrl\n        })\n\n        dispatch(addOrgEvaluate())\n\n        if (validatedHomeUrl !== null && validatedHomeUrl.length > 0) {\n            const {\n                auth: { authorization: { token } },\n                app: { config: { services: { ServiceWizard: { url: serviceWizardURL } } } }\n            } = getState()\n\n            checkHomeUrlProcess = new CheckIfHomeUrlExistsProcess({\n                delay: 100,\n                url: validatedHomeUrl,\n                timeout: 1000,\n                dispatch, serviceWizardURL, token\n            })\n\n            checkHomeUrlProcess.start()\n        }\n    }\n}\n\nexport function updateResearchInterests(researchInterests: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedResearchInterests, error] = Validation.validateOrgResearchInterests(researchInterests)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_ERROR,\n                researchInterests: validatedResearchInterests,\n                error: error\n            } as UpdateResearchInterestsError)\n        } else {\n            dispatch({\n                type: ActionFlag.ADD_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS,\n                researchInterests: validatedResearchInterests\n            }) as UpdateResearchInterestsSuccess\n        }\n    }\n}\n\nexport function updateIsPrivate(isPrivate: boolean) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        // no validation for now ... what is there to validate?\n\n        dispatch({\n            type: ActionFlag.ADD_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n            isPrivate\n        })\n        dispatch(addOrgEvaluate())\n    }\n}\n\nclass CheckIfExistsProcess extends DebouncingProcess {\n    model: orgModel.OrganizationModel\n    dispatch: ThunkDispatch<StoreState, void, Action>\n    id: string\n    constructor({ delay, model, dispatch, id }: { delay: number, model: orgModel.OrganizationModel, dispatch: ThunkDispatch<StoreState, void, Action>, id: string }) {\n        super({ delay })\n\n        this.model = model\n        this.dispatch = dispatch\n        this.id = id\n    }\n\n    async task(): Promise<void> {\n        try {\n            const exists = await this.model.orgExists(this.id)\n            if (this.canceled) {\n                return\n            }\n            if (exists) {\n                this.dispatch(updateIdError(this.id, {\n                    type: ValidationErrorType.ERROR,\n                    validatedAt: new Date(),\n                    message: 'This org id is already in use'\n                }))\n            } else {\n                this.dispatch(updateIdSuccess(this.id))\n            }\n        } catch (ex) {\n            if (this.canceled) {\n                return\n            }\n            this.dispatch(updateIdError(this.id, {\n                type: ValidationErrorType.ERROR,\n                validatedAt: new Date(),\n                message: 'Error checking for org id existence: ' + ex.message\n            }))\n        }\n        this.dispatch(addOrgEvaluate())\n    }\n}\n\nlet checkIDProcess: DebouncingProcess\n\n/*\nupdateId\n\nHandles updating an org id update from the new organization form.\n\nThis action handles the normal field validation, but also requires a check\nthat the org id is not in use. This requires an api call to the groups \nservice, which introduces an indeterminate latency, and thus special handling.\n*/\n\nexport function updateId(id: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        if (checkIDProcess) {\n            checkIDProcess.cancel()\n        }\n\n        const [validatedId, error] = Validation.validateOrgId(id)\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(updateIdError(validatedId, error))\n            dispatch(addOrgEvaluate())\n            return\n        }\n\n        // this is an unusual action -- it is in intermediate \"success\" -- the field\n        // has passed the synchronous syntax validation, so we need to feed the value \n        // back to the form, but the eventual success occurs later.\n        dispatch(updateIdPass(id))\n\n        const {\n            views: {\n                addOrgView: { viewModel }\n            }\n        } = getState()\n\n        if (!viewModel) {\n            // do nothing\n            return\n        }\n\n        // For the id existence check, we want to ensure that we don't trip up the\n        // user experience. \n        // Think of the org id check as an async process.\n        // If that process is active when an update appears here, cancel it and proceed.\n        // Launch an existence check process which will initiate the check after some\n        // period of time (e.g. 100ms). This ensures that a fast typist will not trigger\n        // a sequence of existence checks. \n        // In that process, after the existence check, look to see if the process has\n        // been canceled (see step 1 above). If so, do not issue any redux events.\n        // Otherwise, issue the success or error events as appropriate.\n\n        const model = orgModelFromState(getState())\n\n        checkIDProcess = new CheckIfExistsProcess({\n            delay: 100,\n            id: validatedId,\n            dispatch: dispatch,\n            model: model\n        })\n\n        checkIDProcess.start()\n    }\n}\n\nexport function updateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const model = orgModelFromState(getState())\n\n        const [validatedDescription, error] = Validation.validateOrgDescription(description)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(updateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(updateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}","export default abstract class DebouncingProcess {\n\n    delay: number\n    canceled: boolean\n    timer: number | null\n\n    constructor({ delay }: { delay: number }) {\n        this.delay = delay\n        this.canceled = false\n        this.timer = null\n    }\n\n    abstract async task(): Promise<void>\n\n    start() {\n        if (this.timer) {\n            window.clearTimeout(this.timer)\n        }\n        this.timer = window.setTimeout(async () => {\n            if (!this.canceled) {\n                try {\n                    // TODO: left off here. we need to be able to deny\n                    // the consequence of the check if we have canceled...\n                    // so inside the fun\n                    await this.task()\n                } catch (ex) {\n                    console.warn('debouncing process exception: ' + ex.message)\n                }\n            } else {\n                this.canceled = false;\n            }\n            this.timer = null;\n        }, this.delay)\n    }\n\n    cancel() {\n        if (this.timer) {\n            this.canceled = true;\n        }\n    }\n}","import { DynamicServiceClient, DynamicServiceClientParams } from './dynamicServiceClient'\n\nexport interface UIServiceClientParams extends DynamicServiceClientParams {\n\n}\n\nexport interface CheckImageURLParam {\n    url: string,\n    timeout: number\n}\n\nexport interface CheckImageURLResult {\n    is_valid: boolean\n    error: {\n        code: string\n        info: any\n    }\n}\n\nexport class UIServiceClient extends DynamicServiceClient {\n\n    static module: string = 'UIService'\n\n    constructor(params: UIServiceClientParams) {\n        super(params)\n    }\n\n    async checkImageURL({ url, timeout }: CheckImageURLParam): Promise<CheckImageURLResult> {\n        const [[result, err], serverError] = await this.callFunc('check_image_url', [\n            { url, timeout }\n        ])\n\n        if (serverError) {\n            throw new Error(serverError.message)\n        }\n\n        if (err) {\n            throw new Error(err['message'])\n        }\n\n        return result as CheckImageURLResult\n    }\n\n    async checkHTMLURL({ url, timeout }: CheckImageURLParam): Promise<CheckImageURLResult> {\n        const [[result, err], serverError] = await this.callFunc('check_html_url', [\n            { url, timeout }\n        ])\n\n        if (serverError) {\n            throw new Error(serverError.message)\n        }\n\n        if (err) {\n            throw new Error(err['message'])\n        }\n\n        return result as CheckImageURLResult\n    }\n\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Marked } from 'marked-ts'\nimport { Button, Icon, Modal, Input, Checkbox, Tooltip, Collapse, Tabs } from 'antd'\nimport md5 from 'md5'\nimport {\n    EditableOrganization, SaveState, ValidationState, EditState,\n    AppError, Editable, ValidationErrorType, SyncState, EditableString,\n    EditableNullableString, EditableBoolean\n} from '../../../types';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox'\nimport OrgLogo from '../../OrgLogo'\nimport TextArea from 'antd/lib/input/TextArea'\nimport './component.css'\n\nexport interface NewOrganizationProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    error: AppError | null,\n    newOrganization: EditableOrganization,\n    onSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n    onUpdateIsPrivate: (isPrivate: boolean) => void\n    onUpdateLogoUrl: (logoUrl: string) => void\n    onUpdateHomeUrl: (homeUrl: string) => void\n    onUpdateResearchInterests: (researchInterests: string) => void\n}\n\nexport interface NewOrganizationState {\n    cancelToBrowser: boolean\n    showError: boolean\n}\n\nclass NewOrganization extends React.Component<NewOrganizationProps, NewOrganizationState> {\n    origin: string;\n\n    constructor(props: NewOrganizationProps) {\n        super(props)\n        this.state = {\n            cancelToBrowser: false,\n            showError: true\n        }\n        this.origin = document.location!.origin\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have entered information for this new organization.</p>\n\n                    <p>If you leave the editor without first saving, the new organization <i>will not be created</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onSave();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>): void {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateId(e.target.value)\n    }\n\n    onLogoUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateLogoUrl(e.target.value)\n    }\n\n    onHomeUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateHomeUrl(e.target.value)\n    }\n\n    onResearchInterestsChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateResearchInterests(e.target.value)\n    }\n\n    onIsPrivateChange(e: CheckboxChangeEvent) {\n        this.props.onUpdateIsPrivate(e.target.checked)\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState.type === ValidationErrorType.OK &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.saveState === SaveState.NEW\n        )\n    }\n\n    calcFieldClass(field: Editable) {\n        switch (field.validationState.type) {\n            // case (ValidationErrorType.OK):\n            //     return 'validation-ok'\n            case (ValidationErrorType.ERROR):\n                return 'validation-error Lite'\n            case (ValidationErrorType.REQUIRED_MISSING):\n                return 'validation-error Lite'\n        }\n\n        switch (field.syncState) {\n            case (SyncState.DIRTY):\n                return 'sync-dirty Lite'\n            default:\n                return 'validation-ok Lite'\n        }\n    }\n\n    renderFieldError(field: Editable) {\n        if (field.validationState.type !== ValidationErrorType.OK) {\n            if (field.syncState === SyncState.DIRTY) {\n                return (\n                    <span style={{ color: 'red' }}>\n                        {field.validationState.message}\n                    </span>\n                )\n            }\n        } else {\n            return ''\n        }\n    }\n\n    renderNameRow(nameField: EditableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    This is the name for your organization as you want KBase users to see it; you may change it at any time.\n                </p>\n                <p>\n                    It may be composed of ordinary text, but does not accept formatting.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1024 characters\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'Your Organization\\'s display name'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Name\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Input value={nameField.value || ''}\n                            className={this.calcFieldClass(nameField)}\n                            placeholder={placeholder}\n                            autoFocus\n                            onChange={onChange} />\n                        {this.renderFieldError(nameField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderIDRow(idField: EditableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization has a unique identifier. The ID is set when the organization is created, and are permanent: It may never be changed.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                100 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a to z, 0 to 9, -\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"A unique ID for your Organization\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            ID\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Input value={idField.value || ''}\n                            className={this.calcFieldClass(idField)}\n                            placeholder={placeholder}\n                            onChange={onChange} />\n                        {this.renderFieldError(idField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderLogoURLRow(logoUrlField: EditableNullableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization will display a logo. You may specific your own logo by entering the URL for an image, or leave\n                    this field blank and a default logo will be displayed, using the first letter of your org name and a randomly\n                    generated color (based on your org id).\n                </p>\n                <p>\n                    Please don't use large images, and try to keep them roughly square. The logo image display will be constrained\n                    to no larger than 100 pixels wide. Non-square logos may not look good in the Orgs list or on your Org page.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1000 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a full https:// url. E.g. https://my.org/myimage.png<br />\n                                note that only <i>https</i> urls are accepted.\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"The URL for your Organization's logo (optional)\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Logo URL\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formField\">\n                        <div className=\"NewOrganization-formControl\">\n                            <Input value={logoUrlField.value || ''}\n                                className={this.calcFieldClass(logoUrlField)}\n                                placeholder={placeholder}\n                                onChange={this.onLogoUrlChange.bind(this)} />\n                            {this.renderFieldError(logoUrlField)}\n                        </div>\n                        <div className=\"NewOrganization-formFieldPreview\">\n                            {this.renderLogoPreview(logoUrlField)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderBrokenHomeURL() {\n        const tooltipTitle = 'The Home URL is broken; either correct it or leave it empty'\n        return (\n            <Tooltip title={tooltipTitle}>\n                <Icon type=\"exclamation-circle\" style={{ color: 'gray' }} />\n            </Tooltip>\n        )\n    }\n\n    renderHomeURLPreview(homeUrlField: EditableNullableString) {\n        if (homeUrlField.value === null || homeUrlField.value.length === 0) {\n            const tooltipTitle = 'When you have completed your url, you may preview it here.'\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    <Tooltip title={tooltipTitle}>\n                        <Icon type=\"link\" style={{ color: 'gray' }} />\n                    </Tooltip>\n                </div>\n            )\n        }\n\n        if (homeUrlField.validationState.type !== ValidationErrorType.OK) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderBrokenHomeURL()}\n                </div>\n            )\n        }\n\n        const tooltipTitle = 'Try out your url by clicking this link'\n        return (\n            <div className=\"NewOrganization-previewBox\">\n                <Tooltip title={tooltipTitle} >\n                    <a href={homeUrlField.value} target=\"_blank\">\n                        <Icon type=\"link\" />\n                    </a>\n                </Tooltip>\n            </div>\n        )\n    }\n\n    renderHomeURLRow(homeUrlField: EditableNullableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization may display a home page url. This should be considered the canonical home for your Organization, if\n                    it also exists outside of KBase.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1000 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a full url. E.g. http://my.org/myimage.png<br />\n                                note that both <i>http></i> and <i>https</i> urls are accepted.\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"The url for your Organization's home page (optional)\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Home Page URL\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formField\">\n                        <div className=\"NewOrganization-formControl\">\n                            <Input value={homeUrlField.value || ''}\n                                className={this.calcFieldClass(homeUrlField)}\n                                placeholder={placeholder}\n                                onChange={onChange} />\n                            {this.renderFieldError(homeUrlField)}\n                        </div>\n                        <div className=\"NewOrganization-formFieldPreview\">\n                            {this.renderHomeURLPreview(homeUrlField)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderCollapse(content: JSX.Element) {\n        const style = {\n            background: 'transparent',\n            borderRadius: 0,\n            margin: 0,\n            border: 0,\n            overflow: 'hidden'\n        }\n        return (\n            <Collapse bordered={false}>\n                <Collapse.Panel header=\"What about inviting users?\" key=\"invite\" style={style}>\n                    {content}\n                </Collapse.Panel>\n            </Collapse>\n        )\n    }\n\n    renderPrivatePublicRow(isPrivateField: EditableBoolean, onChange: (e: CheckboxChangeEvent) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Set the Organization to \"hidden\" to prevent it from appearing in the listing and from being exposed\n                    as an Org page for any non-member.\n                </p>\n                <p>\n                    You may invite users directly to your org. When doing so they will receive a notification with a link to the\n                    org page. When a user lands on the org page they will not be shown information about the org, but will be available\n                    to accept the invitation and instantly have access to it.\n                </p>\n                <p>\n                    A user with an invitation who lands on the org page will not see information about the org, but will be able to\n                    submit a Join request.\n                </p>\n                {/* {this.renderCollapse((\n                    <React.Fragment>\n                        <p>\n                            You may invite users directly to your org. When doing so they will receive a notification with a link to the\n                            org page. When a user lands on the org page they will not be shown information about the org, but will be available\n                            to accept the invitation and instantly have access to it.\n                        </p>\n                        <p>\n                            A user with an invitation who lands on the org page will not see information about the org, but will be able to\n                            submit a Join request.\n                        </p>\n                    </React.Fragment>\n                ))} */}\n\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Hidden?\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <div>\n                            <Checkbox\n                                checked={isPrivateField.value}\n                                className={this.calcFieldClass(isPrivateField)}\n                                onChange={onChange} />\n                            {this.renderIsPrivate(isPrivateField.value)}\n                        </div>\n                        {this.renderFieldError(isPrivateField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderResearchInterestsRow(researchInterestsField: EditableString, onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each organization must have a short description of research interests or purpose.\n                </p>\n                <p>\n                    This text is displayed in the organizations list and the organization's page. It is most helpful\n                    in the list context to help users quickly scan the list.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                200 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                unformatted text\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'List your areas of interest. Systems biology, microbial ecology, plant genomics'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Research Interests\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n\n                        <TextArea value={researchInterestsField.value || ''}\n                            className={this.calcFieldClass(researchInterestsField) + ' NewOrganization-control-researchInterests'}\n                            autosize={{ minRows: 2, maxRows: 2 }}\n                            placeholder={placeholder}\n                            onChange={onChange} />\n                        {this.renderFieldError(researchInterestsField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderDescriptionRow(descriptionField: EditableString, onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each organization must have a description which communicates the purpose of this organization.\n                </p>\n                <p>\n                    The description is in <a href=\"https://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">markdown</a> format\n                    and may be quite long. It will be presented in a scrolling area.\n                </p>\n                <p>\n                    Please be mindful of embedding large images or other content which may interfere with the display of your Organization.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1024 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                standard <a href=\"https://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">markdown</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'Text or Markdown describing your Organization'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Description\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Tabs defaultActiveKey=\"editor\" animated={false}>\n                            <Tabs.TabPane tab=\"Editor\" key=\"editor\">\n                                <TextArea value={descriptionField.value || ''}\n                                    className={this.calcFieldClass(descriptionField) + ' NewOrganization-control-description'}\n                                    autosize={{ minRows: 5, maxRows: 15 }}\n                                    placeholder={placeholder}\n                                    onChange={onChange} />\n                                {this.renderFieldError(descriptionField)}\n                            </Tabs.TabPane>\n                            <Tabs.TabPane tab=\"Preview\" key=\"preview\">\n                                <div className=\"NewOrganization-preview-description\"\n                                    dangerouslySetInnerHTML={({ __html: Marked.parse(descriptionField.value || '') })}\n                                />\n                            </Tabs.TabPane>\n                        </Tabs>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderEditorHeader() {\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div style={{ flex: '1 1 0px' }}>\n                        <h3>Create Your Organization</h3>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderEditor() {\n        return (\n            <form id=\"newOrganizationForm\" className=\"NewOrganization-editor  scrollable-flex-column\" onSubmit={this.onSubmit.bind(this)}>\n                {this.renderEditorHeader()}\n                <div className=\"NewOrganization-body\">\n                    {this.renderNameRow(this.props.newOrganization.name, this.onNameChange.bind(this))}\n                    {this.renderIDRow(this.props.newOrganization.id, this.onIdChange.bind(this))}\n                    {this.renderLogoURLRow(this.props.newOrganization.logoUrl, this.onLogoUrlChange.bind(this))}\n                    {this.renderHomeURLRow(this.props.newOrganization.homeUrl, this.onHomeUrlChange.bind(this))}\n                    {this.renderPrivatePublicRow(this.props.newOrganization.isPrivate, this.onIsPrivateChange.bind(this))}\n                    {this.renderResearchInterestsRow(this.props.newOrganization.researchInterests, this.onResearchInterestsChange.bind(this))}\n                    {this.renderDescriptionRow(this.props.newOrganization.description, this.onDescriptionChange.bind(this))}\n                    <div className=\"NewOrganization-row\">\n                        <div className=\"NewOrganization-col1\">\n                        </div>\n                        <div className=\"NewOrganization-col2\" style={{ textAlign: 'center' }}>\n                            <div className=\"ButtonSet\">\n                                <span className=\"ButtonSet-button\">\n                                    {this.renderSaveButton()}\n                                </span>\n                                <span className=\"ButtonSet-button\">\n                                    {this.renderCancelButton()}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    charAt(inString: string, position: number) {\n        const c1 = inString.charCodeAt(position)\n        if (c1 >= 0xD800 && c1 <= 0xDBFF && inString.length > position + 1) {\n            const c2 = inString.charCodeAt(position + 1)\n            if (c2 > 0xDC00 && c2 <= 0xDFFF) {\n                return inString.substring(position, 2)\n            }\n        }\n        return inString.substring(position, 1)\n    }\n\n    renderLogo(org: EditableOrganization) {\n        return (\n            <OrgLogo logoUrl={null} size={64} organizationName={org.name.value} organizationId={org.id.value} />\n        )\n    }\n\n    renderIsPrivate(isPrivate: boolean) {\n        if (isPrivate) {\n            return (\n                <span>\n                    <Icon type=\"lock\" />{' '}Hidden - will be visible <b>only</b> for members of this organization\n                </span>\n            )\n        }\n        return (\n            <span>\n                <Icon type=\"global\" />{' '}Visible - will be visible to all KBase users.\n            </span>\n        )\n    }\n\n    renderDefaultLogo() {\n        if (!(this.props.newOrganization.name.value && this.props.newOrganization.id.value)) {\n            const tooltipTitle = 'Add a logo url or complete the name and id fields for a Default logo'\n            return (\n                <Tooltip title={tooltipTitle}>\n                    <Icon type=\"question\" style={{ color: 'gray' }} />\n                    {/* <div style={{ height: '30px', width: '30px' }}></div> */}\n                </Tooltip>\n            )\n        }\n        const initial = this.charAt(this.props.newOrganization.name.value, 0).toUpperCase()\n        const hash = md5(this.props.newOrganization.id.value)\n        const size = 30;\n        const color = hash.substr(0, 6)\n        return (\n            <svg width={size} height={size} style={{ border: '1px rgba(200, 200, 200, 0.5) solid' }}>\n                <text x=\"50%\" y=\"50%\" dy={4} textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize={size - 12} fill={'#' + color} fontFamily=\"sans-serif\">{initial}</text>\n            </svg>\n        )\n    }\n\n    renderBrokenLogo() {\n        const tooltipTitle = 'The Logo URL is broken; either correct it or empty the field for the default logo'\n        return (\n            <Tooltip title={tooltipTitle}>\n                <Icon type=\"exclamation-circle\" style={{ color: 'gray' }} />\n            </Tooltip>\n        )\n    }\n\n    renderLogoPreview(logoUrlField: EditableNullableString) {\n        if (logoUrlField.value === null || logoUrlField.value.length === 0) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderDefaultLogo()}\n                </div>\n            )\n        }\n\n        if (logoUrlField.validationState.type !== ValidationErrorType.OK) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderBrokenLogo()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization-previewBox\">\n                <img src={logoUrlField.value} width={30} />\n            </div>\n        )\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    toggleError() {\n        this.setState({ showError: !this.state.showError })\n    }\n\n    renderError() {\n        if (this.props.error && this.state.showError) {\n            const onOk = () => {\n                this.setState({ showError: false })\n            }\n            const onCancel = () => {\n                this.setState({ showError: false })\n            }\n            let trace\n            if (this.props.error.trace) {\n                trace = this.props.error.trace.map((line, index) => {\n                    return (\n                        <div key={\"line_\" + index}>{line}</div>\n                    )\n                })\n            }\n            if (trace) {\n                trace = (\n                    <div>\n                        <div>trace</div>\n                        {trace}\n                    </div>\n                )\n            }\n            return (\n                <Modal visible={true}\n                    title=\"Error\"\n                    okType=\"danger\"\n                    okText=\"Close\"\n                    cancelText=\"Clear Error\"\n                    onCancel={onCancel}\n                    onOk={onOk}>\n                    <div style={{ fontWeight: 'bold' }}>\n                        {this.props.error.code}\n                    </div>\n                    <div>\n                        {this.props.error.message}\n                    </div>\n                    {trace}\n                </Modal>\n            )\n        }\n    }\n\n    renderSaveButton() {\n        return (\n            <Button icon=\"save\"\n                form=\"newOrganizationForm\"\n                key=\"submit\"\n                disabled={!this.canSave.call(this)}\n                htmlType=\"submit\">\n                Save\n            </Button>\n        )\n    }\n\n    renderCancelButton() {\n        return (\n            <Button type=\"danger\" onClick={this.onClickCancelToBrowser.bind(this)} >\n                <Icon type=\"close\" />{' '}Close\n            </Button>\n        )\n    }\n\n    renderMenuButtons() {\n        let errorButton\n        if (this.props.error) {\n            errorButton = (\n                <span className=\"ButtonSet-button\">\n                    <Button shape=\"circle\" icon=\"exclamation\" type=\"danger\" onClick={this.toggleError.bind(this)}></Button>\n                </span>\n            )\n        }\n        return (\n            <div className=\"ButtonSet\">\n                <span className=\"ButtonSet-button\">\n                    <Button type=\"default\" onClick={this.onClickCancelToBrowser.bind(this)} >\n                        <Icon type=\"rollback\" />{' '}Back\n                    </Button>\n                </span>\n                <span className=\"ButtonSet-button\">\n                    {this.renderSaveButton()}\n                </span>\n                {errorButton}\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        // TODO: this is just a prop for today.\n        if (this.props.saveState === SaveState.SAVED) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.newOrganization.id.value} />\n        }\n\n        return (\n            <div className=\"NewOrganization scrollable-flex-column\">\n                <div className=\"NewOrganization-main scrollable-flex-column\">\n                    {this.renderEditor()}\n                </div>\n                {/* TODO: improve error display*/}\n                {this.renderError()}\n            </div>\n        )\n    }\n}\n\nexport default NewOrganization","import { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, EditState, SaveState, ValidationState, EditableOrganization, AppError } from '../../../types';\nimport {\n    addOrg, updateName, updateLogoUrl, updateId, updateDescription, updateIsPrivate, updateHomeUrl, updateResearchInterests\n} from '../../../redux/actions/addOrg';\n\nimport Component from './component';\n\ninterface OwnProps {\n}\n\nexport interface StateProps {\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n    newOrganization: EditableOrganization\n    error: AppError | null\n}\n\nexport interface DispatchProps {\n    onSave: () => void\n    onUpdateName: (name: string) => void\n    onUpdateLogoUrl: (logoUrl: string | null) => void\n    onUpdateId: (id: string) => void\n    onUpdateDescription: (description: string) => void\n    onUpdateIsPrivate: (isPrivate: boolean) => void\n    onUpdateHomeUrl: (homeUrl: string | null) => void\n    onUpdateResearchInterests: (researchInterests: string) => void\n}\n\nexport function mapStateToProps(state: StoreState): StateProps {\n    if (!state.views.addOrgView.viewModel) {\n        throw new Error('View model missing in state')\n    }\n    const {\n        views: {\n            addOrgView: {\n                viewModel: { editState, saveState, validationState, newOrganization, error }\n            }\n        }\n    } = state\n\n    return {\n        editState,\n        saveState,\n        validationState,\n        newOrganization,\n        error\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onSave: () => {\n            dispatch(addOrg() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(updateName(name) as any)\n        },\n        onUpdateLogoUrl: (logoUrl: string | null) => {\n            dispatch(updateLogoUrl(logoUrl) as any)\n        },\n        onUpdateId: (id) => {\n            dispatch(updateId(id) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(updateDescription(description) as any)\n        },\n        onUpdateIsPrivate: (isPrivate: boolean) => {\n            dispatch(updateIsPrivate(isPrivate) as any)\n        },\n        onUpdateHomeUrl: (homeUrl: string | null) => {\n            dispatch(updateHomeUrl(homeUrl) as any)\n        },\n        onUpdateResearchInterests: (researchInterests: string) => {\n            dispatch(updateResearchInterests(researchInterests) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import * as React from 'react'\n\nimport { AppError, AddOrgView, ComponentLoadingState, StoreState } from '../../../types'\nimport Container from './container'\n\ninterface LoaderProps {\n    view: AddOrgView\n    onLoad: () => void\n    onUnload: () => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    renderLoading() {\n        return (\n            <div>\n                Loading \"Add New Organization\" form...\n            </div>\n        )\n    }\n\n    renderError(error: AppError) {\n        return (\n            <div>\n                Error!\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                return this.renderLoading()\n            case ComponentLoadingState.LOADING:\n                return this.renderLoading()\n            case ComponentLoadingState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    })\n                }\n            case ComponentLoadingState.SUCCESS:\n            default:\n                return (\n                    <Container />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                // should only appear briefly as the LOAD event is processed.\n                this.props.onLoad()\n        }\n    }\n\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\n// redux interface\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../redux/actions/addOrg'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n\n}\n\ninterface DispatchProps {\n    onLoad: () => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        view: state.views.addOrgView\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.Load | actions.Unload>): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(actions.load() as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as requestModel from './requests'\nimport * as orgModel from './organization/model'\n\nexport interface UberOrganization {\n    organization: orgModel.Organization | orgModel.InaccessiblePrivateOrganization\n    request: requestModel.UserRequest | null\n    invitation: requestModel.UserInvitation | null\n    relation: orgModel.Relation,\n    groupRequests: Array<requestModel.Request> | null\n}\n\ninterface UberModelParams {\n    token: string\n    username: string\n    groupsServiceURL: string\n    userProfileServiceURL: string\n    workspaceServiceURL: string\n    serviceWizardURL: string\n}\n\nexport class UberModel {\n\n    params: UberModelParams\n\n    constructor(params: UberModelParams) {\n        this.params = params\n    }\n\n    async getOrganizationForUser(organizationId: string): Promise<UberOrganization> {\n        // const {\n        //     auth: { authorization: { token, username } },\n        //     app: { config }\n        // } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token: this.params.token, username: this.params.username,\n            groupsServiceURL: this.params.groupsServiceURL,\n            userProfileServiceURL: this.params.userProfileServiceURL\n        })\n\n        const requestClient = new requestModel.RequestsModel({\n            token: this.params.token, username: this.params.username,\n            groupsServiceURL: this.params.groupsServiceURL\n        })\n\n        // get org\n        const organization = await orgClient.getOrg(organizationId)\n\n        // get pending requests\n        const request = await requestClient.getUserRequestForOrg(organizationId) as requestModel.UserRequest | null\n\n        const invitation = await requestClient.getUserInvitationForOrg(organizationId) as requestModel.UserInvitation | null\n\n        // we should probably just keep the request ids rather than try to keep the whole request\n        // and refactor the calls for the request events, which I just refactored (not much work) to use the \n        // whole request structure rather than just the id, to use the request id + the org id...\n        const relation = orgModel.determineRelation(organization, this.params.username, request, invitation)\n\n        let groupRequests\n        if (relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            relation.type === orgModel.UserRelationToOrganization.OWNER) {\n            groupRequests = await requestClient.getPendingOrganizationRequestsForOrg(organizationId)\n        } else {\n            groupRequests = null\n        }\n\n        return {\n            organization, request, invitation, relation, groupRequests\n        }\n    }\n\n    // async getOrganizationsForUser(): Promise<Array<UberOrganization>> {\n    //     // const {\n    //     //     auth: { authorization: { token, username } },\n    //     //     app: { config }\n    //     // } = getState()\n\n    //     const orgClient = new orgModel.OrganizationModel({\n    //         token: this.params.token, username: this.params.username,\n    //         groupsServiceURL: this.params.groupsServiceURL\n    //     })\n\n    //     const requestClient = new requestModel.RequestsModel({\n    //         token: this.params.token, username: this.params.username,\n    //         groupsServiceURL: this.params.groupsServiceURL\n    //     })\n\n    //     const orgs = await orgClient.getOwnOrgs()\n\n    //     const requestOutbox = await requestClient.getOutboundRequests()\n    //     const requestInbox = await requestClient.getInboundRequests()\n\n    //     return await Promise.all(orgs.map(async (organization) => {\n    //         const request = requestOutbox.find((request) => {\n    //             if (request.organizationId === organization.id) {\n    //                 if (request.type === RequestType.REQUEST &&\n    //                     request.resourceType === requestModel.RequestResourceType.USER) {\n    //                     return true\n    //                 }\n    //             }\n    //             return false\n    //         }) as requestModel.UserRequest\n\n    //         const invitation = requestInbox.find((request) => {\n    //             if (request.organizationId === organization.id) {\n    //                 if (request.type === RequestType.INVITATION &&\n    //                     request.resourceType === requestModel.RequestResourceType.USER) {\n    //                     return true\n    //                 }\n    //             }\n    //             return false\n    //         }) as requestModel.UserInvitation\n\n    //         const relation = orgModel.determineRelation(organization, this.params.username, request || null, invitation)\n\n    //         let groupRequests\n    //         if (relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n    //             relation.type === orgModel.UserRelationToOrganization.OWNER) {\n    //             groupRequests = await requestClient.getPendingOrganizationRequestsForOrg(organization.id)\n    //         } else {\n    //             groupRequests = null\n    //         }\n\n    //         return {\n    //             organization, request, invitation, relation, groupRequests\n    //         }\n    //     }))\n    // }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from './index'\nimport { AnError, makeError } from '../../lib/error';\nimport { StoreState } from '../../types';\n\nexport interface Load extends Action<ActionFlag.DATA_SERVICE_LOAD> {\n    type: ActionFlag.DATA_SERVICE_LOAD\n}\n\nexport interface LoadSuccess extends Action<ActionFlag.DATA_SERVICE_LOAD_SUCCESS> {\n    type: ActionFlag.DATA_SERVICE_LOAD_SUCCESS\n}\n\nexport interface LoadError extends Action<ActionFlag.DATA_SERVICE_LOAD_ERROR> {\n    type: ActionFlag.DATA_SERVICE_LOAD_ERROR,\n    error: AnError\n}\n\nfunction loadError(error: AnError) {\n    return {\n        type: ActionFlag.DATA_SERVICE_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function load() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.DATA_SERVICE_LOAD_START\n        })\n\n        dispatch({\n            type: ActionFlag.DATA_SERVICE_LOAD_SUCCESS\n        } as LoadSuccess)\n\n        // const {\n        //     auth: { authorization: { token, username } },\n        //     app: { config } } = getState()\n\n        // const userProfileClient = new userProfileModel.UserProfile({\n        //     token, username,\n        //     userProfileServiceURL: config.services.UserProfile.url\n        // })\n\n        // try {\n        //     const userProfile = await userProfileClient.getProfile(username)\n\n        //     dispatch({\n        //         type: ActionFlag.DATA_SERVICE_LOAD_SUCCESS,\n        //         profile: userProfile\n        //     })\n        // } catch (ex) {\n        //     console.error('error', ex)\n        //     dispatch(loadError(makeError({\n        //         code: ex.name,\n        //         message: ex.name\n        //     })))\n        // }\n    }\n}\n\nexport function unload() {\n    return {\n        type: ActionFlag.DATA_SERVICE_UNLOAD\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState,\n    AppError, UIError, UIErrorType, ViewOrgViewModelKind, ViewOrgViewModel\n} from '../../types'\n\nimport * as orgModel from '../../data/models/organization/model'\nimport * as requestModel from '../../data/models/requests'\nimport * as uberModel from '../../data/models/uber'\nimport { loadNarrative } from './entities'\nimport * as dataServices from './dataServices'\nimport { AnError, makeError } from '../../lib/error';\nimport * as narrativeModel from '../../data/models/narrative'\n\n// Action Types\n\nexport interface Load extends Action {\n    type: ActionFlag.VIEW_ORG_LOAD\n    organizationId: string\n}\n\nexport interface ReLoad extends Action {\n    type: ActionFlag.VIEW_ORG_RELOAD\n    organizationId: string\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.VIEW_ORG_LOAD_START\n}\n\nexport interface LoadNormalSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_LOAD_NORMAL_SUCCESS\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    openRequest: orgModel.RequestStatus\n    groupRequests: Array<requestModel.Request> | null\n    groupInvitations: Array<requestModel.Request> | null\n    requestInbox: Array<requestModel.Request>\n    requestOutbox: Array<requestModel.Request>\n    narrativesSortBy: string\n    narratives: Array<orgModel.NarrativeResource>\n    apps: Array<orgModel.AppResource>\n    sortMembersBy: string,\n    members: Array<orgModel.Member>\n}\n\nexport interface ReloadNormalSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_RELOAD_NORMAL_SUCCESS\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    openRequest: orgModel.RequestStatus\n    groupRequests: Array<requestModel.Request> | null\n    groupInvitations: Array<requestModel.Request> | null\n    requestInbox: Array<requestModel.Request>\n    requestOutbox: Array<requestModel.Request>\n    narrativesSortBy: string\n    narratives: Array<orgModel.NarrativeResource>\n    apps: Array<orgModel.AppResource>\n    sortMembersBy: string,\n    members: Array<orgModel.Member>\n}\n\nexport interface LoadInaccessiblePrivateSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_LOAD_INACCESSIBLE_PRIVATE_SUCCESS\n    organization: orgModel.InaccessiblePrivateOrganization\n    relation: orgModel.Relation\n    requestOutbox: Array<requestModel.Request>\n}\n\nexport interface LoadError extends Action {\n    type: ActionFlag.VIEW_ORG_LOAD_ERROR\n    error: AppError\n}\n\nexport interface Unload extends Action {\n    type: ActionFlag.VIEW_ORG_UNLOAD\n}\n\n// Join Requests\n\nexport interface ViewOrgJoinRequest extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST\n    requestId: string\n}\n\nexport interface ViewOrgJoinRequestStart extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_START\n}\n\nexport interface ViewOrgJoinRequestSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_SUCCESS\n}\n\nexport interface ViewOrgJoinRequestError extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_ERROR\n    error: UIError\n}\n\n// Join Request cancellation\n\nexport interface ViewOrgCancelJoinRequest extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST\n}\n\nexport interface ViewOrgCancelJoinRequestStart extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n}\n\nexport interface ViewOrgCancelJoinRequestSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS\n}\n\nexport interface ViewOrgCancelJoinRequestError extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n    error: UIError\n}\n\n// Join Invitation Acceptance\n\nexport interface AcceptJoinInvitation extends Action {\n    type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION\n}\n\nexport interface AcceptJoinInvitationStart extends Action {\n    type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_START\n}\n\nexport interface AcceptJoinInvitationSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_SUCCESS\n}\n\nexport interface AcceptJoinInvitationError extends Action {\n    type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_ERROR,\n    error: AppError\n}\n\n// Join Invitation Denial\n\nexport interface RejectJoinInvitation extends Action {\n    type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION\n}\n\nexport interface RejectJoinInvitationStart extends Action {\n    type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_START\n}\n\nexport interface RejectJoinInvitationSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_SUCCESS\n}\n\nexport interface RejectJoinInvitationError extends Action {\n    type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_ERROR,\n    error: AppError\n}\n\n\n// Delete Narrative\n\nexport interface RemoveNarrative extends Action {\n    type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE\n}\n\nexport interface RemoveNarrativeStart extends Action {\n    type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_START\n}\n\nexport interface RemoveNarrativeSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_SUCCESS,\n    narrativeId: narrativeModel.NarrativeID\n}\n\nexport interface RemoveNarrativeError extends Action {\n    type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_ERROR,\n    error: AppError\n}\n\n// Generators\n\nexport function removeNarrativeStart(): RemoveNarrativeStart {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_START\n    }\n}\n\nexport function removeNarrativeSuccess(narrativeId: narrativeModel.NarrativeID): RemoveNarrativeSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_SUCCESS,\n        narrativeId\n    }\n}\n\nexport function removeNarrativeError(error: AppError): RemoveNarrativeError {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_NARRATIVE_ERROR,\n        error: error\n    }\n}\n\n// Thunk\n\nexport function removeNarrative(narrative: orgModel.NarrativeResource) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(removeNarrativeStart())\n\n        // TODO: need to restructure this view -- this is crazy\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(removeNarrativeError({\n                code: 'bad state',\n                message: 'View orgs does not have an org'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: {\n                    viewModel\n                }\n            }\n        }: StoreState = state\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch(removeNarrativeError({\n                code: 'bad state',\n                message: 'View orgs does not have an org'\n            }))\n            return\n        }\n\n        const { organization } = viewModel\n\n        if (!organization) {\n            dispatch(removeNarrativeError({\n                code: 'bad state',\n                message: 'View orgs does not have an org'\n            }))\n            return\n        }\n\n        const groupId = organization.id\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n\n        try {\n            await orgClient.removeNarrativeFromOrg(groupId, narrative.workspaceId)\n            dispatch(removeNarrativeSuccess(narrative.workspaceId))\n        } catch (ex) {\n            dispatch(removeNarrativeError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\n// Access narrative\n\nexport interface AccessNarrative extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE,\n    narrative: orgModel.NarrativeResource\n}\n\nexport interface AccessNarrativeStart extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_START\n}\n\nexport interface AccessNarrativeSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_SUCCESS,\n    organization: orgModel.Organization\n    narratives: Array<orgModel.NarrativeResource>\n}\n\nexport interface AccessNarrativeError extends Action {\n    type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_ERROR,\n    error: AppError\n}\n\n// Generators\nexport function accessNarrativeStart(): AccessNarrativeStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_START\n    }\n}\n\nexport function accessNarrativeSuccess(organization: orgModel.Organization, narratives: Array<orgModel.NarrativeResource>): AccessNarrativeSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_SUCCESS,\n        organization,\n        narratives\n    }\n}\n\nexport function accessNarrativeError(error: AppError): AccessNarrativeError {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCESS_NARRATIVE_ERROR,\n        error: error\n    }\n}\n\n// Thunk\n\nexport function accessNarrative(narrative: orgModel.NarrativeResource) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(accessNarrativeStart())\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(accessNarrativeError({\n                code: 'error',\n                message: 'No view model'\n            }))\n            return\n        }\n\n        const viewModel = state.views.viewOrgView.viewModel\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch(accessNarrativeError({\n                code: 'error',\n                message: 'Not NORMAL org'\n            }))\n            return\n        }\n\n        const { organization, narratives: { sortBy, searchBy } } = viewModel\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n        } = state\n\n        const organizationId = organization.id\n        const resourceId = String(narrative.workspaceId)\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            await orgClient.grantNarrativeAccess(organizationId, resourceId)\n            // Getting a fresh copy of the org will trigger the view org component and\n            // all subcomponents with changed data to refresh. All we are intending here is that\n            // the narrative in the list of narratives provided by the groups api is updated, but\n            // there may be other elements of the group/org which have changed as well. So be it.\n\n            // TODO: just update the narrative, don't reprocess everything.\n\n\n            const org = await orgClient.getOrg(organizationId)\n\n            if (org.kind !== orgModel.OrganizationKind.NORMAL) {\n                dispatch(accessNarrativeError({\n                    code: 'error',\n                    message: 'Not a NORMAL org'\n                }))\n                return\n            }\n\n            const narratives = org.narratives\n\n            const filteredNarratives = orgModel.queryNarratives(narratives, {\n                sortBy: sortBy,\n                searchBy: searchBy\n            })\n\n            dispatch(loadNarrative(narrative.workspaceId))\n            dispatch(accessNarrativeSuccess(org, filteredNarratives))\n        } catch (ex) {\n            dispatch(accessNarrativeError({\n                code: 'error',\n                message: ex.message\n            }))\n        }\n\n    }\n}\n\n// Generators\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.VIEW_ORG_LOAD_START\n    }\n}\n\nexport function loadNormalSuccess(\n    organization: orgModel.Organization,\n    relation: orgModel.Relation,\n    openRequest: orgModel.RequestStatus,\n    groupRequests: Array<requestModel.Request> | null,\n    groupInvitations: Array<requestModel.Request> | null,\n    requestInbox: Array<requestModel.Request>,\n    requestOutbox: Array<requestModel.Request>,\n    narrativesSortBy: string,\n    narratives: Array<orgModel.NarrativeResource>,\n    apps: Array<orgModel.AppResource>,\n    sortMembersBy: string,\n    members: Array<orgModel.Member>): LoadNormalSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_LOAD_NORMAL_SUCCESS,\n        organization, relation, openRequest,\n        groupRequests, groupInvitations,\n        requestInbox, requestOutbox,\n        narrativesSortBy,\n        narratives, sortMembersBy, members,\n        apps\n    }\n}\n\nexport function reloadNormalSuccess(\n    organization: orgModel.Organization,\n    relation: orgModel.Relation,\n    openRequest: orgModel.RequestStatus,\n    groupRequests: Array<requestModel.Request> | null,\n    groupInvitations: Array<requestModel.Request> | null,\n    requestInbox: Array<requestModel.Request>,\n    requestOutbox: Array<requestModel.Request>,\n    narrativesSortBy: string,\n    narratives: Array<orgModel.NarrativeResource>,\n    apps: Array<orgModel.AppResource>,\n    sortMembersBy: string,\n    members: Array<orgModel.Member>): ReloadNormalSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_RELOAD_NORMAL_SUCCESS,\n        organization, relation, openRequest,\n        groupRequests, groupInvitations,\n        requestInbox, requestOutbox,\n        narrativesSortBy,\n        narratives, sortMembersBy, members,\n        apps\n    }\n}\n\nexport function loadInaccessiblePrivateSuccess(\n    organization: orgModel.InaccessiblePrivateOrganization,\n    relation: orgModel.Relation,\n    requestOutbox: Array<requestModel.Request>): LoadInaccessiblePrivateSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_LOAD_INACCESSIBLE_PRIVATE_SUCCESS,\n        organization, relation,\n        requestOutbox\n    }\n}\n\nexport function loadError(error: AppError): LoadError {\n    return {\n        type: ActionFlag.VIEW_ORG_LOAD_ERROR,\n        error: error\n    }\n}\n\n// Join requests\n\nexport function viewOrgJoinRequestStart(): ViewOrgJoinRequestStart {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_START\n    }\n}\n\nexport function viewOrgJoinRequestSuccess(): ViewOrgJoinRequestSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_SUCCESS\n    }\n}\n\nexport function viewOrgJoinRequestError(error: UIError): ViewOrgJoinRequestError {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n// Join Request Cancellation\n\nexport function viewOrgCancelJoinRequestStart(): ViewOrgCancelJoinRequestStart {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n    }\n}\n\nexport function viewOrgCancelJoinRequestSuccess(): ViewOrgCancelJoinRequestSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS\n    }\n}\n\nexport function viewOrgCancelJoinRequestError(error: UIError): ViewOrgCancelJoinRequestError {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n// Invitation Acceptance\n\nexport function acceptJoinInvitationStart(): AcceptJoinInvitationStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_START\n    }\n}\n\nexport function acceptJoinInvitationSuccess(): AcceptJoinInvitationSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_SUCCESS\n    }\n}\n\nexport function acceptJoinInvitationError(error: AppError): AcceptJoinInvitationError {\n    return {\n        type: ActionFlag.VIEW_ORG_ACCEPT_JOIN_INVITATION_ERROR,\n        error: error\n    }\n}\n\n// Invitation Rejection \n\nexport function rejectJoinInvitationStart(): RejectJoinInvitationStart {\n    return {\n        type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_START\n    }\n}\n\nexport function rejectJoinInvitationSuccess(): RejectJoinInvitationSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_SUCCESS\n    }\n}\n\nexport function rejectJoinInvitationError(error: AppError): RejectJoinInvitationError {\n    return {\n        type: ActionFlag.VIEW_ORG_REJECT_JOIN_INVITATION_ERROR,\n        error: error\n    }\n}\n\n// Join invitation acceptance\n\n// TODO\n\n// Thunks\n\nexport function unload() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: { viewOrgView: { viewModel } }\n        } = getState()\n\n        if (!viewModel) {\n            throw new Error('view model not defined!?!')\n        }\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        if (viewModel.organization.relation === orgModel.UserRelationToOrganization.MEMBER ||\n            viewModel.organization.relation === orgModel.UserRelationToOrganization.ADMIN ||\n            viewModel.organization.relation === orgModel.UserRelationToOrganization.OWNER) {\n            await orgClient.visitOrg({ organizationId: viewModel.organization.id })\n        }\n\n        dispatch(dataServices.load())\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_UNLOAD\n        })\n    }\n}\n\nexport function load(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const uberClient = new uberModel.UberModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n        })\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const { organization, relation } = await uberClient.getOrganizationForUser(organizationId)\n            if (organization.kind !== orgModel.OrganizationKind.NORMAL) {\n                const requestInbox = await requestClient.getRequestInboxForOrg(organizationId)\n                dispatch(loadInaccessiblePrivateSuccess(organization, relation, requestInbox))\n                return\n            }\n\n            let openRequest\n            let orgRequests: Array<requestModel.Request> | null\n            let orgInvitations: Array<requestModel.Request> | null\n            let requestInbox: Array<requestModel.Request>\n            if (relation.type === orgModel.UserRelationToOrganization.OWNER ||\n                relation.type === orgModel.UserRelationToOrganization.ADMIN) {\n                orgRequests = await requestClient.getPendingOrganizationRequestsForOrg(organizationId)\n                orgInvitations = await requestClient.getOrganizationInvitationsForOrg(organizationId)\n                openRequest = await orgClient.getOpenRequestStatus({ organizationId })\n                requestInbox = await requestClient.getCombinedRequestInboxForOrg(organizationId)\n            } else {\n                orgRequests = null\n                orgInvitations = null\n                openRequest = orgModel.RequestStatus.INAPPLICABLE\n                requestInbox = []\n            }\n\n\n            // const requestInbox: Array<requestModel.Request> = await requestClient.getCombinedRequestInboxForOrg(organizationId)\n            const requestOutbox: Array<requestModel.Request> = await requestClient.getRequestOutboxForOrg(organizationId)\n\n            // default narrative sort?\n            const narrativesSortBy = 'added'\n            const narratives = orgModel.queryNarratives(organization.narratives, {\n                sortBy: narrativesSortBy,\n                searchBy: ''\n            })\n\n            // TODO: actual app sort and filter\n            const apps = organization.apps\n\n            const sortMembersBy = 'added'\n            const members = orgModel.queryMembers(organization.members, {\n                sortBy: sortMembersBy,\n                searchBy: ''\n            })\n\n            dispatch(loadNormalSuccess(organization, relation, openRequest, orgRequests, orgInvitations,\n                requestInbox, requestOutbox, narrativesSortBy, narratives, apps, sortMembersBy, members))\n        } catch (ex) {\n            dispatch(loadError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function reload(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const uberClient = new uberModel.UberModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n        })\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            // existing org view.\n            const state = getState()\n            const viewModel = state.views.viewOrgView.viewModel\n\n            if (!viewModel) {\n                dispatch(loadError({\n                    code: 'error',\n                    message: 'No view model'\n                }))\n                return\n            }\n\n            if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n                dispatch(loadError({\n                    code: 'error',\n                    message: 'Wrong org view model kind!'\n                }))\n                return\n            }\n\n            const { organization, relation } = await uberClient.getOrganizationForUser(organizationId)\n            if (organization.kind !== orgModel.OrganizationKind.NORMAL) {\n                const requestInbox = await requestClient.getRequestInboxForOrg(organizationId)\n                dispatch(loadInaccessiblePrivateSuccess(organization, relation, requestInbox))\n                return\n            }\n\n            let openRequest\n            let orgRequests: Array<requestModel.Request> | null\n            let orgInvitations: Array<requestModel.Request> | null\n            if (relation.type === orgModel.UserRelationToOrganization.OWNER ||\n                relation.type === orgModel.UserRelationToOrganization.ADMIN) {\n                orgRequests = await requestClient.getPendingOrganizationRequestsForOrg(organizationId)\n                orgInvitations = await requestClient.getOrganizationInvitationsForOrg(organizationId)\n                openRequest = await orgClient.getOpenRequestStatus({ organizationId })\n            } else {\n                orgRequests = null\n                orgInvitations = null\n                openRequest = orgModel.RequestStatus.INAPPLICABLE\n            }\n\n            const requestInbox: Array<requestModel.Request> = await requestClient.getCombinedRequestInboxForOrg(organizationId)\n            const requestOutbox: Array<requestModel.Request> = await requestClient.getRequestOutboxForOrg(organizationId)\n\n            // default narrative sort?\n            const narrativesSortBy = 'added'\n            const narratives = orgModel.queryNarratives(organization.narratives, {\n                sortBy: viewModel.narratives.sortBy,\n                searchBy: viewModel.narratives.searchBy\n            })\n\n            // TODO: actual app sort and filter\n            const apps = organization.apps\n\n            const sortMembersBy = 'added'\n            const members = orgModel.queryMembers(organization.members, {\n                sortBy: viewModel.sortMembersBy,\n                searchBy: viewModel.searchMembersBy\n            })\n\n            dispatch(reloadNormalSuccess(organization, relation, openRequest, orgRequests, orgInvitations,\n                requestInbox, requestOutbox, narrativesSortBy, narratives, apps, sortMembersBy, members))\n        } catch (ex) {\n            dispatch(loadError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function viewOrgJoinRequest() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        //TODO: could do a start here...\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel: { organization } }\n            }\n        } = state\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            await orgClient.requestMembership(organization.id)\n            dispatch(viewOrgJoinRequestSuccess())\n            dispatch(load((organization.id)))\n        } catch (ex) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function viewOrgCancelJoinRequest(requestId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgJoinRequestStart())\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: {\n                    viewModel: { organization } } } } = state\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const newRequest = await requestClient.cancelRequest(requestId)\n            dispatch(viewOrgCancelJoinRequestSuccess())\n            dispatch(load(newRequest.organizationId))\n        } catch (ex) {\n            dispatch(viewOrgCancelJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: ex.message\n            }))\n        }\n    }\n}\n\nexport function acceptJoinInvitation(requestId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(acceptJoinInvitationStart())\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: {\n                    viewModel: { organization } } } } = state\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const newRequest = await requestClient.acceptJoinInvitation(requestId)\n            dispatch(acceptJoinInvitationSuccess())\n            // quick 'n easy\n            dispatch(load(newRequest.organizationId))\n        } catch (ex) {\n            dispatch(acceptJoinInvitationError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\n\nexport function rejectJoinInvitation(requestId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(acceptJoinInvitationStart())\n\n        const state = getState()\n        if (!state.views.viewOrgView.viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: {\n                    viewModel: { organization } } } } = state\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const newRequest = await requestClient.rejectJoinInvitation(requestId)\n            dispatch(rejectJoinInvitationSuccess())\n            dispatch(load(newRequest.organizationId))\n        } catch (ex) {\n            dispatch(rejectJoinInvitationError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n\n    }\n}\n\n// SORT NARRATIVES\nexport interface SortNarratives {\n    type: ActionFlag.VIEW_ORG_SORT_NARRATIVES,\n    sortBy: string\n}\n\nexport interface SortNarrativesStart {\n    type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_START\n}\n\nexport interface SortNarrativesSuccess {\n    type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_SUCCESS\n    narratives: Array<orgModel.NarrativeResource>\n    sortBy: string\n}\n\nexport interface SortNarrativesError {\n    type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_ERROR\n    error: AnError\n}\n\n\n\nexport function sortNarratives(sortBy: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_START\n        })\n\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (!viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Wrong org view model kind!'\n            }))\n            return\n        }\n\n        const { narratives } = viewModel.organization as orgModel.Organization\n        const searchBy = viewModel.narratives.searchBy\n\n        const sorted = orgModel.queryNarratives(narratives, {\n            sortBy: sortBy,\n            searchBy: searchBy\n        })\n\n        // const sorted = orgModel.sortNarratives(narratives.slice(), sortBy)\n        // const sorted = narratives.slice().sort(sortByToComparator(sortBy))\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_SUCCESS,\n            narratives: sorted,\n            sortBy\n        })\n\n    }\n}\n\n\n// SEARCH NARRATIVES\n\nexport interface SearchNarratives {\n    type: ActionFlag.VIEW_ORG_SEARCH_NARRATIVES,\n    searchBy: string\n}\n\nexport interface SearchtNarrativesStart {\n    type: ActionFlag.VIEW_ORG_SEARCH_NARRATIVES_START\n}\n\nexport interface SearchNarrativesSuccess {\n    type: ActionFlag.VIEW_ORG_SEARCH_NARRATIVES_SUCCESS\n    narratives: Array<orgModel.NarrativeResource>\n    searchBy: string\n}\n\nexport interface SearchNarrativesError {\n    type: ActionFlag.VIEW_ORG_SEARCH_NARRATIVES_ERROR\n    error: AnError\n}\n\n\n\nexport function searchNarratives(searchBy: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_NARRATIVES_START\n        })\n\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (!viewModel) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Now view model!'\n            }))\n            return\n        }\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Wrong org view model kind!'\n            }))\n            return\n        }\n\n        const { narratives } = viewModel.organization as orgModel.Organization\n        const sortBy = viewModel.narratives.sortBy\n\n        const sorted = orgModel.queryNarratives(narratives, {\n            sortBy: sortBy,\n            searchBy: searchBy\n        })\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SEARCH_NARRATIVES_SUCCESS,\n            searchBy: searchBy,\n            narratives: sorted\n        })\n\n    }\n}\n\n// REmove app\n\nexport interface RemoveApp {\n    type: ActionFlag.VIEW_ORG_REMOVE_APP,\n    appId: string\n}\n\nexport interface RemoveAppStart {\n    type: ActionFlag.VIEW_ORG_REMOVE_APP_START\n}\n\nexport interface RemoveAppSuccess {\n    type: ActionFlag.VIEW_ORG_REMOVE_APP_SUCCESS\n    appId: string\n}\n\nexport interface RemoveAppError {\n    type: ActionFlag.VIEW_ORG_REMOVE_APP_ERROR,\n    error: AnError\n}\n\nfunction removeAppStart() {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_APP_START\n    }\n}\n\nfunction removeAppSuccess(appId: string) {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_APP_SUCCESS,\n        appId\n    }\n}\n\nfunction removeAppError(error: AnError) {\n    return {\n        type: ActionFlag.VIEW_ORG_REMOVE_APP_ERROR,\n        error: error\n    }\n}\n\nfunction ensureViewModel(state: StoreState): ViewOrgViewModel {\n    if (!state.views.viewOrgView.viewModel) {\n        throw new Error('View orgs does not have an org')\n    }\n\n    const {\n        views: {\n            viewOrgView: {\n                viewModel\n            }\n        }\n    }: StoreState = state\n\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('View orgs does not have an org')\n    }\n\n    // const { organization } = viewModel\n\n    // if (!organization) {\n    //     dispatch(removeNarrativeError({\n    //         code: 'bad state',\n    //         message: 'View orgs does not have an org'\n    //     }))\n    //     return\n    // }\n    return viewModel\n}\n\nfunction orgClientFromState(state: StoreState): orgModel.OrganizationModel {\n    const {\n        auth: { authorization: { token, username } },\n        app: { config }\n    }: StoreState = state\n\n    return new orgModel.OrganizationModel({\n        token, username,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url\n    })\n}\n\nexport function removeApp(appId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(removeAppStart())\n\n        const viewModel = ensureViewModel(getState())\n        const orgClient = orgClientFromState(getState())\n\n        try {\n            orgClient.removeAppFromOrg(viewModel.organization.id, appId)\n            dispatch(removeAppSuccess(appId))\n        } catch (ex) {\n            dispatch(removeAppError(makeError({\n                code: 'error',\n                message: ex.message\n            })))\n        }\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from '../index'\nimport {\n    StoreState,\n    AppError,\n    ViewOrgViewModelKind\n} from '../../../types'\n\nimport * as requestModel from '../../../data/models/requests'\nimport * as viewOrgActions from '../viewOrg'\n\n\nexport interface AcceptRequestAction<T> extends Action<T> {\n}\n\nexport interface AcceptRequest extends AcceptRequestAction<ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST> {\n    type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST\n    request: requestModel.Request\n}\n\ninterface AcceptRequestStart extends AcceptRequestAction<ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_START> {\n    type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_START\n}\n\nexport interface AcceptRequestSuccess extends AcceptRequestAction<ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS,\n    requests: Array<requestModel.Request>\n}\n\ninterface AcceptRequestError extends AcceptRequestAction<ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR> {\n    type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n    error: AppError\n}\n\nexport function acceptRequest(requestId: requestModel.RequestID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, AcceptRequestAction<any>>, getState: () => StoreState) => {\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (viewModel === null) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'error',\n                    message: 'No view model'\n                }\n            })\n            return\n        }\n\n        // argh\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'invalid state',\n                    message: 'Not the right kind of view model'\n                }\n            })\n            return\n        }\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_START\n        })\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = state\n\n        // do the cancellation\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const request = await requestClient.acceptRequest(requestId)\n\n            // refetch the inbox\n            const inbox = await requestClient.getCombinedRequestInboxForOrg(viewModel.organization.id)\n\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_SUCCESS,\n                requests: inbox\n            })\n            dispatch(viewOrgActions.reload(request.organizationId))\n            // send the inbox in the success\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: ex.name,\n                    message: ex.message\n                }\n            })\n        }\n\n        // or error\n    }\n}\n\n","import * as React from 'react'\nimport { NavLink, withRouter, Route } from 'react-router-dom'\nimport './Header.css'\nimport { Icon, Menu } from 'antd';\nimport { ClickParam } from 'antd/lib/menu'\n\nexport interface HeaderProps {\n    breadcrumbs: JSX.Element\n    buttons?: JSX.Element\n    test?: string\n    // history: History.History\n}\n\ninterface HeaderState {\n    currentMenuItem: string\n}\n\ninterface MenuProps {\n    currentItem: string\n}\n// const TopMenu = withRouter<MenuProps>(({ history }) => {\n//         function doNavigate(key: string) {\n//             switch (key) {\n//                 case 'myorgs':\n//                     history.push('/dashboard')\n//                 case 'allorgs':\n//                     history.push('/organizations')\n//             }\n//         }\n//         return (\n//             <Menu\n//                 onClick={(e: ClickParam) => { doNavigate(e.key) }}\n//                 selectedKeys={[this.state.currentMenuItem]}\n//                 mode=\"horizontal\"\n//             >\n//                 <Menu.Item key=\"myorgs\">\n//                     My Organizations\n//                 </Menu.Item>\n//                 <Menu.Item key=\"allorgs\">\n//                     All Organizations\n//                 </Menu.Item>\n//             </Menu>\n//         )\n//     })\n// }\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n\n    constructor(props: HeaderProps, context: React.Context<any>) {\n        super(props)\n\n        this.state = {\n            currentMenuItem: 'myorgs'\n        }\n    }\n    // <FaChevronRight style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n    buildSeparator() {\n        if (this.props.breadcrumbs) {\n            return (\n                <Icon type=\"right\" style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n            )\n        }\n    }\n\n    onMenuSelection(e: ClickParam) {\n        // this.setState({\n        //     currentMenuItem: e.key\n        // })\n        // switch (e.key) {\n        //     case 'allorgs':\n        //         this.props.history.push('/organizations')\n        // }\n    }\n\n    render() {\n        return (\n            <div className=\"Header\">\n                <div className=\"Header-contextual\">\n                    <div className=\"Header-userColumn\">\n                        <div className=\"Header-breadcrumbs\">\n                            {this.props.breadcrumbs}\n                        </div>\n                        <div className=\"Header-buttons\">\n                            {this.props.buttons}\n                        </div>\n                        {/* {this.props.children} */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from '../index'\n\nimport { AppError, StoreState, ViewOrgViewModelKind } from '../../../types'\nimport * as orgModel from '../../../data/models/organization/model'\nimport * as uberModel from '../../../data/models/uber'\nimport { AnError, makeError } from '../../../lib/error'\nimport { reload as reloadOrg } from '../viewOrg'\n\n// LOADING\n\nexport interface Load extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD,\n    organizationId: string\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_START\n}\n\nexport interface Unload extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_UNLOAD\n}\n\nexport interface LoadSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_SUCCESS\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n}\n\nexport interface LoadError extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_ERROR\n    error: AppError\n}\n\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_START\n    }\n}\n\nexport function loadSuccess(organization: orgModel.Organization, relation: orgModel.Relation): LoadSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_SUCCESS,\n        organization: organization,\n        relation: relation\n    }\n}\n\nexport function loadError(error: AppError): LoadError {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_UNLOAD\n    }\n}\n\nexport function load(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n\n        const uberClient = new uberModel.UberModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        try {\n            const { organization, relation } = await uberClient.getOrganizationForUser(organizationId)\n            if (organization.kind !== orgModel.OrganizationKind.NORMAL) {\n                dispatch(loadError({\n                    code: 'invalid state',\n                    message: 'Organization must be of kind \"NORMAL\"'\n                }))\n                return\n            }\n            dispatch(loadSuccess(organization, relation))\n\n        } catch (ex) {\n            dispatch(loadError({\n                code: ex.name,\n                message: ex.message\n            }))\n        }\n    }\n}\n\n// Promoting member to admin\n\nexport interface PromoteToAdmin extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN,\n    memberUsername: string\n}\n\nexport interface PromoteToAdminStart extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_START\n}\n\nexport interface PromoteToAdminSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS,\n    memberUsername: string\n}\n\nexport interface PromoteToAdminError extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_ERROR,\n    error: AppError\n}\n\n\nexport function promoteToAdminStart(): PromoteToAdminStart {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_START\n    }\n}\n\nexport function promoteToAdminSuccess(memberUsername: string): PromoteToAdminSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_SUCCESS,\n        memberUsername\n    }\n}\n\nexport function promoteToAdminError(error: AppError): PromoteToAdminError {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_PROMOTE_TO_ADMIN_ERROR,\n        error: error\n    }\n}\n\nexport function promoteToAdmin(memberUsername: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(promoteToAdminStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        orgClient.memberToAdmin(viewModel.organization.id, memberUsername)\n            .then((org) => {\n                dispatch(promoteToAdminSuccess(memberUsername))\n            })\n            .catch((err: Error) => {\n                dispatch(promoteToAdminError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n// Demote admin to member\n\nexport interface DemoteToMember extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER,\n    memberUsername: string\n}\n\nexport interface DemoteToMemberStart extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_START\n}\n\nexport interface DemoteToMemberSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS,\n    memberUsername: string\n}\n\nexport interface DemoteToMemberError extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_ERROR,\n    error: AppError\n}\n\n\nexport function demoteToMemberStart(): DemoteToMemberStart {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_START\n    }\n}\n\nexport function demoteToMemberSuccess(memberUsername: string): DemoteToMemberSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_SUCCESS,\n        memberUsername: memberUsername\n    }\n}\n\nexport function demoteToMemberError(error: AppError): DemoteToMemberError {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_DEMOTE_TO_MEMBER_ERROR,\n        error: error\n    }\n}\n\nexport function demoteToMember(memberUsername: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(demoteToMemberStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        orgClient.adminToMember(viewModel.organization.id, memberUsername)\n            .then((org) => {\n                dispatch(demoteToMemberSuccess(memberUsername))\n                // dispatch(viewMembersLoad(view.organization.id))\n            })\n            .catch((err: Error) => {\n                dispatch(demoteToMemberError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n// Remove a member\n\nexport interface RemoveMember extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER,\n    memberUsername: string\n}\n\ninterface RemoveMemberStart extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_START\n}\n\nexport interface RemoveMemberSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS,\n    memberUsername: orgModel.Username\n}\n\ninterface RemoveMemberError extends Action {\n    type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_ERROR,\n    error: AppError\n}\n\nfunction removeMemberStart(): RemoveMemberStart {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_START\n    }\n}\n\nfunction removeMemberSuccess(memberUsername: orgModel.Username): RemoveMemberSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_SUCCESS,\n        memberUsername\n    }\n}\n\nfunction removeMemberError(error: AppError): RemoveMemberError {\n    return {\n        type: ActionFlag.VIEW_ORG_VIEW_MEMBERS_REMOVE_MEMBER_ERROR,\n        error: error\n    }\n}\n\nexport function removeMember(memberUsername: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(removeMemberStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        orgClient.removeMember(viewModel.organization.id, memberUsername)\n            .then(() => {\n                // dispatch(removeMemberSuccess(memberUsername))\n                // dispatch(load(viewModel.organization.id))\n                dispatch(reloadOrg(viewModel.organization.id))\n            })\n            .catch((err: Error) => {\n                dispatch(removeMemberError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n// SORT MEMBERS\n\nexport interface SortMembers {\n    type: ActionFlag.VIEW_ORG_SORT_MEMBERS,\n    sortBy: string\n}\n\nexport interface SortMembersStart {\n    type: ActionFlag.VIEW_ORG_SORT_MEMBERS_START\n}\n\nexport interface SortMembersSuccess {\n    type: ActionFlag.VIEW_ORG_SORT_MEMBERS_SUCCESS\n    members: Array<orgModel.Member>\n    sortBy: string\n}\n\nexport interface SortMembersError {\n    type: ActionFlag.VIEW_ORG_SORT_MEMBERS_ERROR\n    error: AnError\n}\n\n\n\nexport function sortMembers(sortBy: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_MEMBERS_START\n        })\n\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (viewModel === null) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_SORT_MEMBERS_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: 'No view model'\n                })\n            })\n            return\n        }\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_SORT_MEMBERS_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: 'Wrong org view model kind!'\n                })\n            })\n            return\n        }\n\n        const { members } = viewModel.organization as orgModel.Organization\n        const searchBy = viewModel.searchMembersBy\n\n        const sorted = orgModel.queryMembers(members, {\n            sortBy: sortBy,\n            searchBy: searchBy\n        })\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_MEMBERS_SUCCESS,\n            members: sorted,\n            sortBy\n        })\n\n    }\n}\n\n// SEARCH MEMBERS\n\nexport interface SearchMembers {\n    type: ActionFlag.VIEW_ORG_SEARCH_MEMBERS,\n    searchBy: string\n}\n\nexport interface SearchtMembersStart {\n    type: ActionFlag.VIEW_ORG_SEARCH_MEMBERS_START\n}\n\nexport interface SearchMembersSuccess {\n    type: ActionFlag.VIEW_ORG_SEARCH_MEMBERS_SUCCESS\n    members: Array<orgModel.Member>\n    searchBy: string\n}\n\nexport interface SearchMembersError {\n    type: ActionFlag.VIEW_ORG_SEARCH_MEMBERS_ERROR\n    error: AnError\n}\n\nexport function searchMembers(searchBy: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SORT_MEMBERS_START\n        })\n\n        const state = getState()\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (!viewModel) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_SORT_MEMBERS_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: 'No view model'\n                })\n            })\n            return\n        }\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_SORT_MEMBERS_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: 'Wrong org view model kind!'\n                })\n            })\n            return\n        }\n\n        const { members } = viewModel.organization as orgModel.Organization\n        const sortBy = viewModel.sortMembersBy\n\n        const sorted = orgModel.queryMembers(members, {\n            sortBy: sortBy,\n            searchBy: searchBy\n        })\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_SEARCH_MEMBERS_SUCCESS,\n            searchBy: searchBy,\n            members: sorted\n        })\n\n    }\n}","import * as React from 'react'\n\nimport Avatar from './Avatar'\nimport { } from '../../types';\nimport { Icon, Tooltip } from 'antd';\nimport * as orgModel from '../../data/models/organization/model'\nimport * as userModel from '../../data/models/user'\n\nimport './Member.css'\nimport NiceElapsedTime from '../NiceElapsedTime';\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\nexport interface MemberProps {\n    member: orgModel.Member\n    user: userModel.User\n    avatarSize?: number\n}\n\ninterface MemberState {\n    view: View\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\nclass Member extends React.Component<MemberProps, MemberState> {\n    constructor(props: MemberProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderRole() {\n        switch (this.props.member.type) {\n            case orgModel.MemberType.OWNER:\n                return (\n                    <span>\n                        <Icon type=\"crown\" /> owner\n                </span>\n                )\n            case orgModel.MemberType.ADMIN:\n                return (\n                    <span>\n                        <Icon type=\"unlock\" /> admin\n                </span>\n                )\n            case orgModel.MemberType.MEMBER:\n                return (\n                    <span>\n                        <Icon type=\"user\" /> member\n                </span>\n                )\n        }\n    }\n\n    renderCompact() {\n        const userTooltip = (\n            <div>\n                {this.props.member.username}\n            </div>\n        )\n        return (\n            <div className=\"Member View-COMPACT\" >\n                <div className=\"Member-controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"Member-avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"Member-infoCol\">\n                    <div className=\"Member-name\">\n                        <Tooltip placement=\"bottomRight\" title={userTooltip}>\n                            <a href={\"/#people/\" + this.props.member.username} target=\"_blank\">{this.props.user.realname}</a>\n                        </Tooltip>\n                    </div>\n                    <div className=\"Member-role\">\n                        {this.renderRole()}\n                        {', joined '}\n                        <NiceElapsedTime time={this.props.member.joinedAt} />\n                    </div>\n                    <div className=\"Member-title\">\n                        {this.props.member.title || this.props.user.title}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderNormal() {\n        const userTooltip = (\n            <div>\n                {this.props.member.username}\n            </div>\n        )\n        return (\n            <div className=\"Member View-NORMAL\" >\n                <div className=\"Member-controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"Member-avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"Member-infoCol\">\n                    <div className=\"Member-name\">\n                        <Tooltip placement=\"bottomRight\" title={userTooltip}>\n                            <a href={\"/#people/\" + this.props.member.username} target=\"_blank\">{this.props.user.realname}</a>\n                        </Tooltip>\n                    </div>\n                    <div className=\"Member-role\">\n                        {this.renderRole()}\n                        {', joined '}\n                        <NiceElapsedTime time={this.props.member.joinedAt} />\n                    </div>\n                    <div className=\"Member-title\">\n                        {this.props.member.title || this.props.user.title}\n                    </div>\n                    <div className=\"Member-organization\">\n                        {this.props.user.organization || <i>no organization in user profile</i>}\n                    </div>\n                    <div className=\"Member-location\">\n                        {[this.props.user.city, this.props.user.state, this.props.user.country].filter(x => x).join(', ') || <i>no location information in user profile</i>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.state.view) {\n            case View.COMPACT:\n                return this.renderCompact()\n\n            case View.NORMAL:\n                return this.renderNormal()\n        }\n    }\n}\n\nexport default Member","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\nimport Member from './Member'\n\ninterface LoaderProps {\n    member: orgModel.Member\n    user: userModel.User | undefined\n    avatarSize: number\n    onLoad: (userId: userModel.Username) => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <Member member={this.props.member} user={this.props.user} avatarSize={this.props.avatarSize} />\n            )\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" />{' '}Loading member...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.onLoad(this.props.member.username)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/entities'\nimport * as orgModel from '../../data/models/organization/model'\nimport { Icon } from 'antd'\n\n\nexport interface OwnProps {\n    member: orgModel.Member\n    avatarSize: number\n}\n\ninterface StateProps {\n    user: userModel.User | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (userId: userModel.Username) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        user: state.entities.users.byId.get(props.member.username)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (userId: userModel.Username) => {\n            dispatch(actions.userLoader(userId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport { Alert, Card, Menu, Icon, Dropdown, Modal, Input, Select } from 'antd'\nimport Member from '../../../../entities/MemberContainer'\nimport './component.css'\nimport { organizationLoader } from '../../../../../redux/actions/entities';\n\nexport interface MembersProps {\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    searchMembersBy: string\n    sortMembersBy: string\n    members: Array<orgModel.Member>\n    onPromoteMemberToAdmin: (username: string) => void\n    onRemoveMember: (username: string) => void\n    onDemoteAdminToMember: (username: string) => void\n    onSearchMembers: (searchBy: string) => void\n    onSortMembers: (sortBy: string) => void\n    onReloadOrg: (id: string) => void\n}\n\ninterface MembersState {\n    confirmMemberRemoval: {\n        member: orgModel.Member\n    } | null\n}\n\nexport default class Members extends React.Component<MembersProps, MembersState> {\n    constructor(props: MembersProps) {\n        super(props)\n        this.state = {\n            confirmMemberRemoval: null\n        }\n    }\n\n    onConfirmRemoveMember(member: orgModel.Member) {\n        this.setState({\n            confirmMemberRemoval: {\n                member: member\n            }\n        })\n    }\n\n    renderConfirmMemberRemoval() {\n        if (!this.state.confirmMemberRemoval) {\n            return\n        }\n        const member = this.state.confirmMemberRemoval.member\n        const confirmed = (() => {\n            this.props.onRemoveMember(member.username)\n            this.setState({\n                confirmMemberRemoval: null\n            })\n        })\n        const canceled = (() => {\n            this.setState({\n                confirmMemberRemoval: null\n            })\n        })\n        const title = 'Confirm Removal of Member'\n        const content = (\n            <React.Fragment>\n                <p>\n                    Please confirm removal of this member from this organization.\n                </p>\n                <div className=\"SimpleCard\" style={{ marginBottom: '1em' }}>\n                    <Member member={member} avatarSize={20} />\n                </div>\n                <p>\n                    This user as well as members of this organization will receive a notification\n                    of the removal.\n                </p>\n                <p>\n                    Any Narratives associated by this member with this Organization will be unaffected. This member\n                    will also retain any Narrative permissions granted through this Organization.\n                </p>\n            </React.Fragment>\n        )\n        return (\n            <Modal\n                title={title}\n                width=\"50em\"\n                visible={true}\n                onOk={() => { confirmed() }}\n                onCancel={() => { canceled() }}\n                okText=\"Confirm\">\n                {content}\n            </Modal>\n        )\n    }\n\n    onMemberMenu(key: string, member: orgModel.Member) {\n        switch (key) {\n            case 'promoteToAdmin':\n                this.props.onPromoteMemberToAdmin(member.username)\n                break\n            case 'removeMember':\n                this.onConfirmRemoveMember(member)\n                break\n        }\n    }\n\n    onAdminMenu(key: string, member: orgModel.Member) {\n        switch (key) {\n            case 'demoteToMember':\n                this.props.onDemoteAdminToMember(member.username)\n                break\n        }\n    }\n\n    renderMemberMenu(member: orgModel.Member) {\n        const menu = (\n            <Menu onClick={({ key }) => { this.onMemberMenu.call(this, key, member) }}>\n                <Menu.Item key=\"promoteToAdmin\" >\n                    <Icon type=\"unlock\" />Promote to Admin\n                </Menu.Item>\n                <Menu.Item key=\"removeMember\" >\n                    <Icon type=\"delete\" />Remove Member\n                </Menu.Item>\n            </Menu>\n        )\n        return (\n            <div>\n                <Dropdown overlay={menu} trigger={['click']}>\n                    <Icon type=\"ellipsis\" className=\"IconButton-hover\" />\n                </Dropdown>\n            </div>\n        )\n    }\n\n    renderAdminMenu(member: orgModel.Member) {\n        const menu = (\n            <Menu onClick={({ key }) => { this.onAdminMenu.call(this, key, member) }}>\n                <Menu.Item key=\"demoteToMember\">\n                    <Icon type=\"user\" />Demote to Member\n                    </Menu.Item>\n            </Menu>\n        )\n        return (\n            <div>\n                <Dropdown overlay={menu} trigger={['click']}>\n                    <Icon type=\"ellipsis\" className=\"IconButton-hover\" />\n                </Dropdown>\n            </div>\n        )\n    }\n\n    renderOwnerMenu(member: orgModel.Member) {\n        return (\n            <div></div>\n        )\n    }\n\n    renderMemberOptions(member: orgModel.Member) {\n        if (!(this.props.relation.type === orgModel.UserRelationToOrganization.OWNER ||\n            this.props.relation.type === orgModel.UserRelationToOrganization.ADMIN)) {\n            return\n        }\n\n        switch (member.type) {\n            case orgModel.MemberType.OWNER:\n                return this.renderOwnerMenu(member)\n            case orgModel.MemberType.ADMIN:\n                return this.renderAdminMenu(member)\n            case orgModel.MemberType.MEMBER:\n                return this.renderMemberMenu(member)\n        }\n    }\n\n    renderMembers() {\n        let members: JSX.Element | Array<JSX.Element>\n        const message = (\n            <div style={{ fontStyle: 'italic', textAlign: 'center' }}>\n                No members\n            </div>\n        )\n\n        if (this.props.members.length === 0) {\n            members = (\n                <Alert type=\"info\" message={message} />\n            )\n        } else {\n            members = this.props.members.map((member) => {\n                let isNew: boolean\n                if (this.props.organization.lastVisitedAt === null) {\n                    isNew = false\n                } else {\n                    isNew = this.props.organization.lastVisitedAt.getTime() < member.joinedAt.getTime()\n                }\n                const classNames = ['Members-row', 'SimpleCard']\n                if (isNew) {\n                    classNames.push('Members-newMember')\n                }\n                return (\n                    <div className={classNames.join(' ')} key={member.username}>\n                        <div className=\"Members-member\">\n                            <Member member={member} avatarSize={50} />\n                        </div>\n                        <div className=\"Members-menu\">\n                            {this.renderMemberOptions(member)}\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        return (\n            <div className=\"infoTable\">\n                {members}\n            </div>\n        )\n    }\n\n    renderSearchBar() {\n        const doChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            this.props.onSearchMembers(e.target.value)\n        }\n        return (\n            <div style={{ paddingRight: '6px' }}>\n                <Input style={{ width: '100%', marginRight: '6px' }}\n                    placeholder=\"Filter members by name\"\n                    onChange={doChange} />\n            </div>\n        )\n    }\n\n    renderSortBar() {\n        const handleSelect = (value: string) => {\n            this.props.onSortMembers(value)\n        }\n        return (\n            <React.Fragment>\n                <span className=\"field-label\">sort</span>\n                <Select onChange={handleSelect}\n                    style={{ width: '10em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortMembersBy}\n                >\n                    <Select.Option value=\"name\" key=\"name\">Name</Select.Option>\n                    <Select.Option value=\"added\" key=\"added\">Date Joined</Select.Option>\n                </Select>\n            </React.Fragment>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <div className=\"ViewOrganizationMembers-headerRow\">\n                <div className=\"ViewOrganizationMembers-searchCol\">\n                    {this.renderSearchBar()}\n                </div>\n                <div className=\"ViewOrganizationMembers-sortCol\">\n                    {this.renderSortBar()}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let confirm\n        if (this.state.confirmMemberRemoval) {\n            confirm = this.renderConfirmMemberRemoval()\n        }\n        return (\n            <React.Fragment>\n                <div className=\"ViewOrganizationMembers scrollable-flex-column\">\n                    <div className=\"ViewOrganizationMembers-header\">\n                        {this.renderHeader()}\n                    </div>\n                    <div className=\"ViewOrganizationMembers-body scrollable-flex-column\">\n                        {this.renderMembers()}\n                    </div>\n                </div>\n                {confirm}\n            </React.Fragment>\n        )\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, ViewOrgViewModelKind } from '../../../../../types'\nimport * as actions from '../../../../../redux/actions/viewOrganization/viewMembers'\nimport ViewMembers from './component'\nimport * as orgModel from '../../../../../data/models/organization/model'\n\nexport interface OwnProps {\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    onReloadOrg: (id: string) => void\n}\n\ninterface StateProps {\n    searchMembersBy: string\n    sortMembersBy: string\n    members: Array<orgModel.Member>\n}\n\ninterface DispatchProps {\n    onViewMembersUnload: () => void,\n    onPromoteMemberToAdmin: (memberUsername: string) => void,\n    onDemoteAdminToMember: (adminUsername: string) => void,\n    onRemoveMember: (memberUsername: string) => void\n    onSearchMembers: (searchBy: string) => void\n    onSortMembers: (sortBy: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    const { searchMembersBy, sortMembersBy, members } = viewModel\n    return {\n        searchMembersBy, sortMembersBy, members\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onViewMembersUnload: () => {\n            dispatch(actions.unload() as any)\n        },\n        onPromoteMemberToAdmin: (memberUsername: string) => {\n            dispatch(actions.promoteToAdmin(memberUsername) as any)\n        },\n        onDemoteAdminToMember: (adminUsername: string) => {\n            dispatch(actions.demoteToMember(adminUsername) as any)\n        },\n        onRemoveMember: (memberUsername: string) => {\n            dispatch(actions.removeMember(memberUsername) as any)\n        },\n        onSearchMembers: (searchBy: string) => {\n            dispatch(actions.searchMembers(searchBy) as any)\n        },\n        onSortMembers: (sortBy: string) => {\n            dispatch(actions.sortMembers(sortBy) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(ViewMembers)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from '../index'\nimport {\n    StoreState,\n    AppError,\n    ViewOrgViewModelKind\n} from '../../../types'\n\nimport * as requestModel from '../../../data/models/requests'\n\n// Reject inbound request\n\nexport interface RejectRequestAction<T> extends Action<T> {\n}\n\nexport interface RejectInboxRequest extends RejectRequestAction<ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST> {\n    type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST\n    request: requestModel.Request\n}\n\ninterface RejectInboxRequestStart extends RejectRequestAction<ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_START> {\n    type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_START\n}\n\nexport interface RejectInboxRequestSuccess extends RejectRequestAction<ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS\n    requests: Array<requestModel.Request>\n}\n\ninterface RejectInboxRequestError extends RejectRequestAction<ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_ERROR> {\n    type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_ERROR,\n    error: AppError\n}\n\nexport function denyRequest(requestId: requestModel.RequestID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, RejectRequestAction<any>>, getState: () => StoreState) => {\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (viewModel === null) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'error',\n                    message: 'No view model'\n                }\n            })\n            return\n        }\n\n        // argh\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'invalid state',\n                    message: 'Not the right kind of view model'\n                }\n            })\n            return\n        }\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_START\n        })\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = state\n\n        // do the cancelation\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            await requestClient.denyRequest(requestId)\n\n            // refetch the outbox\n            const inbox = await requestClient.getRequestInboxForOrg(viewModel.organization.id)\n\n            dispatch({\n                type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_SUCCESS,\n                requests: inbox\n            } as RejectInboxRequestSuccess)\n\n            // send the inbox in the success\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_REJECT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: ex.name,\n                    message: ex.message\n                }\n            })\n        }\n\n\n        // or error\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from '../index'\nimport {\n    StoreState,\n    ViewOrgViewModelKind\n} from '../../../types'\nimport * as requestModel from '../../../data/models/requests'\nimport { AnError, makeError } from '../../../lib/error'\n\nexport interface CancelJoinRequest extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST\n}\n\nexport interface CancelJoinRequestStart extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n}\n\nexport interface CancelJoinRequestSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS\n    requests: Array<requestModel.Request>\n}\n\nexport interface CancelJoinRequestError extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n    error: AnError\n}\n\nexport function cancelRequest(requestId: requestModel.RequestID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n        })\n\n        const state = getState()\n\n        const viewModel = state.views.viewOrgView.viewModel\n\n        if (viewModel === null) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'error',\n                    message: 'No view model'\n                }\n            })\n            return\n        }\n\n        // argh\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_ACCEPT_INBOX_REQUEST_ERROR,\n                error: {\n                    code: 'invalid state',\n                    message: 'Not the right kind of view model'\n                }\n            })\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = state\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const request = await requestClient.cancelRequest(requestId)\n            const requests: Array<requestModel.Request> = await requestClient.getRequestOutboxForOrg(viewModel.organization.id)\n\n            dispatch({\n                type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS,\n                requests\n            } as CancelJoinRequestSuccess)\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            } as CancelJoinRequestError)\n        }\n    }\n}","import * as React from 'react'\nimport './User.css'\nimport Avatar from './Avatar'\nimport * as userModel from '../../data/models/user'\nimport { Button, Icon } from 'antd';\n\nexport interface UserProps {\n    user: userModel.User\n    avatarSize?: number\n}\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\ninterface UserState {\n    view: View\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\nfunction viewLabel(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return 'Compact'\n        case View.NORMAL:\n            return 'Normal'\n    }\n}\n\nclass User extends React.Component<UserProps, UserState> {\n    constructor(props: UserProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderCompact() {\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"infoCol\">\n                    <div className=\"name\">\n                        <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                    </div>\n                    <div>\n                        {this.props.user.username}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    renderNormal() {\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"infoCol\">\n                    <div className=\"name\">\n                        <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                    </div>\n                    <div>\n                        {this.props.user.username}\n                    </div>\n                    <div className=\"organization\">\n                        {this.props.user.organization || <i>no organization in user profile</i>}\n                    </div>\n                    <div className=\"location\">\n                        {[this.props.user.city, this.props.user.state, this.props.user.country].filter(x => x).join(', ') || <i>no location information in user profile</i>}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        switch (this.state.view) {\n            case View.COMPACT:\n                return (\n                    <div className=\"User View-COMPACT\">\n                        {this.renderCompact()}\n                    </div>\n                )\n            case View.NORMAL:\n                return (\n                    <div className=\"User View-NORMAL\">\n                        {this.renderNormal()}\n                    </div>\n                )\n        }\n    }\n}\n\nexport default User","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\nimport User from './User'\n\ninterface LoaderProps {\n    userId: userModel.Username\n    user: userModel.User | undefined\n    avatarSize: number\n    onLoad: (userId: userModel.Username) => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <User user={this.props.user} avatarSize={this.props.avatarSize} />\n            )\n        } else {\n            return (\n                <div>\n                    Loading user...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.onLoad(this.props.userId)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/entities'\n\n\nexport interface OwnProps {\n    userId: userModel.Username\n    avatarSize: number\n}\n\ninterface StateProps {\n    user: userModel.User | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (userId: userModel.Username) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        user: state.entities.users.byId.get(props.userId)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (userId: userModel.Username) => {\n            dispatch(actions.userLoader(userId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport * as narrativeModel from '../../data/models/narrative'\nimport { Tooltip, Icon, Alert } from 'antd';\nimport './Narrative.css'\nimport UserSimple from './UserContainer';\n\nexport interface NarrativeProps {\n    narrative: narrativeModel.Narrative\n}\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\ninterface NarrativeState {\n    view: View\n}\n\nexport default class Narrative extends React.Component<NarrativeProps, NarrativeState> {\n    constructor(props: NarrativeProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderPublicPermission(narrative: narrativeModel.AccessibleNarrative) {\n        if (narrative.isPublic) {\n            return (\n                <Tooltip title=\"This narrative is viewable by all KBase users\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"global\" /> Public Narrative\n                    </span>\n                </Tooltip>\n            )\n        } else {\n            return (\n                <Tooltip title=\"This narrative is only accessible to those with whom it is directly shared\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"lock\" /> Private Narrative\n                    </span>\n                </Tooltip>\n            )\n        }\n    }\n\n    renderUserPermission(narrative: narrativeModel.AccessibleNarrative) {\n        let label\n        switch (narrative.access) {\n            case narrativeModel.NarrativeAccess.VIEW:\n                label = (\n                    <span>View-Only (<i>visit narrative to request additional access</i>)</span>\n                )\n                break\n            case narrativeModel.NarrativeAccess.EDIT:\n                label = (\n                    <span>Edit (<i>visit narrative to request additional access</i>)</span>\n                )\n                break\n            case narrativeModel.NarrativeAccess.ADMIN:\n                label = 'Admin'\n                break\n            case narrativeModel.NarrativeAccess.OWNER:\n                label = 'Owner'\n                break\n            default:\n                label = 'Unknown'\n        }\n        return (\n            <span>\n                {label}\n            </span>\n        )\n    }\n\n    renderCompact(narrative: narrativeModel.AccessibleNarrative) {\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"iconCol\">\n                    <Icon type=\"file\" style={{ fontSize: '30px', width: '30px' }} />\n                </div>\n                <div className=\"mainCol\">\n                    <div className=\"Narrative-title\">\n                        <a href={\"/narrative/\" + narrative.workspaceId} target=\"_blank\">\n                            {narrative.title}\n                        </a>\n                    </div>\n                    {' '}\n                    <div className=\"Narrative-owner\">\n                        <UserSimple avatarSize={20} userId={narrative.owner} />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    renderNormal(narrative: narrativeModel.AccessibleNarrative) {\n        // const narrative = this.props.narrative\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                <div className=\"iconCol\">\n                    <Icon type=\"file\" style={{ fontSize: '30px', width: '30px' }} />\n                </div>\n                <div className=\"mainCol\">\n                    <div className=\"mainCol\">\n                        <div className=\"Narrative-title\">\n                            <a href={\"/narrative/\" + narrative.workspaceId} target=\"_blank\">\n                                {narrative.title}\n                            </a>\n                        </div>\n                        {' '}\n                        <div className=\"Narrative-owner\">\n                            <UserSimple avatarSize={20} userId={narrative.owner} />\n                        </div>\n                    </div>\n                    {/* <div className=\"Narrative-attributes\">\n                        <div className=\"Narrative-userPermission\">\n                            <Icon type=\"crown\" />\n                        </div>\n                        <div className=\"Narrative-global\">\n                            <Icon type=\"global\" />\n                        </div>\n                    </div> */}\n                    <div>\n                        {this.renderPublicPermission(narrative)}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">your permission</span>\n                        {this.renderUserPermission(narrative)}\n                    </div>\n                    {/* <div>\n                        <span className=\"field-label\">owner</span>\n                        <UserSimple avatarSize={20} userId={narrative.owner} />\n                    </div> */}\n                    <div>\n                        <span className=\"field-label\">last saved</span>{Intl.DateTimeFormat('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                        }).format(narrative.lastSavedAt)}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">by</span>{narrative.lastSavedBy}\n                    </div>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const narrative = this.props.narrative\n        if (narrative.access === narrativeModel.NarrativeAccess.NONE) {\n            return (\n                <div>\n                    <Icon type=\"exclamation-circle\" style={{ color: 'orange' }} />\n                    {' '}\n                    You don't have access to this Narrative\n                </div>\n            )\n        }\n        switch (this.state.view) {\n            case View.COMPACT:\n                return (\n                    <div className=\"Narrative View-COMPACT\">\n                        {this.renderCompact(narrative)}\n                    </div>\n                )\n            case View.NORMAL:\n                return (\n                    <div className=\"Narrative View-NORMAL\">\n                        {this.renderNormal(narrative)}\n                    </div>\n                )\n        }\n\n    }\n}","import * as React from 'react'\nimport * as narrativeModel from '../../data/models/narrative'\nimport * as orgModel from '../../data/models/organization/model'\nimport Narrative from './Narrative'\n\ninterface LoaderProps {\n    workspaceId: narrativeModel.WorkspaceID\n    narrative: narrativeModel.Narrative | null\n    onLoad: (workspaceId: narrativeModel.WorkspaceID) => void\n}\n\ninterface LoaderState { }\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.narrative) {\n            return (\n                <Narrative\n                    narrative={this.props.narrative}\n                />\n            )\n        } else {\n            return (\n                <div>\n                    Loading narrative...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.narrative) {\n            this.props.onLoad(this.props.workspaceId)\n        }\n    }\n}\n\n// redux wrapper\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types'\nimport * as actions from '../../redux/actions/entities'\n\nexport interface OwnProps {\n    workspaceId: narrativeModel.WorkspaceID\n}\n\ninterface StateProps {\n    narrative: narrativeModel.Narrative | null\n}\n\ninterface DispatchProps {\n    onLoad: (workspaceId: narrativeModel.WorkspaceID) => void\n}\n\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        narrative: state.entities.narratives.byId.get(props.workspaceId) || null\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (workspaceId: narrativeModel.WorkspaceID) => {\n            dispatch(actions.loadNarrative(workspaceId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)\n","import * as React from 'react'\nimport * as appModel from '../../../data/models/apps'\nimport './component.css'\nimport { Icon, Tooltip } from 'antd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\nexport interface AppProps {\n    app: appModel.AppFullInfo // for now, we'll switch to full app soon\n}\n\ninterface AppState {\n    view: View\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n    constructor(props: AppProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderIcon() {\n        if (!this.props.app.icon.url) {\n            return (\n                // <div className=\"fa-layers fa-fw\">\n                //     <FontAwesomeIcon icon=\"square\" size=\"3x\" style={{ color: 'rgb(103, 58, 103)' }} />\n                //     <FontAwesomeIcon icon=\"cube\" size=\"3x\" inverse transform=\"shrink-4 left-1\" />\n                // </div>\n                <Icon type=\"border\" style={{ fontSize: '30px', color: 'rgb(103, 58, 103)' }} />\n            )\n        }\n        return (\n            <img src={this.props.app.icon.url} className=\"App-icon\" />\n        )\n    }\n\n    renderAuthors() {\n        const authorCount = this.props.app.authors.length\n        return this.props.app.authors\n            .map((authorUsername, index) => {\n                let sep\n                if (index < authorCount - 1) {\n                    sep = ', '\n                }\n                return (\n                    <a href={`#people/${authorUsername}`} key={authorUsername}>\n                        {authorUsername}{sep}\n                    </a>\n                )\n            })\n    }\n\n    renderViewControl() {\n        return (\n            <a onClick={this.onToggleView.bind(this)}\n                className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n            >\n                <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n            </a>\n        )\n    }\n\n\n    renderCompact() {\n        return (\n            <div className='App'>\n                <div className=\"App-controlCol\">\n                    {this.renderViewControl()}\n                </div>\n                <div className=\"App-iconCol\">\n                    {this.renderIcon()}\n                </div>\n                <div className=\"App-appCol\">\n                    <div className='App-name'>\n                        <Tooltip placement=\"bottomRight\" title={this.props.app.subtitle}>\n                            <a href={\"/#catalog/apps/\" + this.props.app.id} target=\"_blank\">\n                                {this.props.app.name}\n                            </a>\n                        </Tooltip>\n                    </div>\n                    <div className=\"App-moduleName\">\n                        <span className=\"field-label\">module</span>{this.props.app.moduleName}\n                    </div>\n                    {/* <div className=\"App-subtitle\">\n                        {this.props.app.subtitle}\n                    </div>\n                    <div className=\"App-authors\">\n                        <span className=\"field-label\">by</span> {this.renderAuthors()}\n                    </div> */}\n                </div>\n\n            </div>\n        )\n    }\n\n    renderNormal() {\n        return (\n            <div className='App'>\n                <div className=\"App-controlCol\">\n                    {this.renderViewControl()}\n                </div>\n                <div className=\"App-iconCol\">\n                    {this.renderIcon()}\n                </div>\n                <div className=\"App-appCol\">\n                    <div className='App-name'>\n                        <Tooltip placement=\"bottomRight\" title={this.props.app.subtitle}>\n                            <a href={\"/#catalog/apps/\" + this.props.app.id} target=\"_blank\">\n                                {this.props.app.name}\n                            </a>\n                        </Tooltip>\n                    </div>\n                    <div className=\"App-subtitle\">\n                        {this.props.app.subtitle}\n                    </div>\n                    <div className=\"App-moduleName\">\n                        <span className=\"field-label\">module</span>{this.props.app.moduleName}\n                    </div>\n\n                    <div className=\"App-authors\">\n                        <span className=\"field-label\">by</span> {this.renderAuthors()}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.state.view) {\n            case View.COMPACT:\n                return (\n                    <div className=\"Narrative View-COMPACT\">\n                        {this.renderCompact()}\n                    </div>\n                )\n            case View.NORMAL:\n                return (\n                    <div className=\"Narrative View-NORMAL\">\n                        {this.renderNormal()}\n                    </div>\n                )\n        }\n    }\n}","import * as React from 'react'\nimport * as appModel from '../../../data/models/apps'\nimport App from './component'\n\ninterface LoaderProps {\n    appId: appModel.AppID\n    // TODO: don't really like AppFullInfo - as a name\n    app: appModel.AppFullInfo | undefined\n    onLoad: (appId: appModel.AppID) => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.app) {\n            return (\n                <App app={this.props.app} />\n            )\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" /> Loading App...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.app) {\n            this.props.onLoad(this.props.appId)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../../types';\nimport * as actions from '../../../redux/actions/entities'\nimport { Icon } from 'antd';\n\n\nexport interface OwnProps {\n    appId: appModel.AppID\n}\n\ninterface StateProps {\n    app: appModel.AppFullInfo | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (appId: appModel.AppID) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        app: state.entities.apps.byId.get(props.appId)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (appId: appModel.AppID) => {\n            dispatch(actions.loadApp(appId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport * as requestModel from '../../../../../data/models/requests'\nimport { niceElapsed } from '../../../../../lib/time'\nimport Narrative from '../../../../entities/NarrativeContainer'\nimport User from '../../../../entities/UserContainer'\nimport { Button, Icon } from 'antd'\nimport './InboxRequest.css'\nimport App from '../../../../entities/app/loader'\n\nexport interface RequestProps {\n    request: requestModel.Request\n    onAcceptInboxRequest: (request: requestModel.Request) => void\n    onRejectInboxRequest: (request: requestModel.Request) => void\n}\n\ninterface RequestState {\n\n}\n\nexport default class Request extends React.Component<RequestProps, RequestState> {\n    constructor(props: RequestProps) {\n        super(props)\n    }\n\n    onAcceptRequest() {\n        this.props.onAcceptInboxRequest(this.props.request)\n    }\n\n    onRejectRequest() {\n        this.props.onRejectInboxRequest(this.props.request)\n    }\n\n    renderRequestSentSubject(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'SHOW APP'\n                    case requestModel.RequestResourceType.USER:\n                        return ''\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                                </div>\n                            </div>\n                        )\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <User userId={request.user} avatarSize={30} />\n                                </div>\n                            </div>\n                        )\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderRequestRequester(request: requestModel.Request) {\n        return (\n            <User userId={request.requester} avatarSize={30} />\n        )\n    }\n\n    renderRequestReceivedType(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'REQUEST to associate App'\n                    case requestModel.RequestResourceType.USER:\n                        return 'REQUEST to join Organization'\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return 'REQUEST to associate Narrative'\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return 'INVITATION to join Organization'\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderRequestReceivedSubject(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'SHOW APP'\n                    case requestModel.RequestResourceType.USER:\n                        return ''\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                                </div>\n                                <div className=\"cardSectionHeader\">with organization</div>\n                            </div>\n                        )\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return ''\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderJoinRequest(request: requestModel.UserRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to join Organization\n                </div>\n\n                <div className=\"cardSectionHeader\">from</div>\n\n                <div className=\"requestSubject\">{this.renderRequestRequester(request)}</div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderWorkspaceRequest(request: requestModel.WorkspaceRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to associate Narrative\n                </div>\n\n                <div className=\"miniDetail\">\n                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                </div>\n\n                <div className=\"cardSectionHeader\">from</div>\n\n                <div className=\"requester miniDetail\">{this.renderRequestRequester(request)}</div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n\n    renderAppRequest(request: requestModel.AppRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to associate App\n                </div>\n\n                <div className=\"miniDetail\">\n                    {/* <Narrative workspaceId={parseInt(request.narrativeId, 10)} /> */}\n                    <div>\n                        <App appId={request.appId} />\n                    </div>\n                </div>\n\n                <div className=\"cardSectionHeader\">from</div>\n\n                <div className=\"requester miniDetail\">{this.renderRequestRequester(request)}</div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderRequestOptions(request: requestModel.Request) {\n        // First, did the current user make or receive the request\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <Button.Group style={{ marginTop: '4px' }}>\n                    <Button type=\"default\" onClick={this.onAcceptRequest.bind(this)}>\n                        <Icon type=\"check\" />\n                        Accept\n                        </Button>\n                    <Button type=\"danger\" onClick={this.onRejectRequest.bind(this)}>\n                        <Icon type=\"cross\" />\n                        Reject\n                        </Button>\n                    {/* <Button>\n                            <Icon type=\"eye\" />\n                            Visit\n                        </Button> */}\n                </Button.Group>\n            </div>\n        )\n    }\n\n    renderUserInvitation(request: requestModel.UserInvitation) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    INVITATION to join organization\n                </div>\n\n                <div className=\"requestSubject\">{this.renderRequestReceivedSubject(request)}</div>\n\n                <div className=\"cardSectionHeader\">\n                    from\n                </div>\n                <User userId={request.requester} avatarSize={30} />\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderBody() {\n        const request = this.props.request\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return this.renderJoinRequest(request)\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return this.renderWorkspaceRequest(request)\n                    case requestModel.RequestResourceType.APP:\n                        return this.renderAppRequest(request)\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return this.renderUserInvitation(request)\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <React.Fragment>\n                                <div>Hmm, not supported</div>\n                            </React.Fragment>\n                        )\n                    case requestModel.RequestResourceType.APP:\n                        return (\n                            <React.Fragment>\n                                <div>Hmm, not supported</div>\n                            </React.Fragment>\n                        )\n                }\n        }\n    }\n\n    render() {\n        const request = this.props.request\n        return (\n            <div key={request.id} className=\"InboxRequest kbCard\">\n                <div className=\"kbCard-header\">\n                    <div className=\"InboxRequest-requestHeaderRow\">\n                        <div className=\"InboxRequest-requestHeaderCreatedAt\">\n                            {/* <span className=\"field-label\">created</span>\n                                {' '} */}\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'short',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}\n                        </div>\n                        <div className=\"InboxRequest-requestHeaderExpireAt\">\n                            <span className=\"field-label\">expires</span>\n                            {' '}\n                            {niceElapsed(request.expireAt)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"kbCard-body\">\n                    {this.renderBody()}\n                </div>\n            </div>\n        )\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as requestModel from '../../../../../data/models/requests'\nimport { StoreState } from '../../../../../types';\nimport * as acceptActions from '../../../../../redux/actions/viewOrganization/acceptInboxRequest'\nimport * as rejectActions from '../../../../../redux/actions/viewOrganization/denyInboxRequest'\nimport InboxRequest from './InboxRequest'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n\n}\n\ninterface DispatchProps {\n    onAcceptInboxRequest: (request: requestModel.Request) => void\n    onRejectInboxRequest: (request: requestModel.Request) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAcceptInboxRequest: (request: requestModel.Request) => {\n            dispatch(acceptActions.acceptRequest(request.id) as any)\n        },\n        onRejectInboxRequest: (request: requestModel.Request) => {\n            dispatch(rejectActions.denyRequest(request.id) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(InboxRequest)\n","import * as React from 'react'\n\nimport * as requestModel from '../../../../../data/models/requests'\nimport { niceElapsed } from '../../../../../lib/time'\nimport Narrative from '../../../../entities/NarrativeContainer';\nimport User from '../../../../entities/UserContainer';\nimport { Button, Icon } from 'antd';\nimport './OutboxRequest.css'\n\nexport interface RequestProps {\n    request: requestModel.Request\n    onCancelOutboxRequest: (request: requestModel.Request) => void\n}\n\ninterface RequestState {\n\n}\n\nexport default class Request extends React.Component<RequestProps, RequestState> {\n    constructor(props: RequestProps) {\n        super(props)\n    }\n\n    // renderRequestSentType(request: requestModel.Request) {\n    //     switch (request.type) {\n    //         case requestModel.RequestType.REQUEST:\n    //             switch (request.resourceType) {\n    //                 case requestModel.RequestResourceType.APP:\n    //                     return 'REQUEST to associate App'\n    //                 case requestModel.RequestResourceType.USER:\n    //                     return 'REQUEST to join Organization'\n    //                 case requestModel.RequestResourceType.WORKSPACE:\n    //                     return 'REQUEST to associate Narrative'\n    //             }\n    //         case requestModel.RequestType.INVITATION:\n    //             switch (request.resourceType) {\n    //                 case requestModel.RequestResourceType.USER:\n    //                     return 'INVITATION to join Organization'\n    //             }\n    //     }\n    //     return 'unknown request'\n    // }\n\n    onCancelRequest() {\n        this.props.onCancelOutboxRequest(this.props.request)\n    }\n\n    onAcceptInvitation() {\n        alert('Hold your socks, not yet implemented')\n    }\n\n    onRejectInvitation() {\n        alert('Hold your socks, not yet implemented')\n    }\n\n\n    onAcceptRequest() {\n        alert('Hold your socks, not yet implemented')\n    }\n\n    onRejectRequest() {\n        alert('Hold your socks, not yet implemented')\n    }\n\n\n\n    renderRequestSentSubject(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'SHOW APP'\n                    case requestModel.RequestResourceType.USER:\n                        return ''\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                                </div>\n                            </div>\n                        )\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <User userId={request.user} avatarSize={30} />\n                                </div>\n                            </div>\n                        )\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderRequestRequester(request: requestModel.Request) {\n        return (\n            <User userId={request.requester} avatarSize={30} />\n        )\n    }\n\n    renderRequestReceivedType(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'REQUEST to associate App'\n                    case requestModel.RequestResourceType.USER:\n                        return 'REQUEST to join Organization'\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return 'REQUEST to associate Narrative'\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return 'INVITATION to join Organization'\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderRequestReceivedSubject(request: requestModel.Request) {\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.APP:\n                        return 'SHOW APP'\n                    case requestModel.RequestResourceType.USER:\n                        return ''\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <div>\n                                <div className=\"miniDetail\">\n                                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                                </div>\n                                <div className=\"cardSectionHeader\">with organization</div>\n                            </div>\n                        )\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return (\n                            <User userId={request.user} avatarSize={30} />\n                        )\n                }\n        }\n        return 'unknown request'\n    }\n\n    renderJoinRequest(request: requestModel.UserRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to join Organization\n                </div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderWorkspaceRequest(request: requestModel.WorkspaceRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to associate Narrative\n                </div>\n\n                <div className=\"miniDetail\">\n                    <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n                </div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderAppRequest(request: requestModel.AppRequest) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    REQUEST to associate App\n                </div>\n\n                <div className=\"miniDetail\">\n                    Apps not supported yet\n                    {/* <Narrative workspaceId={parseInt(request.narrativeId, 10)} /> */}\n                </div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderRequestOptions(request: requestModel.Request) {\n        // First, did the current user make or receive the request\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <Button.Group style={{ marginTop: '4px' }}>\n                    <Button type=\"danger\" onClick={this.onCancelRequest.bind(this)}>\n                        <Icon type=\"cross\" />Cancel\n                        </Button>\n                    {/* <Button onClick={this.onVisitOrg.bind(this)}>\n                            <Icon type=\"eye\" />Visit \n                        </Button> */}\n                </Button.Group>\n            </div>\n        )\n\n    }\n\n    renderUserInvitation(request: requestModel.UserInvitation) {\n        return (\n            <React.Fragment>\n                <div className=\"cardSectionHeader\">\n                    INVITATION to join organization\n                </div>\n\n                <div className=\"cardSectionHeader\">\n                    sent to\n                </div>\n\n                <div className=\"miniDetail\">\n                    {this.renderRequestReceivedSubject(request)}\n                </div>\n\n                {this.renderRequestOptions(request)}\n            </React.Fragment>\n        )\n    }\n\n    renderBody() {\n        const request = this.props.request\n        switch (request.type) {\n            case requestModel.RequestType.REQUEST:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return this.renderJoinRequest(request)\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return this.renderWorkspaceRequest(request)\n                    case requestModel.RequestResourceType.APP:\n                        return this.renderAppRequest(request)\n                }\n            case requestModel.RequestType.INVITATION:\n                switch (request.resourceType) {\n                    case requestModel.RequestResourceType.USER:\n                        return this.renderUserInvitation(request)\n                    case requestModel.RequestResourceType.WORKSPACE:\n                        return (\n                            <React.Fragment>\n                                <div>Hmm, not supported</div>\n                            </React.Fragment>\n                        )\n                    case requestModel.RequestResourceType.APP:\n                        return (\n                            <React.Fragment>\n                                <div>Hmm, not supported</div>\n                            </React.Fragment>\n                        )\n                }\n        }\n    }\n\n    render() {\n        const request = this.props.request\n        return (\n            <div key={request.id} className=\"OutboxRequest kbCard\">\n                <div className=\"kbCard-header\">\n                    <div className=\"OutboxRequest-requestHeaderRow\">\n                        <div className=\"OutboxRequest-requestHeaderCreatedAt\">\n                            {/* <span className=\"field-label\">created</span>\n                                {' '} */}\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'short',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}\n                        </div>\n                        <div className=\"OutboxRequest-requestHeaderExpireAt\">\n                            <span className=\"field-label\">expires</span>\n                            {' '}\n                            {niceElapsed(request.expireAt)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"kbCard-body\">\n                    {this.renderBody()}\n                </div>\n            </div>\n        )\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as requestModel from '../../../../../data/models/requests'\nimport { StoreState } from '../../../../../types';\nimport * as cancelActions from '../../../../../redux/actions/viewOrganization/cancelOutboxRequest'\nimport OutboxRequest from './OutboxRequest'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n\n}\n\ninterface DispatchProps {\n    onCancelOutboxRequest: (request: requestModel.Request) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onCancelOutboxRequest: (request: requestModel.Request) => {\n            dispatch(cancelActions.cancelRequest(request.id) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(OutboxRequest)","import * as React from 'react'\n\nimport './component.css'\nimport Header from '../../../../Header'\nimport { Icon, Button, Modal, Card, Alert } from 'antd'\nimport User from '../../../../entities/UserContainer'\nimport Narrative from '../../../../entities/NarrativeContainer'\nimport * as requestModel from '../../../../../data/models/requests'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport { niceElapsed } from '../../../../../lib/time'\nimport InboxRequest from './InboxRequestContainer'\nimport OutboxRequest from './OutboxRequestContainer'\n\nexport interface RequestsProps {\n    inbox: Array<requestModel.Request>\n    outbox: Array<requestModel.Request>\n    relation: orgModel.Relation\n    // organizationId: string,\n    // viewModel: types.\n    // onStart: (organizationId: string) => void,\n    onAcceptJoinRequest: (request: requestModel.Request) => void\n    onDenyJoinRequest: (request: requestModel.Request) => void\n    onCancelJoinInvitation: (request: requestModel.Request) => void\n    onGetViewAccess: (request: requestModel.Request) => void\n}\n\nexport interface RequestsState {\n    cancelToBrowser: boolean\n    cancelToViewer: boolean\n}\n\nclass ManageGroupRequests extends React.Component<RequestsProps, RequestsState> {\n\n    constructor(props: RequestsProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false,\n            cancelToViewer: false\n        }\n\n        // this.props.onStart(this.props.organizationId)\n    }\n\n    onClickCancelToBrowser() {\n        this.setState({ cancelToBrowser: true })\n    }\n\n    onClickCancelToViewer() {\n        this.setState({ cancelToViewer: true })\n    }\n    onAcceptJoinRequest(request: requestModel.Request) {\n        this.props.onAcceptJoinRequest(request)\n    }\n    onDenyJoinRequest(request: requestModel.Request) {\n        this.props.onDenyJoinRequest(request)\n    }\n    onCancelJoinInvitation(request: requestModel.Request) {\n        this.props.onCancelJoinInvitation(request)\n    }\n    onGetViewAccess(request: requestModel.Request) {\n        this.props.onGetViewAccess(request)\n    }\n    onViewProfile(username: string) {\n        window.open('/#people/' + username, '_blank')\n    }\n    onShowInfo() {\n        Modal.info({\n            title: 'Manage Requests Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the manage requests tool...</p>\n                </div>\n            )\n        })\n    }\n\n    renderOrgName(name: string) {\n        const maxLength = 25\n        if (name.length < 25) {\n            return name\n        }\n        return (\n            <span>\n                {name.slice(0, 25)}\n                …\n            </span>\n        )\n    }\n\n    renderLoadingHeader() {\n        const breadcrumbs = (\n            <span>\n                Loading Org Editor...\n            </span>\n        )\n\n        return (\n            <Header breadcrumbs={breadcrumbs} />\n        )\n    }\n\n    renderRequestJoinRequest(request: requestModel.UserRequest) {\n        const title = (\n            <span>\n                <Icon type=\"user\" />\n                <Icon type=\"arrow-right\" />\n                <Icon type=\"team\" />\n                {' '}\n                Request to Join Group\n            </span>\n        )\n        const actions = [\n            <Button\n                type=\"primary\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onAcceptJoinRequest.call(this, request)}>\n                Approve\n            </Button>,\n            <Button\n                type=\"danger\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onDenyJoinRequest.call(this, request)}>\n                Deny\n            </Button>\n        ]\n\n        return (\n            <Card key={request.id}\n                title={title}\n                hoverable={true}\n                actions={actions}\n                headStyle={{ backgroundColor: 'rgba(200, 200, 200,0.3' }}\n                style={{ marginBottom: '10px' }}>\n                <table className=\"Requests-pendingRequestsTable\">\n                    <tbody>\n                        <tr>\n                            <th>from</th>\n                            <td className=\"Requests-requester\">\n                                <User userId={request.requester} avatarSize={50} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>sent</th>\n                            <td className=\"Requests-createdAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}</td>\n                        </tr>\n                        <tr>\n                            <th>expires</th>\n                            <td className=\"Requests-expiresAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.expireAt)} ({niceElapsed(request.expireAt)})</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Card>\n        )\n    }\n\n    renderRequestJoinInvitation(request: requestModel.UserInvitation) {\n        const title = (\n            <span>\n                <Icon type=\"team\" />\n                <Icon type=\"mail\" />\n                <Icon type=\"arrow-right\" />\n                <Icon type=\"user\" />\n\n                {' '}\n                Invitation to Join Group\n            </span>\n        )\n        const actions = [\n            <Button\n                type=\"danger\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onCancelJoinInvitation.call(this, request)}>\n                Cancel\n            </Button>\n        ]\n\n        return (\n            <Card key={request.id}\n                title={title}\n                hoverable={true}\n                actions={actions}\n                headStyle={{ backgroundColor: 'rgba(200, 200, 200,0.3' }}\n                style={{ marginBottom: '10px' }}>\n                <table className=\"Requests-pendingRequestsTable\">\n                    <tbody>\n                        <tr>\n                            <th>invitation to</th>\n                            <td className=\"Requests-requester\">\n                                <User userId={request.user} avatarSize={30} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>sent</th>\n                            <td className=\"Requests-createdAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}</td>\n                        </tr>\n                        <tr>\n                            <th>expires</th>\n                            <td className=\"Requests-expiresAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.expireAt)} ({niceElapsed(request.expireAt)})</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Card>\n        )\n    }\n\n    renderNarrativePermission(permission: orgModel.UserWorkspacePermission) {\n        switch (permission) {\n            case orgModel.UserWorkspacePermission.NONE:\n                return 'None'\n            case orgModel.UserWorkspacePermission.VIEW:\n                return 'View Only'\n            // return 'View and Copy'\n            case orgModel.UserWorkspacePermission.EDIT:\n                return 'Edit'\n            // return 'View, Copy, Save, Run'\n            case orgModel.UserWorkspacePermission.ADMIN:\n                return 'Admin'\n            // return 'View, Copy, Save, Run, Manage Sharing'\n            case orgModel.UserWorkspacePermission.OWNER:\n                return 'Owner'\n            // return 'View, Copy, Save, Run, Manage Sharing, Own'\n        }\n    }\n\n    renderRequestNarrativeRequest(request: requestModel.WorkspaceRequest) {\n        const title = (\n            <span>\n                <Icon type=\"file\" />\n                <Icon type=\"arrow-right\" />\n                <Icon type=\"team\" />\n                {' '}\n                Request to Associate Narrative\n            </span>\n        )\n\n        const actions = [\n            <Button\n                type=\"primary\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onAcceptJoinRequest.call(this, request)}>\n                Approve\n            </Button>,\n            <Button\n                type=\"danger\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onDenyJoinRequest.call(this, request)}>\n                Deny\n            </Button>\n        ]\n\n        let narrativeAccess\n        narrativeAccess = (\n            <Narrative workspaceId={parseInt(request.narrativeId, 10)} />\n        )\n        // TODO: Revive me!!\n        // if (request.narrativeId) {\n        //     // TODO: note the '1' below -- we dont' get the object id from the groups service,\n        //     // and the narrative will soon accept just the workspace id (and will look up the object id by itself)\n        //     // but not yet, so we just use 1, which is INCORRECT.\n        //     narrativeAccess = (\n        //         <div>\n        //             <div>\n        //                 <a href={\"/narrative/ws.\" + request.narrativeId + '.obj.' + '1'} target=\"_blank\">{request.title}</a>\n        //             </div>\n        //             <div>\n        //                 <span className=\"field-label\">your access</span>{' '}{this.renderNarrativePermission(request.narrative.permission)}\n        //             </div>\n        //             <div>\n        //                 <span className=\"field-label\">public?</span>{' '}{request.isPublic ? 'yes' : 'no'}\n        //             </div>\n\n        //         </div>\n        //     )\n        // } else {\n        //     narrativeAccess = (\n        //         <span>\n        //             You don't have access to this narrative\n        //             {' '}\n        //             <Button\n        //                 onClick={() => { this.onGetViewAccess.call(this, request.id) }}>\n        //                 Click for View Access\n        //             </Button>\n        //         </span>\n        //     )\n        // }\n\n        return (\n            <Card key={request.id}\n                title={title}\n                hoverable={true}\n                actions={actions}\n                headStyle={{ backgroundColor: 'rgba(200, 200, 200,0.3' }}\n                style={{ marginBottom: '10px' }}>\n                <table className=\"Requests-pendingRequestsTable\">\n                    <tbody>\n                        <tr>\n                            <th>from</th>\n                            <td className=\"Requests-requester\">\n                                <User userId={request.requester} avatarSize={30} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>narrative</th>\n                            <td className=\"Requests-narrative\">\n                                {narrativeAccess}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>sent</th>\n                            <td className=\"Requests-createdAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}</td>\n                        </tr>\n                        <tr>\n                            <th>expires</th>\n                            <td className=\"Requests-expiresAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.expireAt)} ({niceElapsed(request.expireAt)})</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Card>\n        )\n    }\n\n    renderRequestAppRequest(request: requestModel.AppRequest) {\n        const title = (\n            <span>\n                <Icon type=\"appstore\" />\n                <Icon type=\"arrow-right\" />\n                <Icon type=\"team\" />\n                {' '}\n                Request to Add App\n            </span>\n        )\n        const actions = [\n            <Button\n                type=\"primary\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onAcceptJoinRequest.call(this, request)}>\n                Approve\n            </Button>,\n            <Button\n                type=\"danger\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onDenyJoinRequest.call(this, request)}>\n                Deny\n            </Button>\n        ]\n\n        return (\n            <Card key={request.id}\n                title={title}\n                hoverable={true}\n                actions={actions}\n                headStyle={{ backgroundColor: 'rgba(200, 200, 200,0.3' }}\n                style={{ marginBottom: '10px' }}>\n                <table className=\"Requests-pendingRequestsTable\">\n                    <tbody>\n                        <tr>\n                            <th>from</th>\n                            <td className=\"Requests-requester\">\n                                <User userId={request.requester} avatarSize={50} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>app</th>\n                            <td className=\"Requests-requester\">\n                                {request.appId}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>sent</th>\n                            <td className=\"Requests-createdAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.createdAt)}</td>\n                        </tr>\n                        <tr>\n                            <th>expires</th>\n                            <td className=\"Requests-expiresAt\">{Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(request.expireAt)} ({niceElapsed(request.expireAt)})</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Card>\n        )\n    }\n\n    renderInbox() {\n        let inbox\n        if (this.props.inbox.length === 0) {\n            inbox = (\n                <Alert type=\"info\" message=\"No pending requests\" />\n            )\n        } else {\n            const requests = this.props.inbox.map((request) => {\n                return (\n                    <div key={request.id}>\n                        <InboxRequest\n                            request={request} />\n                    </div>\n                )\n            })\n            inbox = (\n                <div style={{ overflowY: 'auto' }}>\n                    {requests}\n                </div>\n            )\n        }\n        return (\n            <React.Fragment>\n                {inbox}\n            </React.Fragment>\n        )\n    }\n\n    renderOutbox() {\n        let outbox\n        if (this.props.outbox.length === 0) {\n            outbox = (\n                <Alert type=\"info\" message=\"No pending requests\" />\n            )\n        } else {\n            const requests = this.props.outbox.map((request) => {\n                return (\n                    <div key={request.id}>\n                        <OutboxRequest\n                            request={request} />\n                    </div>\n                )\n            })\n            outbox = (\n                <div style={{ overflowY: 'auto' }}>\n                    {requests}\n                </div>\n            )\n        }\n        return (\n            <React.Fragment>\n                {outbox}\n            </React.Fragment>\n        )\n    }\n\n    isAdmin(relation: orgModel.Relation): boolean {\n        return (\n            relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            relation.type === orgModel.UserRelationToOrganization.OWNER\n        )\n    }\n\n    render() {\n        if (this.isAdmin(this.props.relation)) {\n            const outboxCount = this.props.outbox.length\n            const inboxCount = this.props.inbox.length\n\n            return (\n                <div className=\"Requests\">\n                    <div className=\"Requests-tabPaneHeader\">inbox ({inboxCount})</div>\n                    {this.renderInbox()}\n                    <div className=\"Requests-tabPaneHeader\">outbox ({outboxCount})</div>\n                    {this.renderOutbox()}\n                </div>\n            )\n        } else {\n            const outboxCount = this.props.outbox.length\n\n            return (\n                <div className=\"Requests\">\n                    <div className=\"Requests-tabPaneHeader\">outbox ({outboxCount})</div>\n                    {this.renderOutbox()}\n                </div>\n            )\n        }\n    }\n}\n\nexport default ManageGroupRequests\n","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../../../../../types'\nimport * as acceptActions from '../../../../../redux/actions/viewOrganization/acceptInboxRequest'\nimport * as rejectActions from '../../../../../redux/actions/viewOrganization/denyInboxRequest'\nimport * as cancelRequestActions from '../../../../../redux/actions/viewOrganization/cancelOutboxRequest'\nimport * as requestModel from '../../../../../data/models/requests'\nimport * as orgModel from '../../../../../data/models/organization/model'\n\nimport Component from './component'\n\nexport interface OwnProps {\n    inbox: Array<requestModel.Request>\n    outbox: Array<requestModel.Request>\n    relation: orgModel.Relation\n}\n\ninterface StateProps {\n\n}\n\ninterface DispatchProps {\n    onAcceptJoinRequest: (request: requestModel.Request) => void\n    onDenyJoinRequest: (request: requestModel.Request) => void\n    onCancelJoinInvitation: (request: requestModel.Request) => void\n    onGetViewAccess: (request: requestModel.Request) => void\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    return {}\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAcceptJoinRequest: (request: requestModel.Request) => {\n            dispatch(acceptActions.acceptRequest(request.id) as any)\n        },\n        onDenyJoinRequest: (request: requestModel.Request) => {\n            dispatch(rejectActions.denyRequest(request.id) as any)\n        },\n        onCancelJoinInvitation: (request: requestModel.Request) => {\n            dispatch(cancelRequestActions.cancelRequest(request.id) as any)\n        },\n        onGetViewAccess: (request: requestModel.Request) => {\n            // dispatch(actions.getViewAccess(requestId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(Component)\n\n","import * as React from 'react'\nimport * as orgModel from '../../../../data/models/organization/model'\nimport { NavLink } from 'react-router-dom'\nimport OrgLogo from '../../../OrgLogo'\nimport { Icon, Tooltip, Menu, Dropdown, Modal, Button } from 'antd'\nimport Owner from '../../../entities/OwnerContainer'\nimport { ComponentView, SubViews } from '../../../../types'\nimport NiceElapsedTime from '../../../NiceElapsedTime'\nimport './BriefOrganizationHeader.css'\n\nexport interface BriefOrganizationProps {\n    organization: orgModel.BriefOrganization\n    openRequestsStatus: orgModel.RequestStatus | null\n    orgMenu: JSX.Element\n    onNavigateToBrowser: () => void\n}\n\ninterface BriefOrganizationState {\n    view: ComponentView\n}\n\nfunction reverseView(v: ComponentView) {\n    switch (v) {\n        case ComponentView.COMPACT:\n            return ComponentView.NORMAL\n        case ComponentView.NORMAL:\n            return ComponentView.COMPACT\n    }\n}\n\nexport default class BriefOrganization extends React.Component<BriefOrganizationProps, BriefOrganizationState> {\n    constructor(props: BriefOrganizationProps) {\n        super(props)\n        this.state = {\n            view: ComponentView.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderLogo(org: orgModel.BriefOrganization) {\n        return (\n            <OrgLogo logoUrl={org.logoUrl} size={80} organizationName={org.name} organizationId={org.id} />\n        )\n    }\n\n    renderHomeUrl(org: orgModel.BriefOrganization) {\n        if (!org.homeUrl) {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    title=\"This organization has not set a home page url\"\n                >\n                    <Icon type=\"home\" style={{ color: 'rgba(200, 200, 200, 0.3)' }} />\n                </Tooltip>\n            )\n        }\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Home page for this Organization (external to KBase)\n                </p>\n            </React.Fragment>\n        )\n        return (\n            <div className=\"BriefOrganizationHeader-homeUrl\">\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title={tooltip}\n                >\n                    <a href={org.homeUrl} target=\"_blank\">\n                        <Icon type=\"home\" />\n                    </a>\n                </Tooltip>\n            </div >\n        )\n    }\n\n    renderNarrativeCount(org: orgModel.BriefOrganization) {\n        if (!org.narrativeCount) {\n            return (\n                <span style={{ color: 'gray' }}>\n                    Ø\n                </span>\n            )\n        }\n        return (\n            <span>\n                {org.narrativeCount}\n            </span>\n        )\n    }\n\n    renderMemberCount(org: orgModel.BriefOrganization) {\n        if (org.memberCount == 1) {\n            return (\n                <span style={{ color: 'gray' }}>\n                    Ø\n                </span>\n            )\n        }\n        return (\n            <span>\n                {org.memberCount - 1}\n            </span>\n        )\n    }\n\n    renderRelation(org: orgModel.BriefOrganization) {\n        switch (org.relation) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org; you may request membership\"\n                    >\n                        <span>\n                            <Icon type=\"stop\" />\n                        </span>\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org; you may request membership\"\n                    >\n                        <Icon type=\"stop\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"Your membership request is pending\"\n                    >\n                        <Icon type=\"user\" style={{ color: 'orange' }} /> Your membership <b>request</b> is pending\n                </Tooltip>\n                )\n\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You have been invited to join this organization\"\n                    >\n                        <Icon type=\"user\" style={{ color: 'blue' }} />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are a member of this organization\"\n                    >\n                        <Icon type=\"user\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.ADMIN):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are an administrator of this organization\"\n                    >\n                        <Icon type=\"robot\" />\n                    </Tooltip>\n                )\n            case (orgModel.UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are the owner of this organization\"\n                    >\n                        <Icon type=\"crown\" />\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderPrivacy() {\n        const org = this.props.organization\n        if (org.isPrivate) {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title=\"This organization is private - may only be viewed by members\">\n                    <span>\n                        <Icon type=\"unlock\" />\n                    </span>\n                </Tooltip>\n            )\n        } else {\n            return (\n                <Tooltip\n                    placement=\"bottomRight\"\n                    mouseEnterDelay={0.5}\n                    title=\"This organization is public - may be viewed by any KBase user\">\n                    <span>\n                        <Icon type=\"global\" />\n                    </span>\n                </Tooltip>\n            )\n        }\n    }\n\n    renderOrgFreshness(org: orgModel.BriefOrganization) {\n        const isNew = org.lastVisitedAt && (org.modifiedAt.getTime() > org.lastVisitedAt.getTime())\n        let newAlert\n        if (isNew) {\n            const title = 'This org has changed since your last visit to it; new or updated items are highlighted'\n            newAlert = (\n                <div>\n                    <Tooltip placement=\"topRight\" title={title}>\n                        <span style={{ color: 'red', fontSize: '120%' }}>\n                            {/* ● */}\n                            <Icon type=\"bell\" theme=\"filled\" />\n                        </span>\n                    </Tooltip>\n                </div>\n            )\n        } else {\n            newAlert = (\n                <div>\n                    <span style={{ color: 'transparent', fontSize: '120%' }}>\n                        <Icon type=\"bell\" theme=\"filled\" />\n                    </span>\n                </div>\n            )\n        }\n\n        const hasRequests = false\n\n        let requestsAlert\n        if (hasRequests) {\n            requestsAlert = (\n                <div>\n                    <Icon type=\"bulb\" style={{ color: \"blue\" }} />\n                </div>\n            )\n        } else {\n            requestsAlert = null\n        }\n\n        return (\n            <div>\n                {newAlert}\n                {requestsAlert}\n            </div>\n        )\n    }\n\n    renderRequests() {\n        if (!(this.props.organization.relation === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.organization.relation === orgModel.UserRelationToOrganization.OWNER)) {\n            return\n        }\n        let message\n        let iconColor\n        switch (this.props.openRequestsStatus) {\n            case orgModel.RequestStatus.NONE:\n                // case null:\n                message = 'There are no open requests for this organization'\n                iconColor = 'rgba(200, 200, 200, 0.3)'\n                break\n            case orgModel.RequestStatus.NEW:\n                message = 'There are new requests since you last visited this organization'\n                iconColor = 'red'\n                break\n            case orgModel.RequestStatus.OLD:\n                message = 'There are open requests for this organization'\n                iconColor = 'blue'\n                break\n            case orgModel.RequestStatus.INAPPLICABLE:\n                return\n            default:\n                console.warn('Invalid open request status: ' + this.props.openRequestsStatus)\n                return\n        }\n        const title = (\n            <span>\n                {message}\n            </span>\n        )\n        return (\n            <Tooltip\n                placement=\"topRight\"\n                title={title}>\n                <span style={{ color: iconColor, fontSize: '80%' }}>\n                    <Icon type=\"mail\" theme=\"filled\" />\n                </span>\n            </Tooltip>\n        )\n    }\n\n    renderPermalink() {\n        const permalink = (\n            <div>\n                <p>\n                    Below is the \"permalink\" for this organization. You may copy\n                    this url and use it to access this organization in a web browser.\n                </p>\n                <p style={{ fontFamily: 'monospace', fontWeight: 'bold' }}>\n                    {window.location.origin}/#org/{this.props.organization.id}\n                </p>\n            </div>\n        )\n        const menuClick = ({ key }: { key: string }) => {\n            Modal.info({\n                title: 'Org Permalink',\n                content: permalink\n            })\n        }\n        const menu = (\n            <Menu\n                onClick={menuClick}\n            >\n                <Menu.Item key=\"view\">\n                    View Permalink\n                </Menu.Item>\n            </Menu>\n        )\n        return (\n            <Dropdown\n                overlay={menu}\n                trigger={['click', 'contextMenu']}>\n                <a href={\"/#orgs/\" + this.props.organization.id}>\n                    <Icon type=\"link\" />\n                </a>\n            </Dropdown>\n        )\n    }\n\n    renderLogoColumn(org: orgModel.BriefOrganization) {\n        return (\n            <React.Fragment>\n                <div className=\"BriefOrganizationHeader-logoRow\">\n                    <NavLink to={`/viewOrganization/${org.id}`}>\n                        {this.renderLogo(org)}\n                    </NavLink>\n                </div>\n                <div className=\"BriefOrganizationHeader-statusRow\">\n                    <div className=\"BriefOrganizationHeader-relationCol\">\n                        {this.renderRelation(org)}\n                    </div>\n                    <div className=\"BriefOrganizationHeader-privacyCol\">\n                        {this.renderPrivacy()}\n                    </div>\n\n                    <div className=\"BriefOrganizationHeader-homeLinkCol\">\n                        {this.renderHomeUrl(org)}\n                    </div>\n                </div>\n                <div className=\"BriefOrganizationHeader-freshnessRow\">\n                    <div className=\"BriefOrganizationHeader-orgFreshnessCol\">\n                        {this.renderOrgFreshness(org)}\n                    </div>\n                    <div className=\"BriefOrganizationHeader-openRequestsCol\">\n                        {this.renderRequests()}\n                    </div>\n                    <div className=\"BriefOrganizationHeader-openNewRequestsCol\">\n                        {this.renderPermalink()}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    fullTimestamp(d: Date) {\n        return Intl.DateTimeFormat('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZoneName: 'short'\n        }).format(d)\n    }\n\n    renderInfoCol(org: orgModel.BriefOrganization) {\n        const lastUpdatedTooltip = (\n            <span>\n                This organization was last updated\n                {' '}\n                <NiceElapsedTime time={org.modifiedAt} showTooltip={true} />\n            </span>\n        )\n        return (\n            <React.Fragment>\n                <div className=\"BriefOrganizationHeader-orgName BriefOrganizationHeader-infoTableRow\">\n                    <NavLink to={`/viewOrganization/${org.id}`}>\n                        {org.name}\n                    </NavLink>\n                </div>\n\n                <div className=\"BriefOrganizationHeader-researchInterests BriefOrganizationHeader-infoTableRow\">\n                    {org.researchInterests}\n                </div>\n\n                <div className=\"BriefOrganizationHeader-orgOwner BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label BriefOrganizationHeader-fieldLabel\">owner</span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        {/* TODO: render as Member or Owner component */}\n                        <Owner username={org.owner.username} avatarSize={16} showAvatar={false} />\n                    </div>\n                </div>\n                <div className=\"BriefOrganizationHeader-orgCreated BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label BriefOrganizationHeader-fieldLabel\">created</span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        {/* {niceElapsed(org.createdAt, 30)} */}\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            mouseEnterDelay={0.5}\n                            title={this.fullTimestamp(org.createdAt)}>\n                            <span>\n                                {Intl.DateTimeFormat('en-US', {\n                                    month: 'short',\n                                    day: 'numeric',\n                                    year: 'numeric'\n                                }).format(org.createdAt)}\n                            </span>\n                        </Tooltip>\n                    </div>\n                </div>\n\n                <div className=\"BriefOrganizationHeader-orgOwner BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label\">updated</span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        <NiceElapsedTime time={org.modifiedAt} tooltipPrefix=\"This organization was last updated \" />\n                    </div>\n                </div>\n            </React.Fragment >\n        )\n    }\n\n    renderMemberRow(org: orgModel.BriefOrganization) {\n        const memberCount = org.memberCount - 1\n        let memberCountTooltip\n        if (memberCount) {\n            if (memberCount === 1) {\n                memberCountTooltip = (\n                    <span>\n                        There is <b>1</b> member in this organization\n                    </span>\n                )\n            } else {\n                memberCountTooltip = (\n                    <span>\n                        There are <b>{memberCount}</b> members in this organization\n                    </span>\n                )\n            }\n        } else {\n            memberCountTooltip = (\n                <span>\n                    There are <b>no members</b> in this organization\n                </span>\n            )\n        }\n        return (\n            <Tooltip placement=\"bottomRight\" title={memberCountTooltip}>\n                <div className=\"BriefOrganizationHeader-orgCreated BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"team\" /></span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        {this.renderMemberCount(org)}\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderNarrativeRow(org: orgModel.BriefOrganization) {\n        const count = org.narrativeCount\n        let tooltip\n        if (count) {\n            if (count === 1) {\n                tooltip = (\n                    <span>\n                        There is <b>1</b> narrative in this organization\n                    </span>\n                )\n            } else {\n                tooltip = (\n                    <span>\n                        There are <b>{count}</b> narratives in this organization\n                    </span>\n                )\n            }\n        } else {\n            tooltip = (\n                <span>\n                    There are <b>no narratives</b> in this organization\n                </span>\n            )\n        }\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                <div className=\"BriefOrganizationHeader-orgCreated BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"file\" /></span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        {this.renderNarrativeCount(org)}\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderModifiedRow(org: orgModel.BriefOrganization) {\n        const tooltip = (\n            <span>\n                This organization was last updated\n                {' '}\n                <NiceElapsedTime time={org.modifiedAt} showTooltip={false} />\n            </span>\n        )\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                <div className=\"BriefOrganizationHeader-orgCreated BriefOrganizationHeader-infoTableRow\">\n                    <div className=\"BriefOrganizationHeader-infoTableCol1\">\n                        <span className=\"field-label\"><Icon type=\"save\" /></span>\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoTableCol2\">\n                        <NiceElapsedTime time={org.modifiedAt} showTooltip={false} />\n                    </div>\n                </div>\n            </Tooltip>\n        )\n    }\n\n    renderButtonsRow() {\n        return (\n            <div className=\"ButtonSet\">\n                <div className=\"ButtonSet-button\">\n                    {this.props.orgMenu}\n                </div>\n            </div>\n        )\n    }\n\n    renderBackButton() {\n        // return (\n        //     <div className=\"IconButton\"\n        //         onClick={this.props.onNavigateToBrowser}\n        //         style={{ color: 'rgba(145, 43, 43, 1)' }}>\n        //         back\n        //     </div>\n        // )\n\n        return (\n            <Button type=\"danger\" onClick={this.props.onNavigateToBrowser}>\n                back\n            </Button>\n        )\n    }\n\n    renderStatsCol(org: orgModel.BriefOrganization) {\n        return (\n            <div className=\"BriefOrganizationHeader-buttonsCol\">\n                <div className=\"BriefOrganizationHeader-buttonsRow\" style={{ marginBottom: '10px' }}>\n                    <div className=\"ButtonSet\">\n                        {this.renderBackButton()}\n                    </div>\n                </div>\n                <div className=\"BriefOrganizationHeader-buttonsRow\">\n                    {this.renderButtonsRow()}\n                </div>\n            </div>\n        )\n    }\n\n    renderNormal() {\n        const org = this.props.organization\n        return (\n            <div className=\"BriefOrganization\">\n                <div className=\"BriefOrganizationHeader-body\">\n                    <div className=\"BriefOrganizationHeader-logoCol\">\n                        {this.renderLogoColumn(org)}\n                    </div>\n                    <div className=\"BriefOrganizationHeader-infoCol\">\n\n                        <div className=\"BriefOrganizationHeader-infoCol-row\">\n                            <div className=\"BriefOrganizationHeader-infoCol-col1\">\n                                {this.renderInfoCol(org)}\n                            </div>\n                            <div className=\"BriefOrganizationHeader-infoCol-col2\">\n                                {this.renderStatsCol(org)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n    render() {\n        return this.renderNormal()\n    }\n}\n","import * as React from 'react'\nimport * as orgModel from '../../../data/models/organization/model'\nimport { Tooltip } from 'antd';\nimport './component.css'\nimport OrgLogo from '../../OrgLogo';\nimport Owner from '../OwnerContainer';\nimport { NavLink } from 'react-router-dom';\n\nexport interface OrganizationProps {\n    organization: orgModel.Organization\n}\n\ninterface OrganizationState {\n\n}\n\nexport default class Organization extends React.Component<OrganizationProps, OrganizationState> {\n    constructor(props: OrganizationProps) {\n        super(props)\n    }\n\n    fullTimestamp(d: Date) {\n        return Intl.DateTimeFormat('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZoneName: 'short'\n        }).format(d)\n    }\n\n    renderLogo(org: orgModel.Organization) {\n        return (\n            <OrgLogo logoUrl={org.logoUrl} size={30} organizationName={org.name} organizationId={org.id} />\n        )\n    }\n\n    render() {\n        const org = this.props.organization\n        return (\n            <div className=\"OrganizationEntity-Accessible \">\n                <div className=\"OrganizationEntity-Accessible-logoCol\">\n                    {this.renderLogo(org)}\n                </div>\n                <div className=\"OrganizationEntity-Accessible-mainCol\">\n                    <div className=\"OrganizationEntity-Accessible-name\">\n                        <NavLink to={`/viewOrganization/${org.id}`}>\n                            {org.name}\n                        </NavLink>\n                    </div>\n                    <div className=\"OrganizationEntity-Accessible-researchInterests\">\n                        {org.researchInterests}\n                    </div>\n                    <div className=\"OrganizationEntity-Accessible-owner\">\n                        <Owner username={org.owner.username} showAvatar={false} avatarSize={20} />\n                    </div>\n                    {/* <div className=\"OrganizationEntity-Accessible-createdAt\">\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            mouseEnterDelay={0.5}\n                            title={this.fullTimestamp(org.createdAt)}>\n                            <span>\n                                {Intl.DateTimeFormat('en-US', {\n                                    month: 'short',\n                                    day: 'numeric',\n                                    year: 'numeric'\n                                }).format(org.createdAt)}\n                            </span>\n                        </Tooltip>\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}","import * as React from 'react'\nimport * as orgModel from '../../../data/models/organization/model'\nimport './Inaccessible.css'\nimport { Icon } from 'antd';\n\nexport interface OrganizationProps {\n    organization: orgModel.InaccessiblePrivateOrganization\n}\n\ninterface OrganizationState {\n\n}\n\nexport default class Organization extends React.Component<OrganizationProps, OrganizationState> {\n    constructor(props: OrganizationProps) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationEntity-Inaccessible \">\n                <div className=\"OrganizationEntity-Inaccessible-logoCol\">\n                    <Icon type=\"lock\" />\n                </div>\n                <div className=\"OrganizationEntity-Inaccessible-mainCol\">\n                    <div className=\"OrganizationEntity-Inaccessible-name\">\n                        Private Organization\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}","// The loader component\n\nimport * as React from 'react'\nimport * as orgModel from '../../../data/models/organization/model'\nimport Organization from './component'\nimport InaccessibleOrganization from './Inaccessible'\n\ninterface LoaderProps {\n    organizationId: orgModel.OrganizationID\n    organization: orgModel.Organization | orgModel.InaccessiblePrivateOrganization | null\n    onLoad: (organizationId: orgModel.OrganizationID) => void\n}\n\ninterface LoaderState { }\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.organization) {\n            switch (this.props.organization.kind) {\n                case orgModel.OrganizationKind.NORMAL:\n                    return (\n                        <Organization organization={this.props.organization} />\n                    )\n                case orgModel.OrganizationKind.INACCESSIBLE_PRIVATE:\n                    return (\n                        <InaccessibleOrganization organization={this.props.organization} />\n                    )\n                default:\n                    return (\n                        <div>\n                            Error: unrecognized org kind\n                        </div>\n                    )\n            }\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" />\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.organization) {\n            this.props.onLoad(this.props.organizationId)\n        }\n    }\n}\n\n// The loader redux adapter\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../../types'\nimport * as actions from '../../../redux/actions/entities/organization'\nimport { Icon } from 'antd';\n\nexport interface OwnProps {\n    organizationId: orgModel.OrganizationID\n}\n\ninterface StateProps {\n    organization: orgModel.Organization | orgModel.InaccessiblePrivateOrganization | null\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: orgModel.OrganizationID) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        organization: state.entities.organizations.byId.get(props.organizationId) || null\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.OrganizationEntityAction>): DispatchProps {\n    return {\n        onLoad: (organizationId: orgModel.OrganizationID) => {\n            dispatch(actions.load(organizationId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from '../index'\nimport * as orgModel from '../../../data/models/organization/model'\nimport { StoreState } from '../../../types'\nimport { AnError, makeError } from '../../../lib/error';\n\nexport interface OrganizationEntityAction extends Action {\n\n}\n\n// Organization\n\nexport interface Load extends OrganizationEntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOAD\n}\n\ninterface LoadStart extends OrganizationEntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOAD_START\n}\n\nexport interface LoadSuccess extends OrganizationEntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOAD_SUCCESS\n    organization: orgModel.Organization\n}\n\ninterface LoadError extends OrganizationEntityAction {\n    type: ActionFlag.ENTITY_ORGANIZATION_LOAD_ERROR\n    error: AnError\n}\n\nexport function load(organizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, OrganizationEntityAction>, getState: () => StoreState) => {\n        dispatch(<LoadStart>{\n            type: ActionFlag.ENTITY_ORGANIZATION_LOAD_START\n        })\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const organization = await orgClient.getOrg(organizationId)\n            dispatch(<LoadSuccess>{\n                type: ActionFlag.ENTITY_ORGANIZATION_LOAD_SUCCESS,\n                organization\n            })\n        } catch (ex) {\n            dispatch(<LoadError>{\n                type: ActionFlag.ENTITY_ORGANIZATION_LOAD_ERROR,\n                error: makeError({\n                    code: ex.name,\n                    message: ex.message\n                })\n            })\n        }\n    }\n}","import * as React from 'react'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport { Button, Menu, Dropdown, Icon, Alert } from 'antd'\nimport OrganizationEntity from '../../../../entities/organization/loader'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport './component.css'\n\nexport interface RelatedOrganizationsProps {\n    organization: orgModel.Organization\n    relatedOrganizations: Array<orgModel.OrganizationID>\n    onManageRelatedOrgs: () => void\n    onRemoveRelatedOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n}\n\ninterface RelatedOrganizationsState {\n}\n\nexport default class RelatedOrganizations extends React.Component<RelatedOrganizationsProps, RelatedOrganizationsState> {\n    constructor(params: RelatedOrganizationsProps) {\n        super(params)\n    }\n\n    onManageRelatedOrgs() {\n        this.props.onManageRelatedOrgs()\n    }\n\n    renderToolbar() {\n        return (\n            <div className=\"RelatedOrganizations-toolbar\">\n                <Button onClick={this.onManageRelatedOrgs.bind(this)}>\n                    Add Related Org\n                </Button>\n            </div>\n        )\n    }\n\n    onAdminMenu(key: string, organizationId: orgModel.OrganizationID) {\n        switch (key) {\n            case 'removeRelation':\n                // this.props.onDemoteAdminToMember(member.username)\n                this.props.onRemoveRelatedOrganization(this.props.organization.id, organizationId)\n                // window.alert('will remove relation for org: ' + organizationId)\n                break\n        }\n    }\n\n    renderControls(organizationId: orgModel.OrganizationID) {\n        if (!this.props.organization.isAdmin) {\n            return\n        }\n        const menu = (\n            <Menu onClick={({ key }) => { this.onAdminMenu.call(this, key, organizationId) }}>\n                <Menu.Item key=\"removeRelation\">\n                    <Icon type=\"delete\" />Remove\n                    </Menu.Item>\n            </Menu>\n        )\n        return (\n            <div>\n                <Dropdown overlay={menu} trigger={['click']}>\n                    <Icon type=\"ellipsis\" className=\"IconButton-hover\" />\n                </Dropdown>\n            </div>\n        )\n    }\n\n    renderBody() {\n        if (this.props.relatedOrganizations.length === 0) {\n            const message = (\n                <p>\n                    No related organizations\n                </p>\n            )\n            return (\n                <Alert type=\"info\" message={message} />\n            )\n        }\n        const Wrapped = withRouter<any>(OrganizationEntity)\n        const relatedOrgs = this.props.relatedOrganizations.map((organizationId: string) => {\n            return (\n                <div key={organizationId} className=\"RelatedOrganizations-orgRow SimpleCard\">\n                    {/* <RelatedOrganization organizationId={org} /> */}\n\n                    <div className=\"RelatedOrganizations-orgCol\">\n                        <Wrapped organizationId={organizationId} />\n                    </div>\n                    <div className=\"RelatedOrganizations-controlCol\">\n                        {this.renderControls(organizationId)}\n                    </div>\n                </div>\n            )\n        });\n        return (\n            <div className=\"RelatedOrganizations-organizations\">\n                {relatedOrgs}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"RelatedOrganizations scrollable-flex-column\">\n                {/* <div className=\"RelatedOrganizations-toolbarRow\">\n                    {this.renderToolbar()}\n                </div> */}\n                <div className=\"RelatedOrganizations-bodyRow scrollable-flex-column\">\n                    {this.renderBody()}\n                </div>\n            </div>\n        )\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, ViewOrgViewModelKind } from '../../../../../types'\nimport * as actions from '../../../../../redux/actions/viewOrganization/relatedOrganizations'\nimport Component from './component'\nimport * as orgModel from '../../../../../data/models/organization/model'\n\nexport interface OwnProps {\n    organization: orgModel.Organization\n    relatedOrganizations: Array<orgModel.OrganizationID>\n    onManageRelatedOrgs: () => void\n\n}\n\ninterface StateProps {\n    searchMembersBy: string\n    sortMembersBy: string\n    members: Array<orgModel.Member>\n}\n\ninterface DispatchProps {\n    onRemoveRelatedOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    const { searchMembersBy, sortMembersBy, members } = viewModel\n    return {\n        searchMembersBy, sortMembersBy, members\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onRemoveRelatedOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => {\n            dispatch(actions.removeOrganization(organizationId, relatedOrganizationId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from '../index'\nimport { AnError } from '../../../lib/error'\nimport { StoreState } from '../../../types'\nimport * as orgModel from '../../../data/models/organization/model'\nimport { makeError } from '../../../combo/error/api'\n\n\n// Add Org\n\n// export interface AddOrganization extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION> {\n//     type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION,\n//     organizationId: orgModel.OrganizationID\n// }\n\n// export interface AddOrganizationStart extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START> {\n//     type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START\n// }\n\n// export interface AddOrganizationSuccess extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS> {\n//     type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS,\n//     organizationId: orgModel.OrganizationID\n// }\n\n// export interface AddOrganizationError extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR> {\n//     type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR,\n//     error: AnError\n// }\n\n// export function addOrganization(organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) {\n//     return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n//         dispatch({\n//             type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_START\n//         } as AddOrganizationStart)\n\n//         const {\n//             auth: { authorization: { token, username } },\n//             app: { config },\n//             views: {\n//                 viewOrgView: { viewModel }\n//             }\n//         } = getState()\n//         if (viewModel === null) {\n//             throw new Error('view is not populated')\n//         }\n//         const orgClient = new orgModel.OrganizationModel({\n//             token, username,\n//             groupsServiceURL: config.services.Groups.url\n//         })\n//         try {\n//             await orgClient.addRelatedOrganization({ organizationId, relatedOrganizationId })\n//             dispatch({\n//                 type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_SUCCESS,\n//                 organizationId\n//             })\n//         } catch (ex) {\n//             dispatch({\n//                 type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_ADD_ORGANIZATION_ERROR,\n//                 error: makeError({\n//                     code: 'error',\n//                     message: ex.message\n//                 })\n//             })\n//         }\n//     }\n// }\n\n\n// Remove Org\n\nexport interface RemoveOrganization extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION> {\n    type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface RemoveOrganizationStart extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START> {\n    type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START\n}\n\nexport interface RemoveOrganizationSuccess extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n    organizationId: orgModel.OrganizationID\n}\n\nexport interface RemoveOrganizationError extends Action<ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR> {\n    type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n    error: AnError\n}\n\nexport function removeOrganization(organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_START\n        } as RemoveOrganizationStart)\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        try {\n            await orgClient.removeRelatedOrganization({ organizationId, relatedOrganizationId })\n            dispatch({\n                type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_SUCCESS,\n                organizationId: relatedOrganizationId\n            } as RemoveOrganizationSuccess)\n            // dispatch(viewOrgActions.reload(organizationId))\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_RELATED_ORGANIZATIONS_REMOVE_ORGANIZATION_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n    }\n}","import * as React from 'react'\nimport { BriefOrganization } from '../../../../../data/models/organization/model'\nimport './AvailableOrganization.css'\nimport OrgLogo from '../../../../OrgLogo'\nimport Owner from '../../../../entities/OwnerContainer'\nimport { SelectableRelatableOrganization } from '../../../../../types';\nimport { Icon } from 'antd';\n\nexport interface AvailableOrganizationProps {\n    selectableOrganization: SelectableRelatableOrganization\n    // onSelectOrganization: (org: BriefOrganization) => void\n    // onAddOrganization: (org: BriefOrganization) => void\n}\n\nexport interface AvailableOrganizationState {\n}\n\nexport default class AvailableOrganization extends React.Component<AvailableOrganizationProps, AvailableOrganizationState> {\n    constructor(props: AvailableOrganizationProps) {\n        super(props)\n    }\n\n    renderRelated() {\n        if (this.props.selectableOrganization.isRelated) {\n            return (\n                <Icon type=\"check\" style={{ color: \"green\" }} />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"AvailableOrganization\">\n                <div className=\"AvailableOrganization-relatedCol\">\n                    {this.renderRelated()}\n                </div>\n                <div className=\"AvailableOrganization-orgCol\">\n                    <div className=\"AvailableOrganization-logoCol\">\n                        <OrgLogo logoUrl={this.props.selectableOrganization.organization.logoUrl}\n                            size={30}\n                            organizationName={this.props.selectableOrganization.organization.name}\n                            organizationId={this.props.selectableOrganization.organization.id} />\n                    </div>\n                    <div className=\"AvailableOrganization-orgInfoCol\">\n                        <div className=\"AvailableOrganization-name\">{this.props.selectableOrganization.organization.name}</div>\n                        <div className=\"AvailableOrganization-owner\">\n                            <Owner username={this.props.selectableOrganization.organization.owner.username}\n                                avatarSize={20} showAvatar={false} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"AvailableOrganization-actionCol\"></div>\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\n\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport './component.css'\nimport { Button, Icon, Input, Alert } from 'antd';\nimport AvailableOrganization from './AvailableOrganization'\nimport BriefOrganization from '../../../../BriefOrganization';\nimport { SelectableRelatableOrganization } from '../../../../../types';\n\nexport interface ManageRelatedOrganizationsProps {\n    organization: orgModel.Organization\n    relatedOrganizations: Array<string>\n    // relation: orgModel.Relation\n    selectedOrganization: SelectableRelatableOrganization | null\n    organizations: Array<SelectableRelatableOrganization>\n    onFinish: () => void\n    onSelectOrganization: (org: SelectableRelatableOrganization) => void\n    onAddOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n    onRemoveOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n    onSearch: (searchBy: string) => void\n}\n\ninterface ManageRelatedOrganizationsState {\n\n}\n\nexport default class ManageRelatedOrganizations extends React.Component<ManageRelatedOrganizationsProps, ManageRelatedOrganizationsState> {\n    constructor(props: ManageRelatedOrganizationsProps) {\n        super(props)\n    }\n\n    onAddSelectedOrganization() {\n        if (!this.props.selectedOrganization) {\n            return\n        }\n        this.props.onAddOrganization(this.props.organization.id, this.props.selectedOrganization.organization.id)\n    }\n\n    onRemoveSelectedOrganization() {\n        if (!this.props.selectedOrganization) {\n            return\n        }\n        this.props.onRemoveOrganization(this.props.organization.id, this.props.selectedOrganization.organization.id)\n    }\n\n    onFilterChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onSearch(e.target.value)\n    }\n\n    renderAvailableToolbar() {\n        return (\n            <div className=\"ManageRelatedOrganizations-available-toolbar\">\n                <Input placeholder=\"Filter Available Organizations\" onChange={this.onFilterChange.bind(this)} />\n            </div>\n        )\n    }\n\n    renderAvailableOrgs() {\n        return this.props.organizations.map((org: SelectableRelatableOrganization) => {\n            const selectOrg = () => {\n                this.props.onSelectOrganization(org)\n            }\n            let classes = ['SimpleCard', 'ManageRelatedOrganizations-availableOrganization']\n            if (org.isSelected) {\n                classes.push('ManageRelatedOrganizations-selected')\n            }\n            return (\n                <div className={classes.join(' ')} onClick={selectOrg} key={org.organization.id} >\n                    <AvailableOrganization selectableOrganization={org} />\n                </div>\n            )\n        })\n    }\n\n    renderSelectedOrg() {\n        let button\n        let content\n        let alert\n        let alertStyle = {\n            marginBottom: '4px'\n        }\n        if (!this.props.selectedOrganization) {\n            const message = (\n                <React.Fragment>\n                    <p>\n                        When you select an organization on the left, details about it will be displayed here.\n                    </p>\n                </React.Fragment>\n            )\n            alert = (\n                <Alert type=\"info\" message={message} style={alertStyle} />\n            )\n            button = (\n                <Button\n                    type=\"primary\"\n                    disabled={this.props.selectedOrganization === null}\n                    onClick={this.onAddSelectedOrganization.bind(this)}>\n                    Add Organization\n                </Button>\n            )\n        } else {\n            content = (\n                <div className=\"ManageRelatedOrganizations-selectedOrganization\">\n                    <BriefOrganization organization={this.props.selectedOrganization.organization} openRequestsStatus={null} />\n                </div>\n            )\n            if (this.props.selectedOrganization.isRelated) {\n                alert = (\n                    <Alert type=\"warning\" message=\"This org is associated\" style={alertStyle} />\n                )\n                button = (\n                    <Button\n                        type=\"danger\"\n                        disabled={this.props.selectedOrganization === null}\n                        onClick={this.onRemoveSelectedOrganization.bind(this)}>\n                        Remove Organization\n                    </Button>\n                )\n            } else {\n                button = (\n                    <Button\n                        type=\"primary\"\n                        disabled={this.props.selectedOrganization === null}\n                        onClick={this.onAddSelectedOrganization.bind(this)}>\n                        Add Organization\n                    </Button>\n                )\n            }\n        }\n\n        return (\n            <React.Fragment>\n                {alert}\n                {content}\n                <div className=\"ManageRelatedOrganizations-buttonBar\">\n                    {button}\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ManageRelatedOrganizations scrollable-flex-column\">\n                <div className=\"ManageRelatedOrganizations-toolbar\">\n                    <Button onClick={() => this.props.onFinish()} type=\"danger\">\n                        <Icon type=\"rollback\" />\n                        {' '}\n                        Done\n                    </Button>\n                </div>\n                <div className=\"ManageRelatedOrganizations-main scrollable-flex-column\">\n                    <div className=\"ManageRelatedOrganizations-availableOrgs\">\n                        <h3 style={{ textAlign: 'center' }}>Available Organizations</h3>\n                        {this.renderAvailableToolbar()}\n                        <div className=\"ManageRelatedOrganizations-organizations\">\n                            {this.renderAvailableOrgs()}\n                        </div>\n                    </div>\n                    <div className=\"ManageRelatedOrganizations-relatedOrgs\">\n                        <h3 style={{ textAlign: 'center' }}>Selected Organization</h3>\n                        {this.renderSelectedOrg()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../../../redux/actions/viewOrganization/manageRelatedOrganizations'\nimport ManageRelatedOrganizations from './component'\nimport { StoreState, ViewOrgViewModelKind, SelectableRelatableOrganization } from '../../../../../types';\nimport * as orgModel from '../../../../../data/models/organization/model'\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    organization: orgModel.Organization\n    organizations: Array<SelectableRelatableOrganization>\n    relatedOrganizations: Array<string>\n    selectedOrganization: SelectableRelatableOrganization | null\n}\n\ninterface DispatchProps {\n    onSelectOrganization: (org: SelectableRelatableOrganization) => void\n    onAddOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n    onRemoveOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => void\n    onSearch: (searchBy: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    // if (viewModel.subViews.kind !== ViewOrgSubViewKind.MANAGE_RELATED_ORGS) {\n    //     throw new Error(\"argh, wrong org subview kind\")\n    // }\n    if (viewModel.subViews.manageRelatedOrganizationsView.viewModel === null) {\n        throw new Error(\"argh, null subview view model\")\n    }\n    const { organization, availableOrganizations: { queried }, relatedOrganizations, selectedOrganization } = viewModel.subViews.manageRelatedOrganizationsView.viewModel\n\n    return {\n        organization, organizations: queried, relatedOrganizations, selectedOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onSelectOrganization: (org: SelectableRelatableOrganization) => {\n            dispatch(actions.selectOrganization(org) as any)\n        },\n        onAddOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => {\n            dispatch(actions.addOrganization(organizationId, relatedOrganizationId) as any)\n        },\n        onRemoveOrganization: (organizationId: orgModel.OrganizationID, relatedOrganizationId: orgModel.OrganizationID) => {\n            dispatch(actions.removeOrganization(organizationId, relatedOrganizationId) as any)\n        },\n        onSearch: (searchBy: string) => {\n            dispatch(actions.search(searchBy) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(ManageRelatedOrganizations)","import * as React from 'react'\nimport { Spin, Alert } from 'antd'\nimport Container from './reduxAdapter'\n\n\nexport interface Props {\n    view: types.View<types.ManageRelatedOrgsViewModel | types.NoneViewModel>\n    onLoad: () => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface State {\n}\n\nclass Loader extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading Related Organizations Manager...\n                {' '}\n                <Spin />\n            </div>\n        )\n        return (\n            <Alert type=\"info\" message={message} style={{\n                width: '20em',\n                padding: '20px',\n                margin: '20px auto'\n            }} />\n        )\n    }\n\n    renderError(error: types.AppError) {\n        return (\n            <div>\n                Error!\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.state) {\n            case types.ViewState.NONE:\n                return this.renderLoading()\n            case types.ViewState.LOADING:\n                return this.renderLoading()\n            case types.ViewState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    })\n                }\n            default:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.state) {\n            case types.ViewState.NONE:\n                this.props.onLoad()\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\n//\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../../../../../types'\nimport * as actions from '../../../../../redux/actions/viewOrganization/manageRelatedOrganizations'\nimport { OrganizationModel } from '../../../../../data/models/organization/model';\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    view: types.View<types.ManageRelatedOrgsViewModel>\n}\n\ninterface DispatchProps {\n    onLoad: () => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const v = state.views.viewOrgView\n    const vm1 = v.viewModel\n    if (vm1 === null) {\n        throw new Error('vm is null')\n    }\n    if (vm1.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        throw new Error('not the right vm')\n    }\n    return {\n        view: vm1.subViews.manageRelatedOrganizationsView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(actions.load() as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from '../index'\n\nimport {\n    StoreState, User, InviteUserViewModel,\n    RequestResourceType, MemberType,\n    OrganizationUser,\n    ViewOrgViewModelKind,\n    View,\n    ViewOrgViewModel\n} from '../../../types'\nimport { UserQuery } from '../../../data/model'\nimport * as orgModel from '../../../data/models/organization/model'\nimport * as userModel from '../../../data/models/user'\nimport * as requestModel from '../../../data/models/requests'\nimport { AnError } from '../../../combo/error/api'\nimport { makeError } from '../../../lib/error'\nimport * as viewOrgActions from '../viewOrg'\n// View Loading\n\nexport interface Load extends Action {\n    type: ActionFlag.INVITE_USER_LOAD\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.INVITE_USER_LOAD_START\n}\n\nexport interface LoadSuccess extends Action {\n    type: ActionFlag.INVITE_USER_LOAD_SUCCESS,\n    organization: orgModel.Organization,\n    users: Array<OrganizationUser> | null\n}\n\nexport interface LoadError extends Action {\n    type: ActionFlag.INVITE_USER_LOAD_ERROR,\n    error: AnError\n}\n\nexport interface Unload extends Action {\n    type: ActionFlag.INVITE_USER_UNLOAD\n}\n\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.INVITE_USER_LOAD_START\n    }\n}\n\nexport function loadSuccess(organization: orgModel.Organization): LoadSuccess {\n    return {\n        type: ActionFlag.INVITE_USER_LOAD_SUCCESS,\n        organization: organization,\n        users: null\n    }\n}\n\nexport function loadError(error: AnError): LoadError {\n    return {\n        type: ActionFlag.INVITE_USER_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.INVITE_USER_UNLOAD\n    }\n}\n\nexport function load(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const org = await orgClient.getOrg(organizationId)\n            if (org.kind !== orgModel.OrganizationKind.NORMAL) {\n                dispatch(loadError(makeError({\n                    code: 'invalid state',\n                    message: 'Organization kind must be \"NORMAL\"'\n                })))\n                return\n            }\n            dispatch(loadSuccess(org))\n        } catch (ex) {\n            dispatch(loadError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n    }\n}\n\n// User Selection\n\n\n\nexport interface InviteUserSearchUsers extends Action {\n    type: ActionFlag.INVITE_USER_SEARCH_USERS,\n    query: UserQuery\n}\n\ninterface SearchUsersStart extends Action {\n    type: ActionFlag.INVITE_USER_SEARCH_USERS_START\n}\n\nexport interface SearchUsersSuccess extends Action {\n    type: ActionFlag.INVITE_USER_SEARCH_USERS_SUCCESS,\n    users: Array<OrganizationUser> | null\n}\n\ninterface SearchUsersError extends Action {\n    type: ActionFlag.INVITE_USER_SEARCH_USERS_ERROR,\n    error: AnError\n}\n\nfunction searchUsersStart(): SearchUsersStart {\n    return {\n        type: ActionFlag.INVITE_USER_SEARCH_USERS_START\n    }\n}\n\nfunction searchUsersSuccess(users: Array<OrganizationUser> | null): SearchUsersSuccess {\n    return {\n        type: ActionFlag.INVITE_USER_SEARCH_USERS_SUCCESS,\n        users: users\n    }\n}\n\nfunction searchUsersError(error: AnError): SearchUsersError {\n    return {\n        type: ActionFlag.INVITE_USER_SEARCH_USERS_ERROR,\n        error: error\n    }\n}\n\nexport function inviteUserSearchUsers(query: UserQuery) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchUsersStart())\n\n        if (query.query.length === 0) {\n            dispatch(searchUsersSuccess(null))\n            return\n        }\n\n        const {\n            auth: { authorization: { token } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            throw new Error('view is not normal')\n        }\n        // const { organization } = viewModel\n        // const orgClient = new orgModel.OrganizationModel({\n        //     token, username,\n        //     groupsServiceURL: config.services.Groups.url\n        // })\n\n\n\n        // const {\n        //     views: {\n        //         inviteUserView: { viewModel }\n        //     },\n        //     auth: { authorization: { token, username } },\n        //     app: { config } } = getState()\n\n        // // TODO: better form of type narrowing? \n        // if (viewModel === null) {\n        //     return\n        // }\n\n        const org = viewModel.organization\n\n\n        const userClient = new userModel.UserModel({\n            token,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        // let excludedUsers: Array<string> = []\n\n        // excludedUsers.push(org.owner.user.username)\n\n        let owner: string = org.owner.username\n        let adminUsers: Array<string> = []\n        let members: Array<string> = []\n        let invited: Array<string> = []\n        let requested: Array<string> = []\n\n        org.members.forEach((member) => {\n            switch (member.type) {\n                case MemberType.MEMBER:\n                    members.push(member.username)\n                case MemberType.ADMIN:\n                    adminUsers.push(member.username)\n            }\n        })\n\n        // excludedUsers = excludedUsers.concat(org.members.map((member) => {\n        //     return member.\n        // }))\n\n        // TODO revive\n\n        // org.adminRequests.forEach((request) => {\n        //     if (request.resourceType === RequestResourceType.USER) {\n        //         switch (request.type) {\n        //             case RequestType.INVITATION:\n        //                 invited.push((<UserInvitation>request).user.username)\n        //                 // excludedUsers.push((<UserInvitation>request).user.username)\n        //                 break\n        //             case RequestType.REQUEST:\n        //                 requested.push((<UserRequest>request).requester.username)\n        //             // excludedUsers.push((<UserRequest>request).requester.username)\n        //         }\n        //     }\n        // })\n\n        const inboxRequests = viewModel.requestInbox\n        const outboxRequests = viewModel.requestOutbox\n\n        inboxRequests.forEach((request) => {\n            if (request.resourceType === RequestResourceType.USER) {\n                requested.push(request.requester)\n            }\n        })\n\n        outboxRequests.forEach((request) => {\n            if (request.resourceType === RequestResourceType.USER) {\n                invited.push(request.user)\n            }\n        })\n\n        try {\n            const users = await userClient.searchUsers(query)\n\n\n            // const filteredUsers = users.filter((user) => {\n            //     return (excludedUsers.indexOf(user.username) === -1)\n            // })\n            const orgUsers: Array<OrganizationUser> = users.map(({ username, realname }) => {\n                let relation: orgModel.UserRelationToOrganization\n                if (username === owner) {\n                    relation = orgModel.UserRelationToOrganization.OWNER\n                } else if (adminUsers.indexOf(username) >= 0) {\n                    relation = orgModel.UserRelationToOrganization.ADMIN\n                } else if (invited.indexOf(username) >= 0) {\n                    relation = orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING\n                } else if (requested.indexOf(username) >= 0) {\n                    relation = orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING\n                } else if (members.indexOf(username) >= 0) {\n                    relation = orgModel.UserRelationToOrganization.MEMBER\n                } else {\n                    relation = orgModel.UserRelationToOrganization.NONE\n                }\n                return {\n                    username, realname,\n                    relation: relation\n                }\n            })\n            dispatch(searchUsersSuccess(orgUsers))\n        } catch (ex) {\n            dispatch(searchUsersError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n\n    }\n}\n\n// Select a user\n\nexport interface SelectUser extends Action {\n    type: ActionFlag.INVITE_USER_SELECT_USER,\n    username: string\n}\n\nexport interface SelectUserStart extends Action {\n    type: ActionFlag.INVITE_USER_SELECT_USER_START\n}\n\nexport interface SelectUserSuccess extends Action {\n    type: ActionFlag.INVITE_USER_SELECT_USER_SUCCESS,\n    user: User,\n    relation: orgModel.UserRelationToOrganization\n}\n\nexport interface SelectUserError extends Action {\n    type: ActionFlag.INVITE_USER_SELECT_USER_ERROR,\n    error: AnError\n}\n\n\nfunction selectUserStart(): SelectUserStart {\n    return {\n        type: ActionFlag.INVITE_USER_SELECT_USER_START\n    }\n}\n\nfunction selectUserSuccess(user: User, relation: orgModel.UserRelationToOrganization): SelectUserSuccess {\n    return {\n        type: ActionFlag.INVITE_USER_SELECT_USER_SUCCESS,\n        user: user,\n        relation: relation\n    }\n}\n\nfunction selectUserError(error: AnError): SelectUserError {\n    return {\n        type: ActionFlag.INVITE_USER_SELECT_USER_ERROR,\n        error: error\n    }\n}\n\nfunction isUserRequest(request: requestModel.Request, username: string): request is requestModel.UserRequest {\n    const req: requestModel.UserRequest = <requestModel.UserRequest>request\n    if (req.resourceType === RequestResourceType.USER &&\n        req.type === requestModel.RequestType.REQUEST &&\n        req.requester === username) {\n        return true\n    }\n    return false\n}\n\nfunction isUserInvitation(request: requestModel.Request, username: string): request is requestModel.UserRequest {\n    const req: requestModel.UserInvitation = <requestModel.UserInvitation>request\n    if (req.resourceType === RequestResourceType.USER &&\n        req.type === requestModel.RequestType.INVITATION &&\n        req.user &&\n        req.user === username) {\n        return true\n    }\n    return false\n}\n\nfunction getUserRelation(user: User, viewModel: ViewOrgViewModel): orgModel.UserRelationToOrganization {\n\n    const organization = viewModel.organization\n    if (user.username === organization.owner.username) {\n        return orgModel.UserRelationToOrganization.OWNER\n    }\n    const member = organization.members.find((member) => {\n        return member.username === user.username\n    })\n    if (member) {\n        switch (member.type) {\n            case MemberType.ADMIN:\n                return orgModel.UserRelationToOrganization.ADMIN\n            case MemberType.OWNER:\n                return orgModel.UserRelationToOrganization.OWNER\n            case MemberType.MEMBER:\n                return orgModel.UserRelationToOrganization.MEMBER\n        }\n    }\n\n    const inboxRequests = viewModel.requestInbox\n    const outboxRequests = viewModel.requestOutbox\n\n    if (inboxRequests.some((request) => {\n        return (request.resourceType === RequestResourceType.USER &&\n            request.requester === user.username)\n    })) {\n        return orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING\n    }\n\n    if (outboxRequests.some((request) => {\n        return (request.resourceType === RequestResourceType.USER &&\n            request.user === user.username)\n    })) {\n        return orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING\n    }\n\n\n    // outboxRequests.forEach((request) => {\n    //     if (request.resourceType === RequestResourceType.USER) {\n    //         invited.push(request.user)\n    //     }\n    // })\n\n    // TODO revive\n    // for (const request of organization.adminRequests) {\n    //     if (isUserInvitation(request, user.username)) {\n    //         return UserRelationToOrganization.MEMBER_INVITATION_PENDING\n    //     } else if (isUserRequest(request, user.username)) {\n    //         return UserRelationToOrganization.MEMBER_REQUEST_PENDING\n    //     }\n    // }\n\n    return orgModel.UserRelationToOrganization.VIEW\n}\n\nfunction ensureView(state: StoreState): [ViewOrgViewModel, View<InviteUserViewModel>] {\n    const {\n        views: {\n            viewOrgView: { viewModel }\n        }\n    } = state\n    if (viewModel === null) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    const { inviteUserView } = viewModel.subViews\n    if (inviteUserView === null) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    return [viewModel, inviteUserView]\n}\n\n// function ensureViewModel(state: StoreState): InviteUserViewModel {\n//     const view = ensureView(state)\n//     if (view.viewModel)\n// }\n\nexport function selectUser(selectedUsername: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(selectUserStart())\n\n        const state = getState()\n\n        let orgViewModel: ViewOrgViewModel\n        let view: View<InviteUserViewModel>\n        try {\n            [orgViewModel, view] = ensureView(state)\n        } catch (ex) {\n            dispatch(selectUserError(makeError({\n                code: 'invalid state',\n                message: ex.message\n            })))\n            return\n        }\n\n        if (view.viewModel === null) {\n            dispatch(selectUserError(makeError({\n                code: 'error',\n                message: 'missing view model'\n            })))\n            return\n        }\n\n        const {\n            auth: { authorization: { token } },\n            app: { config }\n        } = state\n\n        const userClient = new userModel.UserModel({\n            token,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const user = await userClient.getUser(selectedUsername)\n            const relation = getUserRelation(user, orgViewModel)\n            dispatch(selectUserSuccess(user, relation))\n        } catch (ex) {\n            dispatch(selectUserError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n    }\n}\n\n// Now send the invitation, whew!\n\nexport interface SendInvitation extends Action {\n    type: ActionFlag.INVITE_USER_SEND_INVITATION\n}\n\nexport interface SendInvitationStart extends Action {\n    type: ActionFlag.INVITE_USER_SEND_INVITATION_START\n}\n\nexport interface SendInvitationSuccess extends Action {\n    type: ActionFlag.INVITE_USER_SEND_INVITATION_SUCCESS\n}\n\nexport interface SendInvitationError extends Action {\n    type: ActionFlag.INVITE_USER_SEND_INVITATION_ERROR,\n    error: AnError\n}\n\nexport function sendInvitationStart(): SendInvitationStart {\n    return {\n        type: ActionFlag.INVITE_USER_SEND_INVITATION_START\n    }\n}\n\nexport function sendInvitationSuccess(): SendInvitationSuccess {\n    return {\n        type: ActionFlag.INVITE_USER_SEND_INVITATION_SUCCESS\n    }\n}\n\nexport function sendInvitationError(error: AnError): SendInvitationError {\n    return {\n        type: ActionFlag.INVITE_USER_SEND_INVITATION_ERROR,\n        error: error\n    }\n}\n\nexport function sendInvitation() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sendInvitationStart())\n\n        const state = getState()\n\n        let view: View<InviteUserViewModel>\n        try {\n            [, view] = ensureView(state)\n        } catch (ex) {\n            dispatch(selectUserError(makeError({\n                code: 'invalid state',\n                message: ex.message\n            })))\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = state\n\n        if (view.viewModel === null) {\n            dispatch(sendInvitationError(makeError({\n                code: 'error',\n                message: 'null view model'\n            })))\n            return\n        }\n\n        const { selectedUser, organization: { id } } = view.viewModel\n\n        if (!selectedUser) {\n            return\n        }\n\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        requestClient.inviteUserToJoinOrg(id, selectedUser.user.username)\n            .then((request) => {\n                dispatch(sendInvitationSuccess())\n                dispatch(viewOrgActions.reload(id))\n            })\n            .catch((err) => {\n                dispatch(sendInvitationError(makeError({\n                    code: err.name,\n                    message: err.message\n                })))\n            })\n    }\n}\n","import * as React from 'react'\nimport './User.css'\n\nimport Avatar from './entities/Avatar'\nimport * as types from '../types';\n\nexport interface UserProps {\n    user: types.User\n    avatarSize?: number\n}\n\ninterface UserState {\n\n}\n\nclass User extends React.Component<UserProps, UserState> {\n    constructor(props: UserProps) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                <div className=\"avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"infoCol\">\n                    <div className=\"name\">\n                        <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                        {' '}\n                        ❨{this.props.user.username}❩\n                                </div>\n                    <div className=\"organization\">\n                        {this.props.user.organization || <i>no organization in user profile</i>}\n                    </div>\n                    <div className=\"location\">\n                        {[this.props.user.city, this.props.user.state, this.props.user.country].filter(x => x).join(', ') || <i>no location information in user profile</i>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default User","import * as React from 'react'\nimport { Route } from 'react-router-dom'\nimport './component.css'\nimport { Menu } from 'antd';\nimport { ClickParam } from 'antd/lib/menu'\n\ninterface MainMenuProps {\n    buttons?: JSX.Element\n}\n\ninterface MainMenuState {\n    currentMenuItem: string\n}\n\nclass MainMenu extends React.Component<MainMenuProps, MainMenuState> {\n    constructor(props: MainMenuProps, context: React.Context<any>) {\n        super(props)\n\n        this.state = {\n            currentMenuItem: 'myorgs'\n        }\n    }\n\n    onMenuSelection(e: ClickParam) {\n        // this.setState({\n        //     currentMenuItem: e.key\n        // })\n        // switch (e.key) {\n        //     case 'myorgs':\n        //         this.props.history.push('/dashboard')\n        //     case 'allorgs':\n        //         this.props.history.push('/organizations')\n        // }\n    }\n\n\n    renderMenu() {\n        return (\n            <Route render={({ history, location }) => {\n                let selectedKeys: Array<string> = []\n                switch (location.pathname) {\n                    case '/organizations':\n                        selectedKeys = ['allorgs']\n                        break\n                    case '/newOrganization':\n                        selectedKeys = ['neworg']\n                        break\n                }\n                return (\n                    <Menu\n                        // onClick={(e: ClickParam) => { doNavigate(e.key) }}\n                        selectedKeys={selectedKeys}\n                        style={{ backgroundColor: 'transparent' }}\n                        mode=\"horizontal\"\n                    >\n                        {/* <Menu.Item key=\"allorgs\">\n                            <Link to=\"/organizations\">Browse &amp; Search</Link>\n                        </Menu.Item> */}\n                        {/* <Menu.Item key=\"neworg\">\n                            <Link to=\"/newOrganization\">Create New Organization</Link>\n                        </Menu.Item> */}\n                    </Menu>\n                )\n            }} />\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"MainMenu\">\n                <div className=\"MainMenu-menu\">\n                    {this.renderMenu()}\n                </div>\n                <div className=\"MainMenu-buttons\">\n                    {this.props.buttons}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainMenu;","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\n\nexport interface UserProps {\n    user: userModel.User\n    render: (user: userModel.User) => JSX.Element\n}\n\ninterface UserState {\n}\n\nclass User extends React.Component<UserProps, UserState> {\n    constructor(props: UserProps) {\n        super(props)\n    }\n\n    render() {\n        return (\n            this.props.render(this.props.user)\n        )\n    }\n}\n\nexport default User","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\nimport UserWrapped from './UserWrapped'\n\ninterface LoaderProps {\n    userId: userModel.Username\n    render: (user: userModel.User) => JSX.Element\n    user: userModel.User | undefined\n    onLoad: (userId: userModel.Username) => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <UserWrapped user={this.props.user} render={this.props.render} />\n            )\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" />{' '}Loading user {this.props.userId} ...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.onLoad(this.props.userId)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/entities'\nimport { Icon } from 'antd'\n\n\nexport interface OwnProps {\n    userId: userModel.Username\n    render: (user: userModel.User) => JSX.Element\n}\n\ninterface StateProps {\n    user: userModel.User | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (userId: userModel.Username) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        user: state.entities.users.byId.get(props.userId)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (userId: userModel.Username) => {\n            dispatch(actions.userLoader(userId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport { User, InviteUserViewState, OrganizationUser } from '../../../../../types';\nimport { Button, Icon, Alert, Tooltip } from 'antd';\nimport UserComponent from '../../../../User'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as userModel from '../../../../../data/models/user'\nimport MainMenu from '../../../../menu/component'\nimport UserEntityComponent from '../../../../entities/UserWrappedContainer'\nimport './component.css'\nimport Avatar from '../../../../entities/Avatar';\n\nexport interface InviteUserProps {\n    organization: orgModel.Organization,\n    selectedUser: {\n        user: User,\n        relation: orgModel.UserRelationToOrganization\n    } | null\n    editState: InviteUserViewState,\n    users: Array<OrganizationUser> | null\n    onSearchUsers: (query: userModel.UserQuery) => void,\n    onSelectUser: (username: string) => void,\n    onSendInvitation: () => void\n    onFinish: () => void\n}\n\ninterface InviteUserState {\n    autocompleteMessage: string\n}\nclass InviteUser extends React.Component<InviteUserProps, InviteUserState> {\n\n    lastSearchAt: Date | null\n\n    static searchDebounce: number = 200\n\n    searchInput: React.RefObject<HTMLInputElement>\n    searchButton: React.RefObject<Button>\n\n    constructor(props: InviteUserProps) {\n        super(props)\n\n        this.lastSearchAt = null\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.state = {\n            autocompleteMessage: ''\n        }\n    }\n\n    onClickCancelToViewer() {\n        this.props.onFinish()\n    }\n\n    onSendInvitation() {\n        this.props.onSendInvitation()\n    }\n\n    canSave() {\n        if (this.props.selectedUser) {\n            return true\n        }\n        return false\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.doSearchUsers(currentSearchInputValue)\n    }\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        // this.doSearchUsers(currentSearchInputValue)\n    }\n\n    doSearchUsers(value: string) {\n        // if (value.length < 3) {\n        //     this.setState({ autocompleteMessage: 'Search begins after 3 or more characters' })\n        //     return\n        // }\n        // this.setState({ autocompleteMessage: '' })\n        // build up list of users already owning, members of, or with membership pending.\n        const excludedUsers: Array<string> = []\n\n        if (this.lastSearchAt === null ||\n            (new Date().getTime() - this.lastSearchAt.getTime() > InviteUser.searchDebounce)) {\n            this.lastSearchAt = new Date()\n            this.props.onSearchUsers({\n                query: value,\n                excludedUsers: []\n            })\n        }\n    }\n\n    onSelectUser(user: OrganizationUser) {\n        this.props.onSelectUser(user.username);\n    }\n\n    renderOrgName(name: string) {\n        const maxLength = 25\n        if (name.length < 25) {\n            return name\n        }\n        return (\n            <span>\n                {name.slice(0, 25)}\n                …\n            </span>\n        )\n    }\n\n    renderUsers() {\n        if (!this.props.users) {\n            const message = 'Search for users by name or username to display a list of available users in this space.'\n            return (\n                <Alert type=\"info\" message={message} showIcon />\n            )\n        }\n        if (this.props.users.length === 0) {\n            return (\n                <Alert type=\"warning\" message=\"No users found\" showIcon />\n            )\n        }\n        const renderUser = (user: userModel.User) => {\n            const tooltip = (\n                <UserComponent user={user} avatarSize={30} />\n            )\n            return (\n                // <Tooltip title={tooltip}>\n                <div className=\"InviteUser-name\">\n                    <Avatar user={user} size={20} /> {user.realname} ({user.username})\n                    </div>\n                // </Tooltip>\n            )\n        }\n        return this.props.users.map((user) => {\n            let statusIconType\n            let statusTooltip\n            let statusIconColor = '#000'\n            switch (user.relation) {\n                case orgModel.UserRelationToOrganization.NONE:\n                    // nothing\n                    break\n                case orgModel.UserRelationToOrganization.MEMBER:\n                    statusIconType = 'user'\n                    statusTooltip = 'This user is already a member of this Organization'\n                    break\n                case orgModel.UserRelationToOrganization.ADMIN:\n                    statusIconType = 'lock'\n                    statusTooltip = 'This user is already an administrator of this Organization'\n                    break\n                case orgModel.UserRelationToOrganization.OWNER:\n                    statusIconType = 'crown'\n                    statusTooltip = 'This user is the owner of this organization'\n                    break\n                case orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING:\n                    statusIconType = 'inbox'\n                    statusTooltip = 'This user has already requested membership to this Organization (check your requests inbox)'\n                    statusIconColor = 'orange'\n                    break\n                case orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING:\n                    statusIconType = 'mail'\n                    statusTooltip = 'This user has already been invited to join this Organization'\n                    statusIconColor = 'orange'\n                    break\n            }\n            let statusIcon\n            if (statusIconType) {\n                statusIcon = (\n                    <Tooltip title={statusTooltip}>\n                        <Icon type={statusIconType} style={{ color: statusIconColor }} />\n                    </Tooltip>\n                )\n            }\n            const isSelected = (this.props.selectedUser && (user.username === this.props.selectedUser.user.username))\n            let classes = ['InviteUser-userRow']\n            if (isSelected) {\n                classes.push('InviteUser-selected')\n            }\n            return (\n                <div\n                    className={classes.join(' ')}\n                    key={user.username}\n                    onClick={() => { this.onSelectUser.call(this, user) }}>\n                    <div className=\"InviteUser-statusCol\">\n                        {statusIcon}\n                    </div>\n                    <div className=\"InviteUser-userCol\">\n                        <UserEntityComponent userId={user.username} render={renderUser} />\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderOrgInfo() {\n        return (\n            <div className=\"orgInfo\">\n                <div className=\"InviteUser-name\">\n                    <span className=\"field-label\">name</span>\n                    <span>{this.props.organization.name}</span>\n                </div>\n                <div className=\"InviteUser-description\">\n                    <span className=\"field-label\">description</span>\n                    <span>{this.props.organization.description}</span>\n                </div>\n            </div>\n        )\n    }\n\n    renderInvitationForm() {\n        let button\n        let message\n        if (this.props.selectedUser) {\n            if (this.props.selectedUser.relation === orgModel.UserRelationToOrganization.VIEW) {\n                button = (\n                    <Button\n                        type=\"primary\"\n                        onClick={this.onSendInvitation.bind(this)}>Send Invitation</Button>\n                )\n            } else {\n                button = (\n                    <Button\n                        disabled\n                        type=\"primary\"\n                    >Send Invitation</Button>\n                )\n                // message = 'User is a member of this organization'\n                message = (\n                    <div>\n                        User may not be invited because:<br />\n                        {this.renderRelation(this.props.selectedUser.relation)}\n                    </div>\n                )\n                message = (\n                    <Alert\n                        type=\"warning\"\n                        message={message}\n                        showIcon\n                    />\n                )\n            }\n        } else {\n            button = (\n                <Button\n                    disabled\n                    type=\"primary\"\n                >Send Invitation</Button>\n            )\n            message = 'Please select a user'\n        }\n        return (\n            <div className=\"invitationForm\">\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    {button}\n                </div>\n                <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                    {message}\n                </div>\n            </div>\n        )\n    }\n\n    renderInvitationStatus() {\n        switch (this.props.editState) {\n            case InviteUserViewState.NONE:\n                return (\n                    <div>NONE</div>\n                )\n            case InviteUserViewState.EDITING:\n                return (\n                    <div>EDITING</div>\n                )\n            case InviteUserViewState.SENDABLE:\n                return (\n                    <div>SENDABLE</div>\n                )\n            case InviteUserViewState.SENDING:\n                return (\n                    <div>SENDING</div>\n                )\n            case InviteUserViewState.SUCCESS:\n                return (\n                    <div>SENT SUCCESSFULLY</div>\n                )\n            case InviteUserViewState.ERROR:\n                return (\n                    <div>ERROR SENDING</div>\n                )\n            default:\n                return (\n                    <div>Bad State</div>\n                )\n        }\n    }\n\n    renderRelation(relation: orgModel.UserRelationToOrganization) {\n        switch (relation) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <span><Icon type=\"stop\" />None</span>\n                )\n            case (orgModel.UserRelationToOrganization.VIEW):\n                return (\n                    <span><Icon type=\"stop\" /> Not a member</span>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (<span><Icon type=\"user\" style={{ color: 'orange' }} /> User's membership <b>request</b> is pending</span>)\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (<span><Icon type=\"user\" style={{ color: 'blue' }} /> User has been <b>invited</b> to join</span>)\n            case (orgModel.UserRelationToOrganization.MEMBER):\n                return (<span><Icon type=\"user\" /> User is a <b>member</b> of this organization</span>)\n            case (orgModel.UserRelationToOrganization.ADMIN):\n                return (<span><Icon type=\"unlock\" />User is an <b>admin</b> of this organization</span>)\n            case (orgModel.UserRelationToOrganization.OWNER):\n                return (\n\n                    <span><Icon type=\"crown\" /> User is the <b>owner</b> of this Organization</span>\n                )\n        }\n    }\n\n    renderSelectedUser() {\n        if (this.props.selectedUser === null) {\n            return (\n                <div className=\"InviteUser-selectedUser\">\n                    <p className=\"InviteUser-noSelection\">\n                        No user yet selected\n                    </p>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"InviteUser-selectedUser\">\n                    <UserComponent user={this.props.selectedUser.user} />\n                    {this.renderRelation(this.props.selectedUser.relation)}\n                </div>\n            )\n        }\n    }\n\n    renderFooter() {\n        return (\n            <div className=\"InviteUser-footer\">\n            </div>\n        )\n    }\n\n    renderSearchButton() {\n        return (<Icon type=\"search\" />)\n    }\n\n    renderMenuButtons() {\n        return (\n            <div className=\"ButtonSet\">\n                <div className=\"ButtonSet-button\">\n                    <Button icon=\"rollback\"\n                        type=\"danger\"\n                        onClick={this.onClickCancelToViewer.bind(this)}>\n                        Done\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"InviteUser scrollable-flex-column\">\n                <MainMenu buttons={this.renderMenuButtons()} />\n                <div className=\"InviteUser-row scrollable-flex-column\">\n                    <div className=\"InviteUser-col1 -firstCol InviteUser-users scrollable-flex-column\">\n                        <h3>Select User to Invite</h3>\n                        <form id=\"searchForm\" className=\"InviteUser-searchBar\"\n                            onSubmit={this.onSubmit.bind(this)}>\n                            <input\n                                ref={this.searchInput}\n                                autoFocus\n                                onChange={this.onSearchInputChange.bind(this)}\n                                placeholder=\"Search for a user\"\n                            />\n                            <Button\n                                className=\"InviteUser-searchButton\"\n                                form=\"searchForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\"\n                            >\n                                {this.renderSearchButton()}\n                            </Button>\n                        </form>\n                        <div className=\"InviteUser-usersTable\">\n                            {this.renderUsers()}\n                        </div>\n                    </div>\n                    <div className=\"InviteUser-col1 -lastCol\">\n                        <h3>Selected User</h3>\n                        {this.renderSelectedUser()}\n                        {this.renderInvitationForm()}\n                    </div>\n                </div>\n\n                {this.renderFooter()}\n            </div>\n        )\n    }\n}\n\nexport default InviteUser","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as types from '../../../../../types'\nimport * as actions from '../../../../../redux/actions/viewOrganization/inviteUser'\nimport InviteUser from './component'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as userModel from '../../../../../data/models/user'\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    organization: orgModel.Organization\n    users: Array<types.OrganizationUser> | null\n    selectedUser: {\n        user: types.User,\n        relation: orgModel.UserRelationToOrganization\n    } | null\n    editState: types.InviteUserViewState\n}\n\ninterface DispatchProps {\n    onSearchUsers: (query: userModel.UserQuery) => void\n    onSelectUser: (username: string) => void\n    onSendInvitation: () => void\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    if (viewModel.subViews.inviteUserView.viewModel === null) {\n        throw new Error(\"argh, null subview view model\")\n    }\n\n    return viewModel.subViews.inviteUserView.viewModel\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onSearchUsers: ({ query, excludedUsers }) => {\n            dispatch(actions.inviteUserSearchUsers({ query, excludedUsers }) as any)\n        },\n        onSelectUser: (username: string) => {\n            dispatch(actions.selectUser(username) as any)\n        },\n        onSendInvitation: () => {\n            dispatch(actions.sendInvitation() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(InviteUser)","import * as React from 'react'\n\nimport Container from './container'\nimport {\n    StoreState, ViewOrgViewModelKind, ViewState,\n    InviteUserViewModel, View, NoneViewModel\n} from '../../../../../types';\n\nexport interface InviteUserLoaderProps {\n    view: View<InviteUserViewModel | NoneViewModel>\n    organizationId: string\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface InviteUserLoaderState {\n}\n\nclass InviteUserLoader extends React.Component<InviteUserLoaderProps, InviteUserLoaderState> {\n    constructor(props: InviteUserLoaderProps) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading ...\n                {' '}\n                <Spin />\n            </div>\n        )\n        return (\n            <Alert type=\"info\" message={message} style={{\n                width: '20em',\n                padding: '20px',\n                margin: '20px auto'\n            }} />\n        )\n    }\n\n    renderError(error: AnError) {\n        return (\n            <div>\n                Error!\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                return this.renderLoading()\n            case ViewState.LOADING:\n                return this.renderLoading()\n            case ViewState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError(makeError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    }))\n                }\n            default:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                this.props.onLoad(this.props.organizationId)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../../../redux/actions/viewOrganization/inviteUser'\nimport { Spin, Alert } from 'antd';\nimport { AnError, makeError } from '../../../../../lib/error';\n\nexport interface OwnProps {\n    organizationId: string\n}\n\ninterface StateProps {\n    view: View<InviteUserViewModel>\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const v = state.views.viewOrgView\n    const vm1 = v.viewModel\n    if (vm1 === null) {\n        throw new Error('vm is null')\n    }\n    if (vm1.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('not the right vm')\n    }\n    return {\n        view: vm1.subViews.inviteUserView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: (organizationId: string) => {\n            dispatch(actions.load(organizationId) as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(InviteUserLoader)","import * as React from 'react'\nimport './UserSimple.css'\nimport Avatar from './Avatar'\nimport * as userModel from '../../data/models/user'\nimport { Tooltip } from 'antd';\n\nexport interface UserProps {\n    user: userModel.User\n    avatarSize?: number\n}\n\ninterface UserState {\n}\n\nclass User extends React.Component<UserProps, UserState> {\n    constructor(props: UserProps) {\n        super(props)\n    }\n\n    render() {\n        const tooltip = (\n            <div>\n                <div>\n                    {this.props.user.realname}\n                </div>\n                <div>\n                    <span><Avatar user={this.props.user} size={20} /></span>\n                    {' '}\n                    <span>{this.props.user.username}</span>\n                </div>\n            </div>\n        )\n        return (\n            <div className=\"UserSimple\">\n                <Tooltip title={tooltip} placement=\"bottomRight\">\n                    <a href={\"/#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                </Tooltip>\n            </div>\n        )\n    }\n}\n\nexport default User","import * as React from 'react'\nimport * as userModel from '../../data/models/user'\nimport UserSimple from './UserSimple'\n\ninterface LoaderProps {\n    userId: userModel.Username\n    user: userModel.User | undefined\n    avatarSize: number\n    onLoad: (userId: userModel.Username) => void\n}\n\ninterface LoaderState {\n\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <UserSimple user={this.props.user} avatarSize={this.props.avatarSize} />\n            )\n        } else {\n            return (\n                <div>\n                    <Icon type=\"loading\" />{' '}Loading user...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.onLoad(this.props.userId)\n        }\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/entities'\nimport { Icon } from 'antd'\n\n\nexport interface OwnProps {\n    userId: userModel.Username\n    avatarSize: number\n}\n\ninterface StateProps {\n    user: userModel.User | undefined\n}\n\ninterface DispatchProps {\n    onLoad: (userId: userModel.Username) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        user: state.entities.users.byId.get(props.userId)\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (userId: userModel.Username) => {\n            dispatch(actions.userLoader(userId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport * as narrativeModel from '../../../data/models/narrative'\nimport { Tooltip, Icon } from 'antd'\nimport UserSimple from '../UserSimpleContainer'\nimport { niceElapsed } from '../../../lib/time'\nimport './component.css'\nimport NiceElapsedTime from '../../NiceElapsedTime';\n\nexport interface NarrativeProps {\n    narrative: narrativeModel.Narrative\n}\n\nenum View {\n    COMPACT = 0,\n    NORMAL\n}\n\nfunction reverseView(v: View) {\n    switch (v) {\n        case View.COMPACT:\n            return View.NORMAL\n        case View.NORMAL:\n            return View.COMPACT\n    }\n}\n\ninterface NarrativeState {\n    view: View\n}\n\nexport default class Narrative extends React.Component<NarrativeProps, NarrativeState> {\n    constructor(props: NarrativeProps) {\n        super(props)\n\n        this.state = {\n            view: View.COMPACT\n        }\n    }\n\n    onToggleView() {\n        this.setState({\n            view: reverseView(this.state.view)\n        })\n    }\n\n    renderPublicPermission(narrative: narrativeModel.AccessibleNarrative) {\n        if (narrative.isPublic) {\n            return (\n                <Tooltip title=\"This narrative is viewable by all KBase users\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"global\" /> Public Narrative\n                    </span>\n                </Tooltip>\n            )\n        } else {\n            return (\n                <Tooltip title=\"This narrative is only accessible to those with whom it is directly shared\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"lock\" /> Private Narrative\n                    </span>\n                </Tooltip>\n            )\n        }\n    }\n\n    // renderUserPermission(narrative: narrativeModel.AccessibleNarrative) {\n    //     let label\n    //     switch (narrative.access) {\n    //         case narrativeModel.NarrativeAccess.VIEW:\n    //             label = (\n    //                 <span>View-Only (<i>visit narrative to request additional access</i>)</span>\n    //             )\n    //             break\n    //         case narrativeModel.NarrativeAccess.EDIT:\n    //             label = (\n    //                 <span>Edit (<i>visit narrative to request additional access</i>)</span>\n    //             )\n    //             break\n    //         case narrativeModel.NarrativeAccess.ADMIN:\n    //             label = 'Admin'\n    //             break\n    //         case narrativeModel.NarrativeAccess.OWNER:\n    //             label = 'Owner'\n    //             break\n    //         default:\n    //             label = 'Unknown'\n    //     }\n    //     return (\n    //         <span>\n    //             {label}\n    //         </span>\n    //     )\n    // }\n\n    renderUserPermission(narrative: narrativeModel.AccessibleNarrative) {\n        let iconType\n        let tooltip\n        switch (narrative.access) {\n            case narrativeModel.NarrativeAccess.VIEW:\n                iconType = 'eye'\n                tooltip = (\n                    <span>View-Only (<i>visit narrative to request additional access</i>)</span>\n                )\n                break\n            case narrativeModel.NarrativeAccess.EDIT:\n                iconType = 'edit'\n                tooltip = (\n                    <span>This narrative is shared with you with <b>edit</b> access (<i>visit narrative to request additional access</i>)</span>\n                )\n                break\n            case narrativeModel.NarrativeAccess.ADMIN:\n                iconType = 'unlock'\n                tooltip = (\n                    <span>\n                        This narrative is shared with you with <b>access</b> - you may edit and re-share this\n                    </span>\n                )\n                break\n            case narrativeModel.NarrativeAccess.OWNER:\n                iconType = 'crown'\n                tooltip = (\n                    <span>\n                        You are the owner of this Narrative\n                    </span>\n                )\n                break\n        }\n        return (\n            <Tooltip\n                placement=\"bottomRight\"\n                title={tooltip}>\n                <Icon type={iconType} />\n            </Tooltip>\n        )\n    }\n\n    renderGlobalPermission(narrative: narrativeModel.AccessibleNarrative) {\n        let iconType\n        let tooltip\n        if (narrative.isPublic) {\n            iconType = 'global'\n            tooltip = 'This narrative has been shared publicly - with all KBase users'\n        } else {\n            iconType = 'lock'\n            tooltip = 'This narrative is private - only accessible to the owner any users it has been shared with'\n        }\n        return (\n            <Tooltip\n                placement=\"bottomRight\"\n                title={tooltip}>\n                <Icon type={iconType} />\n            </Tooltip>\n        )\n    }\n\n    renderNiceElapsed(d: Date) {\n        const tooltip = (\n            <span>\n                {\n                    Intl.DateTimeFormat('en-US', {\n                        month: 'short',\n                        day: 'numeric',\n                        year: 'numeric'\n                    }).format(d)\n                }\n            </span>\n        )\n        return (\n            <Tooltip placement=\"bottomRight\" title={tooltip}>\n                {niceElapsed(d)}\n            </Tooltip>\n        )\n    }\n\n    renderCompact(narrative: narrativeModel.AccessibleNarrative) {\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                {/* <div className=\"iconCol\">\n                    <Icon type=\"file\" style={{ fontSize: '30px', width: '30px' }} />\n                </div> */}\n                <div className=\"mainCol\">\n                    <div>\n                        <div className=\"Narrative-title\">\n                            <a href={\"/narrative/\" + narrative.workspaceId} target=\"_blank\">\n                                {narrative.title}\n                            </a>\n                        </div>\n                        {', '}\n                        <div className=\"Narrative-owner\">\n                            <UserSimple avatarSize={20} userId={narrative.owner} />\n                        </div>\n                    </div>\n\n                    <div className=\"Narrative-attributes\">\n                        <div className=\"Narrative-userPermission\">\n                            {this.renderUserPermission(narrative)}\n                        </div>\n                        <div className=\"Narrative-global\">\n                            {this.renderGlobalPermission(narrative)}\n                        </div>\n                    </div>\n                    <div>\n                        <span className=\"field-label\">updated</span>\n                        <NiceElapsedTime time={narrative.lastSavedAt} />\n                    </div>\n\n                    {/* TODO: left off here; need to add in the added date\n                        <div>\n                        <span className=\"field-label\">added</span>\n                        {this.renderNiceElapsed(this.props.)}\n                    </div> */}\n                    {/* <div>\n                        {this.renderPublicPermission(narrative)}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">your permission</span>\n                        {this.renderUserPermission(narrative)}\n                    </div> */}\n                    {/* <div>\n                        <span className=\"field-label\">owner</span>\n                        <div style={{ display: 'inline-block' }}><UserSimple avatarSize={20} userId={narrative.owner} /></div>\n                    </div> */}\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n    renderNormal(narrative: narrativeModel.AccessibleNarrative) {\n\n        return (\n            <React.Fragment>\n                <div className=\"controlCol\">\n                    <a onClick={this.onToggleView.bind(this)}\n                        className={`linkButton ${this.state.view === View.NORMAL ? \"pressed\" : \"\"}`}\n                    >\n                        <Icon type={`${this.state.view === View.NORMAL ? \"up\" : \"down\"}`} />\n                    </a>\n                </div>\n                {/* <div className=\"iconCol\">\n                    <Icon type=\"file\" style={{ fontSize: '30px', width: '30px' }} />\n                </div> */}\n                <div className=\"mainCol\">\n                    <div>\n                        <div className=\"Narrative-title\">\n                            <a href={\"/narrative/\" + narrative.workspaceId} target=\"_blank\">\n                                {narrative.title}\n                            </a>\n                        </div>\n                        {', '}\n                        <div className=\"Narrative-owner\">\n                            <UserSimple avatarSize={20} userId={narrative.owner} />\n                        </div>\n                    </div>\n                    <div className=\"Narrative-attributes\">\n                        <div className=\"Narrative-userPermission\">\n                            {this.renderUserPermission(narrative)}\n                        </div>\n                        <div className=\"Narrative-global\">\n                            {this.renderGlobalPermission(narrative)}\n                        </div>\n                    </div>\n                    {/* <div>\n                        {this.renderPublicPermission(narrative)}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">your permission</span>\n                        {this.renderUserPermission(narrative)}\n                    </div> */}\n                    {/* <div>\n                        <span className=\"field-label\">owner</span>\n                        <div style={{ display: 'inline-block' }}><UserSimple avatarSize={20} userId={narrative.owner} /></div>\n                    </div> */}\n                    <div>\n                        <span className=\"field-label\">last saved</span>\n                        {this.renderNiceElapsed(narrative.lastSavedAt)}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">by</span>\n                        <UserSimple avatarSize={20} userId={narrative.lastSavedBy} />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    renderNarrative(narrative: narrativeModel.AccessibleNarrative) {\n        return (\n            <React.Fragment>\n                <div className=\"mainCol\">\n                    <div>\n                        <div className=\"Narrative-title\">\n                            <a href={\"/narrative/\" + narrative.workspaceId} target=\"_blank\">\n                                {narrative.title}\n                            </a>\n                        </div>\n                        {', '}\n                        <div className=\"Narrative-owner\">\n                            <UserSimple avatarSize={20} userId={narrative.owner} />\n                        </div>\n                    </div>\n\n                    <div className=\"Narrative-attributes\">\n                        <div className=\"Narrative-userPermission\">\n                            {this.renderUserPermission(narrative)}\n                        </div>\n                        <div className=\"Narrative-global\">\n                            {this.renderGlobalPermission(narrative)}\n                        </div>\n                    </div>\n                    <div>\n                        <span className=\"field-label\">\n                            <Icon type=\"save\" />\n                        </span>\n                        <NiceElapsedTime time={narrative.lastSavedAt} tooltipPrefix=\"last saved \" />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const narrative = this.props.narrative\n        if (narrative.access === narrativeModel.NarrativeAccess.NONE) {\n            return (\n                <div>\n                    You don't have access to this Narrative\n                </div>\n            )\n        }\n        // switch (this.state.view) {\n        //     case View.COMPACT:\n        //         return (\n        //             <div className=\"Narrative View-COMPACT\">\n        //                 {this.renderCompact(narrative)}\n        //             </div>\n        //         )\n        //     case View.NORMAL:\n        //         return (\n        //             <div className=\"Narrative View-NORMAL\">\n        //                 {this.renderNormal(narrative)}\n        //             </div>\n        //         )\n        // }\n        return this.renderNarrative(narrative)\n    }\n}","import * as React from 'react'\nimport * as narrativeModel from '../../../data/models/narrative'\nimport Narrative from './component'\n\ninterface LoaderProps {\n    workspaceId: narrativeModel.WorkspaceID\n    narrative: narrativeModel.Narrative | null\n    onLoad: (workspaceId: narrativeModel.WorkspaceID) => void\n}\n\ninterface LoaderState { }\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.narrative) {\n            return (\n                <Narrative\n                    narrative={this.props.narrative}\n                />\n            )\n        } else {\n            return (\n                <div>\n                    Loading narrative...\n                </div>\n            )\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.narrative) {\n            this.props.onLoad(this.props.workspaceId)\n        }\n    }\n}\n\n// redux wrapper\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../../types'\nimport * as actions from '../../../redux/actions/entities'\n\nexport interface OwnProps {\n    workspaceId: narrativeModel.WorkspaceID\n}\n\ninterface StateProps {\n    narrative: narrativeModel.Narrative | null\n}\n\ninterface DispatchProps {\n    onLoad: (workspaceId: narrativeModel.WorkspaceID) => void\n}\n\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        narrative: state.entities.narratives.byId.get(props.workspaceId) || null\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<actions.EntityAction>): DispatchProps {\n    return {\n        onLoad: (workspaceId: narrativeModel.WorkspaceID) => {\n            dispatch(actions.loadNarrative(workspaceId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)\n","import * as React from 'react'\nimport * as orgModel from '../data/models/organization/model'\nimport { Button, Tooltip, Icon, Drawer } from 'antd'\nimport Narrative from './entities/narrative/reduxAdapter'\nimport NiceElapsedTime from './NiceElapsedTime'\nimport './OrganizationNarrative.css'\n\nexport interface Props {\n    organization: orgModel.Organization\n    narrative: orgModel.NarrativeResource\n    onGetViewAccess: (narrative: orgModel.NarrativeResource) => void\n}\n\ninterface State {\n    requestAccess: boolean\n}\n\nexport default class OrganizationNarrative extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            requestAccess: false\n        }\n    }\n\n    onGetViewAccess() {\n        this.props.onGetViewAccess(this.props.narrative)\n    }\n\n    onRequestAccess() {\n        this.setState({ requestAccess: true })\n    }\n\n    onCloseRequestAccess() {\n        this.setState({ requestAccess: false })\n    }\n\n    renderNarrativePermission(narrative: orgModel.NarrativeResource) {\n        let label\n        let shareButton\n        let permissionTooltip\n        let buttonTooltip\n        switch (narrative.permission) {\n            case orgModel.UserWorkspacePermission.NONE:\n                if (narrative.isPublic) {\n                    permissionTooltip = \"You have View access to this narrative narrative because it is shared publicly; you may view it, but not edit, run, or share it\"\n                    label = (\n                        <span>\n                            View Only (public)\n                        </span>\n                    )\n                    buttonTooltip = 'Although you have View-Only access to this Narrative due to it being shared globally, you may obtain personal View-Only access by clicking this button'\n                    shareButton = (\n                        <Button size=\"small\" onClick={() => { this.onGetViewAccess.call(this) }}>\n                            Click for View Access\n                        </Button>\n                    )\n                } else {\n                    permissionTooltip = \"You have No access to this narrative narrative; you may not view, edit, run, or share it\"\n                    label = (\n                        <span>\n                            No Access\n                        </span>\n                    )\n                    buttonTooltip = 'You cannot access this Narrative; in order to immediately obtain View-Only access click this button.'\n                    shareButton = (\n                        <Button size=\"small\" onClick={() => { this.onGetViewAccess.call(this) }}>\n                            Click for View Access\n                        </Button>\n                    )\n                }\n                break\n            case orgModel.UserWorkspacePermission.VIEW:\n                permissionTooltip = \"You have View access to this narrative narrative; you may view it, but not edit, run, or share it\"\n                label = (\n                    <span>\n                        View Only\n                    </span>\n                )\n                buttonTooltip = 'You already have View-Only access to this Narrative, but may request additional access'\n                shareButton = (\n                    <Button size=\"small\" onClick={() => { this.onRequestAccess.call(this) }}>\n                        Request Additional Access\n                    </Button>\n                )\n                break\n            case orgModel.UserWorkspacePermission.EDIT:\n                permissionTooltip = \"You have Edit access to this Narrative; you may view, edit, and run, but not share it\"\n                label = (\n                    <span>\n                        Edit\n                    </span>\n                )\n                buttonTooltip = 'You already have Edit access to this Narrative, but may request additional access by clicking this button'\n                shareButton = (\n                    <Button size=\"small\" onClick={() => { this.onRequestAccess.call(this) }}>\n                        Request Admin Access\n                    </Button>\n                )\n                break\n            case orgModel.UserWorkspacePermission.ADMIN:\n                permissionTooltip = \"You have Admin access to this narrative narrative; you may view, edit, run, and share it\"\n                label = (\n                    <span>\n                        Admin\n                    </span>\n                )\n                break\n            case orgModel.UserWorkspacePermission.OWNER:\n                permissionTooltip = \"You are the Owner of this narrative; you may view, edit, run, and share it\"\n                label = (\n                    <span>\n                        Owner\n                    </span>\n                )\n                break\n            default:\n                label = (\n                    <span>\n                        Unknown\n                    </span>\n                )\n        }\n\n        return (\n            <React.Fragment>\n                <Tooltip title={permissionTooltip} placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <span className=\"field-label\">your permission</span>\n                        {label}\n                    </span>\n                </Tooltip>\n                {' '}\n                <Tooltip title={buttonTooltip} placement=\"right\">\n                    {shareButton}\n                </Tooltip>\n            </React.Fragment>\n        )\n    }\n\n    renderPublicPermission(narrative: orgModel.NarrativeResource) {\n        if (narrative.isPublic) {\n            return (\n                <Tooltip title=\"This narrative is viewable by all KBase users\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"global\" /> Public Narrative\n                    </span>\n                </Tooltip>\n            )\n        } else {\n            return (\n                <Tooltip title=\"This narrative is only accessible to those with whom it is directly shared\" placement=\"right\">\n                    <span style={{ cursor: 'help' }}>\n                        <Icon type=\"lock\" /> Private Narrative\n                    </span>\n                </Tooltip>\n            )\n        }\n    }\n\n    renderNarrative() {\n        const narrative = this.props.narrative\n        if (this.props.organization.isMember) {\n            if (narrative.permission === orgModel.UserWorkspacePermission.NONE &&\n                !narrative.isPublic) {\n                return (\n                    <React.Fragment>\n                        <a href={'/narrative/' + narrative.workspaceId} target=\"_blank\">\n                            <div className=\"title\">{narrative.title}</div>\n                        </a>\n                        <div>{this.renderNarrativePermission(narrative)}</div>\n                    </React.Fragment>\n                )\n            }\n            return (\n                <Narrative workspaceId={narrative.workspaceId} />\n            )\n        }\n        return (\n            <Narrative workspaceId={narrative.workspaceId} />\n        )\n    }\n\n    renderResource() {\n        return (\n            <div>\n                <div>\n                    <span className=\"field-label\">added</span>\n                    <span>\n                        <NiceElapsedTime time={this.props.narrative.createdAt} />\n                    </span>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        let accessModal\n        if (this.state.requestAccess) {\n            // TODO: replace with our own implementation...n\n            accessModal = (\n                <Drawer title=\"Request Access to Narrative\"\n                    placement=\"right\"\n                    closable={true}\n                    visible={true}\n                    onClose={() => { this.onCloseRequestAccess.call(this) }}\n                >\n                    Requesting access...\n                </Drawer>\n            )\n        }\n\n        return (\n            <div className=\"OrganizationNarrative\">\n                <div className=\"OrganizationNarrative-narrativeCol\">\n                    {this.renderNarrative()}\n                </div>\n                {/* <div className=\"OrganizationNarrative-resourceCol\">\n                    {this.renderResource()}\n                </div> */}\n                {accessModal}\n            </div>\n        )\n    }\n}","import * as React from 'react';\nimport { Alert, Button, Icon, Menu, Dropdown, Input, Select, Modal } from 'antd';\nimport { ListRowProps } from 'react-virtualized';\nimport OrganizationNarrative from '../../../../OrganizationNarrative';\nimport * as orgModel from '../../../../../data/models/organization/model';\nimport './component.css';\n\nexport interface NarrativesProps {\n    organization: orgModel.Organization;\n    narratives: Array<orgModel.NarrativeResource>;\n    relation: orgModel.Relation;\n    sortNarrativesBy: string;\n    searchNarrativesBy: string;\n    onSortNarratives: (sortBy: string) => void;\n    onSearchNarratives: (searchBy: string) => void;\n    onRemoveNarrative: (narrative: orgModel.NarrativeResource) => void;\n    onGetViewAccess: (narrative: orgModel.NarrativeResource) => void;\n    onRequestAddNarrative: () => void;\n}\n\ninterface NarrativesState {}\n\nexport default class Narratives extends React.Component<NarrativesProps, NarrativesState> {\n    constructor(props: NarrativesProps) {\n        super(props);\n    }\n\n    onRequestAddNarrative() {\n        this.props.onRequestAddNarrative();\n    }\n\n    onRemoveNarrative(narrative: orgModel.NarrativeResource) {\n        const confirmed = () => {\n            this.props.onRemoveNarrative(narrative);\n        };\n        const message = (\n            <React.Fragment>\n                <p>Please confirm the removal of this Narrative from this Organization.</p>\n                <p>Any view permission granted to organization members will be unaffected by removing the Narrative.</p>\n                {/* <p>\n                    All Organization members and the Narrative owner will receive a notification.\n                </p> */}\n            </React.Fragment>\n        );\n        Modal.confirm({\n            title: 'Confirm',\n            content: message,\n            width: '50em',\n            okText: 'Confirm',\n            onOk: () => {\n                confirmed();\n            }\n        });\n    }\n\n    onNarrativeMenu(key: string, narrative: orgModel.NarrativeResource) {\n        switch (key) {\n            case 'removeNarrative':\n                this.onRemoveNarrative(narrative);\n                break;\n        }\n    }\n\n    renderNarrativeMenu(narrative: orgModel.NarrativeResource) {\n        const relation = this.props.relation;\n        let menu;\n        switch (relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                // should never occur\n                break;\n            case orgModel.UserRelationToOrganization.VIEW:\n            case orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING:\n            case orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING:\n            case orgModel.UserRelationToOrganization.MEMBER:\n                break;\n            case orgModel.UserRelationToOrganization.ADMIN:\n            case orgModel.UserRelationToOrganization.OWNER:\n                menu = (\n                    <Menu\n                        onClick={({ key }) => {\n                            this.onNarrativeMenu(key, narrative);\n                        }}\n                    >\n                        <Menu.Item key=\"removeNarrative\">\n                            <Icon type=\"delete\" style={{ color: '#f5222d' }} /> Remove Narrative from Organization\n                        </Menu.Item>\n                    </Menu>\n                );\n        }\n        if (!menu) {\n            return;\n        }\n        return (\n            <Dropdown overlay={menu} trigger={['click']}>\n                <Icon type=\"ellipsis\" className=\"IconButton-hover\" />\n            </Dropdown>\n        );\n    }\n\n    renderSearchBar() {\n        const doChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            this.props.onSearchNarratives(e.target.value);\n        };\n        return (\n            <div style={{ paddingRight: '6px' }}>\n                <Input\n                    style={{ width: '100%', marginRight: '6px' }}\n                    placeholder=\"Filter narratives by title\"\n                    onChange={doChange}\n                />\n                {/* <Button>\n                    <Icon type=\"search\" />\n                </Button> */}\n            </div>\n        );\n    }\n\n    renderSortBar() {\n        const handleSelect = (value: string) => {\n            this.props.onSortNarratives(value);\n        };\n\n        return (\n            <React.Fragment>\n                <span className=\"field-label\">sort</span>\n                <Select\n                    onChange={handleSelect}\n                    style={{ width: '11em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortNarrativesBy}\n                >\n                    <Select.Option value=\"name\" key=\"name\">\n                        Name\n                    </Select.Option>\n                    <Select.Option value=\"added\" key=\"added\">\n                        Date Added\n                    </Select.Option>\n                    <Select.Option value=\"changed\" key=\"changed\">\n                        Last Changed\n                    </Select.Option>\n                </Select>\n            </React.Fragment>\n        );\n    }\n\n    renderMemberNarrativeRow(narrative: orgModel.NarrativeResource) {\n        const lastOrgVisitAt = this.props.organization.lastVisitedAt;\n        const addedAt = narrative.addedAt;\n        let isNew;\n        if (lastOrgVisitAt === null) {\n            if (addedAt === null) {\n                isNew = false;\n            } else {\n                isNew = false;\n            }\n        } else {\n            if (addedAt === null) {\n                isNew = false;\n            } else {\n                isNew = lastOrgVisitAt.getTime() < addedAt.getTime();\n            }\n        }\n        const classNames = ['ViewOrganization-Narratives-narrative', 'SimpleCard'];\n        if (isNew) {\n            classNames.push('ViewOrganization-Narratives-newNarrative');\n        }\n        return (\n            <div className={classNames.join(' ')} key={String(narrative.workspaceId)}>\n                <div className=\"ViewOrganization-Narratives-dataCol\">\n                    <OrganizationNarrative\n                        narrative={narrative}\n                        organization={this.props.organization}\n                        onGetViewAccess={this.props.onGetViewAccess}\n                    />\n                </div>\n                <div className=\"ViewOrganization-Narratives-buttonCol\">{this.renderNarrativeMenu(narrative)}</div>\n            </div>\n        );\n    }\n\n    renderMemberNarratives() {\n        const extras = [\n            <Button\n                key=\"addNarrative\"\n                size=\"small\"\n                className=\"Button-important\"\n                onClick={this.onRequestAddNarrative.bind(this)}\n            >\n                <Icon type=\"plus\" /> Associate Narratives\n            </Button>\n        ];\n\n        const rowRenderer: (props: ListRowProps) => React.ReactNode = ({\n            key,\n            index,\n            isScrolling,\n            isVisible,\n            style\n        }: ListRowProps) => {\n            return this.renderMemberNarrativeRow(this.props.narratives[index]);\n        };\n        let narrativesTable;\n        if (this.props.narratives.length === 0) {\n            narrativesTable = <Alert type=\"info\" message=\"No Narratives are yet associated with this Organization\" />;\n        } else {\n            narrativesTable = this.props.narratives.map((narrative) => {\n                return this.renderMemberNarrativeRow(narrative);\n            });\n        }\n\n        return (\n            <div className=\"ViewOrganization-Narratives scrollable-flex-column\">\n                <div className=\"ViewOrganization-Narratives-header\">\n                    <div className=\"ViewOrganization-Narratives-headerCol1\">{extras}</div>\n                </div>\n                <div className=\"ViewOrganization-Narratives-toolbar\">\n                    <div className=\"ViewOrganization-Narratives-toolbar-searchCol\">{this.renderSearchBar()}</div>\n                    <div className=\"ViewOrganization-Narratives-toolbar-sortCol\">{this.renderSortBar()}</div>\n                </div>\n                <div className=\"ViewOrganization-Narratives-narrativesList\">\n                    <div className=\"ViewOrganization-Narratives-narrativesTable\">{narrativesTable}</div>\n                </div>\n            </div>\n        );\n    }\n\n    renderNonMemberNarratives() {\n        let alert;\n        const narrativesToShow = this.props.organization.narratives.length;\n        const hiddenNarrativeCount = this.props.organization.narrativeCount - this.props.organization.narratives.length;\n        const alertStyle = {\n            marginBottom: '10px'\n        };\n        if (narrativesToShow) {\n            if (hiddenNarrativeCount) {\n                const message = (\n                    <React.Fragment>\n                        <p>Since you are not a member of this Organization, only public Narratives are displayed.</p>\n                        <p>\n                            {hiddenNarrativeCount} private Narrative{hiddenNarrativeCount !== 1 ? 's have ' : ' has '}{' '}\n                            been hidden.\n                        </p>\n                    </React.Fragment>\n                );\n                alert = <Alert type=\"info\" message={message} style={alertStyle} />;\n            }\n        } else {\n            if (hiddenNarrativeCount) {\n                const message = (\n                    <React.Fragment>\n                        <p>\n                            Since you are not a member of this Organization, only public Narratives would be displayed,\n                            but this Organization has none.\n                        </p>\n                        <p>\n                            {hiddenNarrativeCount} private Narrative{hiddenNarrativeCount !== 1 ? 's have ' : ' has '}{' '}\n                            been hidden.\n                        </p>\n                    </React.Fragment>\n                );\n                alert = <Alert type=\"info\" message={message} style={alertStyle} />;\n            } else {\n                alert = (\n                    <Alert\n                        type=\"info\"\n                        message=\"No Narratives are yet associated with this Organization\"\n                        style={alertStyle}\n                    />\n                );\n            }\n        }\n\n        let narrativesTable;\n        if (narrativesToShow) {\n            narrativesTable = this.props.narratives.map((narrative) => {\n                // create buttons or not, depending on being an admin\n                return (\n                    <div\n                        className=\"ViewOrganization-Narratives-narrative SimpleCard\"\n                        key={String(narrative.workspaceId)}\n                    >\n                        <div className=\"ViewOrganization-Narratives-dataCol\">\n                            <OrganizationNarrative\n                                narrative={narrative}\n                                organization={this.props.organization}\n                                onGetViewAccess={this.props.onGetViewAccess}\n                            />\n                        </div>\n                        <div className=\"ViewOrganization-Narratives-buttonCol\">\n                            {this.renderNarrativeMenu(narrative)}\n                        </div>\n                    </div>\n                );\n            });\n        }\n\n        // const narrativeCount = this.props.narratives.length\n        const title = (\n            <span className=\"ViewOrganization-Narratives-title\">\n                <Icon type=\"folder-open\" style={{ marginRight: '8px' }} />\n                Narratives{' '}\n                <span className=\"ViewOrganization-Narratives-titleCount\">\n                    ({this.props.organization.narrativeCount})\n                </span>\n            </span>\n        );\n        return (\n            <div className=\"ViewOrganization-Narratives scrollable-flex-column\">\n                <div className=\"ViewOrganization-Narratives-header\">\n                    <div className=\"ViewOrganization-Narratives-headerCol1\">{title}</div>\n                    <div className=\"ViewOrganization-Narratives-headerCol2\" />\n                </div>\n                <div className=\"ViewOrganization-Narratives-toolbar\">\n                    <div className=\"ViewOrganization-Narratives-toolbar-searchCol\">{this.renderSearchBar()}</div>\n                    <div className=\"ViewOrganization-Narratives-toolbar-sortCol\">{this.renderSortBar()}</div>\n                </div>\n                <div className=\"ViewOrganization-Narratives-narrativesList\">\n                    <div className=\"ViewOrganization-Narratives-table\">\n                        {alert}\n                        {narrativesTable}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.organization.isMember) {\n            return this.renderMemberNarratives();\n        } else {\n            return this.renderNonMemberNarratives();\n        }\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport * as orgModel from '../../../data/models/organization/model'\nimport { StoreState, SyncState, ValidationErrorType, ViewOrgViewModelKind, View, ManageMembershipViewModel } from '../../../types'\nimport { AnError, makeError } from '../../../lib/error'\nimport Validation from '../../../data/models/organization/validation'\nimport { ActionFlag } from '..'\nimport * as viewOrgActions from '../viewOrg'\n\n// Loading\n\nexport interface Load extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START\n}\n\nexport interface LoadSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS\n    organization: orgModel.Organization\n    editableMemberProfile: orgModel.EditableMemberProfile\n}\n\nexport interface LoadError extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR,\n    error: AnError\n}\n\nexport interface Unload extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD\n}\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_START\n    }\n}\n\nexport function loadSuccess(organization: orgModel.Organization, editableMemberProfile: orgModel.EditableMemberProfile): LoadSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_SUCCESS,\n        organization: organization,\n        editableMemberProfile: editableMemberProfile\n    }\n}\n\nexport function loadError(error: AnError): LoadError {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload() {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UNLOAD\n    }\n}\n\nexport function load(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        // TODO: here is where we would hook into the store state entities for groups\n        try {\n            const org = await orgClient.getOrg(organizationId)\n            if (org.kind !== orgModel.OrganizationKind.NORMAL) {\n                dispatch(loadError(makeError({\n                    code: 'invalid state',\n                    message: 'Organization must be of kind \"NORMAL\"'\n                })))\n                return\n            }\n\n            if (!org.isMember) {\n                dispatch(loadError(makeError({\n                    code: 'notfound',\n                    message: 'The user \"' + username + '\" is not a member of this org'\n                })))\n                return\n            }\n\n            let thisMember = org.members.find((member) => {\n                return member.username === username\n            })\n\n            if (!thisMember) {\n                if (org.owner.username === username) {\n                    thisMember = org.owner\n                }\n            }\n\n            if (!thisMember) {\n                dispatch(loadError(makeError({\n                    code: 'notfound',\n                    message: 'The user \"' + username + '\" was not found in the members list'\n                })))\n                return\n            }\n\n            const editableProfile: orgModel.EditableMemberProfile = {\n                title: {\n                    value: thisMember.title || '',\n                    remoteValue: thisMember.title,\n                    syncState: SyncState.NEW,\n                    validationState: {\n                        type: ValidationErrorType.OK,\n                        validatedAt: new Date()\n                    }\n                }\n            }\n            dispatch(loadSuccess(org, editableProfile))\n            // dispatch(evaluate())\n        } catch (ex) {\n            console.error('Error :(', ex)\n            dispatch(loadError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n    }\n}\n\n// Leaving the Org\n\nexport interface LeaveOrg extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG\n    organizationId: orgModel.OrganizationID\n}\n\ninterface LeaveOrgSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_SUCCESS\n}\n\ninterface LeaveOrgError extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_ERROR,\n    error: AnError\n}\n\nexport function leaveOrg(organizationId: orgModel.OrganizationID) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(({\n            type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_START\n        }))\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            orgClient.removeMember(organizationId, username)\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_SUCCESS\n            })\n            dispatch(viewOrgActions.reload(organizationId))\n        } catch (ex) {\n            console.error('ERROR leaving org', ex)\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_LEAVE_ORG_ERROR,\n                error: {\n                    code: ex.name,\n                    message: ex.message\n                }\n            })\n        }\n\n\n    }\n}\n\n\n// Updating Profile\n\nexport interface UpdateTitle {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE,\n    title: string\n}\n\nexport interface UpdateTitleStart {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_START\n}\n\nexport interface UpdateTitleSuccess {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS,\n    title: string\n}\n\nexport interface UpdateTitleError {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_ERROR,\n    error: AnError\n}\n\nexport interface Save {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE,\n    memberProfile: orgModel.EditableMemberProfile\n}\n\nexport interface SaveStart {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START\n}\n\nexport interface SaveSuccess {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS\n}\n\nexport interface SaveError {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR,\n    error: AnError\n}\n\nexport function updateTitle(title: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedTitle, error] = Validation.validateMemberTitle(title)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_ERROR,\n                error: makeError({\n                    code: 'invalid',\n                    message: error.message\n                })\n            })\n        } else {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_UPDATE_TITLE_SUCCESS,\n                title: validatedTitle\n            })\n        }\n        dispatch(evaluate())\n    }\n}\n\nexport interface Evaluate extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE\n}\n\nexport interface EvaluateSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS,\n}\n\nexport interface EvaluateError extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR\n}\n\nfunction ensureView(state: StoreState): View<ManageMembershipViewModel> {\n    const {\n        views: {\n            viewOrgView: { viewModel }\n        }\n    } = state\n    if (viewModel === null) {\n        throw new Error('invalid state -- no view value')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('invalid state -- no view value')\n    }\n    const { manageMembershipView } = viewModel.subViews\n    if (manageMembershipView === null) {\n        throw new Error('invalid state -- no view value')\n    }\n    return manageMembershipView\n}\n\nfunction ensureViewModel(state: StoreState): ManageMembershipViewModel {\n    const view = ensureView(state)\n    if (view.viewModel === null) {\n        throw new Error('invalid state -- no view model')\n    }\n    return view.viewModel\n}\n\nexport function evaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const viewModel = ensureViewModel(getState())\n        const { editableMemberProfile } = viewModel\n\n        if (editableMemberProfile.title.validationState.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_ERROR\n            })\n            return\n        }\n\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_EVALUATE_SUCCESS\n        })\n    }\n}\n\nexport interface Save extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE\n}\n\nexport interface SaveStart extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START\n}\n\nexport interface SaveSuccess extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS\n}\n\nexport interface SaveError extends Action<ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR> {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR\n}\n\nexport function save() {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_START\n        })\n\n        const viewModel = ensureViewModel(getState())\n        const { organization, editableMemberProfile } = viewModel\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const update = {\n            title: editableMemberProfile.title.value\n        }\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            await orgClient.updateMember(organization.id, username, update)\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_SUCCESS\n            })\n        } catch (ex) {\n            console.error('error saving member profile', ex)\n            dispatch({\n                type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_SAVE_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n        dispatch(evaluate())\n    }\n}\n\n// Demote self to member\n\n// Demote admin to member\n\nexport interface DemoteSelfToMember extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER,\n    organizationId: string\n}\n\nexport interface DemoteSelfToMemberStart extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_START\n}\n\nexport interface DemoteSelfToMemberSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS,\n    organizationId: string\n}\n\nexport interface DemoteSelfToMemberError extends Action {\n    type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_ERROR,\n    error: AnError\n}\n\n\nexport function demoteToMemberStart(): DemoteSelfToMemberStart {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_START\n    }\n}\n\nexport function demoteSelfToMemberSuccess(organizationId: string): DemoteSelfToMemberSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_SUCCESS,\n        organizationId: organizationId\n    }\n}\n\nexport function demoteSelfToMemberError(error: AnError): DemoteSelfToMemberError {\n    return {\n        type: ActionFlag.VIEW_ORG_MANAGE_MEMBERSHIP_DEMOTE_SELF_TO_MEMBER_ERROR,\n        error: error\n    }\n}\n\nexport function demoteSelfToMember(organizationId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(demoteToMemberStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config },\n            views: {\n                viewOrgView: { viewModel }\n            }\n        } = getState()\n\n        if (viewModel === null) {\n            throw new Error('view is not populated')\n        }\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        orgClient.adminToMember(viewModel.organization.id, username)\n            .then((org) => {\n                dispatch(demoteSelfToMemberSuccess(organizationId))\n                dispatch(viewOrgActions.reload(viewModel.organization.id))\n                // dispatch(viewMembersLoad(view.organization.id))\n            })\n            .catch((err: Error) => {\n                dispatch(demoteSelfToMemberError(makeError({\n                    code: err.name,\n                    message: err.message\n                })))\n            })\n    }\n}\n","import * as React from 'react'\nimport { Button, Modal, Input, Tooltip } from 'antd';\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as userModel from '../../../../../data/models/user'\nimport {\n    Editable, ValidationErrorType, SyncState, EditState,\n    SaveState, ValidationState\n} from '../../../../../types'\nimport MainMenu from '../../../../menu/component'\nimport './component.css'\n\nexport interface ManageMembershipProps {\n    username: userModel.Username\n    organization: orgModel.Organization\n    editableMemberProfile: orgModel.EditableMemberProfile\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n    onLeaveOrganization: (organizationId: string) => void\n    onDemoteSelfToMember: (organizationId: string) => void\n    onUpdateTitle: (title: string) => void\n    onSave: () => void\n    onFinish: () => void\n}\n\ninterface MangeMembershipState {\n}\n\nclass ManageMembership extends React.Component<ManageMembershipProps, MangeMembershipState> {\n    constructor(props: ManageMembershipProps) {\n        super(props)\n    }\n\n    doLeaveOrg() {\n        const confirmed = (() => {\n            this.doLeaveOrgConfirmed()\n        }).bind(this)\n        Modal.confirm({\n            title: 'Really leave this organization?',\n            content: (\n                <p>\n                    This is not reversible.\n                </p>\n            ),\n            width: '50em',\n            onOk: () => {\n                confirmed()\n            }\n        })\n    }\n\n    onDone() {\n        this.props.onFinish()\n    }\n\n    doLeaveOrgConfirmed() {\n        // alert('this will leave you the org')\n        this.props.onLeaveOrganization(this.props.organization.id)\n        this.props.onFinish()\n    }\n\n    onDemoteSelfToMember() {\n        const confirmed = (() => {\n            this.onDemoteSelfToMemberConfirmed()\n        }).bind(this)\n        Modal.confirm({\n            title: 'Confirm Demotion to Regular Member',\n            content: (\n                <p>\n                    Upon removing administrator privileges for yourself, you will\n                    not be able to restore them without the assistance of the\n                    Organization's owner or an administrator\n                </p>\n            ),\n            width: '50em',\n            onOk: () => {\n                confirmed()\n            }\n        })\n    }\n\n    onDemoteSelfToMemberConfirmed() {\n        this.props.onDemoteSelfToMember(this.props.organization.id)\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState.type === ValidationErrorType.OK &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.props.onSave()\n    }\n\n    onTitleChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateTitle(e.target.value)\n    }\n\n    renderOrgName(name: string) {\n        const maxLength = 25\n        if (name.length < 25) {\n            return name\n        }\n        return (\n            <span>\n                {name.slice(0, 25)}\n                …\n            </span>\n        )\n    }\n\n    calcFieldClass(field: Editable) {\n        switch (field.validationState.type) {\n            // case (ValidationErrorType.OK):\n            //     return 'validation-ok'\n            case (ValidationErrorType.ERROR):\n                return 'ManageMembership-validation-error'\n            case (ValidationErrorType.REQUIRED_MISSING):\n                return 'ManageMembership-validation-error'\n        }\n\n        switch (field.syncState) {\n            case (SyncState.DIRTY):\n                return 'ManageMembership-sync-dirty'\n            default:\n                return 'ManageMembership-validation-ok'\n        }\n    }\n\n    renderLeaveOrgButton() {\n        let leaveOrgButton\n        switch (this.props.organization.relation) {\n            case orgModel.UserRelationToOrganization.MEMBER:\n                leaveOrgButton = (\n                    <div className=\"ButtonSet-button\">\n                        <Button icon=\"delete\"\n                            type=\"danger\"\n                            onClick={this.doLeaveOrg.bind(this)}\n                        >\n                            Leave Organization\n                                </Button>\n                    </div>\n                )\n                break\n            case orgModel.UserRelationToOrganization.ADMIN:\n                const adminTooltip = (\n                    <React.Fragment>\n                        <p>\n                            As an organization administrator, you may not leave\n                            the organization.\n                        </p>\n                        <p>\n                            In order to leave the organization, you will need to\n                            become a regular member first.\n                        </p>\n                    </React.Fragment>\n                )\n                leaveOrgButton = (\n                    <div className=\"ButtonSet-button\">\n                        <Tooltip\n                            title={adminTooltip}>\n                            <Button icon=\"stop\"\n                                type=\"default\"\n                                disabled={true}\n                            >\n                                Only a regular member may leave Organization\n                            </Button>\n                        </Tooltip>\n                    </div>\n                )\n                break\n            case orgModel.UserRelationToOrganization.OWNER:\n                const ownerTooltip = (\n                    <React.Fragment>\n                        <p>\n                            As an organization owner, you are the only permanent member\n                            of this organization.\n                        </p>\n                    </React.Fragment>\n                )\n                leaveOrgButton = (\n                    <div className=\"ButtonSet-button\">\n                        <Tooltip\n                            title={ownerTooltip}>\n                            <Button icon=\"stop\"\n                                type=\"default\"\n                                disabled={true}\n                            >\n                                Cannot leave Organization\n                        </Button>\n                        </Tooltip>\n                    </div>\n                )\n                break\n        }\n        return leaveOrgButton\n    }\n\n    renderDemoteToMemberButton() {\n        switch (this.props.organization.relation) {\n            case orgModel.UserRelationToOrganization.ADMIN:\n                return (\n                    <div className=\"ButtonSet-button\">\n                        <Button icon=\"user\"\n                            type=\"default\"\n                            onClick={this.onDemoteSelfToMember.bind(this)}>\n                            Demote Self to Member\n                        </Button>\n\n                    </div>\n                )\n        }\n    }\n\n    renderTitleRow() {\n        const tooltip = (\n            <p>\n                This is your title within this Organization.\n            </p>\n        )\n        return (\n            <div className=\"ManageMembership-editorTable-row\">\n                <div className=\"ManageMembership-editCol ManageMembership-editCell\">\n                    <div className=\"ManageMembership-editorTable-labelCol\">\n                        <span className=\"field-label ManageMembership-titleLabel\">\n                            <Tooltip title={tooltip}>\n                                title\n                                </Tooltip>\n                        </span>\n                    </div>\n                    <div className=\"ManageMembership-editorTable-controlCol\">\n                        <Input value={this.props.editableMemberProfile.title.value || ''}\n                            className={this.calcFieldClass(this.props.editableMemberProfile.title)}\n                            onChange={this.onTitleChange.bind(this)} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderCancelButton() {\n        return (\n            <div className=\"ButtonSet-button\">\n                <Button icon=\"delete\"\n                    type=\"danger\"\n                    onClick={this.onDone.bind(this)}>\n                    Cancel\n                </Button>\n            </div>\n        )\n    }\n\n    renderSaveButton() {\n        return (\n            <div className=\"ButtonSet-button\">\n                <Button icon=\"save\"\n                    form=\"editMembership\"\n                    key=\"submit\"\n                    disabled={!this.canSave.call(this)}\n                    htmlType=\"submit\">\n                    Save\n                </Button>\n            </div>\n        )\n    }\n\n    renderEditor() {\n        return (\n            <form id=\"editMembership\"\n                className=\"ManageMembership-editorTable scrollable-flex-column\"\n                onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"ManageMembership-headerRow\">\n                    <div className=\"ManageMembership-editCol ManageMembership-headerCol\">\n                        Edit Your Organization Profile\n                    </div>\n                </div>\n                <div className=\"ManageMembership-formRow\">\n                    {this.renderTitleRow()}\n                    <div className=\"ManageMembership-editorFooter\">\n                        <div className=\"ButtonSet\">\n                            {this.renderSaveButton()}\n                            {this.renderCancelButton()}\n                            {this.renderLeaveOrgButton()}\n                            {this.renderDemoteToMemberButton()}\n                        </div>\n                    </div>\n                </div>\n            </form >\n        )\n    }\n\n    renderMenuButtons() {\n        return (\n            <div className=\"ButtonSet\">\n                <div className=\"ButtonSet-button\">\n                    <Button icon=\"rollback\"\n                        type=\"danger\"\n                        onClick={this.onDone.bind(this)}>\n                        Done\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ManageMembership scrollable-flex-column\">\n                {/* <MainMenu buttons={this.renderMenuButtons()} title=\"Manage My Membership\" /> */}\n                <div className=\"ManageMembership-body scrollable-flex-column\">\n                    <div className=\"ManageMembership-main scrollable-flex-column\">\n                        {this.renderEditor()}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ManageMembership","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../../../redux/actions/viewOrganization/manageMembership'\n\nimport { StoreState, EditState, SaveState, ValidationState, ViewOrgViewModelKind, ManageMembershipViewModel } from '../../../../../types';\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as userModel from '../../../../../data/models/user'\n\nimport Component from './component'\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    username: userModel.Username\n    organization: orgModel.Organization\n    editableMemberProfile: orgModel.EditableMemberProfile\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n}\n\ninterface DispatchProps {\n    onLeaveOrganization: (organizationId: string) => void\n    onDemoteSelfToMember: (organizationId: string) => void\n    onUpdateTitle: (title: string) => void\n    onSave: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const {\n        auth: { authorization: { username } },\n    } = state\n\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    if (viewModel.subViews.manageMembershipView.viewModel === null) {\n        throw new Error(\"argh, null subview view model\")\n    }\n\n    const subViewModel: ManageMembershipViewModel = viewModel.subViews.manageMembershipView.viewModel\n\n    const {\n        organization\n    } = viewModel\n\n    const {\n        editableMemberProfile, editState, saveState, validationState\n    } = subViewModel\n\n    return {\n        username, organization, editableMemberProfile, editState, saveState, validationState\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLeaveOrganization: (organizationId: string) => {\n            dispatch(actions.leaveOrg(organizationId) as any)\n        },\n        onUpdateTitle: (title: string) => {\n            dispatch(actions.updateTitle(title) as any)\n        },\n        onSave: () => {\n            dispatch(actions.save() as any)\n        },\n        onDemoteSelfToMember: (organizationId: string) => {\n            dispatch(actions.demoteSelfToMember(organizationId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import * as React from 'react'\nimport {\n    StoreState, ManageMembershipViewModel, ViewState,\n    View, NoneViewModel, ViewOrgViewModelKind\n} from '../../../../../types'\nimport Container from './container'\n\nexport interface Props {\n    organizationId: string\n    view: View<ManageMembershipViewModel | NoneViewModel>\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface State {\n}\n\nclass Loader extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <React.Fragment>\n                <Icon type=\"loading\" />{' '}Loading Your Membership...\n            </React.Fragment>\n        )\n        return (\n            <Alert type=\"info\" message={message}\n                style={{ padding: '20px', width: '30em', margin: '30px auto 0 auto', textAlign: 'center' }} />\n        )\n    }\n\n    renderError(error: AnError) {\n        return (\n            <div>\n                Error!\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                return this.renderLoading()\n            case ViewState.LOADING:\n                return this.renderLoading()\n            case ViewState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError(makeError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    }))\n                }\n            default:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                this.props.onLoad(this.props.organizationId)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\n//\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../../../redux/actions/viewOrganization/manageMembership'\nimport { AnError, makeError } from '../../../../../combo/error/api'\nimport { Spin, Alert, Icon } from 'antd';\n\nexport interface OwnProps {\n    organizationId: string\n}\n\ninterface StateProps {\n    view: View<ManageMembershipViewModel>\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    // This bit deals with the fact that we are a subview \n    // and it keeps TS happy.\n    const v = state.views.viewOrgView\n    const vm1 = v.viewModel\n    if (vm1 === null) {\n        throw new Error('vm is null')\n    }\n    if (vm1.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('not the right vm')\n    }\n    return {\n        view: vm1.subViews.manageMembershipView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: (organizationId: string) => {\n            dispatch(actions.load(organizationId) as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, AppError, EditableOrganization, ValidationState,\n    ValidationErrorType, SyncState\n} from '../../types'\nimport Validation from '../../data/models/organization/validation'\nimport * as orgModel from '../../data/models/organization/model'\nimport DebouncingProcess from '../../lib/DebouncingProcess'\nimport { UIServiceClient } from '../../data/apis/uiService'\n\n// ACTIONS\n\n// Loading the editor\nexport interface Load extends Action {\n    type: ActionFlag.EDIT_ORG_LOAD,\n    organizationId: string\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.EDIT_ORG_LOAD_START\n}\n\nexport interface LoadSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_LOAD_SUCCESS,\n    editedOrganization: EditableOrganization,\n    organization: orgModel.Organization\n}\n\nexport interface LoadError extends Action<ActionFlag.EDIT_ORG_LOAD_ERROR> {\n    type: ActionFlag.EDIT_ORG_LOAD_ERROR,\n    error: AppError\n}\n\nexport interface Unload extends Action<ActionFlag.EDIT_ORG_UNLOAD> {\n    type: ActionFlag.EDIT_ORG_UNLOAD\n}\n\n// Evaluating state of form \n\nexport interface EditOrgEvaluate extends Action<ActionFlag.EDIT_ORG_EVALUATE> {\n    type: ActionFlag.EDIT_ORG_EVALUATE\n}\n\nexport interface EditOrgEvaluateOK extends Action<ActionFlag.EDIT_ORG_EVALUATE_OK> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_OK\n}\n\nexport interface EditOrgEvaluateErrors extends Action<ActionFlag.EDIT_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n}\n\n// Saving\n\nexport interface EditOrgSave extends Action<ActionFlag.EDIT_ORG_SAVE> {\n    type: ActionFlag.EDIT_ORG_SAVE\n}\n\nexport interface EditOrgSaveStart extends Action<ActionFlag.EDIT_ORG_SAVE_START> {\n    type: ActionFlag.EDIT_ORG_SAVE_START\n}\n\nexport interface EditOrgSaveSuccess extends Action<ActionFlag.EDIT_ORG_SAVE_SUCCESS> {\n    type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n}\n\nexport interface EditOrgSaveError extends Action<ActionFlag.EDIT_ORG_SAVE_ERROR> {\n    type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Updating name field\n\nexport interface EditOrgUpdateName extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface EditOrgUpdateNameSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface EditOrgUpdateNameError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: ValidationState\n}\n\n// Updating logo url field\n\nexport interface UpdateLogoUrl extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_LOGO_URL,\n    name: string | null\n}\n\nexport interface UpdateLogoUrlSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_SUCCESS,\n    logoUrl: string | null\n}\n\nexport interface UpdateLogoUrlError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_ERROR,\n    logoUrl: string | null,\n    error: ValidationState\n}\n\n// Updating home url field\nexport interface UpdateHomeUrl extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL\n    homeUrl: string | null\n}\n\nexport interface UpdateHomeUrlSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_SUCCESS\n    homeUrl: string | null\n}\n\nexport interface UpdateHomeUrlError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_ERROR\n    homeUrl: string | null\n    error: ValidationState\n}\n\n// Updating research interests field\nexport interface UpdateResearchInterests extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS\n    researchInterests: string\n}\n\nexport interface UpdateResearchInterestsSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS\n    researchInterests: string\n}\n\nexport interface UpdateResearchInterestsError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_ERROR\n    researchInterests: string\n    error: ValidationState\n}\n\n// Updating description field\n\nexport interface EditOrgUpdateDescription extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: ValidationState\n}\n\nexport interface UpdateIsPrivate extends Action<ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE> {\n    type: ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE\n    isPrivate: boolean\n}\n\nexport interface UpdateIsPrivateSuccess extends Action<ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS> {\n    type: ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n    isPrivate: boolean\n}\n\nexport interface UpdateIsPrivateError extends Action<ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_ERROR> {\n    type: ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_ERROR,\n    error: ValidationState\n}\n\n\n// ACTION CREATORS\n\n// export function editOrgStart(id: string): LoadStart {\n//     return {\n//         type: ActionFlag.EDIT_ORG_LOAD_START,\n//         id: id\n//     }\n// }\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.EDIT_ORG_LOAD_START\n    }\n}\n\nexport function loadSuccess(editedOrganization: EditableOrganization, organization: orgModel.Organization): LoadSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_LOAD_SUCCESS,\n        editedOrganization: editedOrganization,\n        organization: organization\n    }\n}\n\nexport function loadError(error: AppError): LoadError {\n    return {\n        type: ActionFlag.EDIT_ORG_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.EDIT_ORG_UNLOAD\n    }\n}\n\n// Evaluate\n\nexport function editOrgEvaluateOk(): EditOrgEvaluateOK {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_OK\n    }\n}\n\nexport function editOrgEvaluateErrors(): EditOrgEvaluateErrors {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Save\n\n// export function editOrgSave(): EditOrgSave {\n//     return {\n//         type: ActionFlag.EDIT_ORG_SAVE\n//     }\n// }\n\nexport function editOrgSaveStart(): EditOrgSaveStart {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_START\n    }\n}\n\nexport function editOrgSaveSuccess(): EditOrgSaveSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n    }\n}\n\nexport function editOrgSaveError(error: AppError): EditOrgSaveError {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n// Update Name\n\nexport function editOrgUpdateNameSuccess(name: string): EditOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function editOrgUpdateNameError(name: string, error: ValidationState): EditOrgUpdateNameError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\n// export function editOrgUpdateIdSuccess(id: string): EditOrgUpdateIdSuccess {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//         id: id\n//     }\n// }\n\n// Update Logo Url\n\nexport function updateLogoUrlSuccess(logoUrl: string | null): UpdateLogoUrlSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_SUCCESS,\n        logoUrl: logoUrl\n    }\n}\n\nexport function updateLogoUrlError(logoUrl: string | null, error: ValidationState): UpdateLogoUrlError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_LOGO_URL_ERROR,\n        logoUrl: logoUrl,\n        error: error\n    }\n}\n\n\n// Update Id\n\n// export function editOrgUpdateIdError(id: string, error: UIError): EditOrgUpdateIdError {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//         id: id,\n//         error: error\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(description: string): EditOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function editOrgUpdateDescriptionError(description: string, error: ValidationState): EditOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function load(organizationId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        // const model = new Model({\n        //     token, username,\n        //     groupsServiceURL: config.services.Groups.url,\n        //     userProfileServiceURL: config.services.UserProfile.url,\n        //     workspaceServiceURL: config.services.Workspace.url,\n        //     serviceWizardURL: config.services.ServiceWizard.url\n        // })\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        return orgClient.getOrg(organizationId)\n            .then((org) => {\n                if (org.kind !== orgModel.OrganizationKind.NORMAL) {\n                    throw new Error('May not edit an inaccessible private org!')\n                }\n                const editableOrg: EditableOrganization = {\n                    id: {\n                        value: org.id,\n                        remoteValue: org.id,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgId(org.id)[1]\n                    },\n                    name: {\n                        value: org.name,\n                        remoteValue: org.name,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgName(org.name)[1]\n                    },\n                    logoUrl: {\n                        value: org.logoUrl,\n                        remoteValue: org.logoUrl,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgLogoUrl(org.logoUrl)[1]\n                    },\n                    homeUrl: {\n                        value: org.homeUrl,\n                        remoteValue: org.homeUrl,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgHomeUrl(org.homeUrl)[1]\n                    },\n                    researchInterests: {\n                        value: org.researchInterests,\n                        remoteValue: org.researchInterests,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgResearchInterests(org.researchInterests)[1]\n                    },\n                    description: {\n                        value: org.description,\n                        remoteValue: org.description,\n                        syncState: SyncState.NEW,\n                        validationState: Validation.validateOrgDescription(org.description)[1]\n                    },\n                    isPrivate: {\n                        value: org.isPrivate,\n                        remoteValue: org.isPrivate,\n                        syncState: SyncState.NEW,\n                        validationState: {\n                            type: ValidationErrorType.OK,\n                            validatedAt: new Date()\n                        }\n                    }\n                }\n                dispatch(loadSuccess(editableOrg, org))\n            })\n            .catch((err) => {\n                console.error('load org error', err)\n                dispatch(loadError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function editOrgSave() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgSaveStart())\n\n        const state = getState()\n        if (!state.views.editOrgView.viewModel) {\n            throw new Error('Argh, no view model')\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            views: {\n                editOrgView: {\n                    viewModel: { organization, editedOrganization }\n                }\n            },\n            app: { config } } = state\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        if (!editedOrganization) {\n            dispatch(editOrgSaveError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        const update = {\n            name: editedOrganization.name.value,\n            logoUrl: editedOrganization.logoUrl.value,\n            description: editedOrganization.description.value,\n            isPrivate: editedOrganization.isPrivate.value,\n            homeUrl: editedOrganization.homeUrl.value,\n            researchInterests: editedOrganization.researchInterests.value\n        }\n\n        orgClient.updateOrg(organization.id, update)\n            .then(() => {\n                dispatch(editOrgSaveSuccess())\n            })\n            .catch((error) => {\n                console.error('error adding', editedOrganization, error)\n                dispatch(editOrgSaveError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function editOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const state = getState()\n        if (!state.views.editOrgView.viewModel) {\n            throw new Error('Argh, no view model')\n        }\n\n        const {\n            views: {\n                editOrgView: {\n                    viewModel: {\n                        editedOrganization\n                    }\n                }\n            }\n        } = state\n\n        if (!editedOrganization) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        if (editedOrganization.name.validationState.type !== ValidationErrorType.OK) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        if (editedOrganization.logoUrl.validationState.type !== ValidationErrorType.OK) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        if (editedOrganization.homeUrl.validationState.type !== ValidationErrorType.OK) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        if (editedOrganization.researchInterests.validationState.type !== ValidationErrorType.OK) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        if (editedOrganization.description.validationState.type !== ValidationErrorType.OK) {\n            dispatch(editOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(editOrgEvaluateOk())\n    }\n}\n\nexport function updateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(editOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(editOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nlet checkLogoUrlProcess: DebouncingProcess\n\nclass CheckIfLogoUrlExistsProcess extends DebouncingProcess {\n    dispatch: ThunkDispatch<StoreState, void, Action>\n    url: string\n    timeout: number\n    serviceWizardURL: string\n    token: string\n    constructor({ delay, dispatch, url, timeout, serviceWizardURL, token }: { delay: number, dispatch: ThunkDispatch<StoreState, void, Action>, url: string, timeout: number, serviceWizardURL: string, token: string }) {\n        super({ delay })\n\n        this.dispatch = dispatch\n        this.url = url\n        this.serviceWizardURL = serviceWizardURL\n        this.token = token\n        this.timeout = timeout\n    }\n\n    async task(): Promise<void> {\n        try {\n            const client = new UIServiceClient({\n                url: this.serviceWizardURL,\n                token: this.token\n            })\n            const result = await client.checkImageURL({ url: this.url, timeout: this.timeout })\n\n            if (this.canceled) {\n                return\n            }\n\n            if (result.is_valid) {\n                this.dispatch(updateLogoUrlSuccess(this.url))\n            } else {\n                switch (result.error.code) {\n                    case 'not-found':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'This logo url does not exist'\n                        }))\n                        break\n                    case 'invalid-content-type':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Invalid content type: ' + result.error.info['content-type']\n                        }))\n                        break\n                    case 'missing-content-type':\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Missing content type'\n                        }))\n                        break\n                    default:\n                        this.dispatch(updateLogoUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'unknown error'\n                        }))\n                        break\n                }\n            }\n        } catch (ex) {\n            if (this.canceled) {\n                return\n            }\n            this.dispatch(updateLogoUrlError(this.url, {\n                type: ValidationErrorType.ERROR,\n                validatedAt: new Date(),\n                message: 'Error checking logo url: ' + ex.message\n            }))\n        }\n        this.dispatch(editOrgEvaluate())\n    }\n}\n\nexport function updateLogoUrl(logoUrl: string | null) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        if (checkLogoUrlProcess) {\n            checkLogoUrlProcess.cancel()\n        }\n        const [validatedLogoUrl, error] = Validation.validateOrgLogoUrl(logoUrl)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(updateLogoUrlError(validatedLogoUrl, error))\n            dispatch(editOrgEvaluate())\n            return\n        }\n\n        dispatch(updateLogoUrlSuccess(validatedLogoUrl))\n\n        dispatch(editOrgEvaluate())\n\n        if (validatedLogoUrl !== null && validatedLogoUrl.length > 0) {\n            const {\n                auth: { authorization: { token } },\n                app: { config: { services: { ServiceWizard: { url: serviceWizardURL } } } }\n            } = getState()\n\n            checkLogoUrlProcess = new CheckIfLogoUrlExistsProcess({\n                delay: 100,\n                url: validatedLogoUrl,\n                timeout: 1000,\n                dispatch, serviceWizardURL, token\n            })\n\n            checkLogoUrlProcess.start()\n        }\n    }\n}\n\n// Home Url\n\nlet checkHomeUrlProcess: DebouncingProcess\n\nclass CheckIfHomeUrlExistsProcess extends DebouncingProcess {\n    dispatch: ThunkDispatch<StoreState, void, Action>\n    url: string\n    timeout: number\n    serviceWizardURL: string\n    token: string\n    constructor({ delay, dispatch, url, timeout, serviceWizardURL, token }: { delay: number, dispatch: ThunkDispatch<StoreState, void, Action>, url: string, timeout: number, serviceWizardURL: string, token: string }) {\n        super({ delay })\n\n        this.dispatch = dispatch\n        this.url = url\n        this.serviceWizardURL = serviceWizardURL\n        this.token = token\n        this.timeout = timeout\n    }\n\n    async task(): Promise<void> {\n        try {\n            const client = new UIServiceClient({\n                url: this.serviceWizardURL,\n                token: this.token\n            })\n            const result = await client.checkHTMLURL({ url: this.url, timeout: this.timeout })\n\n            if (this.canceled) {\n                return\n            }\n\n            if (result.is_valid) {\n                this.dispatch(updateHomeUrlSuccess(this.url))\n            } else {\n                switch (result.error.code) {\n                    case 'not-found':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'This home url does not exist'\n                        }))\n                        break\n                    case 'invalid-content-type':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Invalid content type: ' + result.error.info['content-type']\n                        }))\n                        break\n                    case 'missing-content-type':\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'Missing content type'\n                        }))\n                        break\n                    default:\n                        this.dispatch(updateHomeUrlError(this.url, {\n                            type: ValidationErrorType.ERROR,\n                            validatedAt: new Date(),\n                            message: 'unknown error'\n                        }))\n                        break\n                }\n            }\n        } catch (ex) {\n            if (this.canceled) {\n                return\n            }\n            this.dispatch(updateHomeUrlError(this.url, {\n                type: ValidationErrorType.ERROR,\n                validatedAt: new Date(),\n                message: 'Error checking home url: ' + ex.message\n            }))\n        }\n        this.dispatch(editOrgEvaluate())\n    }\n}\n\nfunction updateHomeUrlSuccess(homeUrl: string): UpdateHomeUrlSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_SUCCESS,\n        homeUrl\n    }\n}\n\nfunction updateHomeUrlError(homeUrl: string, error: ValidationState): UpdateHomeUrlError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_ERROR,\n        homeUrl, error\n    }\n}\n\nexport function updateHomeUrl(homeUrl: string | null) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        if (checkHomeUrlProcess) {\n            checkHomeUrlProcess.cancel()\n        }\n\n        const [validatedHomeUrl, error] = Validation.validateOrgHomeUrl(homeUrl)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_ERROR,\n                homeUrl: validatedHomeUrl,\n                error: error\n            } as UpdateHomeUrlError)\n            dispatch(editOrgEvaluate())\n            return\n        }\n        dispatch({\n            type: ActionFlag.EDIT_ORG_UPDATE_HOME_URL_SUCCESS,\n            homeUrl: validatedHomeUrl\n        } as UpdateHomeUrlSuccess)\n\n        dispatch(editOrgEvaluate())\n\n        if (validatedHomeUrl !== null && validatedHomeUrl.length > 0) {\n            const {\n                auth: { authorization: { token } },\n                app: { config: { services: { ServiceWizard: { url: serviceWizardURL } } } }\n            } = getState()\n\n            checkHomeUrlProcess = new CheckIfHomeUrlExistsProcess({\n                delay: 100,\n                url: validatedHomeUrl,\n                timeout: 1000,\n                dispatch, serviceWizardURL, token\n            })\n\n            checkHomeUrlProcess.start()\n        }\n    }\n}\n\nexport function updateResearchInterests(researchInterests: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedResearchInterests, error] = Validation.validateOrgResearchInterests(researchInterests)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch({\n                type: ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_ERROR,\n                researchInterests: validatedResearchInterests,\n                error: error\n            } as UpdateResearchInterestsError)\n        } else {\n            dispatch({\n                type: ActionFlag.EDIT_ORG_UPDATE_RESEARCH_INTERESTS_SUCCESS,\n                researchInterests: validatedResearchInterests\n            } as UpdateResearchInterestsSuccess)\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function updateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const [validatedDescription, error] = Validation.validateOrgDescription(description)\n\n        if (error.type !== ValidationErrorType.OK) {\n            dispatch(editOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(editOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function updateIsPrivate(isPrivate: boolean) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        // No validation for now.\n        dispatch({\n            type: ActionFlag.EDIT_ORG_UPDATE_IS_PRIVATE_SUCCESS,\n            isPrivate: isPrivate\n        })\n        dispatch(editOrgEvaluate())\n    }\n} ","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { Marked } from 'marked-ts';\nimport { Button, Icon, Modal, Checkbox, Input, Tooltip, Table, Collapse, Tabs } from 'antd';\nimport md5 from 'md5'\nimport {\n    EditableOrganization, SaveState, ValidationState,\n    EditState, ValidationErrorType, Editable, SyncState, EditableString, EditableNullableString, EditableBoolean\n} from '../../../../../types';\nimport './component.css'\n\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport TextArea from 'antd/lib/input/TextArea';\nimport MainMenu from '../../../../menu/component';\n\nexport interface EditOrganizationProps {\n    editState: EditState\n    saveState: SaveState\n    validationState: ValidationState\n    editedOrganization: EditableOrganization\n    organization: orgModel.Organization\n    onEditOrgSave: () => void\n    onUpdateName: (name: string) => void\n    onUpdateDescription: (description: string) => void\n    onUpdateIsPrivate: (isPrivate: boolean) => void\n    onUpdateLogoUrl: (logoUrl: string) => void\n    onUpdateHomeUrl: (homeUrl: string) => void\n    onUpdateResearchInterests: (researchInterests: string) => void\n    onFinish: () => void\n}\n\nenum NavigateTo {\n    NONE = 0,\n    BROWSER,\n    VIEWER\n}\n\nexport interface EditOrganizationState {\n    cancelToBrowser: boolean;\n    cancelToViewer: boolean;\n    navigateTo: NavigateTo;\n}\n\nclass EditOrganization extends React.Component<EditOrganizationProps, EditOrganizationState> {\n\n    origin: string;\n\n    constructor(props: EditOrganizationProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false,\n            cancelToViewer: false,\n            navigateTo: NavigateTo.NONE\n        }\n\n        this.origin = document.location!.origin\n    }\n\n    onFinish() {\n        this.props.onFinish()\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'Organization Editor Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations editor...</p>\n                </div>\n            )\n        })\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onClickCancelToViewer() {\n        if (!this.isModified()) {\n            this.setState({ cancelToViewer: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToViewer: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.props.onEditOrgSave()\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateName(e.target.value)\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value)\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        console.warn('no updating id, naughty!')\n    }\n\n    onIsPrivateChange(e: CheckboxChangeEvent) {\n        this.props.onUpdateIsPrivate(e.target.checked)\n    }\n\n    onLogoUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateLogoUrl(e.target.value)\n    }\n\n    onHomeUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist()\n        this.props.onUpdateHomeUrl(e.target.value)\n    }\n\n    onResearchInterestsChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateResearchInterests(e.target.value)\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState.type === ValidationErrorType.OK &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY)\n        )\n    }\n\n    calcFieldClass(field: Editable) {\n        switch (field.validationState.type) {\n            // case (ValidationErrorType.OK):\n            //     return 'validation-ok'\n            case (ValidationErrorType.ERROR):\n                return 'validation-error Lite'\n            case (ValidationErrorType.REQUIRED_MISSING):\n                return 'validation-error Lite'\n        }\n\n        switch (field.syncState) {\n            case (SyncState.DIRTY):\n                return 'sync-dirty Lite'\n            default:\n                return 'validation-ok Lite'\n        }\n    }\n\n    renderFieldError(field: Editable) {\n        if (field.validationState.type !== ValidationErrorType.OK) {\n            if (field.syncState === SyncState.DIRTY) {\n                return (\n                    <span style={{ color: 'red' }}>\n                        {field.validationState.message}\n                    </span>\n                )\n            }\n        } else {\n            return ''\n        }\n    }\n\n    renderNameRowx() {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    This is the name for your organization as you want KBase users to see it; you may change it at any time.\n                </p>\n                <p>\n                    It may be composed of ordinary text, but does not accept formatting.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1024 characters\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'Your Organization\\'s display name'\n        return (\n            <div className=\"EditOrganization-row\">\n                <div className=\"EditOrganization-col1\">\n                    <div className=\"EditOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Name\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"EditOrganization-col2\">\n                    <div className=\"EditOrganization-formControl\">\n                        <Input value={this.props.editedOrganization.name.value || ''}\n                            className={this.calcFieldClass(this.props.editedOrganization.name)}\n                            placeholder={placeholder}\n                            autoFocus\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.renderFieldError(this.props.editedOrganization.name)}\n                    </div>\n                </div>\n                <div className=\"EditOrganization-col3\">\n                    <div className=\"EditOrganization-preview-name\">\n                        {this.props.editedOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderNameRow(nameField: EditableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    This is the name for your organization as you want KBase users to see it; you may change it at any time.\n                </p>\n                <p>\n                    It may be composed of ordinary text, but does not accept formatting.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1024 characters\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'Your Organization\\'s display name'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Name\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Input value={nameField.value || ''}\n                            className={this.calcFieldClass(nameField)}\n                            placeholder={placeholder}\n                            autoFocus\n                            onChange={onChange} />\n                        {this.renderFieldError(nameField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderIDRowx() {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization has a unique identifier. The ID is set when the organization is created, and are permanent: It may never be changed.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                100 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a to z, 0 to 9, -\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"A unique ID for your Organization\"\n        return (\n            <div className=\"EditOrganization-row\">\n                <div className=\"EditOrganization-col1\">\n                    <div className=\"EditOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            ID\n                            </Tooltip>\n                    </div>\n                </div>\n                <div className=\"EditOrganization-col2\">\n                    <div className=\"EditOrganization-formControl\">\n                        <Input value={this.props.editedOrganization.id.value || ''}\n                            className={this.calcFieldClass(this.props.editedOrganization.id)}\n                            placeholder={placeholder}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.renderFieldError(this.props.editedOrganization.id)}\n                    </div>\n                </div>\n                <div className=\"EditOrganization-col3\">\n                    <div className=\"EditOrganization-preview-id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#org/</span>\n                        {this.props.editedOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderIDRow(idField: EditableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization has a unique identifier. The ID is set when the organization is created, and are permanent: It may never be changed.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                100 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a to z, 0 to 9, -\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"A unique ID for your Organization\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            ID\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Input value={idField.value || ''}\n                            className={this.calcFieldClass(idField)}\n                            placeholder={placeholder}\n                            onChange={onChange} />\n                        {this.renderFieldError(idField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    renderLogoURLRow(logoUrlField: EditableNullableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization will display a logo. You may specific your own logo by entering the URL for an image, or leave\n                    this field blank and a default logo will be displayed, using the first letter of your org name and a randomly\n                    generated color (based on your org id).\n                </p>\n                <p>\n                    Please don't use large images, and try to keep them roughly square. The logo image display will be constrained\n                    to no larger than 100 pixels wide. Non-square logos may not look good in the Orgs list or on your Org page.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1000 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a full https:// url. E.g. https://my.org/myimage.png<br />\n                                note that only <i>https</i> urls are accepted.\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"The URL for your Organization's logo (optional)\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Logo URL\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formField\">\n                        <div className=\"NewOrganization-formControl\">\n                            <Input value={logoUrlField.value || ''}\n                                className={this.calcFieldClass(logoUrlField)}\n                                placeholder={placeholder}\n                                onChange={this.onLogoUrlChange.bind(this)} />\n                            {this.renderFieldError(logoUrlField)}\n                        </div>\n                        <div className=\"NewOrganization-formFieldPreview\">\n                            {this.renderLogoPreview(logoUrlField)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    renderBrokenHomeURL() {\n        const tooltipTitle = 'The Home URL is broken; either correct it or leave it empty'\n        return (\n            <Tooltip title={tooltipTitle}>\n                <Icon type=\"exclamation-circle\" style={{ color: 'gray' }} />\n            </Tooltip>\n        )\n    }\n\n    renderHomeURLPreview(homeUrlField: EditableNullableString) {\n        if (homeUrlField.value === null) {\n            const tooltipTitle = 'When you have completed your url, you may preview it here.'\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    <Tooltip title={tooltipTitle}>\n                        <Icon type=\"link\" style={{ color: 'gray' }} />\n                    </Tooltip>\n                </div>\n            )\n        }\n\n        if (homeUrlField.validationState.type !== ValidationErrorType.OK) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderBrokenHomeURL()}\n                </div>\n            )\n        }\n\n        const tooltipTitle = 'Try out your url by clicking this link'\n        return (\n            <div className=\"NewOrganization-previewBox\">\n                <Tooltip title={tooltipTitle} >\n                    <a href={homeUrlField.value} target=\"_blank\">\n                        <Icon type=\"link\" />\n                    </a>\n                </Tooltip>\n            </div>\n        )\n    }\n\n    renderHomeURLRow(homeUrlField: EditableNullableString, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each Organization may display a home page url. This should be considered the canonical home for your Organization, if\n                    it also exists outside of KBase.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1000 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                a full url. E.g. http://my.org/myimage.png<br />\n                                note that both <i>http></i> and <i>https</i> urls are accepted.\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = \"The url for your Organization's home page (optional)\"\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Home Page URL\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formField\">\n                        <div className=\"NewOrganization-formControl\">\n                            <Input value={homeUrlField.value || ''}\n                                className={this.calcFieldClass(homeUrlField)}\n                                placeholder={placeholder}\n                                onChange={onChange} />\n                            {this.renderFieldError(homeUrlField)}\n                        </div>\n                        <div className=\"NewOrganization-formFieldPreview\">\n                            {this.renderHomeURLPreview(homeUrlField)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderCollapse(content: JSX.Element) {\n        const style = {\n            background: 'transparent',\n            borderRadius: 0,\n            margin: 0,\n            border: 0,\n            overflow: 'hidden'\n        }\n        return (\n            <Collapse bordered={false}>\n                <Collapse.Panel header=\"What about inviting users?\" key=\"invite\" style={style}>\n                    {content}\n                </Collapse.Panel>\n            </Collapse>\n        )\n    }\n\n    renderPrivatePublicRow(isPrivateField: EditableBoolean, onChange: (e: CheckboxChangeEvent) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Set the Organization to \"hidden\" to prevent it from appearing in the listing and from being exposed\n                    as an Org page for any non-member.\n                </p>\n                <p>\n                    You may invite users directly to your org. When doing so they will receive a notification with a link to the\n                    org page. When a user lands on the org page they will not be shown information about the org, but will be available\n                    to accept the invitation and instantly have access to it.\n                </p>\n                <p>\n                    A user with an invitation who lands on the org page will not see information about the org, but will be able to\n                    submit a Join request.\n                </p>\n                {/* {this.renderCollapse((\n                    <React.Fragment>\n                        <p>\n                            You may invite users directly to your org. When doing so they will receive a notification with a link to the\n                            org page. When a user lands on the org page they will not be shown information about the org, but will be available\n                            to accept the invitation and instantly have access to it.\n                        </p>\n                        <p>\n                            A user with an invitation who lands on the org page will not see information about the org, but will be able to\n                            submit a Join request.\n                        </p>\n                    </React.Fragment>\n                ))} */}\n\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                no\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Hidden?\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <div>\n                            <Checkbox\n                                checked={isPrivateField.value}\n                                className={this.calcFieldClass(isPrivateField)}\n                                onChange={onChange} />\n                            {this.renderIsPrivate(isPrivateField.value)}\n                        </div>\n                        {this.renderFieldError(isPrivateField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    renderResearchInterestsRow(researchInterestsField: EditableString, onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each organization must have a short description of research interests or purpose.\n                </p>\n                <p>\n                    This text is displayed in the organizations list and the organization's page. It is most helpful\n                    in the list context to help users quickly scan the list.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                200 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                unformatted text\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'List your areas of interest. Systems biology, microbial ecology, plant genomics'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Research Interests\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n\n                        <TextArea value={researchInterestsField.value || ''}\n                            className={this.calcFieldClass(researchInterestsField) + ' NewOrganization-control-researchInterests'}\n                            autosize={{ minRows: 2, maxRows: 2 }}\n                            placeholder={placeholder}\n                            onChange={onChange} />\n                        {this.renderFieldError(researchInterestsField)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderDescriptionRow(descriptionField: EditableString, onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void) {\n        const tooltip = (\n            <React.Fragment>\n                <p>\n                    Each organization must have a description which communicates the purpose of this organization.\n                </p>\n                <p>\n                    The description is in <a href=\"https://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">markdown</a> format\n                    and may be quite long. It will be presented in a scrolling area.\n                </p>\n                <p>\n                    Please be mindful of embedding large images or other content which may interfere with the display of your Organization.\n                </p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                required\n                            </th>\n                            <td>\n                                yes\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th>\n                                max length\n                            </th>\n                            <td>\n                                1024 characters\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>\n                                allowed\n                            </th>\n                            <td>\n                                standard <a href=\"https://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">markdown</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n        const placeholder = 'Text or Markdown describing your Organization'\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                    <div className=\"NewOrganization-formLabel field-label\">\n                        <Tooltip title={tooltip}>\n                            Description\n                        </Tooltip>\n                    </div>\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div className=\"NewOrganization-formControl\">\n                        <Tabs defaultActiveKey=\"editor\" animated={false}>\n                            <Tabs.TabPane tab=\"Editor\" key=\"editor\">\n                                <TextArea value={descriptionField.value || ''}\n                                    className={this.calcFieldClass(descriptionField) + ' NewOrganization-control-description'}\n                                    autosize={{ minRows: 5, maxRows: 15 }}\n                                    placeholder={placeholder}\n                                    onChange={onChange} />\n                                {this.renderFieldError(descriptionField)}\n                            </Tabs.TabPane>\n                            <Tabs.TabPane tab=\"Preview\" key=\"preview\">\n                                <div className=\"NewOrganization-preview-description\"\n                                    dangerouslySetInnerHTML={({ __html: Marked.parse(descriptionField.value || '') })}\n                                />\n                            </Tabs.TabPane>\n                        </Tabs>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderSaveButton() {\n        return (\n            <Button icon=\"save\"\n                form=\"editOrganizationForm\"\n                key=\"submit\"\n                disabled={!this.canSave.call(this)}\n                htmlType=\"submit\">\n                Save\n            </Button>\n        )\n    }\n\n    renderCancelButton() {\n        return (\n            <Button icon=\"close\"\n                type=\"danger\"\n                onClick={this.onFinish.bind(this)}>\n                Cancel\n            </Button>\n        )\n    }\n\n    renderEditorHeader() {\n        return (\n            <div className=\"NewOrganization-row\">\n                <div className=\"NewOrganization-col1\">\n                </div>\n                <div className=\"NewOrganization-col2\">\n                    <div style={{ flex: '1 1 0px' }}>\n                        <h3>Edit Your Organization</h3>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderEditor() {\n        return (\n            <form id=\"editOrganizationForm\" className=\"EditOrganization-editor scrollable-flex-column\" onSubmit={this.onSubmit.bind(this)}>\n                {this.renderEditorHeader()}\n                <div className=\"EditOrganization-body\">\n                    {this.renderNameRow(this.props.editedOrganization.name, this.onNameChange.bind(this))}\n                    {this.renderIDRow(this.props.editedOrganization.id, this.onIdChange.bind(this))}\n                    {this.renderLogoURLRow(this.props.editedOrganization.logoUrl, this.onLogoUrlChange.bind(this))}\n                    {this.renderHomeURLRow(this.props.editedOrganization.homeUrl, this.onHomeUrlChange.bind(this))}\n                    {this.renderPrivatePublicRow(this.props.editedOrganization.isPrivate, this.onIsPrivateChange.bind(this))}\n                    {this.renderResearchInterestsRow(this.props.editedOrganization.researchInterests, this.onResearchInterestsChange.bind(this))}\n                    {this.renderDescriptionRow(this.props.editedOrganization.description, this.onDescriptionChange.bind(this))}\n                    <div className=\"EditOrganization-row\">\n                        <div className=\"EditOrganization-col1\">\n                        </div>\n                        <div className=\"EditOrganization-col2\" style={{ textAlign: 'center' }}>\n                            <div className=\"ButtonSet\">\n                                <span className=\"ButtonSet-button\">\n                                    {this.renderSaveButton()}\n                                </span>\n                                <span className=\"ButtonSet-button\">\n                                    {this.renderCancelButton()}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form >\n        )\n    }\n\n    renderIsPrivate(isPrivate: boolean) {\n        if (isPrivate) {\n            return (\n                <span>\n                    <Icon type=\"lock\" />{' '}Hidden - will be visible <b>only</b> for members of this organization\n                </span>\n            )\n        }\n        return (\n            <span>\n                <Icon type=\"global\" />{' '}Visible - will be visible to all KBase users.\n            </span>\n        )\n    }\n\n    renderDefaultLogo() {\n        if (!(this.props.editedOrganization.name.value && this.props.editedOrganization.id.value)) {\n            const tooltipTitle = 'Add a logo url or complete the name and id fields for a Default logo'\n            return (\n                <Tooltip title={tooltipTitle}>\n                    <Icon type=\"question\" style={{ color: 'gray' }} />\n                    {/* <div style={{ height: '30px', width: '30px' }}></div> */}\n                </Tooltip>\n            )\n        }\n        const initial = this.charAt(this.props.editedOrganization.name.value, 0).toUpperCase()\n        const hash = md5(this.props.editedOrganization.id.value)\n        const size = 30;\n        const color = hash.substr(0, 6)\n        return (\n            <svg width={size} height={size} style={{ border: '1px rgba(200, 200, 200, 0.5) solid' }}>\n                <text x=\"50%\" y=\"50%\" dy={4} textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize={size - 12} fill={'#' + color} fontFamily=\"sans-serif\">{initial}</text>\n            </svg>\n        )\n    }\n\n    renderBrokenLogo() {\n        const tooltipTitle = 'The Logo URL is broken; either correct it or empty the field for the default logo'\n        return (\n            <Tooltip title={tooltipTitle}>\n                <Icon type=\"exclamation-circle\" style={{ color: 'gray' }} />\n            </Tooltip>\n        )\n    }\n\n    renderLogoPreview(logoUrlField: EditableNullableString) {\n        if (logoUrlField.value === null) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderDefaultLogo()}\n                </div>\n            )\n        }\n\n        if (logoUrlField.validationState.type !== ValidationErrorType.OK) {\n            return (\n                <div className=\"NewOrganization-previewBox\">\n                    {this.renderBrokenLogo()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization-previewBox\">\n                <img src={logoUrlField.value} width={30} />\n            </div>\n        )\n    }\n\n    charAt(inString: string, position: number) {\n        const c1 = inString.charCodeAt(position)\n        if (c1 >= 0xD800 && c1 <= 0xDBFF && inString.length > position + 1) {\n            const c2 = inString.charCodeAt(position + 1)\n            if (c2 > 0xDC00 && c2 <= 0xDFFF) {\n                return inString.substring(position, 2)\n            }\n        }\n        return inString.substring(position, 1)\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderMenuButtons() {\n        return (\n            <span className=\"ButtonSet\">\n                <span className=\"ButtonSet-button\">\n                    <Button icon=\"rollback\"\n                        type=\"danger\"\n                        onClick={this.onFinish.bind(this)}>\n                        Close\n                        </Button>\n                </span>\n                <span className=\"ButtonSet-button\">\n                    <Button icon=\"save\"\n                        form=\"editOrganizationForm\"\n                        key=\"submit\"\n                        disabled={!this.canSave.call(this)}\n                        htmlType=\"submit\">\n                        Save\n                    </Button>\n                </span>\n            </span>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToViewer) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.organization.id} />\n        }\n        return (\n            <div className=\"EditOrganization scrollable-flex-column\">\n                <div className=\"EditOrganization-main scrollable-flex-column\">\n                    {this.renderEditor()}\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default EditOrganization","import { Dispatch, Action } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n    StoreState, EditableOrganization, EditState,\n    SaveState, ValidationState\n} from '../../../../../types';\nimport {\n    editOrgSave,\n    updateName,\n    updateDescription, updateLogoUrl, updateIsPrivate, updateHomeUrl, updateResearchInterests\n} from '../../../../../redux/actions/editOrg';\nimport EditOrganization from './component';\nimport * as orgModel from '../../../../../data/models/organization/model'\n\ninterface OwnProps {\n    onFinish: () => void\n}\n\nexport interface StateProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization,\n    organization: orgModel.Organization\n}\n\nexport interface DispatchProps {\n    onEditOrgSave: () => void\n    onUpdateName: (name: string) => void\n    onUpdateLogoUrl: (logoUrl: string | null) => void\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n    onUpdateIsPrivate: (isPrivate: boolean) => void\n    onUpdateHomeUrl: (homeUrl: string | null) => void\n    onUpdateResearchInterests: (researchInterests: string) => void\n}\n\nexport function mapStateToProps(state: StoreState): StateProps {\n    if (!state.views.editOrgView.viewModel) {\n        throw new Error('What, no view model??')\n    }\n    const {\n        views: {\n            editOrgView: {\n                viewModel: { editState, saveState, validationState, editedOrganization, organization }\n            }\n        }\n    } = state\n\n    return {\n        editState,\n        saveState,\n        validationState,\n        editedOrganization,\n        organization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onEditOrgSave: () => {\n            dispatch(editOrgSave() as any)\n        },\n        onUpdateName: (name: string) => {\n            dispatch(updateName(name) as any)\n        },\n        onUpdateLogoUrl: (logoUrl: string | null) => {\n            dispatch(updateLogoUrl(logoUrl) as any)\n        },\n        // onUpdateId: (id) => {\n        //     dispatch(editOrgUpdateId(id) as any)\n        // },\n        onUpdateDescription: (description) => {\n            dispatch(updateDescription(description) as any)\n        },\n        onUpdateIsPrivate: (isPrivate: boolean) => {\n            dispatch(updateIsPrivate(isPrivate) as any)\n        },\n        onUpdateHomeUrl: (homeUrl: string | null) => {\n            dispatch(updateHomeUrl(homeUrl) as any)\n        },\n        onUpdateResearchInterests: (researchInterests: string) => {\n            dispatch(updateResearchInterests(researchInterests) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(EditOrganization)","import * as React from 'react'\nimport { ComponentLoadingState, StoreState, EditOrgView } from '../../../../../types'\nimport Container from './container'\nimport * as orgModel from '../../../../../data/models/organization/model'\n\n// First the loader component, which takes care of a loading view, error view, and the \n// container.\n\nexport interface LoaderProps {\n    organizationId: orgModel.OrganizationID\n    view: EditOrgView\n    onLoad: (organizationId: orgModel.OrganizationID) => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface LoaderState {\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading Editor...\n                {' '}\n                <Spin />\n            </div>\n        )\n        return (\n            <Alert type=\"info\" message={message} style={{\n                width: '20em',\n                padding: '20px',\n                margin: '20px auto'\n            }} />\n        )\n    }\n\n    renderError() {\n        if (!this.props.view.error) {\n            return\n        }\n        return (\n            <div>\n                Error! {this.props.view.error.message}\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                return this.renderLoading()\n            case ComponentLoadingState.LOADING:\n                return this.renderLoading()\n            case ComponentLoadingState.ERROR:\n                return this.renderError()\n            case ComponentLoadingState.SUCCESS:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.loadingState) {\n            case ComponentLoadingState.NONE:\n                // should only appear briefly as the LOAD event is processed.\n                this.props.onLoad(this.props.organizationId)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\n// THe redux connection\n\nimport { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../redux/actions/editOrg'\nimport { Alert, Spin } from 'antd';\n\nexport interface OwnProps {\n    organizationId: orgModel.OrganizationID\n}\n\ninterface StateProps {\n    view: EditOrgView\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: orgModel.OrganizationID) => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n        view: state.views.editOrgView\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onLoad: (organizationId: orgModel.OrganizationID) => {\n            dispatch(actions.load(organizationId) as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport './RowWrapper.css'\n\nexport interface Dimensions {\n    offsetHeight: number,\n    scrollTop: number,\n    clientHeight: number\n}\nexport interface RowWrapperProps {\n    index: number\n    containerDimensions: Dimensions | null\n    buffer: number\n    approximateRowHeight: number\n    emptyRowRenderer: () => JSX.Element\n}\n\ninterface RowWrapperState {\n\n}\n\nexport default class RowWrapper extends React.Component<RowWrapperProps, RowWrapperState> {\n    ref: React.RefObject<HTMLDivElement>\n    constructor(props: RowWrapperProps) {\n        super(props)\n        this.ref = React.createRef()\n    }\n\n    isVisible() {\n        // const relativeLeft = (l - cl) - cs;\n        // const relativeRight = relativeLeft + w;\n        // if (relativeRight < 0) {\n        //     return false;\n        // }\n        // if (relativeLeft > cw) {\n        //     return false;\n        // }\n        // return true\n\n        if (!this.ref.current) {\n            return false\n        }\n\n        const d = this.props.containerDimensions\n        if (!d) {\n            return false\n        }\n\n        const buffer = this.props.buffer * this.props.approximateRowHeight\n\n        const containerVisibleTop = Math.max(d.scrollTop - buffer, 0)\n        const containerVisibleBottom = d.scrollTop + d.clientHeight + buffer\n\n        const h = this.ref.current.offsetHeight\n        const t = this.ref.current.offsetTop\n\n        const topBelowTop = (t >= containerVisibleTop)\n        const topAboveBottom = (t <= containerVisibleBottom)\n\n        const bottomBelowTop = (t + h >= containerVisibleTop)\n        const bottomAboveBottom = (t + h <= containerVisibleBottom)\n\n        const visible = (topBelowTop && topAboveBottom) || (bottomBelowTop && bottomAboveBottom)\n        return visible\n    }\n\n    render() {\n        const show = this.isVisible()\n        if (show) {\n            return (\n                <div className=\"RowWrapper-rendered\" ref={this.ref}>\n                    {this.props.children}\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"RowWrapper-unrendered\" style={{ height: this.props.approximateRowHeight }} ref={this.ref}>\n                    {this.props.emptyRowRenderer()}\n                </div>\n            )\n        }\n    }\n}","import * as React from 'react'\nimport RowWrapper from './RowWrapper'\nimport './FlexibleColumnWrapper.css'\n\nexport interface Dimensions {\n    offsetHeight: number,\n    scrollTop: number,\n    clientHeight: number\n}\n\ninterface Listener {\n    target: Window | Node\n    type: string\n    listener: EventListener\n}\n\nexport abstract class Renderable {\n    currentItem: number | null\n    constructor() {\n        this.currentItem = 0\n    }\n\n    abstract render(index: number): JSX.Element\n    abstract size(): number\n    abstract renderEmpty(): JSX.Element\n}\n\nexport interface FlexibleColumnWrapperProps {\n    // rowRenderer: (index: number) => JSX.Element\n    renderable: Renderable\n    // rowCount: number\n}\n\nexport interface FlexibleColumnWrapperState {\n    containerDimensions: Dimensions | null\n}\n\nexport class FlexibleColumnWrapper extends React.Component<FlexibleColumnWrapperProps, FlexibleColumnWrapperState> {\n\n    wrapperContainerRef: React.RefObject<HTMLDivElement>\n    listeners: Array<Listener>\n    limitingTimer: number | null\n    limitingTimeout: number\n\n    constructor(params: FlexibleColumnWrapperProps) {\n        super(params)\n\n        this.state = {\n            containerDimensions: null\n        }\n\n        this.wrapperContainerRef = React.createRef()\n        this.listeners = []\n        this.limitingTimer = null\n        this.limitingTimeout = 100\n    }\n\n    calcContainerBounds() {\n        if (this.wrapperContainerRef.current === null) {\n            return null\n        }\n        const dim = {\n            offsetHeight: this.wrapperContainerRef.current.offsetHeight,\n            scrollTop: this.wrapperContainerRef.current.scrollTop,\n            clientHeight: this.wrapperContainerRef.current.clientHeight\n        }\n        return dim\n    }\n\n    limiter(fun: () => void) {\n        if (this.limitingTimer) {\n            window.clearTimeout(this.limitingTimer)\n        }\n        this.limitingTimer = window.setTimeout(() => {\n            fun()\n        }, this.limitingTimeout)\n    }\n\n    checkDimensions = () => {\n        const currentDimensions = this.calcContainerBounds()\n        if (!currentDimensions) {\n            return\n        }\n\n        const lastDimensions = this.state.containerDimensions\n        if (!lastDimensions) {\n            this.setState({ containerDimensions: currentDimensions })\n        } else {\n            if (currentDimensions.offsetHeight !== lastDimensions.offsetHeight ||\n                currentDimensions.scrollTop !== lastDimensions.scrollTop ||\n                currentDimensions.clientHeight !== lastDimensions.clientHeight) {\n                this.setState({ containerDimensions: currentDimensions })\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.wrapperContainerRef.current === null) {\n            return false\n        }\n\n        const scrollHandler = () => {\n            this.limiter(() => { this.checkDimensions() })\n        }\n\n        this.wrapperContainerRef.current.addEventListener('scroll', scrollHandler)\n        this.listeners.push({\n            target: this.wrapperContainerRef.current,\n            type: 'scroll',\n            listener: scrollHandler\n        })\n\n        const resizeHandler = () => {\n            this.limiter(() => { this.checkDimensions() })\n        }\n        window.addEventListener('resize', resizeHandler)\n        this.listeners.push({\n            target: window,\n            type: 'resize',\n            listener: resizeHandler\n        })\n\n        this.checkDimensions()\n    }\n\n    componentWillUnmount() {\n        this.listeners.forEach((listener) => {\n            listener.target.removeEventListener(listener.type, listener.listener)\n        })\n    }\n\n    render() {\n        let out: Array<JSX.Element> = []\n\n        for (let i = 0; i < this.props.renderable.size(); i += 1) {\n            out.push(\n                <RowWrapper index={i} key={String(i)}\n                    containerDimensions={this.state.containerDimensions}\n                    buffer={5} approximateRowHeight={73} emptyRowRenderer={() => { return this.props.renderable.renderEmpty() }}>\n                    {this.props.renderable.render(i)}\n                </RowWrapper>\n            )\n        }\n\n        return (\n            <div className=\"FlexibleColumnWrapper\" ref={this.wrapperContainerRef}>\n                {out}\n            </div>\n        )\n    }\n}","import * as React from 'react'\nimport { NarrativeState } from '../../../../../types';\nimport { Icon, Button, Alert, Select, Tooltip } from 'antd';\nimport './component.css'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as narrativeModel from '../../../../../data/models/narrative'\nimport MainMenu from '../../../../menu/component'\nimport { OrganizationNarrative, AccessibleNarrative } from '../../../../../data/models/narrative'\nimport NiceElapsedTime from '../../../../NiceElapsedTime'\nimport { FlexibleColumnWrapper, Renderable } from './FlexibleColumnWrapper'\n\nexport interface Props {\n    organization: orgModel.Organization\n    narratives: Array<OrganizationNarrative>\n    relation: orgModel.Relation\n    selectedNarrative: OrganizationNarrative | null\n    searching: boolean\n    sortBy: string\n    filter: string\n    doSortBy: (sortBy: narrativeModel.Sort) => void\n    doSendRequest: (groupId: string, workspaceId: number) => void\n    doSelectNarrative: (narrative: OrganizationNarrative) => void\n    onFinish: () => void\n}\n\ninterface State {\n}\n\nclass NarrativeRenderer extends Renderable {\n    rowRenderer: (index: number) => JSX.Element\n    rowCount: number\n    constructor(rowRenderer: (index: number) => JSX.Element, rowCount: number) {\n        super()\n\n        this.rowRenderer = rowRenderer\n        this.rowCount = rowCount\n    }\n\n    size() {\n        return this.rowCount\n    }\n\n    render(index: number) {\n        return this.rowRenderer(index)\n    }\n\n    renderEmpty() {\n        return (\n            <div className=\"RequestNarrative-narrative-skeleton\">\n                <div className=\"RequestNarrative-narrative-skeleton-row\" style={{ width: '20em' }}>&nbsp;</div>\n                <div className=\"RequestNarrative-narrative-skeleton-row\" style={{ width: '5em' }}>&nbsp;</div>\n                <div className=\"RequestNarrative-narrative-skeleton-row\" style={{ width: '10em' }}>&nbsp;</div>\n            </div>\n        )\n    }\n}\n\nexport class RequestAddNarrative extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n\n        this.state = {\n            containerDimensions: null\n        }\n\n    }\n\n    onFinish() {\n        this.props.onFinish()\n    }\n\n    doSelectNarrative(narrative: OrganizationNarrative) {\n        this.props.doSelectNarrative(narrative)\n    }\n\n    doSendRequest() {\n        if (this.props.selectedNarrative === null) {\n            console.warn('attempt to send request without selected narrative')\n            return\n        }\n        this.props.doSendRequest(this.props.organization.id, this.props.selectedNarrative.narrative.workspaceId)\n    }\n\n    canSendRequest() {\n        if (this.props.selectedNarrative) {\n            return true\n        }\n        return false\n    }\n\n    renderOrgName(name: string) {\n        const maxLength = 25\n        if (name.length < 25) {\n            return name\n        }\n        return (\n            <span>\n                {name.slice(0, 25)}\n                …\n            </span>\n        )\n    }\n\n    renderPermission(narrative: AccessibleNarrative) {\n        switch (narrative.access) {\n            case narrativeModel.NarrativeAccess.VIEW:\n                return (\n                    <span>\n                        <Icon type=\"eye\" /> View\n                    </span>\n                )\n            case narrativeModel.NarrativeAccess.EDIT:\n                return (\n                    <span>\n                        <Icon type=\"edit\" /> Edit\n                    </span>\n                )\n            case narrativeModel.NarrativeAccess.ADMIN:\n                return (\n                    <span>\n                        <Icon type=\"unlock\" /> Admin\n                    </span>\n                )\n            case narrativeModel.NarrativeAccess.OWNER:\n                return (\n                    <span>\n                        <Icon type=\"crown\" /> Owner\n                    </span>\n                )\n            default:\n                return (\n                    <span>\n                        ERROR\n                    </span>\n                )\n        }\n    }\n\n    renderPublicPermission(narrative: AccessibleNarrative) {\n        if (narrative.isPublic) {\n            return (\n                <span>\n                    <Icon type=\"global\" /> Public\n                </span>\n            )\n        } else {\n            return (\n                <span>\n                    <Icon type=\"lock\" /> Private\n                </span>\n            )\n        }\n    }\n\n    renderNarrative(narrative: AccessibleNarrative) {\n        return (\n            <React.Fragment>\n                <div className=\"RequestNarrative-title\">\n                    {narrative.title}\n                </div>\n\n                <div className=\"RequestNarrative-publicPermission\">\n                    {this.renderPublicPermission(narrative)}\n                </div>\n                <div className=\"RequestNarrative-modifiedAt\">\n                    <span className=\"field-label\">\n                        <Icon type=\"save\" />\n                    </span>\n                    {' '}\n                    <NiceElapsedTime time={narrative.lastSavedAt} tooltipPrefix=\"last saved \" />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    renderOrgNarrative(orgNarrative: OrganizationNarrative) {\n        const { status, narrative } = orgNarrative\n        let isSelected\n        if (this.props.selectedNarrative &&\n            narrative.workspaceId === this.props.selectedNarrative.narrative.workspaceId) {\n            isSelected = true\n        } else {\n            isSelected = false\n        }\n        let classNames = ['RequestNarrative-narrativeCell']\n        if (isSelected) {\n            classNames.push('RequestNarrative-selected')\n        }\n        let flag\n        switch (status) {\n            case NarrativeState.ASSOCIATED:\n                classNames.push('RequestNarrative-narrativeInOrg')\n                flag = (\n                    <Tooltip title=\"This narrative is already associated with this organization\">\n                        <Icon type=\"check\" style={{ color: 'green' }} />\n                    </Tooltip>\n                )\n                break\n            case NarrativeState.REQUESTED:\n                classNames.push('RequestNarrative-narrativeInOrg')\n                flag = (\n                    <Tooltip title=\"You have already requested that this narrative be added to this organization\">\n                        <Icon type=\"loading\" style={{ color: 'orange' }} />\n                    </Tooltip>\n                )\n                break\n            default:\n                classNames.push('RequestNarrative-narrativeNotInOrg')\n        }\n\n        return (\n            <div\n                className={classNames.join(' ')}\n                onClick={() => { this.doSelectNarrative.call(this, orgNarrative) }}\n            >\n                <div className=\"RequestNarrative-narrativeFlag\">\n                    {flag}\n                </div>\n                <div className=\"RequestNarrative-narrative\">\n\n                    {this.renderNarrative(orgNarrative.narrative)}\n                </div>\n            </div>\n        )\n    }\n\n    renderNarratives() {\n        if (this.props.narratives.length === 0) {\n            return (\n                <div className=\"message\">\n                    You do not have any Narratives\n                </div>\n            )\n        }\n        const rowRenderer = (index: number) => {\n            return this.renderOrgNarrative(this.props.narratives[index])\n        }\n        const narrativeRenderer = new NarrativeRenderer(rowRenderer, this.props.narratives.length)\n        return (\n            <FlexibleColumnWrapper renderable={narrativeRenderer} />\n        )\n    }\n\n    onSearchSubmit() {\n        return\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchBar() {\n        return (\n            <form id=\"searchForm\"\n                className=\"RequestNarrative-searchBar\"\n                onSubmit={this.onSearchSubmit.bind(this)}>\n                <input\n                    placeholder=\"Search your Narratives\"\n                    // onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                />\n                <Button\n                    className=\"RequestNarrative-button\"\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                </Button>\n            </form>\n        )\n    }\n\n    renderFeedbackBar() {\n        return (\n            <div>\n                Showing\n                {' '}\n                {\n                    Intl.NumberFormat('en-US', {\n                        style: 'decimal',\n                        useGrouping: true\n                    }).format(this.props.narratives.length)\n                }\n                {' '}\n                narratives\n            </div>\n        )\n    }\n\n    onSortByChange(value: string) {\n        switch (value) {\n            case 'title':\n                this.props.doSortBy(narrativeModel.Sort.TITLE)\n                break\n            case 'savedAt':\n                this.props.doSortBy(narrativeModel.Sort.LAST_SAVED)\n                break\n        }\n    }\n\n    onSortDirectionChange() {\n    }\n\n    onFilterChange() {\n    }\n\n    renderFilterSortBar() {\n        return (\n            <div className=\"RequestNarrative-filterSortBar\">\n                <span className=\"field-label\">sort by</span>\n                <Select onChange={this.onSortByChange.bind(this)}\n                    defaultValue={this.props.sortBy}\n                    style={{ width: '8em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"title\" key=\"title\">Title</Select.Option>\n                    <Select.Option value=\"savedAt\" key=\"savedAt\">Last saved</Select.Option>\n                </Select>\n            </div>\n        )\n    }\n\n    renderNarrativeSelector() {\n        return (\n            <div className=\"RequestNarrative-narrativeSelector scrollable-flex-column\">\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    {/* <div style={{ flex: '0 0 10em' }}>\n                        {this.renderSearchBar()}\n                    </div> */}\n                    <div style={{ flex: '1 1 0px' }}>\n                        {this.renderFilterSortBar()}\n                    </div>\n                </div>\n                <div className=\"RequestNarrative-feedbackBar\">\n                    {this.renderFeedbackBar()}\n                </div>\n                <div className=\"RequestNarrative-narratives scrollable-flex-column\">\n                    <div className=\"RequestNarrative-narrativesTable scrollable-flex-column\"  >\n                        {this.renderNarratives()}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n    renderSelectedNarrativeButton() {\n        if (!this.props.selectedNarrative) {\n            return\n        }\n        if (this.props.selectedNarrative.status === NarrativeState.ASSOCIATED) {\n            return (\n                <Alert type=\"info\" message=\"This Narrative is associated with this Organization\" />\n            )\n        } else if (this.props.selectedNarrative.status === NarrativeState.REQUESTED) {\n            return (\n                <Alert type=\"warning\" message=\"You have requested to associate this Narrative with this Organization\" />\n            )\n        }\n        let buttonLabel\n        if (this.props.relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.relation.type === orgModel.UserRelationToOrganization.OWNER) {\n            buttonLabel = 'Add Selected Narrative to Organization'\n        } else {\n            buttonLabel = 'Request Association of Selected Narrative to Organization'\n        }\n        return (\n            <Button\n                type=\"primary\"\n                onClick={this.doSendRequest.bind(this)}\n                disabled={!this.canSendRequest.call(this)}\n            >{buttonLabel}</Button>\n        )\n    }\n\n    renderSelectedNarrative() {\n        if (this.props.selectedNarrative) {\n            return (\n                <div className=\"RequestNarrative-selectedNarrative\">\n                    <div className=\"RequestNarrative-title\">\n                        {this.props.selectedNarrative.narrative.title}\n                    </div>\n                    <div>\n                        <span className=\"field-label\">\n                            <Icon type=\"save\" />\n                        </span>\n                        {' '}\n                        <NiceElapsedTime time={this.props.selectedNarrative.narrative.lastSavedAt} tooltipPrefix=\"last saved \" />\n                    </div>\n                </div>\n            )\n        } else {\n            if (this.props.relation.type === orgModel.UserRelationToOrganization.MEMBER) {\n                const message = (\n                    <p>\n                        Select a narrative on the left to show it here and be able to request association of\n                        it with this Organization.\n                    </p>\n                )\n                return (\n                    <Alert type=\"info\" message={message} />\n                )\n            } else {\n                const message = (\n                    <p>\n                        Select a narrative on the left to show it here and be able to associate it with this Organization.\n                    </p>\n                )\n                return (\n                    <Alert type=\"info\" message={message} />\n                )\n            }\n        }\n    }\n\n    renderMenuButtons() {\n        return (\n            <div className=\"ButtonSet\">\n                <div className=\"ButtonSet-button\">\n                    <Button icon=\"rollback\"\n                        type=\"danger\"\n                        onClick={this.onFinish.bind(this)}>\n                        Done\n                    </Button>\n                </div>\n            </div >\n        )\n    }\n\n    renderAlert() {\n        if (this.props.relation.type === orgModel.UserRelationToOrganization.MEMBER) {\n            const warning = (\n                <React.Fragment>\n                    <p>\n                        As an Organization member, you are able to request association of any Narrative you\n                        own with this Organization.\n                    </p>\n                    <p>\n                        If your Narrative association request is accepted by an Organization administrator,\n                        it will appear for all members on the main Organization page.\n                    </p>\n                    <p>\n                        Members will be able to gain view share access to the Narrative.\n                    </p>\n                    <p>\n                        Only Organization administrators will be able to disassociate the Narrative from the Organization.\n                    </p>\n                </React.Fragment>\n            )\n            return (\n                <Alert type=\"warning\"\n                    message={warning}\n                    style={{ marginBottom: '10px' }} />\n            )\n        } else {\n            const warning = (\n                <React.Fragment>\n                    <p>\n                        As an Organization administrator, you will be able to immediate associate a Narrative you\n                        own with this Organization.\n                    </p>\n                    <p>\n                        Members will be able to gain view share access to the Narrative.\n                    </p>\n                    <p>\n                        Only Organization administrators will be able to disassociate the Narrative from the Organization.\n                    </p>\n                </React.Fragment>\n\n            )\n            return (\n                <Alert type=\"warning\"\n                    message={warning}\n                    style={{ marginBottom: '10px' }} />\n            )\n        }\n    }\n\n    renderSelectedAlert() {\n        if (this.props.selectedNarrative && this.props.selectedNarrative.status === NarrativeState.NONE) {\n            if (this.props.relation.type === orgModel.UserRelationToOrganization.MEMBER) {\n                const warning = (\n                    <React.Fragment>\n                        <p>\n                            Please be aware that if your request to associate this Narrative is accepted,\n                            you will be unable to directly remove it from the Organization.\n                    </p>\n                        <p>\n                            Only Organization administrators are able to remove associated Narratives from the Organization.\n                    </p>\n                    </React.Fragment>\n                )\n                return (\n                    <Alert type=\"warning\"\n                        message={warning}\n                        style={{ marginBottom: '10px', marginTop: '10px' }} />\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"RequestNarrative scrollable-flex-column\">\n                <MainMenu buttons={this.renderMenuButtons()} />\n                <div className=\"RequestNarrative-body scrollable-flex-column\">\n                    <div className=\"RequestNarrative-selectNarrativeCol scrollable-flex-column\">\n                        <h3>Select a Narrative to Associate with this Organization</h3>\n                        {this.renderNarrativeSelector()}\n                    </div>\n                    <div className=\"RequestNarrative-selectedNarrativeCol\">\n                        <h3>Selected Narrative</h3>\n                        {/* {this.renderAlert()} */}\n                        {this.renderSelectedNarrative()}\n                        {this.renderSelectedAlert()}\n                        <div className=\"RequestNarrative-selectedNarrativeButtonBar\">\n                            {this.renderSelectedNarrativeButton()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"RequestNarrative-footer\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RequestAddNarrative","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from '../index'\nimport {\n    StoreState, Narrative, View, ViewOrgViewModelKind,\n    RequestNarrativeViewModel\n} from '../../../types'\nimport * as orgModel from '../../../data/models/organization/model'\nimport * as narrativeModel from '../../../data/models/narrative'\nimport * as requestModel from '../../../data/models/requests'\nimport { AnError } from '../../../lib/error'\nimport { makeError } from '../../../combo/error/api'\nimport { OrganizationNarrative } from '../../../data/models/narrative'\nimport * as viewOrgActions from '../viewOrg'\n\nexport interface Load extends Action {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD\n}\n\nexport interface LoadStart extends Action {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_START\n}\n\nexport interface LoadSuccess extends Action {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_SUCCESS\n    organization: orgModel.Organization\n    narratives: Array<narrativeModel.OrganizationNarrative>\n    relation: orgModel.Relation\n}\n\nexport interface LoadError extends Action {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR\n    error: AnError\n}\n\nexport function loadStart(): LoadStart {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_START\n    }\n}\n\nexport function loadSuccess(organization: orgModel.Organization, narratives: Array<narrativeModel.OrganizationNarrative>, relation: orgModel.Relation): LoadSuccess {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_SUCCESS,\n        organization, narratives, relation\n    }\n}\n\nexport function loadError(error: AnError): LoadError {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_LOAD_ERROR,\n        error: error\n    }\n}\n\nexport function load(organizationId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        const narrativeClient = new narrativeModel.NarrativeModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            workspaceServiceURL: config.services.Workspace.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n        const requestClient = new requestModel.RequestsModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url\n        })\n\n        try {\n            const [org, narratives, request, invitation] = await Promise.all([\n                orgClient.getOrganization(organizationId),\n                narrativeClient.getOwnNarratives(organizationId),\n                requestClient.getUserRequestForOrg(organizationId),\n                requestClient.getUserInvitationForOrg(organizationId)\n            ])\n\n            const relation = orgModel.determineRelation(org, username, request, invitation)\n            dispatch(loadSuccess(org, narratives, relation))\n        } catch (ex) {\n            console.error('loading error', ex)\n            dispatch(loadError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n    }\n}\n\n// Selecting narrative\nexport interface SelectNarrative {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE,\n    narrative: Narrative\n}\n\nexport interface SelectNarrativeStart {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_START\n}\n\nexport interface SelectNarrativeSuccess {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS\n    narrative: narrativeModel.OrganizationNarrative\n}\n\nexport interface SelectNarrativeError {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_ERROR\n    error: AnError\n}\n\nexport function selectNarrativeStart(): SelectNarrativeStart {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_START\n    }\n}\n\nexport function selectNarrativeSuccess(narrative: OrganizationNarrative): SelectNarrativeSuccess {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_SUCCESS,\n        narrative: narrative\n    }\n}\n\nexport function selectNarrativeError(error: AnError): SelectNarrativeError {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SELECT_NARRATIVE_ERROR,\n        error: error\n    }\n}\n\nexport function selectNarrative(narrative: OrganizationNarrative) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(selectNarrativeStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n        // TODO: fetch narrative and populate the selected narrative accordingly...\n        dispatch(selectNarrativeSuccess(narrative))\n    }\n}\n\n// Sending Request\nexport interface SendRequest {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND\n}\n\nexport interface SendRequestStart {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_START\n}\n\nexport interface SendRequestSuccess {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_SUCCESS,\n    request: requestModel.Request | boolean\n}\n\nexport interface SendRequestError {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_ERROR,\n    error: AnError\n}\n\n\nexport function sendRequestStart(): SendRequestStart {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_START\n    }\n}\n\nexport function sendRequestSuccess(request: requestModel.Request | boolean): SendRequestSuccess {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_SUCCESS,\n        request: request\n    }\n}\n\nexport function sendRequestError(error: AnError): SendRequestError {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_SEND_ERROR,\n        error: error\n    }\n}\n\nexport function sendRequest(groupId: string, workspaceId: number) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sendRequestStart())\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n\n        const orgClient = new orgModel.OrganizationModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const request = await orgClient.addOrRequestNarrativeToGroup(groupId, workspaceId)\n            dispatch(sendRequestSuccess(request))\n            dispatch(viewOrgActions.reload(groupId))\n        } catch (ex) {\n            dispatch(sendRequestError(makeError({\n                code: ex.name,\n                message: ex.message\n            })))\n        }\n    }\n}\n\n// Unloading\n\nexport interface Unload extends Action {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_UNLOAD\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.REQUEST_ADD_NARRATIVE_UNLOAD\n    }\n}\n\n// SORTING\n\nexport interface Sort {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT\n    sort: narrativeModel.Sort\n}\n\nexport interface SortStart {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_START\n}\n\nexport interface SortSuccess {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_SUCCESS\n    narratives: Array<narrativeModel.OrganizationNarrative>\n}\n\nexport interface SortError {\n    type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_ERROR\n    error: AnError\n}\n\nfunction ensureView(state: StoreState): View<RequestNarrativeViewModel> {\n    const {\n        views: {\n            viewOrgView: { viewModel }\n        }\n    } = state\n    if (viewModel === null) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    const { requestNarrativeView } = viewModel.subViews\n    if (requestNarrativeView === null) {\n        throw new Error('select user invalid state -- no view value')\n    }\n    return requestNarrativeView\n}\n\nexport function sort(sort: narrativeModel.Sort) {\n    return async (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch({\n            type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_START\n        } as SortStart)\n\n        const state = getState()\n\n        let view: View<RequestNarrativeViewModel>\n        try {\n            view = ensureView(state)\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n            return\n        }\n\n        if (view.viewModel === null) {\n            dispatch({\n                type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: 'missing view model'\n                })\n            })\n            return\n        }\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = state\n\n        const narrativeClient = new narrativeModel.NarrativeModel({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            serviceWizardURL: config.services.ServiceWizard.url,\n            workspaceServiceURL: config.services.Workspace.url,\n            userProfileServiceURL: config.services.UserProfile.url\n        })\n\n        try {\n            const sorted = narrativeClient.sortOrganizationNarratives(view.viewModel.narratives, sort)\n            dispatch({\n                type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_SUCCESS,\n                narratives: sorted\n            } as SortSuccess)\n        } catch (ex) {\n            dispatch({\n                type: ActionFlag.REQUEST_ADD_NARRATIVE_SORT_ERROR,\n                error: makeError({\n                    code: 'error',\n                    message: ex.message\n                })\n            })\n        }\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\nimport * as types from '../../../../../types'\nimport Component from './component'\nimport * as actions from '../../../../../redux/actions/viewOrganization/requestAddNarrative'\nimport * as orgModel from '../../../../../data/models/organization/model'\nimport * as narrativeModel from '../../../../../data/models/narrative'\nimport { RequestNarrativeViewModel } from '../../../../../types';\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    organization: orgModel.Organization\n    relation: orgModel.Relation\n    narratives: Array<narrativeModel.OrganizationNarrative>\n    selectedNarrative: narrativeModel.OrganizationNarrative | null\n    searching: boolean\n    sortBy: string\n    // sortDirection: types.SortDirection\n    filter: string\n}\n\ninterface DispatchProps {\n    doSendRequest: (groupId: string, workspaceId: number) => void\n    doSelectNarrative: (narrative: narrativeModel.OrganizationNarrative) => void\n    doSortBy: (sortBy: narrativeModel.Sort) => void\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== types.ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    if (viewModel.subViews.requestNarrativeView.viewModel === null) {\n        throw new Error(\"argh, null subview view model\")\n    }\n\n    const subViewModel: RequestNarrativeViewModel = viewModel.subViews.requestNarrativeView.viewModel\n\n    const {\n        organization, relation, narratives, selectedNarrative,\n    } = subViewModel\n\n    return {\n        organization, relation, narratives, selectedNarrative,\n        searching: false,\n        sortBy: 'title',\n        filter: ''\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        doSendRequest: (groupId: string, workspaceId: number) => {\n            dispatch(actions.sendRequest(groupId, workspaceId) as any)\n        },\n        doSelectNarrative: (narrative: narrativeModel.OrganizationNarrative) => {\n            dispatch(actions.selectNarrative(narrative) as any)\n        },\n        doSortBy: (sortBy: narrativeModel.Sort) => {\n            dispatch(actions.sort(sortBy) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import * as React from 'react'\nimport Container from './container'\n\nexport interface Props {\n    organizationId: string\n    view: View<RequestNarrativeViewModel | NoneViewModel>\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface State {\n}\n\nclass Loader extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <React.Fragment>\n                <Icon type=\"loading\" />{' '}Loading Your Narratives...\n            </React.Fragment>\n        )\n        return (\n            <Alert type=\"info\" message={message}\n                style={{ padding: '20px', width: '30em', margin: '30px auto 0 auto', textAlign: 'center' }} />\n        )\n    }\n\n    renderError(error: AnError) {\n        return (\n            <div>\n                Error!\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                return this.renderLoading()\n            case ViewState.LOADING:\n                return this.renderLoading()\n            case ViewState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError(makeError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    }))\n                }\n            default:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                this.props.onLoad(this.props.organizationId)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\n//\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../../../redux/actions/viewOrganization/requestAddNarrative'\nimport { Icon, Alert } from 'antd'\nimport {\n    View, RequestNarrativeViewModel, StoreState, ViewOrgViewModelKind,\n    ViewState, NoneViewModel\n} from '../../../../../types'\nimport { AnError, makeError } from '../../../../../lib/error';\n\nexport interface OwnProps {\n    organizationId: string\n}\n\ninterface StateProps {\n    view: View<RequestNarrativeViewModel>\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: string) => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    // This bit deals with the fact that we are a subview \n    // and it keeps TS happy.\n    const v = state.views.viewOrgView\n    const vm1 = v.viewModel\n    if (vm1 === null) {\n        throw new Error('vm is null')\n    }\n    if (vm1.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('not the right vm')\n    }\n    return {\n        view: vm1.subViews.requestNarrativeView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: (organizationId: string) => {\n            dispatch(actions.load(organizationId) as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react'\nimport * as orgModel from '../../../../data/models/organization/model'\nimport * as requestModel from '../../../../data/models/requests'\nimport { Button, Tooltip, Menu, Icon, Dropdown } from 'antd';\nimport { ViewOrgViewModel, SubViews } from '../../../../types';\nimport './OrgMenu.css'\n\nexport interface OrgMenuProps {\n    viewModel: ViewOrgViewModel\n    onJoinOrg: () => void\n    onCancelJoinRequest: (requestId: requestModel.RequestID) => void\n    onAcceptInvitation: (requestId: requestModel.RequestID) => void\n    onRejectInvitation: (requestId: requestModel.RequestID) => void\n    onChangeSubView: (subView: SubViews) => void\n}\n\nexport interface OrgMenuState {\n\n}\n\nexport default class OrgMenu extends React.Component<OrgMenuProps, OrgMenuState> {\n    constructor(props: OrgMenuProps) {\n        super(props)\n    }\n\n    // Event handlers\n\n    onJoinClick() {\n        this.props.onJoinOrg()\n    }\n\n    onCancelJoinRequest() {\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onCancelJoinRequest(relation.requestId)\n    }\n\n    onAcceptInvitation() {\n        if (!this.props.viewModel.organization) {\n            return\n        }\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onAcceptInvitation(relation.requestId)\n    }\n\n    onRejectInvitation() {\n        if (!this.props.viewModel.organization) {\n            return\n        }\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onRejectInvitation(relation.requestId)\n    }\n\n    onMenuClick({ key }: { key: string }) {\n        switch (key) {\n            case 'manageMyMembership':\n                this.props.onChangeSubView(SubViews.MANAGE_MEMBERSHIP)\n                break\n            case 'editOrg':\n                this.props.onChangeSubView(SubViews.EDIT_ORGANIZATION)\n                break\n            case 'inviteUser':\n                this.props.onChangeSubView(SubViews.INVITE_USER)\n                break\n            case 'addNarrative':\n                this.props.onChangeSubView(SubViews.ADD_NARRATIVE)\n                break\n            case 'manageRelatedOrgs':\n                this.props.onChangeSubView(SubViews.MANAGE_RELATED_ORGS)\n                break\n            case 'addApp':\n                this.props.onChangeSubView(SubViews.ADD_APP)\n                break\n        }\n    }\n\n    // Renderers\n\n    renderOrgMenu() {\n        const org = this.props.viewModel.organization\n        switch (this.props.viewModel.relation.type) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <Button\n                        type=\"primary\"\n                        onClick={this.onJoinClick.bind(this)}>\n                        Join this Organization\n                        </Button>\n                )\n            case (orgModel.UserRelationToOrganization.VIEW):\n                return (\n                    <Button\n                        type=\"primary\"\n                        onClick={this.onJoinClick.bind(this)}>\n                        Join this Organization\n                        </Button>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <Tooltip\n                        placement=\"bottom\"\n                        mouseEnterDelay={0.5}\n                        title=\"You have requested to join this Org; you may cancel your join request with this button\"\n                    >\n                        <Button icon=\"delete\" type=\"danger\" onClick={this.onCancelJoinRequest.bind(this)}>Cancel Join Request</Button>\n                    </Tooltip>\n\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (\n                    <div className=\"ViewOrganization-invitationPendingCard\">\n                        <span>You have been invited to this organization: </span>\n                        <Button icon=\"check\" type=\"default\" size=\"small\" onClick={this.onAcceptInvitation.bind(this)}>Accept</Button>\n                        <Button icon=\"stop\" type=\"danger\" size=\"small\" onClick={this.onRejectInvitation.bind(this)}>Reject</Button>\n                    </div>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER):\n                const menu = (\n                    <Menu onClick={this.onMenuClick.bind(this)}>\n                        <Menu.Item key=\"addApp\">\n                            <Icon type=\"appstore\" />{' '}Associate Apps\n                        </Menu.Item>\n                        <Menu.Item key=\"addNarrative\">\n                            <Icon type=\"file\" />{' '}Associate Narratives\n                        </Menu.Item>\n                        <Menu.Item key=\"manageMyMembership\">\n                            <Icon type=\"user\" />{' '}Manage My Membership\n                        </Menu.Item>\n\n                    </Menu>\n                )\n                return (\n                    <Dropdown overlay={menu} trigger={['click']}>\n                        <Icon type=\"setting\" theme=\"filled\" className=\"IconButton OrgMenu-menuButton\" />\n                    </Dropdown>\n                )\n            case (orgModel.UserRelationToOrganization.ADMIN):\n                const adminMenu = (\n                    <Menu onClick={this.onMenuClick.bind(this)}>\n                        <Menu.Item key=\"addApp\">\n                            <Icon type=\"appstore\" />{' '}Associate Apps\n                        </Menu.Item>\n                        <Menu.Item key=\"addNarrative\">\n                            <Icon type=\"file\" />{' '}Associate Narratives\n                        </Menu.Item>\n                        <Menu.Item key=\"editOrg\" >\n                            <Icon type=\"edit\" />{' '}Edit this Org\n                        </Menu.Item>\n                        <Menu.Item key=\"inviteUser\">\n                            <Icon type=\"mail\" />{' '}Invite User\n                        </Menu.Item>\n                        <Menu.Item key=\"manageMyMembership\">\n                            <Icon type=\"user\" />{' '}Manage My Membership\n                        </Menu.Item>\n                        <Menu.Item key=\"manageRelatedOrgs\">\n                            <Icon type=\"team\" />{' '}Manage Related Orgs\n                        </Menu.Item>\n                    </Menu>\n                )\n                return (\n                    <Dropdown overlay={adminMenu} trigger={['click']}>\n                        <Icon type=\"setting\" theme=\"filled\" className=\"IconButton OrgMenu-menuButton\" />\n                    </Dropdown>\n                )\n            case (orgModel.UserRelationToOrganization.OWNER):\n                const ownerMenu = (\n                    <Menu onClick={this.onMenuClick.bind(this)}>\n                        <Menu.Item key=\"addApp\">\n                            <Icon type=\"appstore\" />{' '}Associate Apps\n                        </Menu.Item>\n                        <Menu.Item key=\"addNarrative\">\n                            <Icon type=\"file\" />{' '}Associate Narratives\n                        </Menu.Item>\n                        <Menu.Item key=\"editOrg\">\n                            <Icon type=\"edit\" />{' '}Edit this Org\n                        </Menu.Item>\n                        <Menu.Item key=\"inviteUser\">\n                            <Icon type=\"mail\" />{' '}Invite User\n                        </Menu.Item>\n                        <Menu.Item key=\"manageMyMembership\">\n                            <Icon type=\"user\" />{' '}Manage My Membership\n                        </Menu.Item>\n                        <Menu.Item key=\"manageRelatedOrgs\">\n                            <Icon type=\"team\" />{' '}Manage Related Orgs\n                        </Menu.Item>\n                    </Menu>\n                )\n                return (\n                    <Dropdown overlay={ownerMenu} trigger={['click']}>\n                        <Icon type=\"setting\" theme=\"filled\" className=\"IconButton OrgMenu-menuButton\" />\n                    </Dropdown>\n                )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"OrgMenu\">\n                {this.renderOrgMenu()}\n            </div>\n        )\n    }\n}","import * as React from 'react';\nimport * as orgModel from '../../../../../data/models/organization/model';\nimport './component.css';\nimport { Button, Icon, Alert, Select, Input, Dropdown, Menu, Modal } from 'antd';\nimport App from '../../../../entities/app/loader';\n\nexport interface AppsProps {\n    organization: orgModel.Organization;\n    apps: { sortBy: string; searchBy: string; apps: Array<orgModel.AppResource> };\n    onAssociateApp: () => void;\n    onRemoveApp: (appId: string) => void;\n}\n\ninterface AppsState {}\n\nexport default class Apps extends React.Component<AppsProps, AppsState> {\n    constructor(props: AppsProps) {\n        super(props);\n    }\n\n    doRemoveApp(appId: string) {\n        const confirmed = () => {\n            this.props.onRemoveApp(appId);\n        };\n        const message = (\n            <React.Fragment>\n                <p>Please confirm the removal of this App from this Organization.</p>\n                {/* <p>\n                    All Organization members and the App authors will receive a notification.\n                </p> */}\n            </React.Fragment>\n        );\n        Modal.confirm({\n            title: 'Confirm',\n            content: message,\n            width: '50em',\n            okText: 'Confirm',\n            onOk: () => {\n                confirmed();\n            }\n        });\n    }\n\n    renderButtonRow() {\n        return (\n            <Button size=\"small\" className=\"Button-important\" onClick={this.props.onAssociateApp}>\n                <Icon type=\"appstore\" />\n                Associate Apps\n            </Button>\n        );\n    }\n\n    renderSearchRow() {\n        return (\n            <React.Fragment>\n                <div className=\"Apps-searchInput\">\n                    <Input placeholder=\"Filter apps by title or author\" />\n                </div>\n                <div className=\"Apps-searchControls\">\n                    <span className=\"field-label\">sort</span>\n                    <Select style={{ width: '11em' }} dropdownMatchSelectWidth={true} defaultValue=\"dateAdded\">\n                        <Select.Option key=\"dateAdded\" value=\"dateAdded\">\n                            Date Added\n                        </Select.Option>\n                        <Select.Option key=\"name\" value=\"name\">\n                            Name\n                        </Select.Option>\n                    </Select>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    renderBrowseRows() {\n        if (this.props.apps.apps.length === 0) {\n            return <Alert type=\"info\" message=\"Sorry, no apps\" />;\n        }\n\n        const apps = this.props.apps.apps.map((app, index) => {\n            const menu = (\n                <Menu>\n                    <Menu.Item key=\"removeApp\" onClick={() => this.doRemoveApp(app.appId)}>\n                        <Icon type=\"delete\" style={{ color: 'red' }} />\n                        Remove App from Organization\n                    </Menu.Item>\n                </Menu>\n            );\n            return (\n                <div key={String(index)} className=\"Apps-appRow SimpleCard\">\n                    <div className=\"Apps-appColumn\">\n                        <App appId={app.appId} />\n                    </div>\n                    <div className=\"Apps-menuColumn\">\n                        <Dropdown overlay={menu} trigger={['click']}>\n                            <Icon type=\"ellipsis\" />\n                        </Dropdown>\n                    </div>\n                </div>\n            );\n        });\n        return <React.Fragment>{apps}</React.Fragment>;\n    }\n\n    render() {\n        return (\n            <div className=\"Apps\">\n                <div className=\"Apps-buttonRow\">{this.renderButtonRow()}</div>\n                <div className=\"Apps-searchRow\">{this.renderSearchRow()}</div>\n                <div className=\"Apps-browseRow\">{this.renderBrowseRows()}</div>\n            </div>\n        );\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { ActionFlag } from '../index'\nimport * as orgModel from '../../../data/models/organization/model'\nimport * as appsModel from '../../../data/models/apps'\nimport {\n    StoreState, ViewOrgViewModelKind, SelectableApp,\n    ResourceRelationToOrg, ViewOrgViewModel, AddAppsViewModel, SelectableRelatableOrganization\n} from '../../../types'\nimport { AnError } from '../../../combo/error/api'\nimport { makeError } from '../../../lib/error'\nimport { NarrativeMethodStoreClient } from '../../../data/apis/narrativeMethodStore'\nimport { RequestResourceType, RequestType } from '../../../data/models/requests'\nimport * as viewOrgActions from '../viewOrg'\nimport { AppBriefInfo } from '../../../data/models/apps';\n\nexport interface AddAppsAction extends Action {\n\n}\n\nexport interface Load extends AddAppsAction {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD\n}\n\nexport interface LoadStart extends AddAppsAction {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_START\n}\n\nexport interface LoadSuccess extends AddAppsAction {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_SUCCESS\n    rawApps: Array<SelectableApp>\n    sortBy: string\n    searchBy: string\n    apps: Array<SelectableApp>\n    selectedApp: SelectableApp | null\n}\n\nexport interface LoadError extends AddAppsAction {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_ERROR,\n    error: AnError\n}\n\nexport interface Unload extends AddAppsAction {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_UNLOAD\n}\n\nfunction loadStart(): LoadStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_START\n    }\n}\n\nfunction loadError(error: AnError): LoadError {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_ERROR,\n        error: error\n    }\n}\n\nfunction loadSuccess(apps: Array<SelectableApp>) {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_LOAD_SUCCESS,\n        rawApps: apps,\n        sortBy: 'name',\n        searchBy: '',\n        apps,\n        selectedApp: null\n    }\n}\n\nexport function unload(): Unload {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_UNLOAD\n    }\n}\n\nexport function load() {\n    return async (dispatch: ThunkDispatch<StoreState, void, AddAppsAction>, getState: () => StoreState) => {\n        dispatch(loadStart())\n\n        const state = getState()\n\n        // get the org, with the usual funny business.\n        const {\n            views: {\n                viewOrgView: {\n                    viewModel\n                }\n            }\n        } = state\n\n        if (!viewModel) {\n            dispatch(loadError(makeError({\n                code: 'load-error',\n                message: 'Error loading: no org view model'\n            })))\n            return\n        }\n\n        if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n            dispatch(loadError(makeError({\n                code: 'load-error',\n                message: 'Error loading: no org view model'\n            })))\n            return\n        }\n\n        const { organization } = viewModel\n\n        if (organization.kind !== orgModel.OrganizationKind.NORMAL) {\n            dispatch(loadError(makeError({\n                code: 'load-error',\n                message: 'Error loading: not normal org'\n            })))\n            return\n        }\n\n        // get all apps. we can do this because there \n        // are not very many. \n        // TODO: switch to search, not filter, model; this\n        // implies paging, sorting, etc. on the back end.\n        const {\n            auth: { authorization: { token, username } },\n            app: {\n                config: {\n                    services: {\n                        NarrativeMethodStore: {\n                            url: narrativeMethodStoreURL\n                        }\n                    }\n                } } } = state\n\n        const nmsClient = new NarrativeMethodStoreClient({\n            url: narrativeMethodStoreURL,\n            token: token\n        })\n\n        const hasInboxRequest = (appId: appsModel.AppID) => {\n            // const groupsAppId = appId.split('/').join('.')\n            return viewModel.requestInbox.find((request) => {\n                if (request.resourceType === RequestResourceType.APP) {\n                    if (request.type === RequestType.REQUEST) {\n                        if (request.appId === appId) {\n                            return true\n                        }\n                    }\n                }\n                return false\n            })\n        }\n\n        const hasOutboxRequest = (appId: appsModel.AppID) => {\n            // const groupsAppId = appId.split('/').join('.')\n            return viewModel.requestOutbox.find((request) => {\n                if (request.resourceType === RequestResourceType.APP) {\n                    if (request.type === RequestType.REQUEST) {\n                        if (request.appId === appId) {\n                            return true\n                        }\n                    }\n                }\n                return false\n            })\n        }\n\n        try {\n            const methods = await nmsClient.list_methods({ tag: 'release' })\n\n            const appResources = organization.apps;\n\n            const apps = methods\n                .filter((method) => {\n                    return (method.authors.includes(username))\n                })\n                .map((method) => {\n                    let relation: ResourceRelationToOrg\n                    const appId = method.id\n                    if (appResources.find((appResource) => {\n                        // TODO: why, oh, why use module.method?? \n                        // Oh, I know why, but why??\n                        return (appResource.appId === appId)\n                    })) {\n                        relation = ResourceRelationToOrg.ASSOCIATED\n                    } else if (hasOutboxRequest(appId)) {\n                        relation = ResourceRelationToOrg.ASSOCIATION_PENDING\n                    } else if (hasInboxRequest(appId)) {\n                        relation = ResourceRelationToOrg.ASSOCIATION_PENDING\n                    } else {\n                        relation = ResourceRelationToOrg.NONE\n                    }\n                    return {\n                        app: appsModel.methodBriefInfoToAppBriefInfo(method),\n                        selected: false,\n                        relation, appId\n                    }\n                })\n                // TODO: Sort will be separated.\n                .sort((a, b) => {\n                    return (a.app.name.localeCompare(b.app.name))\n                })\n\n\n            dispatch(loadSuccess(apps))\n        } catch (ex) {\n            dispatch(loadError(makeError({\n                code: 'error',\n                message: ex.message\n            })))\n        }\n\n    }\n}\n\n// Select app\n\nexport interface Select {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SELECT\n    appID: string\n}\n\nexport interface SelectSuccess {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SELECT_SUCCESS\n    selectedApp: SelectableApp\n}\n\nexport function selectSuccess(selectedApp: SelectableApp): SelectSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SELECT_SUCCESS,\n        selectedApp\n    }\n}\n\nfunction ensureViewModel(state: StoreState): [ViewOrgViewModel, AddAppsViewModel] {\n    const {\n        views: {\n            viewOrgView: {\n                viewModel\n            }\n        }\n    } = state\n\n    if (!viewModel) {\n        throw new Error('Error loading: no org view model')\n    }\n\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('View model not NORMAL kind')\n    }\n\n    const {\n        subViews: {\n            addAppsView: {\n                viewModel: addAppsViewModel\n            }\n        }\n    } = viewModel\n\n    if (addAppsViewModel === null) {\n        throw new Error('Error loading: no org subview model')\n    }\n\n    return [viewModel, addAppsViewModel]\n}\n\nexport function select(selectedAppId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, AddAppsAction>, getState: () => StoreState) => {\n        const state = getState()\n\n        try {\n            const [orgViewModel, viewModel] = ensureViewModel(state)\n\n            // now to the actual work...\n            // get the apps;\n            // pluck the selected one out\n            // set it to the selected one,\n            // mark the apps in the list as selected (TODO)\n\n            const selected = viewModel.apps.filter((app) => {\n                return (app.app.id === selectedAppId)\n            })\n\n            if (selected.length === 0) {\n                dispatch(loadError(makeError({\n                    code: 'runtime-error',\n                    message: 'Strange, no matching app for selection'\n                })))\n                return\n            }\n\n            dispatch(selectSuccess(selected[0]))\n        } catch (ex) {\n            dispatch(loadError(makeError({\n                code: 'runtime-error',\n                message: ex.message\n            })))\n            return\n        }\n    }\n}\n\n// Association\n\nexport interface RequestAssociation {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP,\n    appId: string\n}\n\nexport interface RequestAssociationStart {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_START\n}\n\nexport interface RequestAssociationSuccess {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS,\n    appId: string\n    pending: boolean\n}\n\nexport interface RequestAssociationError {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_ERROR,\n    error: AnError\n}\n\nexport function requestAssociationSuccess(appId: string, pending: boolean): RequestAssociationSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_SUCCESS,\n        appId, pending\n    }\n}\n\nexport function RequestAssociationError(error: AnError): RequestAssociationError {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_REQUEST_ASSOCIATE_APP_ERROR,\n        error\n    }\n}\n\nexport function requestAssociation(appId: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, AddAppsAction>, getState: () => StoreState) => {\n        try {\n            const [orgViewModel, viewModel] = ensureViewModel(getState())\n\n            // do the association request\n\n            // depending on the response, set the pending flag\n            const {\n                auth: { authorization: { token, username } },\n                app: {\n                    config: {\n                        services: {\n                            Groups: {\n                                url: groupsUrl\n                            },\n                            UserProfile: {\n                                url: userProfileUrl\n                            }\n                        }\n                    }\n                }\n            } = getState()\n\n            const orgClient = new orgModel.OrganizationModel({\n                groupsServiceURL: groupsUrl,\n                userProfileServiceURL: userProfileUrl,\n                username, token\n            })\n\n            // App id is naturally module/method, but the groups api wants module.method.\n            // Why, oh why?, other than being more \"REST friendly?\"\n            const groupsAppId = appId.split('/').join('.')\n\n            const result = await orgClient.addOrRequestAppToGroup(orgViewModel.organization.id, groupsAppId)\n\n            let pending: boolean\n            if (result === true) {\n                pending = false\n            } else {\n                pending = true\n            }\n\n            // now to the actual work...\n            // get the apps;\n            // pluck the selected one out\n            // set it to the selected one,\n            // mark the apps in the list as selected (TODO)\n\n            // const selected = viewModel.apps.filter((app) => {\n            //     return (app.app.id === selectedAppId)\n            // })\n\n            // if (selected.length === 0) {\n            //     dispatch(loadError(makeError({\n            //         code: 'runtime-error',\n            //         message: 'Strange, no matching app for selection'\n            //     })))\n            //     return\n            // }\n\n            dispatch(requestAssociationSuccess(appId, pending))\n            dispatch(viewOrgActions.reload(orgViewModel.organization.id))\n        } catch (ex) {\n            dispatch(RequestAssociationError(makeError({\n                code: 'runtime-error',\n                message: ex.message\n            })))\n            return\n        }\n    }\n}\n\n// SEARCH\n\nexport interface Search {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH,\n    searchBy: string\n}\n\nexport interface SearchStart {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_START\n}\n\nexport interface SearchSuccess {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_SUCCESS\n    apps: Array<SelectableApp>\n}\n\nexport interface SearchError {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_ERROR\n    error: AnError\n}\n\nfunction searchStart(): SearchStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_START\n    }\n}\n\nfunction searchSuccess(apps: Array<SelectableApp>): SearchSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_SUCCESS,\n        apps\n    }\n}\n\nfunction searchError(error: AnError): SearchError {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SEARCH_ERROR,\n        error\n    }\n}\n\n// function ensureView(state: StoreState): View<AddAppsViewModel> {\n//     const {\n//         views: {\n//             viewOrgView: { viewModel }\n//         }\n//     } = state\n//     if (viewModel === null) {\n//         throw new Error('invalid state -- no view value')\n//     }\n//     if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n//         throw new Error('invalid state -- no view value')\n//     }\n//     const { addAppsView } = viewModel.subViews\n//     if (addAppsView === null) {\n//         throw new Error('invalid state -- no view value')\n//     }\n//     return addAppsView\n// }\n\n// function ensureViewModel(state: StoreState): AddAppsViewModel {\n//     const view = ensureView(state)\n//     if (view.viewModel === null) {\n//         throw new Error('invalid state -- no view model')\n//     }\n//     return view.viewModel\n// }\n\n\ntype SearchExpression = Array<RegExp>\n\nfunction applySearch(apps: Array<SelectableApp>, searchExpression: SearchExpression) {\n    return apps.filter((app) => {\n        if (searchExpression.length === 0) {\n            return true\n        }\n        return searchExpression.every((expr) => {\n            return expr.test(app.app.name) ||\n                expr.test(app.app.subtitle) ||\n                expr.test(app.app.moduleName)\n        })\n    })\n}\n\nexport function search(searchBy: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, AddAppsAction>, getState: () => StoreState) => {\n        try {\n            dispatch(searchStart())\n\n            // TODO: better parser\n            const searchExpression = searchBy.split(/[\\s]+/).map((term) => {\n                return new RegExp(term, 'i')\n            })\n\n            const [viewOrgVM, viewModel] = ensureViewModel(getState())\n\n            const {\n                rawApps\n            } = viewModel\n\n            const foundApps = applySearch(rawApps, searchExpression)\n\n            dispatch(searchSuccess(foundApps))\n\n        } catch (ex) {\n            dispatch(searchError(makeError({\n                code: 'error',\n                message: ex.message\n            })))\n        }\n    }\n\n}\n\n// SORT\n\nexport interface Sort {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SORT\n}\nexport interface SortStart {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_START\n}\n\nexport interface SortSuccess {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_SUCCESS\n    apps: Array<SelectableApp>\n}\n\nexport interface SortError {\n    type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_ERROR\n    error: AnError\n}\n\nfunction sortStart(): SortStart {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_START\n    }\n}\n\nfunction sortSuccess(apps: Array<SelectableApp>): SortSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_SUCCESS,\n        apps\n    }\n}\n\nfunction sortError(error: AnError): SortError {\n    return {\n        type: ActionFlag.VIEW_ORG_ADD_APPS_SORT_ERROR,\n        error\n    }\n}\n\nfunction applySort(apps: Array<SelectableApp>, sortBy: string) {\n    switch (sortBy) {\n        case 'name':\n            return apps.sort((a, b) => {\n                return a.app.name.localeCompare(b.app.name)\n            })\n        case 'module':\n            return apps.sort((a, b) => {\n                const moduleMatch = a.app.moduleName.localeCompare(b.app.moduleName)\n                if (!moduleMatch) {\n                    return a.app.name.localeCompare(b.app.name)\n                }\n                return moduleMatch\n            })\n        default:\n            return apps\n    }\n}\n\nexport function sort(sortBy: string) {\n    return async (dispatch: ThunkDispatch<StoreState, void, AddAppsAction>, getState: () => StoreState) => {\n        try {\n            dispatch(sortStart())\n\n            const [viewOrgVM, viewModel] = ensureViewModel(getState())\n\n            const {\n                apps\n            } = viewModel\n\n            // TODO: better parser\n            const sortedApps = applySort(apps.slice(0), sortBy)\n\n            dispatch(sortSuccess(sortedApps))\n        } catch (ex) {\n            dispatch(sortError(makeError({\n                code: 'error',\n                message: ex.message\n            })))\n        }\n    }\n\n}","import * as React from 'react'\nimport MainMenu from '../../../../menu/component'\nimport { Button, Input, Icon, Alert, Select } from 'antd'\nimport './component.css'\nimport { SelectableApp, ResourceRelationToOrg } from '../../../../../types';\nimport App from '../../../../entities/app/loader';\nimport { ChangeEvent } from 'react';\n\nexport interface AddAppsProps {\n    apps: Array<SelectableApp>\n    selectedApp: SelectableApp | null\n    // sortBy: string\n    onFinish: () => void\n    onSelectApp: (appId: string) => void\n    onRequestAssociation: (appId: string) => void\n    onSearch: (searchBy: string) => void\n    onSort: (sortBy: string) => void\n}\n\ninterface AddAppsState {\n}\n\ntype AlertType = 'info' | 'warning' | 'error' | 'success'\n\nexport default class AddApps extends React.Component<AddAppsProps, AddAppsState> {\n    constructor(props: AddAppsProps) {\n        super(props)\n    }\n\n    doSelectApp(app: SelectableApp) {\n        this.props.onSelectApp(app.app.id)\n    }\n\n    doRequestAssociation() {\n        if (this.props.selectedApp) {\n            this.props.onRequestAssociation(this.props.selectedApp.app.id)\n        }\n    }\n\n    doSearch(e: ChangeEvent<HTMLInputElement>) {\n        const search = e.target.value\n        this.props.onSearch(search)\n    }\n\n    doSortBy(sortBy: string) {\n        this.props.onSort(sortBy)\n    }\n\n    renderMenuButtons() {\n        return (\n            <div className=\"ButtonSet\">\n                <div className=\"ButtonSet-button\">\n                    <Button icon=\"rollback\"\n                        type=\"danger\"\n                        onClick={this.props.onFinish}>\n                        Done\n                </Button>\n                </div>\n            </div >\n        )\n    }\n\n    renderSearchBar() {\n        return (\n            <div className=\"AddApps-searchBar\">\n                <div className=\"AddApps-searchInput\">\n                    <Input\n                        onChange={this.doSearch.bind(this)}\n                        style={{ width: '100%' }}\n                        placeholder=\"Filter apps by title\" />\n                </div>\n                <div className=\"AddApps-sortControl\">\n                    <Select\n                        onChange={this.doSortBy.bind(this)}\n                        defaultValue=\"name\"\n                        style={{ width: '10em' }}\n                        dropdownMatchSelectWidth={true}>\n                        <Select.Option value=\"name\" key=\"name\">App</Select.Option>\n                        <Select.Option value=\"module\" key=\"module\">Module</Select.Option>\n                    </Select>\n                </div>\n            </div>\n        )\n    }\n\n    renderAppStatus(app: SelectableApp) {\n        switch (app.relation) {\n            case (ResourceRelationToOrg.NONE):\n                return\n            case (ResourceRelationToOrg.ASSOCIATED):\n                return (\n                    <Icon type=\"check\" style={{ color: 'green' }} />\n                )\n            case (ResourceRelationToOrg.ASSOCIATION_PENDING):\n                return (\n                    <Icon type=\"loading\" style={{ color: 'orange' }} />\n                )\n        }\n    }\n\n    renderApps() {\n        if (this.props.apps.length === 0) {\n            const message = (\n                <React.Fragment>\n                    <p>\n                        You have not authored any released apps\n                    </p>\n                </React.Fragment>\n            )\n            return (\n                <Alert type=\"info\" message={message} />\n            )\n        }\n        const apps = this.props.apps.map((app, index) => {\n            let classes = ['AddApps-app']\n            if (app.selected) {\n                classes.push('Hoverable-selected')\n            } else {\n                classes.push('Hoverable')\n            }\n            return (\n                <div className={classes.join(' ')} key={String(index)} onClick={() => { this.doSelectApp(app) }}>\n                    <div className=\"AddApps-app-statusColumn\">\n                        {this.renderAppStatus(app)}\n                    </div>\n                    <div className=\"AddApps-app-appColumn\">\n                        <App appId={app.app.id} />\n                        {/* <AppBrief app={app.app} /> */}\n                    </div>\n\n                </div>\n            )\n        })\n        return (\n            <div className=\"AddApps-apps\">\n                {apps}\n            </div>\n        )\n    }\n\n    renderAppSelector() {\n        return (\n            <React.Fragment>\n                {this.renderSearchBar()}\n                {this.renderApps()}\n            </React.Fragment>\n        )\n    }\n\n    renderMessage() {\n        const app = this.props.selectedApp\n        let alertType: AlertType\n        let message: string\n        if (this.props.apps.length === 0) {\n            message = 'You have not authored any released apps'\n            alertType = 'info'\n        } else if (app === null) {\n            message = 'Please select an App to associate'\n            alertType = 'info'\n        } else {\n            switch (app.relation) {\n                case (ResourceRelationToOrg.ASSOCIATED):\n                    message = 'This App is already associated'\n                    alertType = 'warning'\n                    break\n                case (ResourceRelationToOrg.ASSOCIATION_PENDING):\n                    message = 'You have requested association of this App'\n                    alertType = 'warning'\n                    break\n                default:\n                    return\n            }\n        }\n\n        return (\n            <Alert\n                type={alertType}\n                style={{ marginBottom: '10px' }}\n                message={message} />\n        )\n    }\n\n    renderSelectedApp() {\n        if (this.props.selectedApp === null) {\n            return\n        }\n        return (\n            <div className=\"AddApps-selectedApp\">\n                <App appId={this.props.selectedApp.app.id} />\n            </div>\n        )\n    }\n\n    renderAppSelectionControls() {\n        if (this.props.selectedApp === null) {\n            return (\n                <Button\n                    disabled\n                    type=\"primary\">\n                    Associate this App\n                </Button>\n            )\n        }\n        switch (this.props.selectedApp.relation) {\n            case (ResourceRelationToOrg.NONE):\n                return (\n                    <Button\n                        onClick={() => { this.doRequestAssociation() }}\n                        type=\"primary\">\n                        Associate this App\n                    </Button>\n                )\n            case (ResourceRelationToOrg.ASSOCIATED):\n                return (\n                    <Button\n                        disabled={true}\n                        type=\"primary\">\n                        Associate this App\n                    </Button>\n                )\n            case (ResourceRelationToOrg.ASSOCIATION_PENDING):\n                return (\n                    <Button\n                        disabled={true}\n                        type=\"primary\">\n                        Associate this App\n                    </Button>\n                )\n        }\n    }\n\n    renderAppAdder() {\n        return (\n            <React.Fragment>\n                {this.renderSelectedApp()}\n                {this.renderMessage()}\n                <div className=\"AddApps-selectionControls\">\n                    {this.renderAppSelectionControls()}\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"AddApps\">\n                <MainMenu buttons={this.renderMenuButtons()} />\n                <div className=\"AddApps-row\">\n                    <div className=\"AddApps-selectColumn\">\n                        <h3>Select an App you have authored</h3>\n                        {this.renderAppSelector()}\n                    </div>\n\n                    <div className=\"AddApps-addColumn\">\n                        <h3>View and Add App</h3>\n                        {this.renderAppAdder()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { SelectableApp, StoreState, ViewOrgViewModelKind } from '../../../../../types'\nimport * as actions from '../../../../../redux/actions/viewOrganization/addApps'\nimport Component from './component'\n\nexport interface OwnProps {\n    onFinish: () => void\n}\n\ninterface StateProps {\n    apps: Array<SelectableApp>\n    selectedApp: SelectableApp | null\n}\n\ninterface DispatchProps {\n    // onSearchUsers: (query: userModel.UserQuery) => void\n    // onSelectUser: (username: string) => void\n    // onSendInvitation: () => void\n    onSelectApp: (appId: string) => void\n    onRequestAssociation: (appId: string) => void\n    onSearch: (searchBy: string) => void\n    onSort: (sortBy: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    if (viewModel.subViews.addAppsView.viewModel === null) {\n        throw new Error(\"argh, null subview view model\")\n    }\n\n    const vm = viewModel.subViews.addAppsView.viewModel\n    return {\n        apps: vm.apps,\n        selectedApp: vm.selectedApp\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        // onSearchUsers: ({ query, excludedUsers }) => {\n        //     dispatch(actions.inviteUserSearchUsers({ query, excludedUsers }) as any)\n        // },\n        // onSelectUser: (username: string) => {\n        //     dispatch(actions.selectUser(username) as any)\n        // },\n        // onSendInvitation: () => {\n        //     dispatch(actions.sendInvitation() as any)\n        // }\n        onSelectApp: (appId: string) => {\n            dispatch(actions.select(appId) as any)\n        },\n        onRequestAssociation: (appId: string) => {\n            dispatch(actions.requestAssociation(appId) as any)\n        },\n        onSearch: (searchBy: string) => {\n            dispatch(actions.search(searchBy) as any)\n        },\n        onSort: (sortBy: string) => {\n            dispatch(actions.sort(sortBy) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import * as React from 'react'\n\nimport Container from './reduxAdapter'\nimport {\n    StoreState, ViewOrgViewModelKind, ViewState,\n    View, NoneViewModel, AddAppsViewModel\n} from '../../../../../types';\n\nexport interface LoaderProps {\n    view: View<AddAppsViewModel | NoneViewModel>\n    onLoad: () => void\n    onUnload: () => void\n    onFinish: () => void\n}\n\ninterface LoaderState {\n}\n\nclass Loader extends React.Component<LoaderProps, LoaderState> {\n    constructor(props: LoaderProps) {\n        super(props)\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading ...\n                {' '}\n                <Spin />\n            </div>\n        )\n        return (\n            <Alert type=\"info\" message={message} style={{\n                width: '20em',\n                padding: '20px',\n                margin: '20px auto'\n            }} />\n        )\n    }\n\n    renderError(error: AnError) {\n        return (\n            <div>\n                Error loading \"add apps\" tool.\n                <div>\n                    {error.message}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                return this.renderLoading()\n            case ViewState.LOADING:\n                return this.renderLoading()\n            case ViewState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error)\n                } else {\n                    return this.renderError(makeError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    }))\n                }\n            case ViewState.OK:\n            default:\n                return (\n                    <Container onFinish={this.props.onFinish} />\n                )\n        }\n    }\n\n    componentDidMount() {\n        switch (this.props.view.state) {\n            case ViewState.NONE:\n                this.props.onLoad()\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n}\n\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../../../redux/actions/viewOrganization/addApps'\nimport { Spin, Alert } from 'antd';\nimport { AnError, makeError } from '../../../../../lib/error';\n\nexport interface OwnProps {\n}\n\ninterface StateProps {\n    view: View<AddAppsViewModel>\n}\n\ninterface DispatchProps {\n    onLoad: () => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const v = state.views.viewOrgView\n    const vm1 = v.viewModel\n    if (vm1 === null) {\n        throw new Error('vm is null')\n    }\n    if (vm1.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error('not the right vm')\n    }\n    return {\n        view: vm1.subViews.addAppsView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(actions.load() as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Loader)","import * as React from 'react';\nimport { Marked } from 'marked-ts';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { ViewOrgViewModel, SubViews } from '../../../../types';\nimport { Button, Modal, Icon, Tooltip, Card, Dropdown, Menu, Alert, Tabs } from 'antd';\nimport Header from '../../../Header';\nimport Members from './members/reduxAdapter';\nimport Requests from './requests/container';\nimport BriefOrganizationHeader from './BriefOrganizationHeader';\nimport RelatedOrganizations from './relatedOrgs/reduxAdapter';\nimport ManageRelatedOrganizations from './manageRelatedOrganizations/loader';\nimport InviteUser from './inviteUser/loader';\nimport Narratives from './narratives/component';\nimport ManageMembership from './manageMembership/loader';\nimport EditOrganization from './editOrganization/loader';\nimport RequestAddNarrative from './requestAddNarrative/loader';\nimport * as requestModel from '../../../../data/models/requests';\nimport * as orgModel from '../../../../data/models/organization/model';\nimport './component.css';\nimport OrgMenu from './OrgMenu';\nimport Apps from './apps/component';\nimport AddApps from './addApps/loader';\n\nenum NavigateTo {\n    NONE = 0,\n    VIEW_MEMBERS,\n    MANAGE_REQUESTS,\n    VIEW_ORGANIZATION,\n    BROWSER\n}\n\nenum AccordionState {\n    UP = 0,\n    DOWN\n}\n\nexport interface ViewOrganizationState {\n    showInfo: boolean;\n    navigateTo: NavigateTo;\n    requestAccess: {\n        narrative: orgModel.NarrativeResource | null;\n    };\n    accordionState: AccordionState;\n    subView: SubViews;\n}\n\nexport interface ViewOrganizationProps {\n    viewModel: ViewOrgViewModel;\n    onViewOrg: (id: string) => void;\n    onReloadOrg: (id: string) => void;\n    onJoinOrg: () => void;\n    onCancelJoinRequest: (requestId: requestModel.RequestID) => void;\n    onAcceptInvitation: (requestId: requestModel.RequestID) => void;\n    onRejectInvitation: (requestId: requestModel.RequestID) => void;\n    onRemoveNarrative: (narrative: orgModel.NarrativeResource) => void;\n    onGetViewAccess: (narrative: orgModel.NarrativeResource) => void;\n    onAcceptRequest: (requestId: requestModel.RequestID) => void;\n    onSortNarratives: (sortBy: string) => void;\n    onSearchNarratives: (searchBy: string) => void;\n    onRemoveApp: (appId: string) => void;\n}\n\nclass ViewOrganization extends React.Component<ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: ViewOrganizationProps) {\n        super(props);\n\n        this.state = {\n            showInfo: false,\n            navigateTo: NavigateTo.NONE,\n            requestAccess: {\n                narrative: null\n            },\n            accordionState: AccordionState.UP,\n            subView: SubViews.NORMAL\n        };\n    }\n\n    onManageRelatedOrgs() {\n        this.setState({ subView: SubViews.MANAGE_RELATED_ORGS });\n    }\n\n    onInviteUser() {\n        this.setState({ subView: SubViews.INVITE_USER });\n    }\n\n    onAssociateApp() {\n        this.setState({ subView: SubViews.ADD_APP });\n    }\n\n    doAddRelatedOrgs() {\n        this.setState({ subView: SubViews.MANAGE_RELATED_ORGS });\n    }\n\n    onChangeSubView(subView: SubViews) {\n        this.setState({ subView });\n    }\n\n    onViewMembers() {}\n\n    onJoinClick() {\n        this.props.onJoinOrg();\n    }\n\n    onCancelJoinRequest() {\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation;\n        this.props.onCancelJoinRequest(relation.requestId);\n    }\n\n    onAcceptInvitation() {\n        if (!this.props.viewModel.organization) {\n            return;\n        }\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation;\n        this.props.onAcceptInvitation(relation.requestId);\n    }\n\n    onRejectInvitation() {\n        if (!this.props.viewModel.organization) {\n            return;\n        }\n        const relation = this.props.viewModel.relation as orgModel.MembershipRequestPendingRelation;\n        this.props.onRejectInvitation(relation.requestId);\n    }\n\n    onRequestAddNarrative() {\n        this.setState({ subView: SubViews.ADD_NARRATIVE });\n    }\n\n    onRemoveNarrative(narrative: orgModel.NarrativeResource) {\n        this.props.onRemoveNarrative(narrative);\n    }\n\n    onNarrativeMenu(key: string, narrative: orgModel.NarrativeResource) {\n        switch (key) {\n            case 'removeNarrative':\n                this.props.onRemoveNarrative(narrative);\n                break;\n        }\n    }\n\n    onShowInfo() {\n        // this.setState({ showInfo: true })\n        Modal.info({\n            title: 'View Organization Help',\n            width: '50em',\n            content: <div>Organization help here...</div>\n        });\n    }\n\n    onRequestShare(narrative: orgModel.NarrativeResource) {\n        // Drawer.\n        // Drawer.open({\n        //     title: 'Request Access to Narrative',\n        //     content: 'Are you sure?'\n        // })\n        this.setState({ requestAccess: { narrative: narrative } });\n        // alert('not yet implemented')\n    }\n\n    onCloseRequestAccess() {\n        this.setState({ requestAccess: { narrative: null } });\n    }\n\n    buildFooter() {\n        return (\n            <div>\n                {this.renderEditRow()}\n                {/* <p style={{ textAlign: 'center' }}>\n                    You may also  <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink> to the organizations browser.\n                </p> */}\n            </div>\n        );\n    }\n\n    renderEditRow() {\n        if (\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.OWNER\n        ) {\n            return (\n                <p style={{ textAlign: 'center' }}>\n                    As the owner of this group, you may{' '}\n                    <NavLink to={`/editOrganization/${this.props.viewModel.organization!.id}`}>\n                        <Button icon=\"edit\">Edit</Button>\n                    </NavLink>{' '}\n                    it.\n                </p>\n            );\n        }\n    }\n\n    renderEditButton() {\n        if (\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.OWNER\n        ) {\n            return (\n                <NavLink to={`/editOrganization/${this.props.viewModel.organization!.id}`}>\n                    <Button icon=\"edit\">Edit This Organization</Button>\n                </NavLink>\n            );\n        }\n    }\n\n    renderOrg() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.viewModel.organization) {\n            return;\n        }\n        return (\n            <div className=\"ViewOrganization-org-description-org scrollable-flex-column\">\n                <div\n                    className=\"ViewOrganization-org-description\"\n                    dangerouslySetInnerHTML={{\n                        __html: Marked.parse(this.props.viewModel.organization.description || '')\n                    }}\n                />\n            </div>\n        );\n    }\n\n    // TODO: this should be a component, so we can pick up all the good stuff, which is now commented out...\n    renderOwnerInfo(org: orgModel.Organization) {\n        return (\n            <div className=\"ownerTable\">\n                <div className=\"proprietorCol\">\n                    <div className=\"owner\">\n                        <a href={'/#people/' + org.owner.username} target=\"_blank\">\n                            {org.owner.username}\n                        </a>{' '}\n                        ❨{org.owner.username}❩\n                    </div>\n                    {/* <div className=\"profileOrganization\">\n                        {org.owner.user.organization}\n                    </div>\n                    <div className=\"profileOrganization\">\n                        {org.owner.user.city}, {org.owner.user.state}, {org.owner.user.country}\n                    </div> */}\n                </div>\n            </div>\n        );\n    }\n\n    renderRelation(relation: orgModel.Relation) {\n        switch (relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                return (\n                    <span>\n                        <Icon type=\"stop\" />\n                        None\n                    </span>\n                );\n            case orgModel.UserRelationToOrganization.VIEW:\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org; you may request membership\"\n                    >\n                        <div>\n                            <Icon type=\"eye\" style={{ marginRight: '4px' }} />\n                            You are not a member of this Organization\n                        </div>\n                        <div style={{ marginTop: '10px' }}>\n                            <Button onClick={this.onJoinClick.bind(this)}>Join this Organization</Button>\n                        </div>\n                    </Tooltip>\n                );\n            case orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING:\n                return (\n                    <div>\n                        <div>\n                            <Icon type=\"user\" style={{ color: 'orange' }} spin={true} />\n                            Your membership <b>request</b> is pending\n                        </div>\n                        <div>\n                            <Button icon=\"delete\" type=\"danger\" onClick={this.onCancelJoinRequest.bind(this)}>\n                                Cancel Request\n                            </Button>\n                        </div>\n                    </div>\n                );\n            case orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING:\n                return (\n                    <div>\n                        <div>\n                            <Icon type=\"user\" style={{ color: 'blue' }} />\n                            You have been <b>invited</b> to join this Organization\n                        </div>\n                        <div style={{ marginTop: '10px' }}>\n                            <Button icon=\"check\" type=\"default\" onClick={this.onAcceptInvitation.bind(this)}>\n                                Accept Invitation\n                            </Button>\n                            <Button icon=\"stop\" type=\"danger\" onClick={this.onRejectInvitation.bind(this)}>\n                                Reject Invitation\n                            </Button>\n                        </div>\n                    </div>\n                );\n            case orgModel.UserRelationToOrganization.MEMBER:\n                return (\n                    <span>\n                        <Icon type=\"user\" />\n                        Member\n                    </span>\n                );\n            case orgModel.UserRelationToOrganization.ADMIN:\n                return (\n                    <span>\n                        <Icon type=\"unlock\" />\n                        Admin\n                    </span>\n                );\n            case orgModel.UserRelationToOrganization.OWNER:\n                return (\n                    <Tooltip placement=\"bottomRight\" mouseEnterDelay={0.5} title=\"You own this org\">\n                        <span>\n                            <Icon type=\"unlock\" theme=\"filled\" style={{ marginRight: '4px' }} />\n                            You own this organization\n                        </span>\n                    </Tooltip>\n                );\n        }\n    }\n\n    isMember(): boolean {\n        if (!this.props.viewModel.organization) {\n            return false;\n        }\n        if (\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.OWNER ||\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.MEMBER\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    renderMembers() {\n        if (!this.isMember()) {\n            return <Alert message=\"Membership is only available to members\" type=\"info\" />;\n        }\n        return (\n            <Members\n                organization={this.props.viewModel.organization}\n                relation={this.props.viewModel.relation}\n                onReloadOrg={this.props.onReloadOrg}\n            />\n        );\n    }\n\n    renderGroupRequestsRow() {\n        const relation = this.props.viewModel.relation;\n        const requests = this.props.viewModel.groupRequests;\n        const invitations = this.props.viewModel.groupInvitations;\n\n        if (\n            !(\n                relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n                relation.type === orgModel.UserRelationToOrganization.OWNER\n            )\n        ) {\n            return;\n        }\n        // TODO: bad. should not get here in this case...\n        if (requests === null || invitations === null) {\n            return;\n        }\n        let inner;\n        if (requests.length) {\n            inner = <div>group has no pending requests</div>;\n        } else {\n            inner = (\n                <div>\n                    <div>\n                        <Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"orange\" /> group has{' '}\n                        <span style={{ fontWeight: 'bold' }}>{requests.length}</span> pending request\n                        {requests.length > 1 ? 's' : ''} and{' '}\n                        <span style={{ fontWeight: 'bold' }}>{invitations.length}</span> pending request\n                        {invitations.length > 1 ? 's' : ''}\n                    </div>\n                    <div>\n                        <NavLink to={'/manageOrganizationRequests/' + this.props.viewModel.organization.id}>\n                            <Button>Manage Requests</Button>\n                        </NavLink>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col1\">\n                    <span className=\"label\">admin</span>\n                </div>\n                <div className=\"col2\">\n                    <div className=\"relation\">{inner}</div>\n                </div>\n            </div>\n        );\n    }\n\n    renderGroupRequests(requests: Array<requestModel.Request>, invitations: Array<requestModel.Request>) {\n        if (!requests.length) {\n            return <div className=\"message\">No pending group requests</div>;\n        } else {\n            return (\n                <div>\n                    <div>\n                        <Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"orange\" /> There{' '}\n                        {requests.length > 1 ? 'are' : 'is'}{' '}\n                        <span style={{ fontWeight: 'bold' }}>{requests.length}</span> pending request\n                        {requests.length > 1 ? 's' : ''} and{' '}\n                        <span style={{ fontWeight: 'bold' }}>{invitations.length}</span> pending invitation\n                        {invitations.length > 1 ? 's' : ''}\n                    </div>\n                    <div>\n                        <NavLink to={'/manageOrganizationRequests/' + this.props.viewModel.organization!.id}>\n                            <Button>Manage Requests</Button>\n                        </NavLink>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    renderRelationClass(relation: orgModel.Relation) {\n        switch (relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                return 'infoBox';\n            case orgModel.UserRelationToOrganization.VIEW:\n                return 'infoBox';\n            case orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING:\n                return 'infoBox relationRequestPending';\n            case orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING:\n                return 'infoBox relationInvitationPending';\n            case orgModel.UserRelationToOrganization.MEMBER:\n                return 'infoBox';\n            case orgModel.UserRelationToOrganization.ADMIN:\n                return 'infoBox';\n            case orgModel.UserRelationToOrganization.OWNER:\n                return 'infoBox';\n        }\n    }\n\n    renderUserRelationship() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        return (\n            <form className=\"infoTable\">\n                {/* <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">your relation</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className='relation'>\n                            {this.renderRelation(this.props.organization)}\n                        </div>\n                    </div>\n                </div> */}\n                {this.renderGroupRequestsRow()}\n            </form>\n        );\n    }\n\n    renderAdminTasks() {\n        const relation = this.props.viewModel.relation;\n        if (\n            !(\n                relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n                relation.type === orgModel.UserRelationToOrganization.OWNER\n            )\n        ) {\n            return;\n        }\n        // TODO: ditto -- silly to test both conditions (this is only to make TS happy btw)\n        const { groupRequests, groupInvitations } = this.props.viewModel;\n        if (groupInvitations === null || groupRequests === null) {\n            return;\n        }\n        const count = groupRequests.length + groupInvitations.length;\n        const title = (\n            <span>\n                <Icon type=\"unlock\" /> group requests <span className=\"ViewOrganization-titleCount\">({count})</span>\n            </span>\n        );\n        return (\n            <div className=\"ViewOrganization-adminTasksBox\">\n                <Card\n                    className=\"slimCard ViewOrganization-adminTasksCard\"\n                    headStyle={{ backgroundColor: 'gray', color: 'white' }}\n                    title={title}\n                >\n                    {this.renderGroupRequests(groupRequests, groupInvitations)}\n                </Card>\n            </div>\n        );\n    }\n\n    renderJoinButton() {\n        if (!this.props.viewModel.organization) {\n            return;\n        }\n        if (this.props.viewModel.relation.type !== orgModel.UserRelationToOrganization.VIEW) {\n            return;\n        }\n        return <Button onClick={this.onJoinClick.bind(this)}>Join this Organization</Button>;\n    }\n\n    renderLoadingHeader() {\n        const breadcrumbs = <span>Loading Org...</span>;\n        return <Header breadcrumbs={breadcrumbs} />;\n    }\n\n    renderMembersTab() {\n        return (\n            <div className=\"ViewOrganization-membersCol scrollable-flex-column\">\n                {this.renderMembersToolbar()}\n                {this.renderMembers()}\n            </div>\n        );\n    }\n\n    onAcceptRequest(request: requestModel.Request) {\n        this.props.onAcceptRequest(request.id);\n    }\n\n    renderMembersToolbar() {\n        switch (this.props.viewModel.relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                return;\n            case orgModel.UserRelationToOrganization.MEMBER:\n                return;\n            case orgModel.UserRelationToOrganization.ADMIN:\n            case orgModel.UserRelationToOrganization.OWNER:\n                return (\n                    <div className=\"ViewOrganization-tabPaneToolbar\">\n                        <Tooltip placement=\"bottomRight\" title=\"Invite one or more users to this organization\">\n                            <Button size=\"small\" className=\"Button-important\" onClick={this.onInviteUser.bind(this)}>\n                                <Icon type=\"mail\" />\n                                Invite Users\n                            </Button>\n                        </Tooltip>\n                    </div>\n                );\n        }\n    }\n\n    renderRelatedOrgsToolbar() {\n        switch (this.props.viewModel.relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                return;\n            case orgModel.UserRelationToOrganization.MEMBER:\n                return;\n            case orgModel.UserRelationToOrganization.ADMIN:\n            case orgModel.UserRelationToOrganization.OWNER:\n                return (\n                    <div className=\"ViewOrganization-tabPaneToolbar\">\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            title=\"Add one or more other organizations as 'related' to this one\"\n                        >\n                            <Button\n                                size=\"small\"\n                                className=\"Button-important\"\n                                onClick={this.doAddRelatedOrgs.bind(this)}\n                            >\n                                <Icon type=\"team\" />\n                                Add Related Orgs\n                            </Button>\n                        </Tooltip>\n                    </div>\n                );\n        }\n    }\n\n    renderToolbarButtons() {\n        switch (this.props.viewModel.relation.type) {\n            case orgModel.UserRelationToOrganization.NONE:\n                return;\n            case orgModel.UserRelationToOrganization.MEMBER:\n                return;\n            case orgModel.UserRelationToOrganization.ADMIN:\n                return (\n                    <React.Fragment>\n                        <Tooltip placement=\"bottomRight\" title=\"Invite a user to this organization\">\n                            <Button size=\"small\" onClick={this.onInviteUser.bind(this)}>\n                                <Icon type=\"mail\" />\n                            </Button>\n                        </Tooltip>\n                    </React.Fragment>\n                );\n            case orgModel.UserRelationToOrganization.OWNER:\n                return (\n                    <React.Fragment>\n                        <Tooltip placement=\"bottomRight\" title=\"Invite a user to this organization\">\n                            <Button size=\"small\" onClick={this.onInviteUser.bind(this)}>\n                                <Icon type=\"mail\" />\n                            </Button>\n                        </Tooltip>\n                    </React.Fragment>\n                );\n        }\n    }\n\n    renderCombo() {\n        const isAdmin =\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.ADMIN ||\n            this.props.viewModel.relation.type === orgModel.UserRelationToOrganization.OWNER;\n\n        const isMember = this.props.viewModel.organization.isMember;\n\n        // if (!isMember) {\n        //     return (\n        //         <p style={{ fontStyle: 'italic' }}>\n        //             The membership list is only available to members.\n        //         </p>\n        //     )\n        // }\n\n        const tabs = [];\n\n        let memberCount;\n        if (this.props.viewModel.organization.memberCount - 1) {\n            memberCount = String(this.props.viewModel.organization.memberCount - 1);\n        } else {\n            memberCount = 'Ø';\n        }\n        tabs.push(\n            <Tabs.TabPane\n                tab={\n                    <span>\n                        <Icon type=\"team\" />\n                        Members <span className=\"ViewOrganization-tabCount\">({memberCount})</span>\n                    </span>\n                }\n                key=\"members\"\n                style={{ flexDirection: 'column' }}\n            >\n                {this.renderMembersTab()}\n            </Tabs.TabPane>\n        );\n\n        if (isMember) {\n            if (isAdmin) {\n                const totalRequestCount =\n                    this.props.viewModel.requestInbox.length + this.props.viewModel.requestOutbox.length;\n                const totalRequests = <span className=\"ViewOrganization-tabCount\">({totalRequestCount || 'Ø'})</span>;\n                tabs.push(\n                    <Tabs.TabPane\n                        tab={\n                            <span>\n                                <Icon type=\"inbox\" />\n                                Requests {totalRequests}{' '}\n                            </span>\n                        }\n                        key=\"inbox\"\n                        style={{ flexDirection: 'column' }}\n                    >\n                        <Requests\n                            inbox={this.props.viewModel.requestInbox}\n                            outbox={this.props.viewModel.requestOutbox}\n                            relation={this.props.viewModel.relation}\n                        />\n                    </Tabs.TabPane>\n                );\n            } else {\n                const outboxSize = this.props.viewModel.requestOutbox.length;\n                let titleCount;\n                if (outboxSize) {\n                    titleCount = String(outboxSize);\n                } else {\n                    titleCount = 'Ø';\n                }\n                tabs.push(\n                    <Tabs.TabPane\n                        tab={\n                            <span>\n                                <Icon type=\"inbox\" />\n                                Requests <span className=\"ViewOrganization-tabCount\">({titleCount})</span>\n                            </span>\n                        }\n                        key=\"outbox\"\n                        style={{ flexDirection: 'column' }}\n                    >\n                        <Requests\n                            inbox={[]}\n                            outbox={this.props.viewModel.requestOutbox}\n                            relation={this.props.viewModel.relation}\n                        />\n                    </Tabs.TabPane>\n                );\n            }\n        }\n\n        const relatedOrgCount = this.props.viewModel.organization.relatedOrganizations.length;\n        const relatedOrgTab = (\n            <span>\n                <Icon type=\"team\" />\n                Related Orgs <span className=\"ViewOrganization-tabCount\">({relatedOrgCount})</span>\n            </span>\n        );\n        tabs.push(\n            <Tabs.TabPane tab={relatedOrgTab} key=\"relatedorgs\" style={{ flexDirection: 'column' }}>\n                {this.renderRelatedOrgsToolbar()}\n                <RelatedOrganizations\n                    relatedOrganizations={this.props.viewModel.organization.relatedOrganizations}\n                    organization={this.props.viewModel.organization}\n                    onManageRelatedOrgs={() => {\n                        this.onManageRelatedOrgs();\n                    }}\n                />\n            </Tabs.TabPane>\n        );\n\n        return (\n            <Tabs\n                defaultActiveKey=\"members\"\n                className=\"ViewOrganization-tabs\"\n                animated={false}\n                size=\"small\"\n                tabPosition=\"top\"\n            >\n                {tabs}\n            </Tabs>\n        );\n    }\n\n    renderMenuButtons() {\n        return (\n            <span className=\"ButtonSet\">\n                <span className=\"ButtonSet-button\">\n                    <div className=\"IconButton\" onClick={this.onNavigateToBrowser.bind(this)}>\n                        <Icon type=\"close\" />\n                    </div>\n                    {/* <Button type=\"default\" onClick={this.onNavigateToBrowser.bind(this)} >\n                        <Icon type=\"close\" />{' '}Back\n                    </Button> */}\n                </span>\n            </span>\n        );\n    }\n\n    onNavigateToBrowser() {\n        this.setState({ navigateTo: NavigateTo.BROWSER });\n    }\n\n    onMenuClick({ key }: { key: string }) {\n        switch (key) {\n            case 'manageMyMembership':\n                this.setState({ subView: SubViews.MANAGE_MEMBERSHIP });\n                break;\n            case 'viewMembers':\n                this.setState({ navigateTo: NavigateTo.VIEW_MEMBERS });\n                break;\n            case 'editOrg':\n                this.setState({ subView: SubViews.EDIT_ORGANIZATION });\n                break;\n            case 'inviteUser':\n                this.setState({ subView: SubViews.INVITE_USER });\n                break;\n            case 'manageRequests':\n                this.setState({ navigateTo: NavigateTo.MANAGE_REQUESTS });\n                break;\n            case 'addNarrative':\n                this.setState({ subView: SubViews.ADD_NARRATIVE });\n                break;\n            case 'addApp':\n                this.setState({ subView: SubViews.ADD_APP });\n                break;\n            case 'manageRelatedOrgs':\n                this.setState({ subView: SubViews.MANAGE_RELATED_ORGS });\n                break;\n        }\n    }\n\n    toggleAccordion() {\n        this.setState({\n            accordionState: this.state.accordionState === AccordionState.UP ? AccordionState.DOWN : AccordionState.UP\n        });\n    }\n\n    renderAccordionControl() {\n        let iconType;\n        if (this.state.accordionState === AccordionState.UP) {\n            iconType = 'caret-down';\n        } else {\n            iconType = 'caret-up';\n        }\n        return (\n            <div className=\"ViewOrganization-accordion\" onClick={this.toggleAccordion.bind(this)}>\n                <div className=\"ViewOrganization-accordionCol1\">\n                    <div className=\"ViewOrganization-accordionRow1\" />\n                    <div className=\"ViewOrganization-accordionRow2\" />\n                    <div className=\"ViewOrganization-accordionRow3\" />\n                </div>\n                <div className=\"ViewOrganization-accordionCol2\">\n                    <div className=\"ViewOrganization-accordionRow1\" />\n                    <div className=\"ViewOrganization-accordionRow2\">\n                        <Icon type={iconType} />\n                    </div>\n                    <div className=\"ViewOrganization-accordionRow3\" />\n                    {/* <div className=\"ViewOrganization-accordionIcon\">\n                        <Icon type={iconType} />\n                    </div> */}\n                </div>\n                <div className=\"ViewOrganization-accordionCol3\">\n                    <div className=\"ViewOrganization-accordionRow1\" />\n                    <div className=\"ViewOrganization-accordionRow2\" />\n                    <div className=\"ViewOrganization-accordionRow3\" />\n                </div>\n            </div>\n        );\n    }\n\n    renderDescriptionTab() {\n        if (!this.props.viewModel.organization) {\n            return;\n        }\n        return (\n            <div className=\"ViewOrganization-org-description-org scrollable-flex-column\">\n                <div\n                    className=\"ViewOrganization-org-description\"\n                    dangerouslySetInnerHTML={{\n                        __html: Marked.parse(this.props.viewModel.organization.description || '')\n                    }}\n                />\n            </div>\n        );\n    }\n\n    renderNarrativesTab() {\n        return (\n            <Narratives\n                organization={this.props.viewModel.organization}\n                narratives={this.props.viewModel.narratives.narratives}\n                relation={this.props.viewModel.relation}\n                sortNarrativesBy={this.props.viewModel.narratives.sortBy}\n                searchNarrativesBy={this.props.viewModel.narratives.searchBy}\n                onSortNarratives={this.props.onSortNarratives}\n                onSearchNarratives={this.props.onSearchNarratives}\n                onRemoveNarrative={this.props.onRemoveNarrative}\n                onGetViewAccess={this.props.onGetViewAccess}\n                onRequestAddNarrative={this.onRequestAddNarrative.bind(this)}\n            />\n        );\n    }\n\n    renderAppsTab() {\n        return (\n            <Apps\n                organization={this.props.viewModel.organization}\n                apps={this.props.viewModel.apps}\n                onAssociateApp={this.onAssociateApp.bind(this)}\n                onRemoveApp={this.props.onRemoveApp.bind(this)}\n            />\n        );\n    }\n\n    renderMainTabs() {\n        const tabs = [];\n\n        const aboutTabTitle = (\n            <span>\n                <Icon type=\"info-circle\" />\n                About\n            </span>\n        );\n        tabs.push(\n            <Tabs.TabPane tab={aboutTabTitle} key=\"about\" style={{ flexDirection: 'column' }}>\n                {this.renderDescriptionTab()}\n            </Tabs.TabPane>\n        );\n\n        const narrativeCount = this.props.viewModel.narratives.narratives.length;\n        const narrativesTabTitle = (\n            <span>\n                <Icon type=\"file\" />\n                Narratives <span className=\"ViewOrganization-tabCount\">({narrativeCount})</span>\n            </span>\n        );\n\n        tabs.push(\n            <Tabs.TabPane tab={narrativesTabTitle} key=\"narratives\" style={{ flexDirection: 'column' }}>\n                {this.renderNarrativesTab()}\n            </Tabs.TabPane>\n        );\n\n        const appCount = this.props.viewModel.organization.appCount;\n        const appsTabTitle = (\n            <span>\n                <Icon type=\"appstore\" />\n                Apps <span className=\"ViewOrganization-tabCount\">({appCount})</span>\n            </span>\n        );\n        tabs.push(\n            <Tabs.TabPane tab={appsTabTitle} key=\"apps\" style={{ flexDirection: 'column' }}>\n                {this.renderAppsTab()}\n            </Tabs.TabPane>\n        );\n\n        let defaultActiveKey: string;\n        if (this.props.viewModel.organization.isMember) {\n            defaultActiveKey = 'narratives';\n        } else {\n            defaultActiveKey = 'about';\n        }\n\n        return (\n            <Tabs\n                defaultActiveKey={defaultActiveKey}\n                className=\"ViewOrganization-tabs\"\n                animated={false}\n                size=\"small\"\n                tabPosition=\"top\"\n            >\n                {tabs}\n            </Tabs>\n        );\n    }\n\n    renderNormalView() {\n        return (\n            <div className=\"ViewOrganization-mainRow scrollable-flex-column\">\n                <div className=\"ViewOrganization-mainColumn  scrollable-flex-column\">{this.renderMainTabs()}</div>\n                <div className=\"ViewOrganization-infoColumn\">{this.renderCombo()}</div>\n            </div>\n        );\n    }\n\n    renderManageRelatedOrgsView() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return (\n            <ManageRelatedOrganizations\n                // organization={this.props.viewModel.organization}\n                // relatedOrganizations={[]}\n                // relation={this.props.viewModel.relation}\n                onFinish={onFinish}\n            />\n        );\n    }\n\n    renderInviteUsersView() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return <InviteUser onFinish={onFinish} organizationId={this.props.viewModel.organization.id} />;\n    }\n\n    renderManageMembership() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return <ManageMembership onFinish={onFinish} organizationId={this.props.viewModel.organization.id} />;\n    }\n\n    renderEditOrganization() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return <EditOrganization onFinish={onFinish} organizationId={this.props.viewModel.organization.id} />;\n    }\n\n    renderAddNarrative() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return <RequestAddNarrative onFinish={onFinish} organizationId={this.props.viewModel.organization.id} />;\n    }\n\n    renderAddApp() {\n        const onFinish = () => {\n            this.setState({\n                subView: SubViews.NORMAL\n            });\n        };\n        return <AddApps onFinish={onFinish} />;\n    }\n\n    getSubView() {\n        switch (this.state.subView) {\n            case SubViews.MANAGE_RELATED_ORGS:\n                return this.renderManageRelatedOrgsView();\n            case SubViews.INVITE_USER:\n                return this.renderInviteUsersView();\n            case SubViews.MANAGE_MEMBERSHIP:\n                return this.renderManageMembership();\n            case SubViews.EDIT_ORGANIZATION:\n                return this.renderEditOrganization();\n            case SubViews.ADD_NARRATIVE:\n                return this.renderAddNarrative();\n            case SubViews.ADD_APP:\n                return this.renderAddApp();\n            case SubViews.NORMAL:\n            default:\n                return this.renderNormalView();\n        }\n    }\n\n    render() {\n        switch (this.state.navigateTo) {\n            case NavigateTo.BROWSER:\n                return <Redirect push to={'/organizations'} />;\n            case NavigateTo.NONE:\n            default:\n            // do nothing.\n        }\n\n        const uorg = this.props.viewModel.organization as unknown;\n        const borg = uorg as orgModel.BriefOrganization;\n\n        // TODO: only doing this here so I don't have to do a redux adapter for the menu today...\n\n        const orgMenu = (\n            <OrgMenu\n                viewModel={this.props.viewModel}\n                onJoinOrg={this.props.onJoinOrg}\n                onCancelJoinRequest={this.props.onCancelJoinRequest}\n                onAcceptInvitation={this.props.onAcceptInvitation}\n                onRejectInvitation={this.props.onRejectInvitation}\n                onChangeSubView={this.onChangeSubView.bind(this)}\n            />\n        );\n\n        return (\n            <div className=\"ViewOrganization  scrollable-flex-column\">\n                <div className=\"ViewOrganization-organizationBox\">\n                    <BriefOrganizationHeader\n                        organization={borg}\n                        openRequestsStatus={this.props.viewModel.openRequest}\n                        orgMenu={orgMenu}\n                        onNavigateToBrowser={this.onNavigateToBrowser.bind(this)}\n                    />\n                </div>\n                {this.getSubView()}\n            </div>\n        );\n    }\n}\n\nexport default ViewOrganization;\n","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, ViewOrgViewModelKind, ViewOrgViewModel } from '../../../../types'\nimport * as actions from '../../../../redux/actions/viewOrg'\nimport * as acceptInboxRequestActions from '../../../../redux/actions/viewOrganization/acceptInboxRequest'\n\nimport ViewOrganization from './component'\n\nimport * as orgModel from '../../../../data/models/organization/model'\nimport * as requestModel from '../../../../data/models/requests'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    viewModel: ViewOrgViewModel\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onViewOrg: (id: string) => void\n    onReloadOrg: (id: string) => void\n    onJoinOrg: () => void\n    onCancelJoinRequest: (requestId: requestModel.RequestID) => void\n    onAcceptInvitation: (requestId: requestModel.RequestID) => void\n    onRejectInvitation: (requestId: requestModel.RequestID) => void\n    onRemoveNarrative: (narrative: orgModel.NarrativeResource) => void\n    onGetViewAccess: (narrative: orgModel.NarrativeResource) => void\n    onAcceptRequest: (requestId: requestModel.RequestID) => void\n    onSortNarratives: (sortBy: string) => void\n    onSearchNarratives: (searchBy: string) => void\n    onRemoveApp: (appId: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\nfunction mapStateToProps(state: StoreState): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.NORMAL) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        viewModel\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onViewOrg: (id: string) => {\n            dispatch(actions.load(id) as any)\n        },\n        onReloadOrg: (id: string) => {\n            dispatch(actions.reload(id) as any)\n        },\n        onJoinOrg: () => {\n            dispatch(actions.viewOrgJoinRequest() as any)\n        },\n        onCancelJoinRequest: (requestId: requestModel.RequestID) => {\n            dispatch(actions.viewOrgCancelJoinRequest(requestId) as any)\n        },\n        onAcceptInvitation: (requestId: requestModel.RequestID) => {\n            dispatch(actions.acceptJoinInvitation(requestId) as any)\n        },\n        onRejectInvitation: (requestId: requestModel.RequestID) => {\n            dispatch(actions.rejectJoinInvitation(requestId) as any)\n        },\n        onRemoveNarrative: (narrative: orgModel.NarrativeResource) => {\n            dispatch(actions.removeNarrative(narrative) as any)\n        },\n        onGetViewAccess: (narrative: orgModel.NarrativeResource) => {\n            dispatch(actions.accessNarrative(narrative) as any)\n        },\n        onAcceptRequest: (requestId: requestModel.RequestID) => {\n            dispatch(acceptInboxRequestActions.acceptRequest(requestId) as any)\n        },\n        onSortNarratives: (sortBy: string) => {\n            dispatch(actions.sortNarratives(sortBy) as any)\n        },\n        onSearchNarratives: (searchBy: string) => {\n            dispatch(actions.searchNarratives(searchBy) as any)\n        },\n        onRemoveApp: (appId: string) => {\n            dispatch(actions.removeApp(appId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ViewOrganization) \n\n","import * as React from 'react'\n\nimport './component.css'\n\nimport { Button, Modal, Icon, Alert } from 'antd'\nimport Header from '../../../Header'\nimport * as orgModel from '../../../../data/models/organization/model'\nimport * as requestModel from '../../../../data/models/requests'\n\nenum NavigateTo {\n    NONE = 0,\n    REQUEST_ADD_NARRATIVE\n}\n\nexport interface ViewOrganizationState {\n    showInfo: boolean\n    navigateTo: NavigateTo\n    requestAccess: {\n        narrative: orgModel.NarrativeResource | null\n    }\n}\n\nexport interface ViewOrganizationProps {\n    organization: orgModel.InaccessiblePrivateOrganization\n    relation: orgModel.Relation\n    requestOutbox: Array<requestModel.Request>\n    onJoinOrg: () => void\n    onCancelJoinRequest: (requestId: string) => void\n    onAcceptInvitation: (requestId: string) => void\n    onRejectInvitation: (requestId: string) => void\n}\n\nclass ViewOrganization extends React.Component<ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: ViewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            showInfo: false,\n            navigateTo: NavigateTo.NONE,\n            requestAccess: {\n                narrative: null\n            }\n        }\n    }\n\n    onShowInfo() {\n        // this.setState({ showInfo: true })\n        Modal.info({\n            title: 'View Organization Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This organization is <b>private</b>.</p>\n                    <p>Although no information about this organization may be revealed to non-members, you may request membership</p>\n                    <p>Upon requesting membership, an organization administrator may grant you membership</p>\n                    <p>When your request is either accepted or denied, you will received a notification in your KBase Feed.</p>\n                </div>\n            )\n        })\n    }\n\n    onJoinClick() {\n        this.props.onJoinOrg()\n    }\n\n    onCancelJoinRequest() {\n        const relation = this.props.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onCancelJoinRequest(relation.requestId)\n    }\n\n    onAcceptInvitation() {\n        if (!this.props.organization) {\n            return\n        }\n        const relation = this.props.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onAcceptInvitation(relation.requestId)\n    }\n\n    onRejectInvitation() {\n        if (!this.props.organization) {\n            return\n        }\n        const relation = this.props.relation as orgModel.MembershipRequestPendingRelation\n        this.props.onRejectInvitation(relation.requestId)\n    }\n\n    renderMessage() {\n        switch (this.props.relation.type) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <React.Fragment>\n                        <p>This organization is <b>private</b> and you are not a member.</p>\n                        <p>Although no information about this organization may be revealed to non-members, you may request membership</p>\n                        <p>Upon requesting membership, the organization administrators will be notified.</p>\n                        <p>When your request is either accepted or denied, you will received a notification in your KBase Feed.</p>\n                    </React.Fragment>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <React.Fragment>\n                        <p>Your membership request to this private organization is pending.</p>\n                    </React.Fragment>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (\n                    <React.Fragment>\n                        <p>You have been invited to this private organization.</p>\n                    </React.Fragment>\n                )\n            default:\n                return (\n                    <div>\n                        Weird, {this.props.relation.type}.\n                    </div>\n                )\n        }\n    }\n\n    renderOrg() {\n        const message = (\n            <span>\n                Private Organization\n            </span>\n        )\n        const description = (\n            <React.Fragment>\n                {this.renderMessage()}\n                <div>\n                    {this.renderJoinButton()}\n                </div>\n            </React.Fragment>\n        )\n        return (\n            <Alert\n                message={message}\n                description={description}\n                type=\"info\"\n                showIcon={true}\n                icon={(<Icon type=\"lock\" />)}\n                style={{ width: '50em', margin: '20px auto' }}\n                className=\"ViewInaccessiblePrivateOrganization-message\" />\n        )\n    }\n\n    renderRelationClass(relation: orgModel.Relation) {\n        switch (relation.type) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return 'infoBox'\n            case (orgModel.UserRelationToOrganization.VIEW):\n                return 'infoBox'\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return 'infoBox relationRequestPending'\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return 'infoBox relationInvitationPending'\n            case (orgModel.UserRelationToOrganization.MEMBER):\n                return 'infoBox'\n            case (orgModel.UserRelationToOrganization.ADMIN):\n                return 'infoBox'\n            case (orgModel.UserRelationToOrganization.OWNER):\n                return 'infoBox'\n        }\n    }\n\n    renderJoinButton() {\n        switch (this.props.relation.type) {\n            case (orgModel.UserRelationToOrganization.NONE):\n                return (\n                    <Button\n                        onClick={this.onJoinClick.bind(this)}\n                    >\n                        Join this Organization\n                    </Button>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <div>\n                        <div><Button\n                            icon=\"delete\"\n                            type=\"danger\"\n                            onClick={this.onCancelJoinRequest.bind(this)}>Cancel Request</Button>\n                        </div>\n                    </div>\n                )\n            case (orgModel.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (\n                    <div>\n                        <Button icon=\"check\" type=\"default\" onClick={this.onAcceptInvitation.bind(this)}>Accept Invitation</Button>\n                        {' '}\n                        <Button icon=\"stop\" type=\"danger\" onClick={this.onRejectInvitation.bind(this)}>Reject Invitation</Button>\n                    </div>\n                )\n            default:\n                return (\n                    <div>\n                        Weird, {this.props.relation.type}.\n                    </div>\n                )\n        }\n    }\n\n    renderHeader() {\n        const breadcrumbs = (\n            <div style={{ flex: '0 0 auto' }}>\n            </div>\n        )\n        const buttons = (\n            <React.Fragment>\n\n                <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n            </React.Fragment>\n        )\n        return (\n            <Header breadcrumbs={breadcrumbs} buttons={buttons} />\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ViewInaccessiblePrivateOrganization  scrollable-flex-column\">\n                {this.renderHeader()}\n                {this.renderOrg()}\n            </div>\n        )\n    }\n}\n\nexport default ViewOrganization","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, ViewOrgViewModelKind } from '../../../../types'\nimport * as actions from '../../../../redux/actions/viewOrg'\n\nimport ViewOrganization from './component'\n\nimport * as orgModel from '../../../../data/models/organization/model'\nimport * as requestModel from '../../../../data/models/requests'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    organization: orgModel.InaccessiblePrivateOrganization\n    relation: orgModel.Relation\n    requestOutbox: Array<requestModel.Request>\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onJoinOrg: () => void\n    onCancelJoinRequest: (requestId: string) => void\n    onAcceptInvitation: (requestId: string) => void\n    onRejectInvitation: (requestId: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\n\nfunction mapStateToProps(state: StoreState, ownProps: OwnProps): StateProps {\n    const viewModel = state.views.viewOrgView.viewModel\n    if (!viewModel) {\n        throw new Error('argh, view model missing')\n    }\n    if (viewModel.kind !== ViewOrgViewModelKind.PRIVATE_INACCESSIBLE) {\n        throw new Error(\"argh, wrong org kind\")\n    }\n    const {\n        organization, relation, requestOutbox\n    } = viewModel\n\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        organization, relation, requestOutbox\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onJoinOrg: () => {\n            dispatch(actions.viewOrgJoinRequest() as any)\n        },\n        onCancelJoinRequest: (requestId: string) => {\n            dispatch(actions.viewOrgCancelJoinRequest(requestId) as any)\n        },\n        onAcceptInvitation: (requestId: string) => {\n            dispatch(actions.acceptJoinInvitation(requestId) as any)\n        },\n        onRejectInvitation: (requestId: string) => {\n            dispatch(actions.rejectJoinInvitation(requestId) as any)\n        },\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n","import * as React from 'react';\n\nimport AccessibleContainer from './accessible/container';\nimport InaccessibleContainer from './inaccessible/container';\nimport { Spin, Alert } from 'antd';\n\n//\n\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as types from '../../../types';\nimport * as actions from '../../../redux/actions/viewOrg';\nimport { OrganizationKind } from '../../../data/models/organization/model';\n\nexport interface Props {\n    organizationId: string;\n    view: types.ViewOrgView;\n    onLoad: (organizationId: string) => void;\n    onUnload: () => void;\n}\n\ninterface State {}\n\nclass Loader extends React.Component<Props, State> {\n    previousOrganizationId: string | null;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.previousOrganizationId = null;\n    }\n\n    renderLoading() {\n        const message = (\n            <div>\n                Loading Organization... <Spin />\n            </div>\n        );\n        return (\n            <Alert\n                type=\"info\"\n                message={message}\n                style={{\n                    width: '20em',\n                    padding: '20px',\n                    margin: '20px auto'\n                }}\n            />\n        );\n    }\n\n    renderError(error: types.AppError) {\n        const message = <span style={{ fontWeight: 'bold' }}>Error</span>;\n        const description = (\n            <div>\n                <p>{error.message}</p>\n            </div>\n        );\n        return <Alert type=\"error\" message={message} description={description} />;\n    }\n\n    render() {\n        switch (this.props.view.loadingState) {\n            case types.ComponentLoadingState.NONE:\n                return this.renderLoading();\n            case types.ComponentLoadingState.LOADING:\n                return this.renderLoading();\n            case types.ComponentLoadingState.ERROR:\n                if (this.props.view.error) {\n                    return this.renderError(this.props.view.error);\n                } else {\n                    return this.renderError({\n                        code: 'Missing Error',\n                        message: 'The error appears to be missing'\n                    });\n                }\n            case types.ComponentLoadingState.SUCCESS:\n            default:\n                if (this.props.view.viewModel === null) {\n                    return this.renderError({\n                        code: 'Null Error',\n                        message: 'The view model is missing, but should be available'\n                    });\n                }\n                if (this.props.view.viewModel.organization.kind === OrganizationKind.INACCESSIBLE_PRIVATE) {\n                    return <InaccessibleContainer />;\n                }\n                return <AccessibleContainer />;\n        }\n    }\n\n    componentDidUpdate(previousProps: Props) {\n        if (previousProps.organizationId !== this.props.organizationId) {\n            this.props.onLoad(this.props.organizationId);\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.view.loadingState === types.ComponentLoadingState.NONE) {\n            this.props.onLoad(this.props.organizationId);\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload();\n    }\n}\n\nexport interface OwnProps {\n    organizationId: string;\n}\n\ninterface StateProps {\n    view: types.ViewOrgView;\n}\n\ninterface DispatchProps {\n    onLoad: (organizationId: string) => void;\n    onUnload: () => void;\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    return {\n        view: state.views.viewOrgView\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.Load>): DispatchProps {\n    return {\n        onLoad: (organizationId: string) => {\n            dispatch(actions.load(organizationId) as any);\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any);\n        }\n    };\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(Loader);\n","import * as React from 'react'\nimport './Auth.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\n\n\nexport interface AuthState {\n\n}\n\nclass Auth extends React.Component<types.AuthProps, AuthState> {\n\n    tokenRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: types.AuthProps) {\n        super(props)\n\n        this.tokenRef = React.createRef()\n\n        this.props.checkAuth()\n    }\n\n    onLogoutClick() {\n        this.props.onRemoveAuthorization()\n    }\n\n    onLoginClick() {\n        if (this.tokenRef.current === null) {\n            return\n        }\n        const token = this.tokenRef.current.value\n        if (token.length === 0) {\n            return\n        }\n        this.props.onAddAuthorization(token)\n    }\n\n    buildAuthForm() {\n        return (\n            <div className=\"Auth-form\">\n                Token: <input ref={this.tokenRef} style={{ width: '30em' }} />\n                <Button\n                    icon=\"save\"\n                    htmlType=\"submit\"\n                    onClick={this.onLoginClick.bind(this)} >\n                    Assign Token\n                </Button>\n            </div>\n        )\n    }\n\n    buildAuthToolbar() {\n        return (\n            <div className=\"Auth-toolbar\">\n                Logged in as <b><span>{this.props.authorization.authorization.realname}</span> (<span>{this.props.authorization.authorization.username}</span></b>)\n                {' '}\n                <Button icon=\"logout\" onClick={this.onLogoutClick.bind(this)}></Button>\n            </div>\n        )\n    }\n\n    buildAuthDev() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized scrollable-flex-column\">\n                        {this.buildAuthToolbar()}\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized scrollable-flex-column\">\n                        <p>Not authorized! Enter a user token below</p>\n                        {this.buildAuthForm()}\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-unauthorized scrollable-flex-column\">\n                        <p>Error</p>\n                        {this.props.authorization.message}\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    buildAuthProd() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized scrollable-flex-column\">\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized scrollable-flex-column\">\n                        <p>Not authorized!</p>\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-error scrollable-flex-column\">\n                        <p>Error: ??</p>\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"Auth scrollable-flex-column\">\n                {this.props.hosted ? this.buildAuthProd() : this.buildAuthDev()}\n            </div>\n        )\n\n    }\n}\n\nexport default Auth","\nexport interface RootInfo {\n    version: string,\n    servertime: number\n}\n\ninterface AuthEndpoints {\n    root: string,\n    tokenInfo: string,\n    apiMe: string,\n    me: string,\n    loginStart: string,\n    loginChoice: string,\n    loginCreate: string,\n    loginUsernameSuggest: string,\n    loginPick: string,\n    loginCancel: string,\n    logout: string,\n    linkStart: string,\n    linkCancel: string,\n    linkChoice: string,\n    linkPick: string,\n    linkRemove: string,\n    tokens: string,\n    tokensRevoke: string,\n    tokensRevokeAll: string,\n    userSearch: string,\n    adminUserSearch: string,\n    adminUser: string\n}\n\nconst endpoints: AuthEndpoints = {\n    root: '',\n    tokenInfo: 'api/V2/token',\n    apiMe: 'api/V2/me',\n    me: 'me',\n    loginStart: 'login/start',\n    logout: 'logout',\n    loginChoice: 'login/choice',\n    loginCreate: 'login/create',\n    loginUsernameSuggest: 'login/suggestname',\n    loginPick: 'login/pick',\n    loginCancel: 'login/cancel',\n    linkStart: 'link/start',\n    linkCancel: 'link/cancel',\n    linkChoice: 'link/choice',\n    linkPick: 'link/pick',\n    linkRemove: 'me/unlink',\n    tokens: 'tokens',\n    tokensRevoke: 'tokens/revoke',\n    tokensRevokeAll: 'tokens/revokeall',\n    userSearch: 'api/V2/users/search',\n    adminUserSearch: 'api/V2/admin/search',\n    adminUser: 'api/V2/admin/user'\n}\n\nexport interface TokenInfo {\n    created: number,\n    expires: number,\n    id: string,\n    name: string | null,\n    token: string,\n    type: string,\n    user: string,\n    cachefor: number\n}\n\nexport interface Identity {\n    id: string,\n    provider: string,\n    username: string\n}\n\nexport interface Role {\n    id: string,\n    desc: string\n}\n\nexport interface Account {\n    created: number,\n    customroles: Array<string>,\n    display: string,\n    email: string,\n    idents: Array<Identity>,\n    lastLogin: number,\n    local: boolean,\n    roles: Array<Role>,\n    user: string\n}\nexport class AuthClient {\n    url: string;\n\n    constructor({ url }: { url: string }) {\n        this.url = url\n    }\n\n    makePath(path: Array<string> | string): string {\n        if (typeof path === 'string') {\n            return [this.url].concat([path]).join('/');\n        }\n        return [this.url].concat(path).join('/');\n    }\n\n\n    root(): Promise<RootInfo> {\n        return fetch(this.makePath([endpoints.root]), {\n            headers: {\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as RootInfo\n            })\n    }\n\n    getTokenInfo(token: string): Promise<TokenInfo> {\n        return fetch(this.makePath([endpoints.tokenInfo]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as TokenInfo\n            })\n    }\n\n    getMe(token: string): Promise<Account> {\n        return fetch(this.makePath([endpoints.apiMe]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Account\n            })\n    }\n\n\n    // getInfo() : Promise<GroupsServiceInfo> {\n    //     return fetch(this.url + '/', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json();\n    //         })\n    //         .then((result) => {\n    //             return result as GroupsServiceInfo;\n    //         });\n    // }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport * as Cookies from 'es-cookie'\n\nimport { ActionFlag } from './index'\nimport { AppError, StoreState } from '../../types';\nimport { AuthClient, TokenInfo, Account } from '../../data/auth';\n\n// Action Definitions\n\nexport interface AuthCheck extends Action {\n    type: ActionFlag.AUTH_CHECK\n}\n\nexport interface AuthCheckStart extends Action {\n    type: ActionFlag.AUTH_CHECK_START\n}\n\nexport interface AuthCheckError extends Action {\n    type: ActionFlag.AUTH_CHECK_ERROR,\n    error: AppError\n}\n\nexport interface AuthAuthorized extends Action {\n    type: ActionFlag.AUTH_AUTHORIZED,\n    token: string\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface AuthUnauthorized extends Action {\n    type: ActionFlag.AUTH_UNAUTHORIZED\n}\n\nexport interface AuthRemoveAuthorization extends Action {\n    type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n}\n\nexport interface AuthAddAuthorization extends Action {\n    type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n    token: string\n}\n\n// Action Creators\n\n\nexport function authCheckStart(): AuthCheckStart {\n    return {\n        type: ActionFlag.AUTH_CHECK_START\n    }\n}\n\nexport function authCheckError(error: AppError): AuthCheckError {\n    return {\n        type: ActionFlag.AUTH_CHECK_ERROR,\n        error\n    }\n}\n\nexport function authAuthorized(token: string, username: string, realname: string, roles: Array<string>): AuthAuthorized {\n    return {\n        type: ActionFlag.AUTH_AUTHORIZED,\n        token, username, realname, roles\n    }\n}\n\nexport function authUnauthorized(): AuthUnauthorized {\n    return {\n        type: ActionFlag.AUTH_UNAUTHORIZED\n    }\n}\n\n// export function authRemoveAuthorization(): AuthRemoveAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n//     }\n// }\n\n// export function authAddAuthorization(token: string): AuthAddAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n//         token: token\n//     }\n// }\n\n// Action Thunks\n\nexport function checkAuth() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(authCheckStart())\n\n        const {\n            app: {\n                config: {\n                    services: {\n                        Auth: { url }\n                    }\n                }\n            }\n        } = getState()\n\n        // TODO: get the auth from the kbase-ui integration api, perhaps a postmessage call\n\n        const token = Cookies.get('kbase_session')\n        if (!token) {\n            dispatch(authUnauthorized())\n            return\n        }\n\n        const auth = new AuthClient({ url: url })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function authRemoveAuthorization() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // remove cookie\n        Cookies.remove('kbase_session')\n\n        // remove auth in state\n        dispatch(authUnauthorized())\n    }\n}\n\nexport function authAddAuthorization(token: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n\n        const {\n            app: {\n                config: {\n                    services: {\n                        Auth: { url }\n                    }\n                }\n            }\n        } = getState()\n\n        // add cookie\n        Cookies.set('kbase_session', token)\n\n        // TODO: get auth info\n        const auth = new AuthClient({ url: url })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, AuthState, Authorization } from '../types'\nimport Auth from '../components/Auth'\nimport * as actions from '../redux/actions/auth'\n\nexport interface OwnProps {\n    hosted: boolean\n}\n\ninterface StateProps {\n    authorization: Authorization\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n}\n\ninterface DispatchProps {\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const { auth } = state\n    return {\n        authorization: auth\n        // authStatus: status,\n        // token: authorization.token || null,\n        // username: authorization.username || null,\n        // realname: authorization.realname || null\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        checkAuth: () => {\n            dispatch(actions.checkAuth() as any)\n        },\n        onRemoveAuthorization: () => {\n            dispatch(actions.authRemoveAuthorization() as any)\n        },\n        onAddAuthorization: (token: string) => {\n            dispatch(actions.authAddAuthorization(token) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Auth)","\nimport uuidv4 from 'uuid/v4'\n\ninterface ListenerParams {\n    name: string,\n    onSuccess: (payload: Payload) => void,\n    onError: (error: Error) => void\n}\n\nclass Listener {\n    name: string;\n    onSuccess: (payload: Payload) => void;\n    onError: (error: Error) => void;\n\n    constructor({ name, onSuccess, onError }: ListenerParams) {\n        this.name = name;\n        this.onSuccess = onSuccess;\n        this.onError = onError;\n    }\n}\n\ntype Payload = any;\n\ninterface WaitingListenerParams extends ListenerParams {\n    timeout?: number\n}\n\nclass WaitingListener extends Listener {\n    started: Date;\n    timeout: number;\n\n    constructor(params: WaitingListenerParams) {\n        super(params);\n        this.started = new Date();\n        this.timeout = params.timeout || 5000;\n    }\n}\n\ninterface Envelope {\n    channelId: string\n    id: string\n}\n\nclass Message {\n    name: string;\n    payload: any;\n    id: string;\n    created: Date;\n    channelId: string\n    envelope: Envelope | null\n\n    constructor({ name, payload, channelId }: { name: string, payload: any, channelId: any }) {\n        this.name = name\n        this.payload = payload\n        this.id = uuidv4()\n        this.created = new Date()\n        this.channelId = channelId\n        this.envelope = null;\n    }\n\n    getMessage() {\n        return {\n            envelope: {\n                id: this.id,\n                created: this.created,\n                channelId: this.channelId\n            },\n            name: this.name,\n            payload: this.payload\n        };\n    }\n}\n\ninterface Handler {\n    started: Date,\n    handler: (response: any) => any\n}\n\ninterface ChannelParams {\n    window?: Window,\n    host?: string,\n    channelId?: string\n}\n\nexport class Channel {\n    window: Window\n    host: string\n    id: string\n    awaitingResponse: Map<string, Handler>\n    waitingListeners: Map<string, Array<Listener>>\n    listeners: Map<string, Array<Listener>>\n    lastId: number\n    sentCount: number\n    receivedCount: number\n    unwelcomeReceivedCount: number\n    unwelcomeReceivedCountThreshhold: number\n    unwelcomeReceiptWarning: boolean\n    unwelcomeReceiptWarningCount: number\n    currentListener: ((message: MessageEvent) => void) | null\n\n    constructor(params: ChannelParams) {\n        // The given window upon which we will listen for messages.\n        this.window = params.window || window\n\n        // The host for the window; required for postmessage\n        if (this.window.document === null) {\n            throw new Error('No document')\n        }\n        if (this.window.document.location === null) {\n            throw new Error('No location')\n        }\n        this.host = params.host || this.window.document.location.origin;\n\n        // The channel id. Used to filter all messages received to\n        // this channel.\n        this.id = params.channelId || uuidv4()\n\n        this.awaitingResponse = new Map<string, Handler>()\n        this.waitingListeners = new Map<string, Array<Listener>>()\n        this.listeners = new Map<string, Array<Listener>>()\n\n        this.lastId = 0\n        this.sentCount = 0\n        this.receivedCount = 0\n\n        this.unwelcomeReceivedCount = 0\n        this.unwelcomeReceivedCountThreshhold = 100\n        this.unwelcomeReceiptWarning = true\n        this.unwelcomeReceiptWarningCount = 0\n        this.currentListener = null\n    }\n\n    genId() {\n        this.lastId += 1;\n        return 'msg_' + String(this.lastId);\n    }\n\n    receiveMessage(messageEvent: MessageEvent) {\n        const message = messageEvent.data as Message;\n        if (!message) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('TS No message data; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!message.envelope) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!(message.envelope.channelId === this.id)) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('Message envelope does not match this channel\\'s id', message.envelope, message.envelope.channelId, this.id);\n            }\n            return;\n        }\n        if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n            this.unwelcomeReceiptWarning = false;\n            console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n        }\n\n        // A message sent as a request will have registered a response handler\n        // in the awaitingResponse hash, using a generated id as the key.\n        // TODO: to to rethink using the message id here. Perhaps somehting like a\n        // chain of ids, the root of which is the origination id, which is the one\n        // known here when it it is sent; the message \"id\" should be assigned whenver\n        // a message is sent, but a response  message would include the original\n        // message in the \"chain\"...\n\n        // We can also have awaiting responses without an originating request.\n        // These are useful for, e.g., a promise which awaits a message to be sent\n        // within some window...\n        if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n            try {\n                const response = this.awaitingResponse.get(message.envelope.id)\n                this.awaitingResponse.delete(message.envelope.id)\n                if (response) {\n                    response.handler(message.payload)\n                }\n            } catch (ex) {\n                console.error('Error handling response for message ', message, ex);\n            }\n        }\n\n        // and also awaiting by message name. Like a listener, but they are only used\n        // once.\n\n        if (this.waitingListeners.has(message.name)) {\n            const awaiting = this.waitingListeners.get(message.name)!\n            this.waitingListeners.delete(message.name)\n            awaiting.forEach((listener) => {\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n        // Otherwise, permanently registered handlers are found in the listeners for the\n        // message name.\n        if (this.listeners.has(message.name)) {\n            this.listeners.get(message.name)!.forEach((listener) => {\n                if (!listener.onSuccess) {\n                    console.warn('no handler for listener!', listener);\n                }\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n    }\n\n    listen(listener: Listener) {\n        if (!this.listeners.has(listener.name)) {\n            this.listeners.set(listener.name, [])\n        }\n        this.listeners.get(listener.name)!.push(listener)\n    }\n\n    on(messageId: string, success: (payload: any) => any, error: (error: Error) => void) {\n        this.listen(new Listener({\n            name: messageId,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    sendMessage(message: Message) {\n        this.window.postMessage(message.getMessage(), this.host)\n    }\n\n    send(name: string, payload: Payload) {\n        const message = new Message({ name, payload, channelId: this.id });\n        this.sendMessage(message);\n    }\n\n    sendRequest(message: Message, handler: (response: any) => any) {\n        this.awaitingResponse.set('message.id', {\n            started: new Date(),\n            handler: handler\n        })\n\n        this.sendMessage(message);\n    }\n\n    request(name: string, payload: Payload) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.sendRequest(new Message({ name, payload, channelId: this.id }), (response: any) => {\n                    resolve(response);\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    startMonitor() {\n        window.setTimeout(() => {\n            const now = new Date().getTime();\n\n            // first take care of listeners awaiting a message.\n            for (const [id, listeners] of this.waitingListeners.entries()) {\n                const newListeners = listeners.filter((listener) => {\n                    if (listener instanceof WaitingListener) {\n                        const elapsed = now - listener.started.getTime();\n                        if (elapsed > listener.timeout) {\n                            try {\n                                if (listener.onError) {\n                                    listener.onError(new Error('timout after ' + elapsed));\n                                }\n                            } catch (ex) {\n                                console.error('Error calling error handler', id, ex);\n                            }\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                });\n                if (newListeners.length === 0) {\n                    this.waitingListeners.delete(id)\n                }\n            }\n\n            if (this.waitingListeners.size > 0) {\n                this.startMonitor()\n            }\n        }, 100);\n    }\n\n    listenOnce(listener: WaitingListener) {\n        if (!this.waitingListeners.has(listener.name)) {\n            this.waitingListeners.set(listener.name, [])\n        }\n        this.waitingListeners.get(listener.name)!.push(listener);\n        if (listener.timeout) {\n            this.startMonitor();\n        }\n    }\n\n    once(name: string, success: (payload: Payload) => void, error: (error: Error) => void) {\n        this.listenOnce(new WaitingListener({\n            name: name,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    when(name: string, timeout: number) {\n        return new Promise((resolve, reject) => {\n            return this.listenOnce(new WaitingListener({\n                name: name,\n                timeout: timeout,\n                onSuccess: (payload) => {\n                    resolve(payload);\n                },\n                onError: (error) => {\n                    reject(error);\n                }\n            }));\n        });\n    }\n\n    stats() {\n        return {\n            sent: this.sentCount,\n            received: this.receivedCount\n        };\n    }\n\n    attach(window: Window) {\n        this.window = window;\n    }\n\n    start() {\n        this.currentListener = (message: MessageEvent) => {\n            this.receiveMessage(message);\n        };\n        this.window.addEventListener('message', this.currentListener, false);\n    }\n\n    stop() {\n        if (this.currentListener) {\n            this.window.removeEventListener('message', this.currentListener, false);\n        }\n    }\n}\n","import uuid from 'uuid/v4'\nimport { Channel } from './windowChannel'\nimport { IFrameParams } from '../types'\n\n// export interface IFrameParams {\n//     channelId: string\n//     frameId: string\n//     params: {\n//         groupsServiceURL: string\n//         userProfileServiceURL: string\n//         workspaceServiceURL: string\n//         serviceWizardURL: string\n//         authServiceURL: string\n//         originalPath: string | null,\n//         view: string | null,\n//         viewParams: any\n//     },\n//     parentHost: string\n// }\n/*\n channelId: \"3b33179e-8a6d-4ae9-bc95-af4c0492eaa6\"\nframeId: \"frame_kb_html_be553ee5-645c-4737-80ba-dcb642632f0c\"\nhostId: \"host_kb_html_9a3b5d5d-bb92-43ff-a443-73267aa31323\"\nparams: {}\nparentHost: \"https://ci.kbase.us\"\n\n*/\n\n/*\nIFrameSimulator\nThis little doozey allows us to create a simulated iframe. We can query it for\n the params placed on the iframe, and talk to it via the window channel -- it has \n its own window channel.\n Good thing we designed the channel for multiple channels per window.\n*/\nclass IFrameSimulator {\n    params: IFrameParams | null\n    channel: Channel\n\n    constructor() {\n        this.params = null\n\n        // create a window channel.\n\n        this.channel = new Channel({\n            window: window,\n            host: document.location!.origin\n        })\n\n    }\n\n    getParamsFromIFrame(): IFrameParams {\n        return {\n            channelId: this.channel.id,\n            frameId: uuid(),\n            params: {\n                groupsServiceURL: '/services/groups',\n                userProfileServiceURL: '/services/user_profile/rpc',\n                workspaceServiceURL: '/services/ws',\n                serviceWizardURL: '/services/service_wizard',\n                authServiceURL: '/services/auth',\n                narrativeMethodStoreURL: '/services/narrative_method_store/rpc',\n                originalPath: '',\n                view: null,\n                viewParams: null\n                // view: 'org',\n                // viewParams: {\n                //     id: 'test'\n                // }\n            },\n            parentHost: document.location!.origin\n        }\n    }\n}\n\n\n\nexport default IFrameSimulator","import { IFrameParams } from '../types'\n// export interface IFrameParams {\n//     channelId: string\n//     frameId: string\n//     params: {\n//         groupsServiceURL: string\n//         userProfileServiceURL: string\n//         workspaceServiceURL: string\n//         serviceWizardURL: string\n//         authServiceURL: string\n//         originalPath: string | null,\n//         view: string | null,\n//         viewParams: any\n//     },\n//     parentHost: string\n// }\n\nexport class IFrameIntegration {\n    getParamsFromIFrame() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-params')) {\n            // throw new Error('No params found in window!!');\n            return null\n        }\n        const params = window.frameElement.getAttribute('data-params');\n        if (params === null) {\n            // throw new Error('No params found in window!')\n            return null\n        }\n        const iframeParams = JSON.parse(decodeURIComponent(params)) as IFrameParams\n        return iframeParams\n    }\n    getChannelID() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-channel')) {\n            return null\n        }\n        return window.frameElement.getAttribute('data-channel')\n    }\n    getIframeElement() {\n        return window.frameElement || null\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as types from '../../types'\nimport IFrameSimulator from '../../lib/IFrameSimulator'\nimport { IFrameIntegration } from '../../lib/IFrameIntegration'\n\n\n// Action Definitions\n\n// export interface AppStart extends Action {\n//     type: ActionFlag.APP_START,\n\n// }\n\nexport interface AppSuccess extends Action {\n    type: ActionFlag.APP_SUCCESS,\n    config: types.AppConfig\n}\n\nexport interface AppError extends Action {\n    type: ActionFlag.APP_ERROR,\n    error: AppError\n}\n\n// Action Creators\n\nexport function appSuccess(config: types.AppConfig): AppSuccess {\n    return {\n        type: ActionFlag.APP_SUCCESS,\n        config: config\n    }\n}\n\nexport function appError(error: AppError): AppError {\n    return {\n        type: ActionFlag.APP_ERROR,\n        error: error\n    }\n}\n\nexport function appStart() {\n    return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState: () => types.StoreState) => {\n        // check and see if we are in an iframe\n        let integration = new IFrameIntegration();\n        let iframeParams = integration.getParamsFromIFrame();\n\n\n        if (iframeParams) {\n            let defaultPath\n\n            // set up the message bus.\n            let channelId = iframeParams.channelId;\n\n            // route from paths passed in from kbase-ui\n            switch (iframeParams.params.view) {\n                case 'org':\n                    defaultPath = '/viewOrganization/' + iframeParams.params.viewParams.id\n                    window.history.pushState(null, 'test', defaultPath)\n                    break\n                default:\n                    defaultPath = '/organizations'\n                    window.history.pushState(null, 'organizations', '/organizations')\n                    break\n            }\n\n            // suck up all the params into our state.\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.workspaceServiceURL\n                    },\n                    ServiceWizard: {\n                        url: iframeParams.params.serviceWizardURL\n                    },\n                    Auth: {\n                        url: iframeParams.params.authServiceURL\n                    },\n                    NarrativeMethodStore: {\n                        url: iframeParams.params.narrativeMethodStoreURL\n                    }\n                },\n                defaultPath,\n                channelId\n            }))\n\n        } else {\n            iframeParams = new IFrameSimulator().getParamsFromIFrame()\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.workspaceServiceURL\n                    },\n                    ServiceWizard: {\n                        url: iframeParams.params.serviceWizardURL\n                    },\n                    Auth: {\n                        url: iframeParams.params.authServiceURL\n                    },\n                    NarrativeMethodStore: {\n                        url: iframeParams.params.narrativeMethodStoreURL\n                    }\n                },\n                defaultPath: '/organizations',\n                channelId: null\n            }))\n        }\n    }\n}\n","import * as React from 'react'\nimport './KBaseIntegration.css'\n\nimport { AppState } from '../types'\nimport { Channel } from '../lib/windowChannel';\nimport { IFrameIntegration } from '../lib/IFrameIntegration';\n\nexport interface KBaseIntegrationProps {\n    status: AppState\n    channelId: string | null\n    onAppStart: () => void\n}\nclass KBaseIntegration extends React.Component<KBaseIntegrationProps, object> {\n\n    channel: Channel | null\n\n    constructor(props: KBaseIntegrationProps) {\n        super(props)\n\n        // const params = this.getParamsFromIFrame()\n\n        // this.props.onAppStart()\n\n        this.channel = null\n    }\n\n    setupChannel() {\n        if (this.props.channelId) {\n\n            this.channel = new Channel({\n                channelId: this.props.channelId,\n            })\n\n            this.channel.on('navigate', ({ to, params }) => {\n\n            }, (err) => {\n                console.error('Error processing \"navigate\" message')\n            })\n\n            this.channel.start()\n\n            this.channel.send('ready', {\n                channelId: this.props.channelId,\n                greeting: 'heloooo'\n            })\n        }\n    }\n\n    teardownChannel() {\n\n    }\n\n    componentDidMount() {\n        this.props.onAppStart()\n    }\n\n    componentDidUpdate() {\n        this.setupChannel()\n    }\n\n    componentWillUnmount() {\n        this.teardownChannel()\n    }\n\n    render() {\n        if (this.props.status === AppState.NONE) {\n            return (\n                <div className=\"KBaseIntegration\">\n                    Loading...\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"KBaseIntegration scrollable-flex-column\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default KBaseIntegration","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/app'\n\nimport KBaseIntegration from '../components/KBaseIntegration'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n    status: types.AppState\n    defaultPath: string\n    channelId: string | null\n}\n\ninterface DispatchProps {\n    onAppStart: () => void\n}\n\nexport function mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const { app: { status, config: { defaultPath, channelId } } } = state\n    return {\n        status, defaultPath, channelId\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAppStart: () => {\n            dispatch(actions.appStart() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(KBaseIntegration)","import {\n    StoreState, AuthState, AppState,\n    ComponentLoadingState\n} from \"../types\"\n\nimport * as orgModel from '../data/models/organization/model'\n\nexport class StateInstances {\n    static makeInitialState(): StoreState {\n        return {\n            entities: {\n                users: {\n                    byId: new Map(),\n                    all: []\n                },\n                orgs: {\n                    byId: new Map(),\n                    all: []\n                },\n                requests: {\n                    byId: new Map(),\n                    all: []\n                },\n                narratives: {\n                    byId: new Map()\n                },\n                organizations: {\n                    byId: new Map()\n                },\n                apps: {\n                    byId: new Map()\n                }\n            },\n            db: {\n            },\n            views: {\n                browseOrgsView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                },\n                addOrgView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                },\n                editOrgView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                },\n                manageOrganizationRequestsView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                },\n                viewMembersView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                },\n                // inviteUserView: {\n                //     loadingState: ComponentLoadingState.NONE,\n                //     error: null,\n                //     viewModel: null\n                // },\n                // manageMembershipView: {\n                //     loadingState: ComponentLoadingState.NONE,\n                //     error: null,\n                //     viewModel: null\n                // },\n                // requestNarrativeView: {\n                //     loadingState: ComponentLoadingState.NONE,\n                //     error: null,\n                //     viewModel: null\n                // },\n                viewOrgView: {\n                    loadingState: ComponentLoadingState.NONE,\n                    error: null,\n                    viewModel: null\n                }\n            },\n            auth: {\n                status: AuthState.NONE,\n                message: '',\n                authorization: {\n                    token: '',\n                    username: '',\n                    realname: '',\n                    roles: []\n                }\n            },\n            error: null,\n            app: {\n                status: AppState.NONE,\n                config: {\n                    baseUrl: '',\n                    services: {\n                        Groups: {\n                            url: ''\n                        },\n                        UserProfile: {\n                            url: ''\n                        },\n                        Workspace: {\n                            url: ''\n                        },\n                        ServiceWizard: {\n                            url: ''\n                        },\n                        Auth: {\n                            url: ''\n                        },\n                        NarrativeMethodStore: {\n                            url: ''\n                        }\n                    },\n                    defaultPath: '',\n                    channelId: null\n                }\n            },\n\n            updateOrg: {\n                pending: false\n            },\n\n\n        }\n    }\n}","import * as React from 'react'\n\nexport interface Props {\n    onLoad: () => void\n    onUnload: () => void\n}\n\ninterface State {\n\n}\n\nexport default class DataServices extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    componentWillMount() {\n        this.props.onLoad()\n    }\n\n    componentWillUnmount() {\n        this.props.onUnload()\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\n","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../../types';\nimport * as actions from '../../redux/actions/dataServices'\nimport Component from './component'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n\n}\n\ninterface DispatchProps {\n    onLoad: () => void\n    onUnload: () => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    return {\n\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onLoad: () => {\n            dispatch(actions.load() as any)\n        },\n        onUnload: () => {\n            dispatch(actions.unload() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Component)","import * as React from 'react'\n\nexport interface AppContext {\n    test: string\n}\n\nconst context = React.createContext<AppContext | null>(null)\n\nexport const AppContextProvider = context.Provider\nexport const AppContextConsumer = context.Consumer","import React, { Component, FunctionComponent } from 'react'\nimport { Route, Switch, Redirect } from 'react-router'\nimport { BrowserRouter, RouteProps, RouteComponentProps } from 'react-router-dom'\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport theReducer from './redux/reducers'\n\n// the app and subcomponents\nimport './App.css';\n\n// fontawesome setup\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faSpinner, faSearch, faGlobe, faUserLock, faSquare, faCube\n} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSpinner, faSearch, faGlobe, faUserLock, faSquare, faCube)\n\nimport OrganizationsBrowser from './components/views/browseOrgs/loader'\nimport NewOrganization from './components/views/newOrganization/loader'\nimport ViewOrganization from './components/views/viewOrganization/loader'\nimport Auth from './containers/Auth'\nimport KBaseIntegration from './containers/KBaseIntegration'\nimport { StateInstances } from './redux/state';\nimport DataServices from './components/dataServices/storeAdapter'\nimport { AppContextProvider } from './AppContext'\nimport { Marked, Renderer, MarkedOptions } from 'marked-ts'\n\nclass DescriptionRenderer extends Renderer {\n  constructor(options?: MarkedOptions) {\n    super(options)\n  }\n  link(href: string, title: string, text: string) {\n    if (this.options.sanitize) {\n      let prot: string;\n\n      try {\n        prot = decodeURIComponent(this.options.unescape!(href))\n          .replace(/[^\\w:]/g, '')\n          .toLowerCase()\n      }\n      catch (e) {\n        return text\n      }\n\n      if\n        (\n        prot.indexOf('javascript:') === 0\n        || prot.indexOf('vbscript:') === 0\n        || prot.indexOf('data:') === 0\n      ) {\n        return text\n      }\n    }\n\n    let out = '<a href=\"' + href + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += ' target=\"_blank\">' + text + '</a>';\n\n    return out;\n  }\n}\n\nlet options = new MarkedOptions()\noptions.renderer = new DescriptionRenderer()\nMarked.setOptions({ renderer: new DescriptionRenderer() })\n\n// Put the redux store together\n// Just for prototyping --- This is super naive and will change!\n// import {organizations} from './data/temp';\n\n// TODO: determine the environment\n\nconst hosted = window.frameElement ? true : false\n\n// Set up initial state \n// TODO: move to own file\nconst initialState = StateInstances.makeInitialState()\n\n// TODO: remove the cast of reducer to any...\n// const middleware = [thunk]\n// const store = createStore<StoreState, SortOrgs, null, null>(theReducer as any, initialState, applyMiddleware(thunk));\nconst store = createStore(theReducer as any, initialState as any, compose(applyMiddleware(thunk)))\n\n// export interface WrappedComponent extends React.Component<NewOrganization {\n\n// }\n\n// const Wrapped: FunctionComponent<NewOrganization> = ({component: Component, ...rest}: {component: any}) => {\n//   return (<Route {...rest} render={(props) => {\n//       <Component {...props} />\n//     }} />\n//   )\n// }\n\n\n\ninterface ViewOrgMatchProps {\n  id: string\n}\ntype WrappedProps = RouteComponentProps<ViewOrgMatchProps>\nconst F: React.SFC<WrappedProps> = (props: WrappedProps) => {\n  return (\n    <ViewOrganization organizationId={props.match.params.id} />\n  )\n}\n\n// class F2 extends React.Component<WrappedProps> {\n//   constructor(params: WrappedProps) {\n//     super(params)\n//   }\n//   render() {\n//     return (\n//       <ViewOrganization organizationId={this.props.match.params.id} />\n//     )\n//   }\n// }\n\nclass App extends Component {\n  constructor(props: any) {\n    super(props)\n  }\n\n\n\n  render() {\n    return (\n      <AppContextProvider value={{ test: 'ok' }}>\n        <Provider store={store}>\n          <KBaseIntegration>\n            <Auth hosted={hosted}>\n              <DataServices>\n                <BrowserRouter basename=\"/\" >\n                  <div className=\"App scrollable-flex-column\">\n                    <div className=\"App-body scrollable-flex-column\">\n                      {/* <MainMenu /> */}\n                      <Switch>\n                        <Route path=\"/organizations\" component={OrganizationsBrowser} />\n                        <Route path=\"/newOrganization\" component={NewOrganization} />\n                        <Route path=\"/viewOrganization/:id\" exact={true} component={F} />\n                        {/* <Route path=\"/viewOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ViewOrganization organizationId={id} />} /> */}\n                        <Redirect from=\"/\" to=\"/organizations\" exact={true} />\n                      </Switch>\n                    </div>\n                  </div>\n                </BrowserRouter>\n              </DataServices>\n            </Auth>\n          </KBaseIntegration>\n        </Provider>\n      </AppContextProvider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'typeface-oxygen';\nimport 'normalize.css';\nimport 'antd/dist/antd.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}