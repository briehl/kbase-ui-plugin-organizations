{"version":3,"sources":["components/Organizations.tsx","containers/Organizations.tsx","types/index.tsx","redux/actions/index.tsx","redux/reducers/addOrg.ts","redux/reducers/editOrg.ts","redux/reducers/viewOrg.ts","redux/reducers/searchOrgs.ts","redux/reducers/auth.ts","redux/reducers/app.ts","redux/reducers/manageGroupRequests.ts","redux/reducers/index.tsx","data/groups.tsx","components/Header.tsx","components/OrganizationsBrowser.tsx","data/userProfile.ts","data/model.ts","redux/actions/viewOrg.ts","redux/actions/searchOrgs.ts","containers/OrganizationsBrowser.tsx","redux/actions/addOrg.ts","components/NewOrganization.tsx","containers/NewOrganization.tsx","components/Avatar.tsx","components/User.tsx","components/ViewOrganization.tsx","containers/ViewOrganization.tsx","redux/actions/editOrg.ts","components/EditOrganization.tsx","containers/EditOrganization.tsx","components/Auth.tsx","data/auth.ts","redux/actions/auth.ts","containers/Auth.tsx","lib/windowChannel.ts","lib/IFrameSimulator.ts","lib/IFrameIntegration.ts","redux/actions/app.ts","components/KBaseIntegration.tsx","containers/KBaseIntegration.tsx","redux/actions/manageGroupRequests.ts","components/ManageGroupRequests.tsx","containers/ManageGroupRequests.tsx","redux/state.tsx","App.tsx","index.tsx"],"names":["Organizations","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchTerms","inherits","createClass","key","value","org","gravatarHash","react","style","width","height","src","getAvatarUrl","relation","type","types","NONE","icon","VIEW","tooltip","placement","mouseEnterDelay","title","MEMBER_REQUEST_PENDING","color","MEMBER_INVITATION_PENDING","MEMBER","ADMIN","OWNER","theme","requestsPending","adminRequests","length","twoToneColor","className","count","singular","plural","index","String","NavLink","to","concat","id","renderAvatar","name","href","owner","username","target","realname","Intl","DateTimeFormat","month","day","year","format","createdAt","members","pluralize","renderRelation","renderAdminInfo","_this2","organizations","map","renderOrg","es_alert","maxWidth","margin","message","renderOrgs","React","connect","UIErrorType","UserRelationToOrganization","RequestType","RequestStatus","AuthState","EditOrgState","SyncState","EditState","SaveState","ValidationState","FieldState","ViewOrgState","AppState","SortDirection","ActionFlag","browseOrgs","reducer","action","ADD_ORG_START","objectSpread","addOrg","saveState","SAVING","addOrgStart","ADD_ORG_SUCCESS","editState","UNEDITED","SAVED","addOrgSuccess","ADD_ORG_ERROR","SAVE_ERROR","error","addOrgError","ADD_ORG_EDIT_START","validationState","NEW","newOrganization","status","description","addOrgEditStart","ADD_ORG_EDIT_FINISH","addOrgEditFinish","ADD_ORG_UPDATE_NAME_SUCCESS","EDITED","EDITED_OK","addOrgUpdateNameSuccess","ADD_ORG_UPDATE_NAME_ERROR","EDITED_ERROR","addOrgUpdateNameError","ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","addOrgUpdateGravatarHashSuccess","ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR","addOrgUpdateGravatarHashError","ADD_ORG_UPDATE_ID_SUCCESS","addOrgUpdateIdSuccess","ADD_ORG_UPDATE_ID_ERROR","addOrgUpdateIdError","ADD_ORG_UPDATE_DESCRIPTION_SUCCESS","addOrgUpdateDescriptionSuccess","ADD_ORG_UPDATE_DESCRIPTION_ERROR","addOrgUpdateDescriptionError","ADD_ORG_EVALUATE_OK","VALID","addOrgEvaluateOk","ADD_ORG_EVALUATE_ERRORS","INVALID","addOrgEvaluateErrors","EDIT_ORG_EDIT_START","editOrg","organizationId","editedOrganization","editOrgEditStart","EDIT_ORG_EDIT_SUCCESS","editOrgEditSuccess","EDIT_ORG_SAVE_START","editOrgSaveStart","EDIT_ORG_SAVE_SUCCESS","editOrgSaveSuccess","EDIT_ORG_SAVE_ERROR","editOrgSaveError","EDIT_ORG_UPDATE_NAME_SUCCESS","editOrgUpdateNameSuccess","EDIT_ORG_UPDATE_NAME_ERROR","editOrgUpdateNameError","EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS","editOrgUpdateGravatarHashSuccess","EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR","editOrgUpdateGravatarHashError","EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS","editOrgUpdateDescriptionSuccess","EDIT_ORG_UPDATE_DESCRIPTION_ERROR","editOrgUpdateDescriptionError","EDIT_ORG_EVALUATE_OK","editOrgEvaluateOk","EDIT_ORG_EVALUATE_ERRORS","editOrgEvaluateErrors","VIEW_ORG_FETCH_START","viewOrg","FETCHING","viewOrgStart","VIEW_ORG_FETCH_SUCCESS","READY","organization","viewOrgSuccess","VIEW_ORG_FETCH_ERROR","ERROR","viewOrgError","VIEW_ORG_STOP","viewOrgStop","SEARCH_ORGS_START","_state$browseOrgs","filter","sortBy","sortDirection","auth","authorization","searching","searchOrgsStart","SEARCH_ORGS_SUCCESS","totalCount","filteredCount","searchOrgsSuccess","SEARCH_ORGS_ERROR","searchOrgsError","SORT_ORGS_START","_state$browseOrgs2","sortOrgsStart","FILTER_ORGS_START","filterOrgsStart","AUTH_CHECK_START","CHECKING","token","roles","authCheckStart","AUTH_AUTHORIZED","AUTHORIZED","authAuthorized","AUTH_UNAUTHORIZED","UNAUTHORIZED","authUnauthorized","AUTH_CHECK_ERROR","authCheckError","APP_SUCCESS","app","config","appSuccess","ADMIN_MANAGE_REQUESTS_START","manageGroupRequestsStart","ADMIN_MANAGE_REQUESTS_SUCCESS","manageGroupRequestsView","view","requests","manageGroupRequestsSuccess","ADMIN_MANAGE_REQUESTS_ERROR","manageGroupRequestsError","addOrgReducer","editOrgReducer","searchOrgsReducer","viewOrgReducer","authReducer","appReducer","manageGroupRequests","Header","children","fa","verticalAlign","marginLeft","marginRight","flex","data-test","display","flexDirection","alignItems","buildSeparator","OrganizationsBrowser","searchInput","searchButton","showInfo","onSearchOrgs","Modal","info","content","current","split","currentSearchInputValue","setState","e","preventDefault","doSearch","onSortOrgs","onFilterOrgs","onSearchInputChange","onSubmit","bind","placeholder","onChange","autoFocus","ref","es_button","disabled","haveSearchInput","form","htmlType","renderSearchIcon","onClick","onClearSearch","src_components_Header","fontWeight","fontStyle","renderSearchFeedback","justifyContent","shape","onShowInfo","es_select","onSortByChange2","defaultValue","dropdownMatchSelectWidth","Option","onSortDirectionChange2","ASCENDING","DESCENDING","onFilterChange2","renderHeader","renderSearchBar","renderSearchFilter","containers_Organizations","UserProfileClient","_ref","url","method","param","version","Math","random","slice","params","fetch","mode","cache","headers","Authorization","Content-Type","Accept","body","JSON","stringify","makeEmptyPayload","then","response","Error","statusText","json","makePayload","result","usernames","GroupsClient","exists","start","Date","getTime","console","log","orgs","_ref2","Promise","all","group","getGroupById","newGroup","custom","gravatarhash","groupUpdate","groupId","query","URLSearchParams","includeClosed","append","startAt","toString","_ref3","requestId","_ref4","_ref5","Model","cachedOrgs","groupsClient","groupsServiceURL","getCreatedRequests","groups","getTargetedRequests","slicedToArray","invitations","request","userProfileClient","userProfileServiceURL","requester","targetuser","push","getUserProfiles","profiles","groupid","profileToUser","JOIN_GROUP_REQUEST","OPEN","subjectUser","subjectWorkspaceId","targetws","createdate","expireAt","expiredate","modifiedAt","moddate","getGroupRequests","groupRequestToGroupRequest","_this3","allUsers","admins","getPendingRequests","pendingRequests","Map","forEach","req","set","pendingInvites","userProfiles","userProfileMap","reduce","profile","user","ownerProfile","get","fun","member","p","sort","a","b","localeCompare","admin","indexOf","has","getPendingGroupRequests","resolve","reject","ex","groupIds","_this4","allRequests","_this5","keys","adminGroupIds","_ref6","Array","from","getPendingAdminRequests","_ref7","_ref8","_ref8$","pendingAdminRequests","profileMap","_this6","getGroups","groupsToOrgs","getOrgs","direction","warn","applySort","searchTermsRe","term","RegExp","every","termRe","test","applyOrgSearch","applyFilter","total","city","userdata","country","avatarOption","synced","gravatarDefault","_this7","groupToOrg","groupExists","_ref9","newOrg","_this8","createGroup","orgUpdate","updateGroup","_this9","requestMembership","catch","err","_this10","cancelRequest","_this11","acceptRequest","_this12","denyRequest","Validation","validateOrgId","validateOrgName","validateOrgDescription","match","StaticData","viewOrgJoinRequestError","VIEW_ORG_JOIN_REQUEST_ERROR","viewOrgCancelJoinRequestError","VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR","viewOrgFetch","dispatch","getState","_getState","_getState$auth$author","services","Groups","UserProfile","workspaceServiceURL","Workspace","getOrg","code","viewOrgJoinRequest","_getState2","_getState2$auth$autho","model","requestMembershipToGroup","VIEW_ORG_JOIN_REQUEST_SUCCESS","viewOrgCancelJoinRequest","VIEW_ORG_JOIN_REQUEST_START","_getState3","_getState3$auth$autho","newRequest","VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS","searchOrgs","_getState$browseOrgs","queryOrgs","sortOrgs","_getState2$browseOrgs","filterOrgs","_getState3$browseOrgs","actions","AddOrgEvaluateErrors","addOrgEdit","addOrgEvaluate","addOrgUpdateName","_Validation$validateO","_Validation$validateO2","validatedName","addOrgUpdateGravatarHash","_Validation$validateO3","validateOrgGravatarHash","_Validation$validateO4","validateGravatarHash","addOrgUpdateId","_Validation$validateO5","_Validation$validateO6","validatedId","_state$auth$authoriza","newModelFromState","addOrgUpdateDescription","_getState4","_getState4$auth$autho","_model$validateOrgDes","_model$validateOrgDes2","validatedDescription","NewOrganization","cancelToBrowser","gravatarEmail","origin","document","location","onAddOrgEdit","email","hashed","md5","onUpdateGravatarHash","isModified","confirm","onOk","onCancel","okText","cancelText","onAddOrg","persist","onUpdateName","onUpdateDescription","onUpdateId","onNameChange","marginBottom","onGravatarEmailSync","onGravatarHashChange","onIdChange","minHeight","maxHeight","onDescriptionChange","getOrgAvatarUrl","renderOrgAvatar","dangerouslySetInnerHTML","__html","marked","_this$props","label","orgName","canSave","onClickCancelToBrowser","Redirect","renderForm","renderPreview","renderLoadingHeader","_ref$addOrg","Avatar","avatarUrl","size","User","src_components_Avatar","avatarSize","x","join","ViewOrganization","onViewOrg","onJoinOrg","onCancelJoinRequest","renderEditRow","textAlign","spin","src_components_User","renderAdminRequestsRow","onJoinClick","renderEditButton","renderJoinButton","renderUserRelationship","renderInfo","renderMembers","_ref$viewOrg","EditOrgEvaluateErrors","editOrgEdit","editableOrg","UNEDITED_OK","EDIT_ORG_EDIT_ERROR","editOrgSave","_getState2$editOrg","update","updateOrg","editOrgEvaluate","editOrgUpdateName","editOrgUpdateGravatarHash","editOrgUpdateDescription","_getState5","_getState5$auth$autho","EditOrganization","cancelToViewer","onEditOrgEdit","onEditOrgSave","onClickCancelToViewer","_ref$editOrg","Auth","tokenRef","checkAuth","onRemoveAuthorization","onAddAuthorization","onLoginClick","onLogoutClick","buildAuthToolbar","buildAuthForm","hosted","buildAuthProd","buildAuthDev","endpoints","AuthClient","path","makePath","Cookies","getTokenInfo","getMe","account","desc","Listener","onSuccess","onError","WaitingListener","started","timeout","Message","payload","channel","uuidv4","created","envelope","Channel","window","host","channelId","awaitingResponse","waitingListeners","listeners","lastId","sentCount","receivedCount","unwelcomeReceivedCount","unwelcomeReceivedCountThreshhold","unwelcomeReceiptWarning","unwelcomeReceiptWarningCount","currentListener","messageEvent","data","delete","handler","awaiting","listener","messageId","success","listen","postMessage","getMessage","sendMessage","sendRequest","setTimeout","now","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","elapsed","_iterator","entries","Symbol","iterator","next","done","return","startMonitor","listenOnce","sent","received","receiveMessage","addEventListener","removeEventListener","IFrameSimulator","frameId","uuid","parentHost","IFrameIntegration","frameElement","hasAttribute","getAttribute","parse","decodeURIComponent","KBaseIntegration","onAppStart","iframeParams","getParamsFromIFrame","baseUrl","fakeIframeParams","manageGroupRequestsAcceptJoinRequest","ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_SUCCESS","manageGroupRequestsAcceptJoinRequestSuccess","ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_ERROR","manageGroupRequestsDenyJoinRequest","ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_SUCCESS","manageGroupRequestsDenyJoinRequestSuccess","ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_ERROR","ManageGroupRequests","onStart","onAcceptJoinRequest","onDenyJoinRequest","open","JOIN_GROUP_INVITE","ADD_WORKSPACE_REQUEST","ADD_WORKSPACE_INVITE","someDate","measure","measureAbs","unit","nowDate","round","elapsedAbs","abs","prefix","suffix","getFullYear","card","hoverable","headStyle","backgroundColor","niceElapsed","renderRequestJoinRequest","renderInviteJoinRequest","renderRequestNarrativeRequest","renderInviteNarrativeRequest","padding","renderRequest","es_Redirect","renderRequests","StateInstances","rawOrganizations","selectedOrganizationId","makeEmptyEditableOrganization","pending","library","add","faSpinner","faSearch","initialState","makeInitialState","store","createStore","theReducer","compose","applyMiddleware","thunk","App","react_default","createElement","es","containers_Auth","containers_KBaseIntegration","HashRouter","basename","Route","component","containers_ViewOrganization","containers_EditOrganization","containers_ManageGroupRequests","exact","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"kmBAkBaA,EAAb,SAAAC,GAEI,SAAAD,EAAYE,GAA2B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACnCG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,YAAa,IAJkBR,EAF3C,OAAAC,OAAAQ,EAAA,EAAAR,CAAAJ,EAAAC,GAAAG,OAAAS,EAAA,EAAAT,CAAAJ,EAAA,EAAAc,IAAA,eAAAC,MAAA,SAUiBC,GAQT,IAAKA,EAAIC,aACL,MAAO,iBAIX,MAAO,mCAAqCD,EAAIC,aAAe,+BAvBvE,CAAAH,IAAA,eAAAC,MAAA,SA0BiBC,GACT,OACIE,EAAA,qBAAKC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,IAC7BC,IAAKhB,KAAKiB,aAAaP,OA7BvC,CAAAF,IAAA,iBAAAC,MAAA,SAiCmBC,GACX,OAAQA,EAAIQ,SAASC,MACjB,KAAMC,EAAiCC,KACnC,OACIT,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAAjB,QAER,KAAMC,EAAiCG,KACnC,OACIX,EAAA,cAACY,EAAA,EAAD,CACIC,UAAU,cACVC,gBAAiB,GACjBC,MAAM,uFAENf,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,QAAjB,SAGZ,KAAMC,EAAiCQ,uBACnC,OAAQhB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,OAAON,MAAO,CAAEgB,MAAO,YAAxC,sCACZ,KAAMT,EAAiCU,0BACnC,OAAQlB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,OAAON,MAAO,CAAEgB,MAAO,UAAxC,iCACZ,KAAMT,EAAiCW,OACnC,OAAQnB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAAjB,UACZ,KAAMC,EAAiCY,MACnC,OAAQpB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,WAAjB,SACZ,KAAMC,EAAiCa,MACnC,OACIrB,EAAA,cAACY,EAAA,EAAD,CACIC,UAAU,cACVC,gBAAiB,GACjBC,MAAM,oBAENf,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAASe,MAAM,WAAhC,aAhExB,CAAA1B,IAAA,kBAAAC,MAAA,SAsEoBC,GAKZ,IAAIyB,EAJJ,GAAMzB,EAAIQ,SAASC,OAASC,EAAiCa,OACzDvB,EAAIQ,SAASC,OAASC,EAAiCY,MAY3D,OARItB,EAAI0B,cAAcC,OAAS,IAC3BF,EACIvB,EAAA,yBACIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,qBAAqBe,MAAM,UAAUI,aAAa,WADjE,eACwF1B,EAAA,uBAAIF,EAAI0B,cAAcC,OAAtB,mBAA8C3B,EAAI0B,cAAcC,OAAS,EAAI,IAAM,MAM/KzB,EAAA,qBAAK2B,UAAU,SACVJ,KAtFjB,CAAA3B,IAAA,YAAAC,MAAA,SA2Fc+B,EAAeC,EAAkBC,GACvC,OAAc,IAAVF,GAAeA,EAAQ,EAChBE,EAEJD,IA/Ff,CAAAjC,IAAA,YAAAC,MAAA,SAkGcC,EAAmBiC,GACzB,OACI/B,EAAA,qBAAK2B,UAAU,mBAAmB/B,IAAKoC,OAAOD,IAC1C/B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuBrC,EAAIsC,KACjChD,KAAKiD,aAAavC,KAG3BE,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,WACX3B,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuBrC,EAAIsC,KACjCtC,EAAIwC,OAGbtC,EAAA,qBAAK2B,UAAU,YACX3B,EAAA,sBAAM2B,UAAU,eAAhB,SACA3B,EAAA,sBAAM2B,UAAU,eAAc3B,EAAA,mBAAGuC,KAAM,YAAczC,EAAI0C,MAAMC,SAAUC,OAAO,UAAU5C,EAAI0C,MAAMG,SAAtE,UAAkF7C,EAAI0C,MAAMC,SAA5F,YAGlCzC,EAAA,qBAAK2B,UAAU,cACX3B,EAAA,sBAAM2B,UAAU,eAAhB,eACA3B,EAAA,sBAAM2B,UAAU,eAAeiB,KAAKC,eAAe,QAAS,CACxDC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAOnD,EAAIoD,aAElBlD,EAAA,qBAAK2B,UAAU,eACV7B,EAAIqD,QAAQ1B,OAAS,EAAI3B,EAAIqD,QAAQ1B,OAAS,KADnD,IAC0DrC,KAAKgE,UAAUtD,EAAIqD,QAAQ1B,OAAQ,SAAU,YAEvGzB,EAAA,qBAAK2B,UAAU,YACX3B,EAAA,sBAAM2B,UAAU,eAAhB,OACCvC,KAAKiE,eAAevD,IAExBV,KAAKkE,gBAAgBxD,OApI1C,CAAAF,IAAA,aAAAC,MAAA,WA0IiB,IAAA0D,EAAAnE,KACT,OAAIA,KAAKJ,MAAMwE,cAAc/B,OAAS,EAE9BrC,KAAKJ,MAAMwE,cAAcC,IAAI,SAAC3D,EAAmBiC,GAC7C,OACIwB,EAAKG,UAAU5D,EAAKiC,KAM5B/B,EAAA,cAAC2D,EAAA,EAAD,CAAOpD,KAAK,UACRN,MAAO,CAAE2D,SAAU,OAAQC,OAAQ,oBACnCC,QAAQ,0CAvJ5B,CAAAlE,IAAA,SAAAC,MAAA,WA6JQ,OACIG,EAAA,qBAAK2B,UAAU,iBACVvC,KAAK2E,kBA/JtBjF,EAAA,CAAmCkF,aCPpBC,ICKHC,EA+DAC,EAyDAC,EAOAC,EA6DAC,EA4BAC,EAuBAC,EAOAC,EAOAC,EASAC,EAMAC,EASAC,EAQAC,EAOAC,EC9SAC,EFKGf,cAPR,SAAyBzE,GAE5B,MAAO,CACHgE,cAFsChE,EAAlCyF,WAAczB,gBAMXS,CAAyBnF,aCK5BoF,4GA+DAC,mPAyDAC,4NAOAC,iJA6DAC,6JA4BAC,8OAuBAC,kFAOAC,8EAOAC,8HASAC,0EAMAC,0NASAC,yIAQAC,8GAOAC,8DC9SAC,srKC2SGE,MA1CR,SAAiB1F,EAAmB2F,GAIvC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWI,cACZ,OAhQL,SAAqB5F,EAAmB2F,GAC3C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EAAM8F,OADP,CAEFC,UAAWb,EAAUc,WA2PdC,CAAYjG,GACvB,KAAKwF,EAAWU,gBACZ,OAxPL,SAAuBlG,EAAmB2F,GAC7C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EAAM8F,OADP,CAEFK,UAAWlB,EAAUmB,SACrBL,UAAWb,EAAUmB,UAkPdC,CAActG,GACzB,KAAKwF,EAAWe,cACZ,OA/OL,SAAqBvG,EAAmB2F,GAC3C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EAAM8F,OADP,CAEFC,UAAWb,EAAUsB,WACrBC,MAAOd,EAAOc,UAyOPC,CAAY1G,EAAO2F,GAC9B,KAAKH,EAAWmB,mBACZ,OAlNL,SAAyB3G,EAAmB2F,GAC/C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUmB,SACrBQ,gBAAiBzB,EAAgBlE,KACjC8E,UAAWb,EAAU2B,IACrBC,gBAAiB,CACblE,GAAI,CACAvC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B6B,KAAM,CACFzC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1BV,aAAc,CACVF,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B+F,YAAa,CACT3G,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,YAiLvBgG,CAAgBjH,GAC3B,KAAKwF,EAAW0B,oBACZ,OA3KL,SAA0BlH,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUmB,aAuKde,CAAiBnH,GAC5B,KAAKwF,EAAW4B,4BACZ,OAnKL,SAAiCpH,EAAmB2F,GACvD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXhE,KAAM,CACFzC,MAAOsF,EAAO7C,KACdiE,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAwJvBsG,CAAwBvH,EAAO2F,GAC1C,KAAKH,EAAWgC,0BACZ,OAlJL,SAA+BxH,EAAmB2F,GACrD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXhE,KAAM,CACFzC,MAAOsF,EAAO7C,KACdiE,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAwIfiB,CAAsB1H,EAAO2F,GAExC,KAAKH,EAAWmC,qCACZ,OAnIL,SAAyC3H,EAAmB2F,GAC/D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXvG,aAAc,CACVF,MAAOsF,EAAOpF,aACdwG,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAwHvB2G,CAAgC5H,EAAO2F,GAClD,KAAKH,EAAWqC,mCACZ,OAlHL,SAAuC7H,EAAmB2F,GAC7D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXvG,aAAc,CACVF,MAAOsF,EAAOpF,aACdwG,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAwGfqB,CAA8B9H,EAAO2F,GAEhD,KAAKH,EAAWuC,0BACZ,OAlGL,SAA+B/H,EAAmB2F,GACrD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXlE,GAAI,CACAvC,MAAOsF,EAAO/C,GACdmE,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAuFvB+G,CAAsBhI,EAAO2F,GACxC,KAAKH,EAAWyC,wBACZ,OAjFL,SAA6BjI,EAAmB2F,GACnD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXlE,GAAI,CACAvC,MAAOsF,EAAO/C,GACdmE,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAuEfyB,CAAoBlI,EAAO2F,GACtC,KAAKH,EAAW2C,mCACZ,OAlEL,SAAwCnI,EAAmB2F,GAC9D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXE,YAAa,CACT3G,MAAOsF,EAAOqB,YACdD,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAuDvBmH,CAA+BpI,EAAO2F,GACjD,KAAKH,EAAW6C,iCACZ,OAjDL,SAAsCrI,EAAmB2F,GAC5D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACVM,EAAM8F,OADG,CAEZK,UAAWlB,EAAUoC,OACrBP,gBAAgBpH,OAAAmG,EAAA,EAAAnG,CAAA,GACTM,EAAM8F,OAAOgB,gBADL,CAEXE,YAAa,CACT3G,MAAOsF,EAAOqB,YACdD,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAuCf6B,CAA6BtI,EAAO2F,GAC/C,KAAKH,EAAW+C,oBACZ,OA5PL,SAA0BvI,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EAAM8F,OADP,CAEFc,gBAAiBzB,EAAgBqD,UAuP1BC,CAAiBzI,GAC5B,KAAKwF,EAAWkD,wBACZ,OApPL,SAA8B1I,EAAmB2F,GACpD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8F,OAAOpG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EAAM8F,OADP,CAEFc,gBAAiBzB,EAAgBwD,YA+O1BC,CAAqB5I,GAChC,QACI,OAAO,OCoBJ0F,MA3CR,SAAiB1F,EAAmB2F,GAIvC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWqD,oBACZ,OAzQL,SAA0B7I,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUmB,SACrBQ,gBAAiBzB,EAAgBlE,KACjC8E,UAAWb,EAAU2B,IAErBkC,eAAgBpD,EAAO/C,GACvBoG,mBAAoB,CAChBpG,GAAI,CACAvC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B6B,KAAM,CACFzC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1BV,aAAc,CACVF,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B+F,YAAa,CACT3G,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,YAsOvBgI,CAAiBjJ,EAAO2F,GACnC,KAAKH,EAAW0D,sBACZ,OAhOL,SAA4BlJ,EAAmB2F,GAClD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEbE,mBAAoBrD,EAAOqD,mBAC3B7C,UAAWlB,EAAUmB,aA2Nd+C,CAAmBnJ,EAAO2F,GACrC,KAAKH,EAAW4D,oBACZ,OAtNL,SAA0BpJ,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM8I,QADN,CAEH/C,UAAWb,EAAUc,WAiNdqD,CAAiBrJ,GAC5B,KAAKwF,EAAW8D,sBACZ,OA9ML,SAA4BtJ,EAAmB2F,GAClD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM8I,QADN,CAEH3C,UAAWlB,EAAUmB,SACrBL,UAAWb,EAAUmB,UAwMdkD,CAAmBvJ,GAC9B,KAAKwF,EAAWgE,oBACZ,OArML,SAA0BxJ,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM8I,QADN,CAEH/C,UAAWb,EAAUsB,WACrBC,MAAOd,EAAOc,UA+LPgD,CAAiBzJ,EAAO2F,GAEnC,KAAKH,EAAWkE,6BACZ,OApKL,SAAkC1J,EAAmB2F,GACxD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdlG,KAAM,CACFzC,MAAOsF,EAAO7C,KACdiE,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAyJvB0I,CAAyB3J,EAAO2F,GAC3C,KAAKH,EAAWoE,2BACZ,OAnJL,SAAgC5J,EAAmB2F,GACtD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdlG,KAAM,CACFzC,MAAOsF,EAAO7C,KACdiE,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAyIfoD,CAAuB7J,EAAO2F,GAEzC,KAAKH,EAAWsE,sCACZ,OApIL,SAA0C9J,EAAmB2F,GAChE,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdzI,aAAc,CACVF,MAAOsF,EAAOpF,aACdwG,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAyHvB8I,CAAiC/J,EAAO2F,GACnD,KAAKH,EAAWwE,oCACZ,OAnHL,SAAwChK,EAAmB2F,GAC9D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdzI,aAAc,CACVF,MAAOsF,EAAOpF,aACdwG,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAyGfwD,CAA+BjK,EAAO2F,GAMjD,KAAKH,EAAW0E,oCACZ,OAnEL,SAAyClK,EAAmB2F,GAC/D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdhC,YAAa,CACT3G,MAAOsF,EAAOqB,YACdD,OAAQ3B,EAAWkC,UACnBb,MAAO,CACH1F,KAAM2D,EAAYzD,aAwDvBkJ,CAAgCnK,EAAO2F,GAClD,KAAKH,EAAW4E,kCACZ,OAlDL,SAAuCpK,EAAmB2F,GAC7D,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CACc8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACXM,EAAM8I,QADI,CAEb3C,UAAWlB,EAAUoC,OACrB2B,mBAAmBtJ,OAAAmG,EAAA,EAAAnG,CAAA,GACZM,EAAM8I,QAAQE,mBADH,CAEdhC,YAAa,CACT3G,MAAOsF,EAAOqB,YACdD,OAAQ3B,EAAWqC,aACnBhB,MAAOd,EAAOc,aAwCf4D,CAA8BrK,EAAO2F,GAChD,KAAKH,EAAW8E,qBACZ,OA7ML,SAA2BtK,EAAmB2F,GACjD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM8I,QADN,CAEHlC,gBAAiBzB,EAAgBqD,UAwM1B+B,CAAkBvK,GAC7B,KAAKwF,EAAWgF,yBACZ,OArML,SAA+BxK,EAAmB2F,GACrD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI8I,QAAQpJ,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM8I,QADN,CAEHlC,gBAAiBzB,EAAgBwD,YAgM1B8B,CAAsBzK,GACjC,QACI,OAAO,OC7PJ0F,MAjBf,SAAiB1F,EAAyB2F,GAItC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWkF,qBACZ,OAhDL,SAAsB1K,EACzB2F,GACA,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI2K,QAAQjL,OAAAmG,EAAA,EAAAnG,CAAA,GAAMM,EAAM2K,QAAb,CAAsB3K,MAAOgB,EAAmB4J,aA4C5CC,CAAa7K,GACxB,KAAKwF,EAAWsF,uBACZ,OA1CL,SAAwB9K,EAC3B2F,GACA,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI2K,QAAQjL,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM2K,QADN,CAEH3K,MAAOgB,EAAmB+J,MAC1BC,aAAcrF,EAAOqF,iBAmCdC,CAAejL,EAAO2F,GACjC,KAAKH,EAAW0F,qBACZ,OAhCL,SAAsBlL,EACzB2F,GACA,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI2K,QAAQjL,OAAAmG,EAAA,EAAAnG,CAAA,GACDM,EAAM2K,QADN,CAEH3K,MAAOgB,EAAmBmK,MAC1B1E,MAAOd,EAAOc,UAyBP2E,CAAapL,EAAO2F,GAC/B,KAAKH,EAAW6F,cACZ,OAtBL,SAAqBrL,EAAyB2F,GACjD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI2K,QAAS,CACL3K,MAAOgB,EAAmBC,QAkBnBqK,CAAYtL,GACvB,QACI,OAAO,OC2FJ0F,MAtBf,SAAiB1F,EAAyB2F,GAItC,OAAQA,EAAO5E,MACX,KAAKyE,EAAW+F,kBACZ,OAxGL,SAAyBvL,EAAyB2F,GAAmD,IAAA6F,EAE9CxL,EAAlDyF,WAUR,OAZwG+F,EAElFC,OAFkFD,EAE1EE,OAF0EF,EAElEG,cAErBhG,EAAO1F,YAIVD,EAAM4L,KAAKC,cAAc5I,SAIhCvD,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAKIyF,WAAW/F,OAAAmG,EAAA,EAAAnG,CAAA,GACJM,EAAMyF,WADH,CAENqG,WAAW,EACX7L,YAAa0F,EAAO1F,gBAoFb8L,CAAgB/L,EAAO2F,GAClC,KAAKH,EAAWwG,oBACZ,OAjFL,SAA2BhM,EAAyB2F,GACvD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEIyF,WAAW/F,OAAAmG,EAAA,EAAAnG,CAAA,GACJM,EAAMyF,WADH,CAENqG,WAAW,EACX9H,cAAe2B,EAAO3B,cACtBiI,WAAYtG,EAAOsG,WACnBC,cAAevG,EAAO3B,cAAc/B,WAyE7BkK,CAAkBnM,EAAO2F,GACpC,KAAKH,EAAW4G,kBACZ,OArEL,SAAyBpM,EAAyB2F,GACrD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GAAKM,EAAZ,CAAmByG,MAAOd,EAAOc,QAoElB4F,CAAgBrM,EAAO2F,GAGlC,KAAKH,EAAW8G,gBACZ,OApEL,SAAuBtM,EAAyB2F,GAAiD,IAAA4G,EAIhGvM,EAFAyF,WAYJ,OAdoG8G,EAElFtM,YAFkFsM,EAErEd,OAE3BzL,EADA4L,KAAQC,cAAiB5I,SAKjB0C,EAAO+F,OACA/F,EAAOgG,cAKnBjM,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEIyF,WAAW/F,OAAAmG,EAAA,EAAAnG,CAAA,GACJM,EAAMyF,WADH,CAENqG,WAAW,EACXJ,OAAQ/F,EAAO+F,OACfC,cAAehG,EAAOgG,kBAgDfa,CAAcxM,EAAO2F,GAChC,KAAKH,EAAWiH,kBACZ,OA/BL,SAAyBzM,EAC5B2F,GAAmD,IAC3C8F,EAAW9F,EAAX8F,OAER,OAAO/L,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEIyF,WAAW/F,OAAAmG,EAAA,EAAAnG,CAAA,GACJM,EAAMyF,WADH,CAENqG,WAAW,EACXL,aAsBOiB,CAAgB1M,EAAO2F,GAClC,QACI,OAAO,OC/DJD,MAff,SAAiB1F,EAAmB2F,GAChC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWmH,iBACZ,OAnEL,SAAwB3M,EAAmB2F,GAC9C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI4L,KAAM,CACF7E,OAAQjC,EAAU8H,SAClBtI,QAAS,GACTuH,cAAe,CACXgB,MAAO,GACP5J,SAAU,GACVE,SAAU,GACV2J,MAAO,OAyDJC,CAAe/M,GAC1B,KAAKwF,EAAWwH,gBACZ,OArCL,SAAwBhN,EAAmB2F,GAC9C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI4L,KAAM,CACF7E,OAAQjC,EAAUmI,WAClB3I,QAAS,GACTuH,cAAe,CACXgB,MAAOlH,EAAOkH,MACd5J,SAAU0C,EAAO1C,SACjBE,SAAUwC,EAAOxC,SACjB2J,MAAOnH,EAAOmH,UA2BXI,CAAelN,EAAO2F,GACjC,KAAKH,EAAW2H,kBACZ,OAvBL,SAA0BnN,EAAmB2F,GAChD,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI4L,KAAM,CACF7E,OAAQjC,EAAUsI,aAClB9I,QAAS,GACTuH,cAAe,CACXgB,MAAO,GACP5J,SAAU,GACVE,SAAU,GACV2J,MAAO,OAaJO,CAAiBrN,GAC5B,KAAKwF,EAAW8H,iBACZ,OAzDL,SAAwBtN,EAAmB2F,GAC9C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI4L,KAAM,CACF7E,OAAQjC,EAAUqG,MAClB7G,QAASqB,EAAOc,MAAMnC,QACtBuH,cAAe,CACXgB,MAAO,GACP5J,SAAU,GACVE,SAAU,GACV2J,MAAO,OA+CJS,CAAevN,EAAO2F,GACjC,QACI,OAAO,OCzDJD,MATf,SAAiB1F,EAAmB2F,GAChC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWgI,YACZ,OAbL,SAAoBxN,EAAmB2F,GAC1C,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEIyN,IAAK,CACD1G,OAAQzB,EAASyF,MACjB2C,OAAQ/H,EAAO+H,UAQRC,CAAW3N,EAAO2F,GAC7B,QACI,OAAO,OCkCJD,MAbf,SAAiB1F,EAAyB2F,GACtC,OAAQA,EAAO5E,MACX,KAAKyE,EAAWoI,4BACZ,OAvCL,SACH5N,EACA2F,GACA,OAAO3F,EAoCQ6N,CAAyB7N,GACpC,KAAKwF,EAAWsI,8BACZ,OAnCL,SACH9N,EACA2F,GACA,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI+N,wBAAyB,CACrBC,KAAM,CACFhD,aAAcrF,EAAOqF,aACrBiD,SAAUtI,EAAOsI,UAGrBxH,MAAO,QAwBAyH,CAA2BlO,EAAO2F,GAC7C,KAAKH,EAAW2I,4BACZ,OArBL,SACHnO,EACA2F,GACA,OAAOjG,OAAAmG,EAAA,EAAAnG,CAAA,GACAM,EADP,CAEI+N,wBAAyB,CACrBC,KAAM,KAENvH,MAAOd,EAAOc,SAaP2H,CAAyBpO,EAAO2F,GAC3C,QACI,OAAO,OC5BJD,ICuGHH,EDvGGG,EAXR,SAAiB1F,EAAmB2F,GACvC,OAAO0I,EAAcrO,EAAO2F,IACxB2I,EAAetO,EAAO2F,IACtB4I,EAAkBvO,EAAO2F,IACzB6I,EAAexO,EAAO2F,IACtB8I,EAAYzO,EAAO2F,IACnB+I,EAAW1O,EAAO2F,IAClBgJ,EAAoB3O,EAAO2F,IAC3B3F,mFEkBO4O,4LA1BP,GAAIhP,KAAKJ,MAAMqP,SACX,OACIrO,EAAA,cAACsO,GAAA,EAAD,CAAgBrO,MAAO,CAAEsO,cAAe,SAAUC,WAAY,MAAOC,YAAa,0CAM1F,OACIzO,EAAA,qBAAK2B,UAAU,UACX3B,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAG,kBACRlC,EAAA,cAACsO,GAAA,EAAD,CAASrO,MAAO,CAAEsO,cAAe,YAChC,IACDvO,EAAA,sBAAM2O,YAAU,cAAhB,UAGR3O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC7E1P,KAAK2P,iBACL3P,KAAKJ,MAAMqP,kBAtBXrK,aCoSNgL,eA3QX,SAAAA,EAAYhQ,GAAkC,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4P,IAC1C/P,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8P,GAAAzP,KAAAH,KAAMJ,KAEDiQ,YAAcjL,cACnB/E,EAAKiQ,aAAelL,cAEpB/E,EAAKO,MAAQ,CACTyP,YAAa,GACbE,UAAU,GAGdlQ,EAAKD,MAAMoQ,aAAa,IAXkBnQ,4EAe1CoQ,IAAMC,KAAK,CACPvO,MAAO,6BACPb,MAAO,OACPqP,QACIvP,EAAA,yBACIA,EAAA,qGAOZ,GAAiC,OAA7BZ,KAAK6P,YAAYO,QAArB,CAGA,IAAM/P,EAAcL,KAAK6P,YAAYO,QAAQ3P,MAAM4P,MAAM,SAEzDrQ,KAAKJ,MAAMoQ,aAAa3P,8CAIxB,SAAIL,KAAKI,MAAMyP,aAAe7P,KAAKI,MAAMyP,YAAYxN,OAAS,iDAO9D,IAAIiO,EAEAA,EADAtQ,KAAK6P,YAAYO,QACSpQ,KAAK6P,YAAYO,QAAQ3P,MAEzB,GAE9BT,KAAKuQ,SAAS,CAAEV,YAAaS,qCAGxBE,GACLA,EAAEC,iBACFzQ,KAAK0Q,kDAGMF,GACXxQ,KAAKJ,MAAM+Q,WAAWH,EAAElN,OAAO7C,MAAOT,KAAKJ,MAAMmM,uDAGrCtL,GACZT,KAAKJ,MAAM+Q,WAAWlQ,EAAOT,KAAKJ,MAAMmM,6DAItByE,GAClBxQ,KAAKJ,MAAM+Q,WAAW3Q,KAAKJ,MAAMkM,OAAQ0E,EAAElN,OAAO7C,sDAG/BA,GACnBT,KAAKJ,MAAM+Q,WAAW3Q,KAAKJ,MAAMkM,OAAQrL,0CAG9B+P,GACXxQ,KAAKJ,MAAMgR,aAAaJ,EAAElN,OAAO7C,+CAGrBA,GACZT,KAAKJ,MAAMgR,aAAanQ,2CAIS,OAA7BT,KAAK6P,YAAYO,UAGrBpQ,KAAK6P,YAAYO,QAAQ3P,MAAQ,GACjCT,KAAK6Q,sBAIL7Q,KAAK0Q,2DAIL,OAA8B,IAA1B1Q,KAAKJ,MAAMyM,WAEPzL,EAAA,4DAKyB,IAA7BZ,KAAKJ,MAAM0M,cAEP1L,EAAA,0DAEK,IACAZ,KAAKJ,MAAMyM,WACX,IAJL,cAUJrM,KAAKJ,MAAMyM,aAAerM,KAAKJ,MAAM0M,cAEjC1L,EAAA,wCAEC,IACIZ,KAAKJ,MAAMyM,WACX,IAJL,iBAWJzL,EAAA,oCAEK,IACAZ,KAAKJ,MAAM0M,cACX,IAJL,SAMK,IACAtM,KAAKJ,MAAMyM,WACX,IARL,4DAeJ,OAAIrM,KAAKJ,MAAMsM,UACHtL,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,YAEfP,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,qDAInB,OACIP,EAAA,sBAAMoC,GAAG,aAAaT,UAAU,iCAAiCuO,SAAU9Q,KAAK8Q,SAASC,KAAK/Q,OAC1FY,EAAA,uBACIoQ,YAAY,uBACZC,SAAUjR,KAAK6Q,oBAAoBE,KAAK/Q,MACxCkR,WAAS,EACTC,IAAKnR,KAAK6P,cAKdjP,EAAA,cAACwQ,EAAA,EAAD,CACIC,UAAWrR,KAAKsR,kBAChBH,IAAKnR,KAAK8P,aACVyB,KAAK,aACL/Q,IAAI,SACJgR,SAAS,UACRxR,KAAKyR,oBAGV7Q,EAAA,cAACwQ,EAAA,EAAD,CACIM,QAAS1R,KAAK2R,cAAcZ,KAAK/Q,MACjCqR,UAAWrR,KAAKsR,kBAChBhQ,KAAK,kDAajB,OACIV,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,6DAGAA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,QAAQN,MAAO,CAAE4D,OAAQ,WACpC7D,EAAA,sBAAMC,MAAO,CAAEgR,WAAY,SAAUC,UAAW,WAC3C9R,KAAK+R,yBAGdnR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOuC,eAAgB,aAClFpR,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAG,oBAAmBlC,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,eAAb,wBAC/BV,EAAA,cAACwQ,EAAA,EAAD,CAAQa,MAAM,SAAS3Q,KAAK,OAAOoQ,QAAS1R,KAAKkS,WAAWnB,KAAK/Q,wDASjF,OACIY,EAAA,yBACIA,EAAA,sBAAM2B,UAAU,eAAhB,WACA3B,EAAA,cAACuR,EAAA,EAAD,CAAQlB,SAAUjR,KAAKoS,gBAAgBrB,KAAK/Q,MACxCqS,aAAcrS,KAAKJ,MAAMkM,OACzBjL,MAAO,CAAEC,MAAO,OAChBwR,0BAA0B,GAC1B1R,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,OAAOD,IAAI,QAAhC,YACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,QAAQD,IAAI,SAAjC,SACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,UAAUD,IAAI,WAAnC,iBAEJI,EAAA,cAACuR,EAAA,EAAD,CAAQlB,SAAUjR,KAAKwS,uBAAuBzB,KAAK/Q,MAC/Ca,MAAO,CAAEC,MAAO,QAChBwR,0BAA0B,EAC1BD,aAAcrS,KAAKJ,MAAMmM,eACzBnL,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAOkF,EAAc8M,UAAWjS,IAAI,QAAOI,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,mBAArE,aACAP,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAOkF,EAAc+M,WAAYlS,IAAI,SAAQI,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,oBAAvE,eAEJP,EAAA,sBAAM2B,UAAU,cAAc1B,MAAO,CAAEuO,WAAY,SAAnD,UACAxO,EAAA,cAACuR,EAAA,EAAD,CAAQlB,SAAUjR,KAAK2S,gBAAgB5B,KAAK/Q,MACxCqS,aAAcrS,KAAKJ,MAAMiM,OACzBhL,MAAO,CAAEC,MAAO,QAChBwR,0BAA0B,GAC1B1R,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,MAAMD,IAAI,OAA/B,OACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,QAAQD,IAAI,SAAjC,gBACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,WAAWD,IAAI,YAApC,oBACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,UAAUD,IAAI,WAAnC,iCACAI,EAAA,cAACuR,EAAA,EAAOI,OAAR,CAAe9R,MAAM,eAAeD,IAAI,gBAAxC,6DAOZ,OACII,EAAA,qBAAK2B,UAAU,wBACVvC,KAAK4S,eACNhS,EAAA,qBAAK2B,UAAU,gBACX3B,EAAA,qBAAK2B,UAAU,gBACVvC,KAAK6S,mBAEVjS,EAAA,qBAAK2B,UAAU,WACVvC,KAAK8S,uBAGdlS,EAAA,qBAAK2B,UAAU,WAEX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,cAACmS,EAAD,gBArQWnO,sBCGtBoO,GAAb,WAII,SAAAA,EAAAC,GAA4D,IAA9CC,EAA8CD,EAA9CC,IAAKjG,EAAyCgG,EAAzChG,MAAyCnN,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,GACxDhT,KAAKkT,IAAMA,EACXlT,KAAKiN,MAAQA,EANrB,OAAAnN,OAAAS,EAAA,EAAAT,CAAAkT,EAAA,EAAAxS,IAAA,cAAAC,MAAA,SASgB0S,EAAgBC,GACxB,MAAO,CACHC,QAAS,MACTF,OAAQ,eAAiBA,EACzBnQ,GAAIJ,OAAO0Q,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,CAACL,MAdrB,CAAA5S,IAAA,mBAAAC,MAAA,SAkBqB0S,GACb,MAAO,CACHE,QAAS,MACTF,OAAQ,eAAiBA,EACzBnQ,GAAIJ,OAAO0Q,KAAKC,UAAUC,MAAM,GAChCC,OAAQ,MAvBpB,CAAAjT,IAAA,aAAAC,MAAA,WA4BQ,OAAOiT,MAAM1T,KAAKkT,IAAK,CACnBC,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB8G,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUnU,KAAKoU,iBAAiB,cAE1CC,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,+BAAiCD,EAASnN,OAAS,KAAOmN,EAASE,YAEvF,OAAOF,EAASG,WA3ChC,CAAAjU,IAAA,iBAAAC,MAAA,SA+CmB4C,GACX,OAAOqQ,MAAM1T,KAAKkT,IAAK,CACnBC,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB8G,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUnU,KAAK0U,YAAY,mBAAoB,CAACrR,OAE1DgR,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,+BAAiCD,EAASnN,OAAS,KAAOmN,EAASE,YAEvF,OAAOF,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,EAAOA,OAAO,GAAG,OAlExC,CAAAnU,IAAA,kBAAAC,MAAA,SAsEoBmU,GACZ,OAAOlB,MAAM1T,KAAKkT,IAAK,CACnBC,OAAQ,OACRQ,KAAM,OACNC,MAAO,WACPC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB8G,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAUnU,KAAK0U,YAAY,mBAAoBE,MAEzDP,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,+BAAiCD,EAASnN,OAAS,KAAOmN,EAASE,YAEvF,OAAOF,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,EAAOA,OAAO,SAzFrC3B,EAAA,aH8FYrN,2EAeL,IAAMkP,GAAb,WAII,SAAAA,EAAA5B,GAA4D,IAA9ChG,EAA8CgG,EAA9ChG,MAAOiG,EAAuCD,EAAvCC,IAAuCpT,OAAAC,EAAA,EAAAD,CAAAE,KAAA6U,GACxD7U,KAAKiN,MAAQA,EACbjN,KAAKkT,IAAMA,EANnB,OAAApT,OAAAS,EAAA,EAAAT,CAAA+U,EAAA,EAAArU,IAAA,UAAAC,MAAA,WAUQ,OAAOiT,MAAM1T,KAAKkT,IAAM,IAAK,CACzBW,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MArBvB,CAAAnU,IAAA,cAAAC,MAAA,SAyBgBuC,GACR,OAAO0Q,MAAM1T,KAAKkT,IAAM,UAAYlQ,EAAK,WACpCqR,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACS,GACH,OAAOA,MA/BvB,CAAAtU,IAAA,YAAAC,MAAA,WAoDuC,IAAAZ,EAAAG,KAC3B+U,GAAQ,IAAIC,MAAOC,UACvB,OAAOvB,MAAM1T,KAAKkT,IAAM,SAAU,CAC9BW,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACM,GACHO,QAAQC,IAAI,qBAAqB,IAAIH,MAAOC,UAAYF,GACxDA,GAAQ,IAAIC,MAAOC,UACnB,IAAMG,EAAOT,EAAO9I,OAAO,SAAAwJ,GAAA,MAAuB,iBAAvBA,EAAGlU,OAC9B,OAAOmU,QAAQC,IAAIH,EAAK/Q,IAAI,SAACmR,GAAD,OAAY3V,EAAK4V,aAAaD,EAAMxS,SAEnEqR,KAAK,SAACM,GAEH,OADAO,QAAQC,IAAI,qBAAqB,IAAIH,MAAOC,UAAYF,GACjDJ,MAxEvB,CAAAnU,IAAA,eAAAC,MAAA,SA4EiBuC,GACT,OAAO0Q,MAAM1T,KAAKkT,IAAM,UAAYlQ,EAAI,CACpC6Q,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAwB,MAApBA,EAASnN,OACF,KAEJmN,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MA3FvB,CAAAnU,IAAA,cAAAC,MAAA,SA+FgBiV,GACR,OAAOhC,MAAM1T,KAAKkT,IAAM,UAAYwC,EAAS1S,GAAI,CAC7C6Q,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,MACRc,KAAMC,KAAKC,UAAU,CACjBjR,KAAMwS,EAASxS,KACfyS,OAAQ,CACJC,aAAcF,EAASE,cAE3BzU,KAAMuU,EAASvU,KACfiG,YAAasO,EAAStO,gBAGzBiN,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MArHvB,CAAAnU,IAAA,cAAAC,MAAA,SAyHgBuC,EAAY6S,GACpB,OAAOnC,MAAM1T,KAAKkT,IAAM,UAAYlQ,EAAK,UAAW,CAChD6Q,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,MAGRc,KAAMC,KAAKC,UAAU,CACjBjR,KAAM2S,EAAY3S,KAClByS,OAAQ,CACJC,aAAcC,EAAYD,cAE9BzU,KAAM,eACNiG,YAAayO,EAAYzO,gBAG5BiN,KAAK,SAACC,GAEH,GAAwB,MAApBA,EAASnN,OAGb,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,OAAS,MAAQmN,EAASE,gBAlJ7F,CAAAhU,IAAA,mBAAAC,MAAA,SAsJqBqV,EAAiBrC,GAC9B,IAAMsC,EAAQ,IAAIC,gBAclB,OAbIvC,EAAOwC,eACPF,EAAMG,OAAO,SAAU,UAEvBzC,EAAO1H,gBACH0H,EAAO1H,gBAAkBpG,EAAc+M,WACvCqD,EAAMG,OAAO,QAAS,QAEtBH,EAAMG,OAAO,QAAS,QAG1BzC,EAAO0C,SACPJ,EAAMG,OAAO,cAAetT,OAAO6Q,EAAO0C,QAAQlB,YAE/CvB,MAAM1T,KAAKkT,IAAM,UAAY4C,EAAU,aAAerC,EAAO2C,WAAY,CAC5EvC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,OAAS,MAAQmN,EAASE,YAEjF,OAAOF,EAASG,WAlLhC,CAAAjU,IAAA,sBAAAC,MAAA,SAsLwBgT,GAChB,IAAMsC,EAAQ,IAAIC,gBAclB,OAbIvC,EAAOwC,eACPF,EAAMG,OAAO,SAAU,UAEvBzC,EAAO1H,gBACH0H,EAAO1H,gBAAkBpG,EAAc+M,WACvCqD,EAAMG,OAAO,QAAS,QAEtBH,EAAMG,OAAO,QAAS,QAG1BzC,EAAO0C,SACPJ,EAAMG,OAAO,cAAetT,OAAO6Q,EAAO0C,QAAQlB,YAE/CvB,MAAM1T,KAAKkT,IAAM,qBAAuBO,EAAO2C,WAAY,CAC9DvC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,OAAS,MAAQmN,EAASE,YAEjF,OAAOF,EAASG,WAlNhC,CAAAjU,IAAA,qBAAAC,MAAA,SAqNuBgT,GACf,IAAMsC,EAAQ,IAAIC,gBAclB,OAbIvC,EAAOwC,eACPF,EAAMG,OAAO,SAAU,UAEvBzC,EAAO1H,gBACH0H,EAAO1H,gBAAkBpG,EAAc+M,WACvCqD,EAAMG,OAAO,QAAS,QAEtBH,EAAMG,OAAO,QAAS,QAG1BzC,EAAO0C,SACPJ,EAAMG,OAAO,cAAetT,OAAO6Q,EAAO0C,QAAQlB,YAE/CvB,MAAM1T,KAAKkT,IAAM,oBAAsBO,EAAO2C,WAAY,CAC7DvC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,OAAS,MAAQmN,EAASE,YAEjF,OAAOF,EAASG,WAjPhC,CAAAjU,IAAA,oBAAAC,MAAA,SAqPsBgT,GACd,OAAOC,MAAM1T,KAAKkT,IAAM,UAAYO,EAAOqC,QAAU,qBAAsB,CACvEjC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,SAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,OAAS,MAAQmN,EAASE,YAEjF,OAAOF,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MAtQvB,CAAAnU,IAAA,gBAAAC,MAAA,SAAA4V,GA0Q+E,IAA3DC,EAA2DD,EAA3DC,UACZ,OAAO5C,MAAM1T,KAAKkT,IAAM,eAAiBoD,EAAY,UAAW,CAC5DzC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,QAEvD,OAAOmN,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MA3RvB,CAAAnU,IAAA,gBAAAC,MAAA,SAAA8V,GA+R+E,IAA3DD,EAA2DC,EAA3DD,UACZ,OAAO5C,MAAM1T,KAAKkT,IAAM,eAAiBoD,EAAY,UAAW,CAC5DzC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,QAEvD,OAAOmN,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MAhTvB,CAAAnU,IAAA,cAAAC,MAAA,SAAA+V,GAoT6E,IAA3DF,EAA2DE,EAA3DF,UACV,OAAO5C,MAAM1T,KAAKkT,IAAM,eAAiBoD,EAAY,QAAS,CAC1DzC,QAAS,CACLC,cAAe9T,KAAKiN,MACpB+G,OAAQ,mBACRD,eAAgB,oBAEpBJ,KAAM,OACNR,OAAQ,QAEPkB,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAM,wBAA0BD,EAASnN,QAEvD,OAAOmN,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,QArUvBE,EAAA,GIQO,IAAM4B,GAAb,WAUI,SAAAA,EAAYhD,GAAsB3T,OAAAC,EAAA,EAAAD,CAAAE,KAAAyW,GAE9BzW,KAAKyT,OAASA,EACdzT,KAAK0W,WAAa,KAb1B,OAAA5W,OAAAS,EAAA,EAAAT,CAAA2W,EAAA,EAAAjW,IAAA,qBAAAC,MAAA,WAiBQ,IAAMkW,EAAe,IAAI9B,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGvB,OAAOqI,QAAQC,IAAI,CACfoB,EAAaE,mBAAmB,CAC5BZ,eAAe,EACflK,cAAe+K,EAAqBpE,WACpCyD,QAAS,IAAInB,KAAK,KAEjBX,KAAK,SAAChG,GACH,OAAOA,IAEfsI,EAAaI,oBAAoB,CAC7Bd,eAAe,EACflK,cAAe+K,EAAqBpE,WACpCyD,QAAS,IAAInB,KAAK,KAEjBX,KAAK,SAAChG,GACH,OAAOA,MAGdgG,KAAK,SAAApB,GAAyC,IAAAoC,EAAAvV,OAAAkX,GAAA,EAAAlX,CAAAmT,EAAA,GAG3C,MAAO,CACH5E,SAJuCgH,EAAA,GAKvC4B,YALuC5B,EAAA,QAxC3D,CAAA7U,IAAA,6BAAAC,MAAA,SAkD+ByW,GAAqD,IAAArX,EAAAG,KAS5E,IAAMmX,EAAoB,IAAInE,GAAkB,CAC5CE,IAAKlT,KAAKyT,OAAO2D,sBACjBnK,MAAOjN,KAAKyT,OAAOxG,QAGjB2H,EAAY,CAACsC,EAAQG,WAK3B,OAJIH,EAAQI,YACR1C,EAAU2C,KAAKL,EAAQI,YAGpBH,EAAkBK,gBAAgB5C,GACpCP,KAAK,SAACoD,GACH,MAAO,CACHzU,GAAIkU,EAAQlU,GACZ8S,QAASoB,EAAQQ,QACjBL,UAAWxX,EAAK8X,cAAcF,EAAS,IACvCtW,MAA0B+V,EAAQ/V,KAvBnC6D,EAAY4S,oBAwBXzQ,QAA8B+P,EAAQ/P,OApBvClC,EAAc4S,MAqBbC,YAAaL,EAAS,GAAK5X,EAAK8X,cAAcF,EAAS,IAAM,KAC7DM,mBAAoBb,EAAQc,UAAY,KACxClU,UAAW,IAAIkR,KAAKkC,EAAQe,YAC5BC,SAAU,IAAIlD,KAAKkC,EAAQiB,YAC3BC,WAAY,IAAIpD,KAAKkC,EAAQmB,cAjFjD,CAAA7X,IAAA,0BAAAC,MAAA,SAwF4BqV,GAA+C,IAAA3R,EAAAnE,KAMnE,OALqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGHqL,iBAAiBxC,EAAS,CAC1CG,eAAe,EACflK,cAAe+K,EAAqBpE,WACpCyD,QAAS,IAAInB,KAAK,KAEjBX,KAAK,SAAChG,GACH,OAAOiH,QAAQC,IAAIlH,EAAShK,IAAI,SAAC6S,GAC7B,OAAO/S,EAAKoU,2BAA2BrB,UArG3D,CAAA1W,IAAA,aAAAC,MAAA,SA0Ge+U,EAAcnS,GAAyC,IAAAmV,EAAAxY,KACAwV,EAAtDxS,GAAsDwS,EAAlDtS,KAAkDsS,EAA5CpS,MAA4CoS,EAArCpO,YAAqCoO,EAAxByC,WAAwBzC,EAAZ6C,QAI9ChV,IAAamS,EAAMpS,MACR2B,EAA2B9C,MAE3B8C,EAA2BxD,KAE1C,IAAM4V,EAAoB,IAAInE,GAAkB,CAC5CE,IAAKlT,KAAKyT,OAAO2D,sBACjBnK,MAAOjN,KAAKyT,OAAOxG,QAEnBwL,EAA0B,GAS9B,OARIjD,EAAMzR,UACN0U,EAAWjD,EAAMzR,QAAQyP,SAEzBgC,EAAMkD,SACND,EAAWA,EAAS1V,OAAOyS,EAAMkD,SAErCD,EAASlB,KAAK/B,EAAMpS,OAEbpD,KAAK2Y,qBACPtE,KAAK,SAAAgC,GAA+B,IAA5BhI,EAA4BgI,EAA5BhI,SAAU4I,EAAkBZ,EAAlBY,YAET2B,EAAkB,IAAIC,IAC5BxK,EAASyK,QAAQ,SAACC,GACG,6BAAbA,EAAI5X,MAAuC4X,EAAI1B,YAAchU,GAC7DuV,EAAgBI,IAAID,EAAIrB,QAASqB,KAKzC,IAAME,EAAiB,IAAIJ,IAO3B,OANA5B,EAAY6B,QAAQ,SAACC,GACA,oBAAbA,EAAI5X,MAA8B4X,EAAIzB,aAAejU,GACrD4V,EAAeD,IAAID,EAAIrB,QAASqB,KAIjC5B,EAAkBK,gBAAgBiB,GACpCpE,KAAK,SAAC6E,GACH,IAAMC,EAAiBD,EAAaE,OAAO,SAAC/U,EAAKgV,GAE7C,OADAhV,EAAI2U,IAAIK,EAAQC,KAAKjW,SAAUgW,GACxBhV,GACR,IAAIwU,KAEDU,EAAeJ,EAAeK,IAAIhE,EAAMpS,OAC9C,IAAKmW,EACD,MAAM,IAAIhF,MAAM,yBAGpB,IAoBIrT,EA7LLuY,EA0KO1V,GADkByR,EAAMzR,SAAW,IACMM,IAAI,SAACqV,GAChD,IAAMC,EAAIR,EAAeK,IAAIE,GAC7B,GAAiB,qBAANC,EACP,MAAM,IAAIpF,MAAM,2BAEpB,OAAOiE,EAAKb,cAAcgC,KAC3BC,KAAK,SAACC,EAAGC,GACR,OAAOD,EAAEtW,SAASwW,cAAcD,EAAEvW,YAIhCmV,GADiBlD,EAAMkD,QAAU,IACKrU,IAAI,SAAC2V,GAC7C,IAAML,EAAIR,EAAeK,IAAIQ,GAC7B,GAAiB,qBAANL,EACP,MAAM,IAAIpF,MAAM,yBAEpB,OAAOiE,EAAKb,cAAcgC,KAmC9B,OA5BIzY,EADAsX,EAAK/E,OAAOpQ,WAAamS,EAAMpS,MACpB,CACPjC,KAAM4D,EAA2B9C,OAE9BuT,EAAMkD,OAAOuB,QAAQzB,EAAK/E,OAAOpQ,WAAa,EAC1C,CACPlC,KAAM4D,EAA2B/C,OAE9BwT,EAAMzR,QAAQkW,QAAQzB,EAAK/E,OAAOpQ,WAAa,EAC3C,CACPlC,KAAM4D,EAA2BhD,QAE9B6W,EAAgBsB,IAAI1E,EAAMxS,IACtB,CACP7B,KAAM4D,EAA2BnD,uBACjC0U,UAAWsC,EAAgBY,IAAIhE,EAAMxS,IAAKA,IAEvCiW,EAAeiB,IAAI1E,EAAMxS,IACrB,CACP7B,KAAM4D,EAA2BjD,0BACjCwU,UAAW2C,EAAeO,IAAIhE,EAAMxS,IAAKA,IAGlC,CACP7B,KAAM4D,EAA2BxD,MAxN1CkY,EA6NiC,WAC5B,OAAIvY,EAASC,OAAS4D,EAA2B/C,OAC7Cd,EAASC,OAAS4D,EAA2B9C,MACtCuW,EAAK2B,wBAAwB3E,EAAMxS,IACrCqR,KAAK,SAAChG,GACH,MAAO,CACHrL,GAAIwS,EAAMxS,GACVE,KAAMsS,EAAMtS,KACZvC,aAAc6U,EAAMG,QAAUH,EAAMG,OAAOC,cAAwB,KACnExO,YAAaoO,EAAMpO,YACnBtD,UAAW,IAAIkR,KAAKQ,EAAMyC,YAC1BG,WAAY,IAAIpD,KAAKQ,EAAM6C,SAC3BjV,MAAOoV,EAAKb,cAAc4B,GAC1BrY,SAAUA,EACV6C,QAASA,EACT2U,OAAQA,EACRtW,cAAeiM,KAIpBiH,QAAQ8E,QAAQ,CACnBpX,GAAIwS,EAAMxS,GACVE,KAAMsS,EAAMtS,KACZvC,aAAc6U,EAAMG,QAAUH,EAAMG,OAAOC,cAAwB,KACnExO,YAAaoO,EAAMpO,YACnBtD,UAAW,IAAIkR,KAAKQ,EAAMyC,YAC1BG,WAAY,IAAIpD,KAAKQ,EAAM6C,SAC3BjV,MAAOoV,EAAKb,cAAc4B,GAC1BrY,SAAUA,EACV6C,QAASA,EACT2U,OAAQA,EACRtW,cAAe,MA3PxC,IAAIkT,QAAW,SAAC8E,EAASC,GAC5B,IACI,OAAOD,EAAQX,KACjB,MAAOa,GACLD,EAAOC,YAKnB,CAAA9Z,IAAA,0BAAAC,MAAA,SA2P4B8Z,GAAoE,IAAAC,EAAAxa,KACxF,OAAOsV,QAAQC,IAAIgF,EAASlW,IAAI,SAACrB,GAC7B,OAAOwX,EAAKL,wBAAwBnX,GAC/BqR,KAAK,SAAChG,GACH,MAAO,CACHyH,QAAS9S,EACTqL,SAAUA,QAIrBgG,KAAK,SAACoG,GACH,IAAM7B,EAAkB,IAAIC,IAI5B,OAHA4B,EAAY3B,QAAQ,SAAAvC,GAA2B,IAAxBT,EAAwBS,EAAxBT,QAASzH,EAAekI,EAAflI,SAC5BuK,EAAgBI,IAAIlD,EAASzH,KAE1BuK,MA1QvB,CAAApY,IAAA,eAAAC,MAAA,SA8QiBqW,EAAsBzT,GAAgD,IAAAqX,EAAA1a,KACzEmX,EAAoB,IAAInE,GAAkB,CAC5CE,IAAKlT,KAAKyT,OAAO2D,sBACjBnK,MAAOjN,KAAKyT,OAAOxG,QAGjBwL,EAAW3B,EAAOsC,OAAO,SAACX,EAAUjD,GAItC,OAHAiD,EAASO,IAAIxD,EAAMpS,OAAO,GAC1BoS,EAAMzR,QAAQ+U,QAAQ,SAACY,GAAD,OAAYjB,EAASO,IAAIU,GAAQ,KACvDlE,EAAMkD,OAAOI,QAAQ,SAACkB,GAAD,OAAWvB,EAASO,IAAIgB,GAAO,KAC7CvB,GACR,IAAII,KAAwB8B,OAC3B5F,GAAQ,IAAIC,MAAOC,UAEjB2F,EAAgB9D,EACjBjL,OAAO,SAAA2K,GAAA,IAAGpT,EAAHoT,EAAGpT,MAAOsV,EAAVlC,EAAUkC,OAAV,OAAwBtV,IAAUC,GAAYqV,EAAOuB,QAAQ5W,IAAa,IACjFgB,IAAI,SAAAwW,GAAA,OAAAA,EAAG7X,KAEZ,OAAOsS,QAAQC,IAAI,CACf4B,EAAkBK,gBAAgBsD,MAAMC,KAAKtC,IAC7CzY,KAAK2Y,qBACL3Y,KAAKgb,wBAAwBJ,KAE5BvG,KAAK,SAAA4G,GAAiE,IAAAC,EAAApb,OAAAkX,GAAA,EAAAlX,CAAAmb,EAAA,GAA/DxD,EAA+DyD,EAAA,GAAAC,EAAAD,EAAA,GAAnD7M,EAAmD8M,EAAnD9M,SAAU4I,EAAyCkE,EAAzClE,YAAemE,EAA0BF,EAAA,GACnEhG,QAAQC,IAAI,kBAAkB,IAAIH,MAAOC,UAAYF,GACrD,IAAMsG,EAAa5D,EAAS2B,OAAO,SAACiC,EAAYhC,GAE5C,OADAgC,EAAWrC,IAAIK,EAAQC,KAAKjW,SAAUgW,GAC/BgC,GACR,IAAIxC,KAGDD,EAAkB,IAAIC,IAE5BxK,EAASyK,QAAQ,SAACC,GACVA,EAAI1B,YAAchU,GAClBuV,EAAgBI,IAAID,EAAIrB,QAASqB,KAIzC,IAAME,EAAiB,IAAIJ,IAQ3B,OANA5B,EAAY6B,QAAQ,SAACC,GACbA,EAAIzB,aAAejU,GACnB4V,EAAeD,IAAID,EAAIrB,QAASqB,KAIjCzD,QAAQC,IAAIuB,EAAOzS,IAAI,SAACmR,GAAU,IAEjCtU,EADI8B,EAAiGwS,EAAjGxS,GAAIE,EAA6FsS,EAA7FtS,KAAMkE,EAAuFoO,EAAvFpO,YAAa6Q,EAA0EzC,EAA1EyC,WAAYI,EAA8D7C,EAA9D6C,QAAgBtU,GAA8CyR,EAArDpS,MAAqDoS,EAA9CzR,SAAS2U,EAAqClD,EAArCkD,OAAkB9C,EAAmBJ,EAA7BG,OAAUC,aAgCtF,OA3BI1U,EADAwZ,EAAKjH,OAAOpQ,WAAamS,EAAMpS,MACpB,CACPjC,KAAM4D,EAA2B9C,OAE9BuT,EAAMkD,OAAOuB,QAAQS,EAAKjH,OAAOpQ,WAAa,EAC1C,CACPlC,KAAM4D,EAA2B/C,OAE9BwT,EAAMzR,QAAQkW,QAAQS,EAAKjH,OAAOpQ,WAAa,EAC3C,CACPlC,KAAM4D,EAA2BhD,QAE9B6W,EAAgBsB,IAAI1E,EAAMxS,IACtB,CACP7B,KAAM4D,EAA2BnD,uBACjC0U,UAAWsC,EAAgBY,IAAIhE,EAAMxS,IAAKA,IAEvCiW,EAAeiB,IAAI1E,EAAMxS,IACrB,CACP7B,KAAM4D,EAA2BjD,0BACjCwU,UAAW2C,EAAeO,IAAIhE,EAAMxS,IAAKA,IAGlC,CACP7B,KAAM4D,EAA2BxD,MAIlC,CACHyB,KAAIE,OAAMkE,cACVzG,aAAciV,GAAgB,KAC9BxS,MAAOsX,EAAK/C,cAAc0D,EAAW7B,IAAIhE,EAAMpS,QAC/CU,UAAW,IAAIkR,KAAKiD,GACpBG,WAAY,IAAIpD,KAAKqD,GACrBnX,SAAUA,EACV6C,QAASA,EAAQM,IAAI,SAAChB,GAAD,OAAcqX,EAAK/C,cAAc0D,EAAW7B,IAAInW,MACrEqV,OAAQA,EAAOrU,IAAI,SAAChB,GAAD,OAAcqX,EAAK/C,cAAc0D,EAAW7B,IAAInW,MACnEjB,cAAgBgZ,EAAqBlB,IAAIlX,GAAMoY,EAAqB5B,IAAIxW,GAAO,WAvWvG,CAAAxC,IAAA,UAAAC,MAAA,SA6WY4C,GAAgD,IAAAiY,EAAAtb,KACpD,OAAIA,KAAK0W,WACEpB,QAAQ8E,QAAQpa,KAAK0W,YAEX,IAAI7B,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAEHsO,YACflH,KAAK,SAACyC,GACH,OAAOwE,EAAKE,aAAa1E,EAAQzT,OAvXjD,CAAA7C,IAAA,YAAAC,MAAA,SA2XcsV,IAEM,IAAIf,MAAOC,UACvB,OAAOjV,KAAKyb,QAAQ1F,EAAM1S,UACrBgR,KAAK,SAACe,GAKH,MAAO,CACHhR,cA1epB,SAAmBA,EAAoC0H,EAAgBC,GACnE,IAAM2P,EAAY3P,IAAkBpG,EAAc8M,UAAY,GAAK,EACnE,OAAQ3G,GACJ,IAAK,UACD,OAAO1H,EAAcoP,QAAQoG,KAAK,SAACC,EAAGC,GAClC,OAAO4B,GAAa7B,EAAE/V,UAAUmR,UAAY6E,EAAEhW,UAAUmR,aAMhE,IAAK,OACD,OAAO7Q,EAAcoP,QAAQoG,KAAK,SAACC,EAAGC,GAClC,OAAO4B,EAAY7B,EAAE3W,KAAK6W,cAAcD,EAAE5W,QAElD,IAAK,QACD,OAAOkB,EAAcoP,QAAQoG,KAAK,SAACC,EAAGC,GAClC,OAAO4B,EAAY7B,EAAEzW,MAAMC,SAAS0W,cAAcD,EAAE1W,MAAMC,YAElE,QAEI,OADA6R,QAAQyG,KAAK,6BAA+B7P,GACrC1H,GAkdYwX,CAzfxB,SAAwBxG,EAA2B/U,GACtD,IAAMwb,EAAgBxb,EAAYgE,IAAI,SAACyX,GACnC,OAAO,IAAIC,OAAOD,EAAM,OAa5B,OAXqB1G,EAAKvJ,OAAO,SAACnL,GAC9B,OAA2B,IAAvBL,EAAYgC,QAGTwZ,EAAcG,MAAM,SAACC,GACxB,OAAOA,EAAOC,KAAKxb,EAAIwC,OACnB+Y,EAAOC,KAAKxb,EAAI0C,MAAMC,WACtB4Y,EAAOC,KAAKxb,EAAI0C,MAAMG,cA6eL4Y,CA7cjC,SAAqB/X,EAAoCyH,EAAgBxI,GACrE,OAAQwI,GACJ,IAAK,MACD,OAAOzH,EACX,IAAK,QACD,OAAOA,EAAcyH,OAAO,SAACnL,GAAD,OAAUA,EAAI0C,MAAMC,WAAaA,IACjE,IAAK,WACD,OAAOe,EAAcyH,OAAO,SAACnL,GAAD,OAAUA,EAAI0C,MAAMC,WAAaA,IACjE,IAAK,UACD,OAAOe,EAAcyH,OAAO,SAACnL,GAAD,OACxBA,EAAIQ,SAASC,OAAS4D,EAA2BjD,2BACjDpB,EAAIQ,SAASC,OAAS4D,EAA2BnD,yBAEzD,IAAK,eACD,OAAOwC,EAAcyH,OAAO,SAACnL,GAAD,OACvBA,EAAIQ,SAASC,OAAS4D,EAA2B/C,OAC9CtB,EAAIQ,SAASC,OAAS4D,EAA2B9C,QACpDvB,EAAI0B,eAAiB1B,EAAI0B,cAAcC,OAAS,IAEzD,QAEI,OADA6S,QAAQyG,KAAK,oBAAsB9P,GAC5BzH,GAubcgY,CAAYhH,EAAMW,EAAMlK,OAAQkK,EAAM1S,UACb0S,EAAM1V,aACb0V,EAAMjK,OAAQiK,EAAMhK,eAInDsQ,MAAOjH,EAAK/S,YAtYhC,CAAA7B,IAAA,gBAAAC,MAAA,SA2YkB4Y,GACV,MAAO,CACHhW,SAAUgW,EAAQC,KAAKjW,SACvBE,SAAU8V,EAAQC,KAAK/V,SACvB+Y,KAAMjD,EAAQA,QAAQkD,SAASD,KAC/Blc,MAAOiZ,EAAQA,QAAQkD,SAASnc,MAChCoc,QAASnD,EAAQA,QAAQkD,SAASC,QAClCpR,aAAciO,EAAQA,QAAQkD,SAASnR,aACvCqR,aAAcpD,EAAQA,QAAQkD,SAASE,aACvC9b,aAAc0Y,EAAQA,QAAQqD,OAAO/b,aACrCgc,gBAAiBtD,EAAQA,QAAQkD,SAASI,mBArZtD,CAAAnc,IAAA,SAAAC,MAAA,SAyZWuC,GAAmC,IAAA4Z,EAAA5c,KAKtC,OAJqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAEHwI,aAAazS,GAC5BqR,KAAK,SAACmB,GACH,OAAOoH,EAAKC,WAAWrH,EAAOoH,EAAKnJ,OAAOpQ,cAha1D,CAAA7C,IAAA,WAAAC,MAAA,SAoaauC,GACL,OAAkB,IAAdA,EAAGX,OACIiT,QAAQ+E,OAAO,IAAI9F,MAAM,wCAEf,IAAIM,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAEHwI,aAAazS,GAC5BqR,KAAK,SAACmB,GACH,OAAOA,MA9avB,CAAAhV,IAAA,cAAAC,MAAA,SAkbgBuC,GAKR,OAJqB,IAAI6R,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAEH6P,YAAY9Z,GAC3BqR,KAAK,SAAA0I,GACF,OADkBA,EAAbjI,WAxbrB,CAAAtU,IAAA,SAAAC,MAAA,SA6bWuc,EAA8B3Z,GAAyC,IAAA4Z,EAAAjd,KACpE2W,EAAe,IAAI9B,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAIvB,OAAK+P,EAAOha,GAAG6D,OAASmW,EAAOha,GAAG6D,MAAM1F,OAAS2D,EAAYyG,OACxDyR,EAAO9Z,KAAK2D,OAASmW,EAAO9Z,KAAK2D,MAAM1F,OAAS2D,EAAYyG,OAC5DyR,EAAOrc,aAAakG,OAASmW,EAAOrc,aAAakG,MAAM1F,OAAS2D,EAAYyG,OAC5EyR,EAAO5V,YAAYP,OAASmW,EAAO5V,YAAYP,MAAM1F,OAAS2D,EAAYyG,MACpE+J,QAAQ+E,OAAO,IAAI9F,MAAM,mCAG7BoC,EAAauG,YAAY,CAC5Bla,GAAIga,EAAOha,GAAGvC,MACdyC,KAAM8Z,EAAO9Z,KAAKzC,MAClBmV,aAAcoH,EAAOrc,aAAaF,MAClC2G,YAAa4V,EAAO5V,YAAY3G,MAChCU,KAAM,iBAELkT,KAAK,SAACmB,GACH,OAAOyH,EAAKJ,WAAWrH,EAAOnS,OAnd9C,CAAA7C,IAAA,YAAAC,MAAA,SAwdcuC,EAAYma,GAUlB,OARqB,IAAItI,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAMHmQ,YAAYpa,EAAI,CAChCE,KAAMia,EAAUja,KAChB0S,aAAcuH,EAAUxc,aACxByG,YAAa+V,EAAU/V,gBArenC,CAAA5G,IAAA,2BAAAC,MAAA,SAye6BuC,GAAmC,IAAAqa,EAAArd,KAMxD,OALqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGHqQ,kBAAkB,CAClCxH,QAAS9S,IAERqR,KAAK,SAAC6C,GACH,OAAOmG,EAAK9E,2BAA2BrB,KAE1CqG,MAAM,SAACC,GAEJ,MADAtI,QAAQC,IAAI,SAAUqI,GAChBA,MAvftB,CAAAhd,IAAA,gBAAAC,MAAA,SA2fkB6V,GAA0C,IAAAmH,EAAAzd,KAMpD,OALqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGHyQ,cAAc,CAC9BpH,cAECjC,KAAK,SAAC6C,GACH,OAAOuG,EAAKlF,2BAA2BrB,OArgBvD,CAAA1W,IAAA,gBAAAC,MAAA,SAygBkB6V,GAA0C,IAAAqH,EAAA3d,KAMpD,OALqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGH2Q,cAAc,CAC9BtH,cAECjC,KAAK,SAAC6C,GACH,OAAOyG,EAAKpF,2BAA2BrB,OAnhBvD,CAAA1W,IAAA,cAAAC,MAAA,SAuhBgB6V,GAA0C,IAAAuH,EAAA7d,KAMlD,OALqB,IAAI6U,GAAa,CAClC3B,IAAKlT,KAAKyT,OAAOmD,iBACjB3J,MAAOjN,KAAKyT,OAAOxG,QAGH6Q,YAAY,CAC5BxH,cAECjC,KAAK,SAAC6C,GACH,OAAO2G,EAAKtF,2BAA2BrB,OAjiBvD,CAAA1W,IAAA,gBAAAC,MAAA,SAqiBkBuC,GACV,OAAO+a,GAAWC,cAAchb,KAtiBxC,CAAAxC,IAAA,kBAAAC,MAAA,SAyiBoByC,GACZ,OAAO6a,GAAWE,gBAAgB/a,KA1iB1C,CAAA1C,IAAA,yBAAAC,MAAA,SA6iB2B2G,GACnB,OAAO2W,GAAWG,uBAAuB9W,OA9iBjDqP,EAAA,GAkjBasH,GAAb,oBAAAA,IAAAje,OAAAC,EAAA,EAAAD,CAAAE,KAAA+d,GAAA,OAAAje,OAAAS,EAAA,EAAAT,CAAAie,EAAA,OAAAvd,IAAA,gBAAAC,MAAA,SACyBuC,GAEjB,GAAkB,IAAdA,EAAGX,OACH,MAAO,CACHW,EAAI,CACA7B,KAAM2D,EAAYyG,MAClB7G,QAAS,qCAIrB,GAAI1B,EAAGmb,MAAM,MACT,MAAO,CACHnb,EAAI,CACA7B,KAAM2D,EAAYyG,MAClB7G,QAAS,4CAKrB,GAAI1B,EAAGX,OAAS,IACZ,MAAO,CACHW,EAAI,CACA7B,KAAM2D,EAAYyG,MAClB7G,QAAS,0DAMrB,OAAK1B,EAAGmb,MADQ,mBAUT,CAACnb,EAAI,CACR7B,KAAM2D,EAAYzD,OATX,CACH2B,EAAI,CACA7B,KAAM2D,EAAYyG,MAClB7G,QAAS,uFAlC7B,CAAAlE,IAAA,kBAAAC,MAAA,SA4C2ByC,GACnB,OAAoB,IAAhBA,EAAKb,OACE,CACHa,EAAM,CACF/B,KAAM2D,EAAYyG,MAClB7G,QAAS,uCAGjBxB,EAAKb,OAAS,IACP,CACHa,EAAM,CACF/B,KAAM2D,EAAYyG,MAClB7G,QAAS,4DAGd,CACHxB,EAAM,CACF/B,KAAM2D,EAAYzD,SA7DlC,CAAAb,IAAA,0BAAAC,MAAA,SAiEmCE,GAC3B,OAA4B,IAAxBA,EAAa0B,OACN,CACH1B,EAAc,CACVQ,KAAM2D,EAAYzD,OAG1BV,EAAa0B,OAAS,GACf,CACH1B,EAAc,CACVQ,KAAM2D,EAAYyG,MAClB7G,QAAS,oEAGd,CACH/D,EAAc,CACVQ,KAAM2D,EAAYzD,SAjFlC,CAAAb,IAAA,yBAAAC,MAAA,SAqFkCyC,GAC1B,OAAoB,IAAhBA,EAAKb,OACE,CACHa,EAAM,CACF/B,KAAM2D,EAAYyG,MAClB7G,QAAS,8CAIjBxB,EAAKb,OAAS,KACP,CACHa,EAAM,CACF/B,KAAM2D,EAAYyG,MAClB7G,QAAS,8DAGd,CACHxB,EAAM,CACF/B,KAAM2D,EAAYzD,WAvGlC0c,EAAA,GA4GaK,GAAb,oBAAAA,IAAAte,OAAAC,EAAA,EAAAD,CAAAE,KAAAoe,GAAA,OAAAte,OAAAS,EAAA,EAAAT,CAAAse,EAAA,OAAA5d,IAAA,gCAAAC,MAAA,WAEQ,MAAO,CACHuC,GAAI,CACAvC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B6B,KAAM,CACFzC,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1BV,aAAc,CACVF,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,OAG1B+F,YAAa,CACT3G,MAAO,GACP0G,OAAQ3B,EAAWnE,KACnBwF,MAAO,CACH1F,KAAM2D,EAAYzD,YA5BtC+c,EAAA,GC3rBO,SAASC,GAAwBxX,GACpC,MAAO,CACH1F,KAAMyE,EAAW0Y,4BACjBzX,MAAOA,GAkBR,SAAS0X,GAA8B1X,GAC1C,MAAO,CACH1F,KAAMyE,EAAW4Y,mCACjB3X,MAAOA,GAMR,SAAS4X,GAAazb,GACzB,OAAO,SAAC0b,EAAmDC,GACvDD,EAxEG,CACHvd,KAAMyE,EAAWkF,uBAsEqE,IAAA8T,EAI9DD,IAJ8DE,EAAAD,EAG9E5S,KAAQC,cAAiBgB,EAHqD4R,EAGrD5R,MAAO5J,EAH8Cwb,EAG9Cxb,SAC7ByK,EAJ2E8Q,EAIlF/Q,IAAOC,OACG,IAAI2I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAG7CiM,OAAOnc,GACRqR,KAAK,SAAC3T,GACHwU,QAAQC,IAAI,WAAYzU,GACxBge,EA3ET,SAAwBhe,GAC3B,MAAO,CACHS,KAAMyE,EAAWsF,uBACjBE,aAAc1K,GAwEG2K,CAAe3K,MAE3B6c,MAAM,SAACC,GArEb,IAAsB3W,EAsEb6X,GAtEa7X,EAsES,CAClBuY,KAAM5B,EAAIta,KACVwB,QAAS8Y,EAAI9Y,SAvEtB,CACHvD,KAAMyE,EAAW0F,qBACjBzE,MAAOA,QA2ER,SAASwY,KACZ,OAAO,SAACX,EAAmDC,GAA+B,IAAAW,EAKpDX,IALoDY,EAAAD,EAG9EtT,KAAQC,cAAiBgB,EAHqDsS,EAGrDtS,MAAO5J,EAH8Ckc,EAG9Clc,SAC7ByK,EAJ2EwR,EAIlFzR,IAAOC,OACI1C,EALuEkU,EAKlFvU,QAAWK,aACToU,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGvB,qBAAjB9H,EAQXoU,EAAMC,yBAAyBrU,EAAapI,IACvCqR,KAAK,WACFqK,EAtFL,CACHvd,KAAMyE,EAAW8Z,gCAuFThB,EAASD,GAAcrT,EAAapI,OAEvCua,MAAM,SAACC,GACJkB,EAASL,GAAwB,CAC7Bld,KAAM2D,EAAYyG,MAClB7G,QAAS8Y,EAAI9Y,aAhBrBga,EAASL,GAAwB,CAC7Bld,KAAM2D,EAAYyG,MAClB7G,QAAS,gCAoBlB,SAASib,GAAyBrJ,GACrC,OAAO,SAACoI,EAAmDC,GACvDD,EA3GG,CACHvd,KAAMyE,EAAWga,8BAyGqE,IAAAC,EAKpDlB,IALoDmB,EAAAD,EAG9E7T,KAAQC,cAAiBgB,EAHqD6S,EAGrD7S,MAAO5J,EAH8Cyc,EAG9Czc,SAC7ByK,EAJ2E+R,EAIlFhS,IAAOC,OACI1C,EALuEyU,EAKlF9U,QAAWK,aACToU,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAEvB,qBAAjB9H,EAQXoU,EAAM9B,cAAcpH,GACfjC,KAAK,SAAC0L,GACHrB,EArGL,CACHvd,KAAMyE,EAAWoa,uCAsGTtB,EAASD,GAAasB,EAAWjK,YAEpCyH,MAAM,SAACC,GACJkB,EAASH,GAA8B,CACnCpd,KAAM2D,EAAYyG,MAClB7G,QAAS8Y,EAAI9Y,aAhBrBga,EAASH,GAA8B,CACnCpd,KAAM2D,EAAYyG,MAClB7G,QAAS,gCC1KlB,SAAS6H,GAAkBnI,EAAoCiI,GAClE,MAAO,CACHlL,KAAMyE,EAAWwG,oBACjBhI,cAAeA,EACfiI,WAAYA,GAWb,SAASI,GAAgB5F,GAC5B,MAAO,CACH1F,KAAMyE,EAAW4G,kBACjB3F,MAAOA,GAWR,SAASoZ,GAAW5f,GACvB,OAAO,SAACqe,EAAmDC,GACvDD,EA9CD,SAAyBre,GAC5B,MAAO,CACHc,KAAMyE,EAAW+F,kBACjBtL,YAAaA,GA2CJ8L,CAAgB9L,IACzBqe,EDNG,CACHvd,KAAMyE,EAAW6F,gBCGqE,IAAAmT,EAO9DD,IAP8DuB,EAAAtB,EAKlF/Y,WAAciG,EALoEoU,EAKpEpU,OAAQC,EAL4DmU,EAK5DnU,cAAeF,EAL6CqU,EAK7CrU,OAL6CgT,EAAAD,EAMlF5S,KAAQC,cAAiBgB,EANyD4R,EAMzD5R,MAAO5J,EANkDwb,EAMlDxb,SACzByK,EAP2E8Q,EAOlF/Q,IAAOC,OAQX,OAPc,IAAI2I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGtCiN,UAAU,CACnB9f,YAAaA,EACbyL,SAAQC,gBAAeF,SAAQxI,aAE9BgR,KAAK,SAAApB,GAA8B,IAA3B7O,EAA2B6O,EAA3B7O,cAAeiY,EAAYpJ,EAAZoJ,MAEpBqC,EAASnS,GAAkBnI,EAAeiY,MAE7CkB,MAAM,SAAC1W,GACJ6X,EAASjS,GAAgB,CACrB2S,KAAMvY,EAAM3D,KACZwB,QAASmC,EAAMnC,cAM5B,SAAS0b,GAAStU,EAAgBC,GACrC,OAAO,SAAC2S,EAAmDC,GACvDD,EAnGD,SAAuB5S,EAAgBC,GAC1C,MAAO,CACH5K,KAAMyE,EAAW8G,gBACjBZ,OAAQA,EACRC,cAAeA,GA+FNa,CAAcd,EAAQC,IADuD,IAAAuT,EAM9DX,IAN8D0B,EAAAf,EAIlFzZ,WAAcxF,EAJoEggB,EAIpEhgB,YAAawL,EAJuDwU,EAIvDxU,OAJuD0T,EAAAD,EAKlFtT,KAAQC,cAAiBgB,EALyDsS,EAKzDtS,MAAO5J,EALkDkc,EAKlDlc,SACzByK,EAN2EwR,EAMlFzR,IAAOC,OAQX,OAPc,IAAI2I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGtCiN,UAAU,CACnB9f,cACAyL,SAAQC,gBAAeF,SAAQxI,aAE9BgR,KAAK,SAAAgB,GAA8B,IAA3BjR,EAA2BiR,EAA3BjR,cAAeiY,EAAYhH,EAAZgH,MAEpBqC,EAASnS,GAAkBnI,EAAeiY,MAE7CkB,MAAM,SAAC1W,GACJ6X,EAASjS,GAAgB,CACrB2S,KAAMvY,EAAM3D,KACZwB,QAASmC,EAAMnC,cAM5B,SAAS4b,GAAWzU,GACvB,OAAO,SAAC6S,EAAmDC,GACvDD,EA4CD,SAAyB7S,GAC5B,MAAO,CACH1K,KAAMyE,EAAWiH,kBACjBhB,OAAQA,GA/CCiB,CAAgBjB,IAD6D,IAAAgU,EAM9DlB,IAN8D4B,EAAAV,EAIlFha,WAAcxF,EAJoEkgB,EAIpElgB,YAAayL,EAJuDyU,EAIvDzU,OAAQC,EAJ+CwU,EAI/CxU,cAJ+C+T,EAAAD,EAKlF7T,KAAQC,cAAiBgB,EALyD6S,EAKzD7S,MAAO5J,EALkDyc,EAKlDzc,SACzByK,EAN2E+R,EAMlFhS,IAAOC,OAQX,OAPc,IAAI2I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGtCiN,UAAU,CACnB9f,cACAyL,SAAQC,gBAAeF,SAAQxI,aAE9BgR,KAAK,SAAAgC,GAA8B,IAA3BjS,EAA2BiS,EAA3BjS,cAAeiY,EAAYhG,EAAZgG,MAEpBqC,EAASnS,GAAkBnI,EAAeiY,MAE7CkB,MAAM,SAAC1W,GACJ6X,EAASjS,GAAgB,CACrB2S,KAAMvY,EAAM3D,KACZwB,QAASmC,EAAMnC,cCzFpBG,mBA/DR,SAAyBzE,GAAmC,IAAAwL,EACiCxL,EAAxFyF,WACR,MAAO,CACHwG,WAH2DT,EACzCS,WAGlBC,cAJ2DV,EAC7BU,cAI9BR,OAL2DF,EACdE,OAK7CC,cAN2DH,EACNG,cAMrDF,OAP2DD,EACSC,OAOpEK,UAR2DN,EACiBM,YAkC7E,SAA4BwS,GAC/B,MAAO,CACH1O,aAAc,SAAC3P,GAEXqe,EAAS8B,GAAmBngB,KAEhCsQ,WAAY,SAAC7E,EAAgBC,GAEzB2S,EAAS8B,GAAiB1U,EAAQC,KAEtC6E,aAAc,SAAC/E,GACX6S,EAAS8B,GAAmB3U,OAiBzBhH,CAA6C+K,ICqDrD,SAAS9I,GAAYD,GACxB,MAAO,CACH1F,KAAMyE,EAAWe,cACjBE,MAAOA,GAwBR,SAAS4Z,KACZ,MAAO,CACHtf,KAAMyE,EAAWkD,yBAgDlB,SAASR,GAAoBtF,EAAY6D,GAC5C,MAAO,CACH1F,KAAMyE,EAAWyC,wBACjBrF,GAAIA,EACJ6D,MAAOA,GAqBR,SAAS6Z,KACZ,OAAO,SAAChC,EAAmDC,GACvDD,EAhGG,CACHvd,KAAMyE,EAAWmB,qBAgGjB2X,EAASiC,OAIV,SAASza,KACZ,OAAO,SAACwY,EAAmDC,GACvDD,EA3HG,CACHvd,KAAMyE,EAAWI,gBAyHqE,IAAA4Y,EAK9DD,IAL8DE,EAAAD,EAG9E5S,KAAQC,cAAiBgB,EAHqD4R,EAGrD5R,MAAO5J,EAH8Cwb,EAG9Cxb,SAC1B6D,EAJwE0X,EAIlF1Y,OAAUgB,gBACH4G,EAL2E8Q,EAKlF/Q,IAAOC,OACL0R,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAG9ChM,EAQLsY,EAAMtZ,OAAOgB,EAAiB7D,GACzBgR,KAAK,SAAC3T,GACHge,EA5IT,SAAuBhe,GAC1B,MAAO,CACHS,KAAMyE,EAAWU,gBACjB8E,aAAc1K,GAyIGgG,CAAchG,MAE1B6c,MAAM,SAAC1W,GACJqO,QAAQrO,MAAM,eAAgBK,EAAiBL,GAC/C6X,EAAS5X,GAAY,CACjBsY,KAAM,UACN1a,QAASmC,EAAMnC,aAfvBga,EAAS5X,GAAY,CACjBsY,KAAM,MACN1a,QAAS,mDAmBlB,SAASic,KACZ,OAAO,SAACjC,EAAmDC,GAA+B,IACpEzX,EAAsByX,IAAhCzY,OAAUgB,gBAEYyX,IAAtBzY,OAEHgB,GAKDA,EAAgBhE,KAAKiE,SAAW3B,EAAWkC,WAK3CR,EAAgBlE,GAAGmE,SAAW3B,EAAWkC,WAKzCR,EAAgBvG,aAAawG,SAAW3B,EAAWkC,WAKnDR,EAAgBE,YAAYD,SAAW3B,EAAWkC,UAKtDgX,EA1JG,CACHvd,KAAMyE,EAAW+C,sBAiIb+V,EAAS+B,OAuCd,SAASG,GAAiB1d,GAC7B,OAAO,SAACwb,GAAsD,IAAAmC,EAC3B9C,GAAWE,gBAAgB/a,GADA4d,EAAAhhB,OAAAkX,GAAA,EAAAlX,CAAA+gB,EAAA,GACnDE,EADmDD,EAAA,GACpCja,EADoCia,EAAA,GAGtDja,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EA1JL,SAA+Bxb,EAAc2D,GAChD,MAAO,CACH1F,KAAMyE,EAAWgC,0BACjB1E,KAAMA,EACN2D,MAAOA,GAsJMiB,CAAsBiZ,EAAela,IAE9C6X,EAnKL,SAAiCxb,GACpC,MAAO,CACH/B,KAAMyE,EAAW4B,4BACjBtE,KAAMA,GAgKOyE,CAAwBoZ,IAErCrC,EAASiC,OAIV,SAASK,GAAyB9d,GACrC,OAAO,SAACwb,GAAsD,IAlJlB/d,EAkJkBsgB,EACpBlD,GAAWmD,wBAAwBhe,GADfie,EAAArhB,OAAAkX,GAAA,EAAAlX,CAAAmhB,EAAA,GACnDG,EADmDD,EAAA,GAC7Bta,EAD6Bsa,EAAA,GAGtDta,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EA/IL,SAAuC/d,EAAsBkG,GAChE,MAAO,CACH1F,KAAMyE,EAAWqC,mCACjBtH,aAAcA,EACdkG,MAAOA,GA2IMqB,CAA8BkZ,EAAsBva,IAE7D6X,GAxJoC/d,EAwJKygB,EAvJ1C,CACHjgB,KAAMyE,EAAWmC,qCACjBpH,aAAcA,KAuJd+d,EAASiC,OAIV,SAASU,GAAere,GAC3B,OAAO,SAAC0b,EAAmDC,GAA+B,IAAA2C,EACzDvD,GAAWC,cAAchb,GADgCue,EAAAzhB,OAAAkX,GAAA,EAAAlX,CAAAwhB,EAAA,GAC/EE,EAD+ED,EAAA,GAClE1a,EADkE0a,EAAA,GAEtF,GAAI1a,EAAM1F,OAAS2D,EAAYyG,MAG3B,OAFAmT,EAASpW,GAAoBkZ,EAAa3a,SAC1C6X,EAASiC,OA1CrB,SAA2BvgB,GAAmB,IAAAqhB,EAElBrhB,EADhB4L,KAAQC,cAAiBgB,EADSwU,EACTxU,MAAO5J,EADEoe,EACFpe,SAC7ByK,EAAa1N,EAApByN,IAAOC,OACX,OAAO,IAAI2I,GAAM,CACbxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,OAsCjCwO,CAAkB/C,KAC1B7B,YAAY0E,GACbnN,KAAK,SAACS,GAjLZ,IAA+B9R,EAmLlB0b,EADA5J,EACSxM,GAAoBkZ,EAAa,CACtCrgB,KAAM2D,EAAYyG,MAClB7G,QAAS,mCArLK1B,EAwLawe,EAvLxC,CACHrgB,KAAMyE,EAAWuC,0BACjBnF,GAAIA,KAwLI0b,EAASiC,SAKlB,SAASgB,GAAwBva,GACpC,OAAO,SAACsX,EACJC,GAA+B,IAAAiD,EAEPjD,IAFOkD,EAAAD,EACvB5V,KAAQC,cAAiBgB,EADF4U,EACE5U,MAAO5J,EADTwe,EACSxe,SAC7ByK,EAFoB8T,EAE3B/T,IAAOC,OAFoBgU,EAGjB,IAAIrL,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAEPgL,uBAAuB9W,GATpC2a,EAAAjiB,OAAAkX,GAAA,EAAAlX,CAAAgiB,EAAA,GASxBE,EATwBD,EAAA,GASFlb,EATEkb,EAAA,GAW3Blb,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EApKL,SAAsCtX,EAAqBP,GAC9D,MAAO,CACH1F,KAAMyE,EAAW6C,iCACjBrB,YAAaA,EACbP,MAAOA,GAgKM6B,CAA6BsZ,EAAsBnb,IAE5D6X,EA7KL,SAAwCtX,GAC3C,MAAO,CACHjG,KAAMyE,EAAW2C,mCACjBnB,YAAaA,GA0KAoB,CAA+BwZ,IAE5CtD,EAASiC,mDC5CFsB,uBApUX,SAAAA,EAAYriB,GAA6B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiiB,IACrCpiB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmiB,GAAA9hB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT8hB,iBAAiB,GAGrBriB,EAAKsiB,cAAgBvd,cAErB/E,EAAKuiB,OAASC,SAASC,SAAUF,OAEjCviB,EAAKD,MAAM2iB,eAX0B1iB,4EAerCoQ,IAAMC,KAAK,CACPvO,MAAO,+BACPb,MAAO,OACPqP,QACIvP,EAAA,yBACIA,EAAA,mHAOZ,IAAI4hB,EAEAA,EADAxiB,KAAKmiB,cAAc/R,QACXpQ,KAAKmiB,cAAc/R,QAAQ3P,MAE3B,MAEZ,IAAMgiB,EAASC,KAAIF,GACnBxiB,KAAKJ,MAAM+iB,qBAAqBF,oDAGX,IAAAte,EAAAnE,KACrB,GAAKA,KAAK4iB,aAAV,CAUA3S,IAAM4S,QAAQ,CACVlhB,MAAO,oBACPwO,QACIvP,EAAA,yBACIA,EAAA,kFAEAA,EAAA,6FAAsEA,EAAA,8CAAtE,KAEAA,EAAA,uBAAGA,EAAA,0DAGXkiB,KAhBY,WACZ3e,EAAKoM,SAAS,CAAE2R,iBAAiB,KAgBjCa,SAdW,aAeXC,OAAQ,MACRC,WAAY,YAvBZjjB,KAAKuQ,SAAS,CAAE2R,iBAAiB,qCA2BhC1R,GACLA,EAAEC,iBACFzQ,KAAKJ,MAAMsjB,gDAGF1S,GACTA,EAAE2S,UACFnjB,KAAKJ,MAAMwjB,aAAa5S,EAAElN,OAAO7C,oDAGhB+P,GACjBA,EAAE2S,UACFnjB,KAAKJ,MAAM+iB,qBAAqBnS,EAAElN,OAAO7C,mDAGzB+P,GAChBA,EAAE2S,UACFnjB,KAAKJ,MAAMyjB,oBAAoB7S,EAAElN,OAAO7C,0CAGjC+P,GACPA,EAAE2S,UACFnjB,KAAKJ,MAAM0jB,WAAW9S,EAAElN,OAAO7C,yCAI/B,OACIT,KAAKJ,MAAM2G,YAAclB,EAAUoC,QACnCzH,KAAKJ,MAAMoH,kBAAoBzB,EAAgBqD,QAC9C5I,KAAKJ,MAAMuG,YAAcb,EAAU2B,KAChCjH,KAAKJ,MAAMuG,YAAcb,EAAU6F,OACnCnL,KAAKJ,MAAMuG,YAAcb,EAAUmB,4CAK3C,OACIzG,KAAKJ,MAAM2G,YAAclB,EAAUoC,QACnCzH,KAAKJ,MAAMuG,YAAcb,EAAU2B,yCAKvC,OACIrG,EAAA,sBAAMoC,GAAG,sBAAsBT,UAAU,SAASuO,SAAU9Q,KAAK8Q,SAASC,KAAK/Q,OAC3EY,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,oBAAf,QACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMsH,gBAAgBhE,KAAKzC,OAAS,GACnDwQ,SAAUjR,KAAKujB,aAAaxS,KAAK/Q,QACpCA,KAAKJ,MAAMsH,gBAAgBhE,KAAK2D,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMsH,gBAAgBhE,KAAK2D,MAAMnC,SAAmB,KAG3I9D,EAAA,qBAAK2B,UAAU,oBACX3B,EAAA,qBAAK2B,UAAU,oBAAf,iBACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAKC,MAAO,CAAE2O,QAAS,OAAQC,cAAe,MAAO+T,aAAc,QAC/D5iB,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,YAChB1O,EAAA,uBAAOuQ,IAAKnR,KAAKmiB,cAAenR,YAAY,wDAEhDpQ,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,cAACwQ,EAAA,EAAD,CACI9P,KAAK,aACLT,MAAO,CAAEE,OAAQ,QACjB2Q,QAAS1R,KAAKyjB,oBAAoB1S,KAAK/Q,UAGnDY,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMsH,gBAAgBvG,aAAaF,OAAS,GAC3DwQ,SAAUjR,KAAK0jB,qBAAqB3S,KAAK/Q,QAC5CA,KAAKJ,MAAMsH,gBAAgBvG,aAAakG,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMsH,gBAAgBvG,aAAakG,MAAMnC,SAAmB,KAG3J9D,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,oBAAf,MACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMsH,gBAAgBlE,GAAGvC,OAAS,GACjDwQ,SAAUjR,KAAK2jB,WAAW5S,KAAK/Q,QAClCA,KAAKJ,MAAMsH,gBAAgBlE,GAAG6D,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMsH,gBAAgBlE,GAAG6D,MAAMnC,SAAmB,KAGvI9D,EAAA,qBAAK2B,UAAU,MAAM1B,MAAO,CAAEyO,KAAM,UAAWsU,UAAW,OAAQC,UAAW,SACzEjjB,EAAA,qBAAK2B,UAAU,oBAAf,eACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,0BAAUH,MAAOT,KAAKJ,MAAMsH,gBAAgBE,YAAY3G,OAAS,GAC7DwQ,SAAUjR,KAAK8jB,oBAAoB/S,KAAK/Q,QAC3CA,KAAKJ,MAAMsH,gBAAgBE,YAAYP,MAASjG,EAAA,qBAAKC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMsH,gBAAgBE,YAAYP,MAAMnC,SAAkB,KAGvJ9D,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,SACf3B,EAAA,qBAAK2B,UAAU,mDAcf7B,GAQZ,IAAKA,EAAIC,aAAaF,MAClB,MAAO,iBAIX,MAAO,mCAAqCC,EAAIC,aAAaF,MAAQ,qEAGzDC,GACZ,OACIE,EAAA,qBAAKC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,IAC7BC,IAAKhB,KAAK+jB,gBAAgBrjB,6CAKlC,OAAOE,EAAA,sBAAM2B,UAAU,WACnB3B,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,QACVvC,KAAKJ,MAAMsH,gBAAgBhE,KAAKzC,OAAS,MAItDG,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,gBACVvC,KAAKgkB,gBAAgBhkB,KAAKJ,MAAMsH,oBAI7CtG,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,MACX3B,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,WAAa7B,KAAKoiB,OAAxC,yBACCpiB,KAAKJ,MAAMsH,gBAAgBlE,GAAGvC,OAAUG,EAAA,sBAAMC,MAAO,CAAEiR,UAAW,WAA1B,2BAIrDlR,EAAA,qBAAK2B,UAAU,MAAM1B,MAAO,CAAEyO,KAAM,YAChC1O,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,cACX0hB,wBAA0B,CAAEC,OAAQC,KAAOnkB,KAAKJ,MAAMsH,gBAAgBE,YAAY3G,OAAS,gDAOjG,IAAA2jB,EACwCpkB,KAAKJ,MACjDykB,EAAQ,SAFJD,EACF7d,UAC6B,YAF3B6d,EACSpd,gBACkD,WAF3Dod,EAC0Bje,UAEpC,OACIvF,EAAA,sBAAMC,MAAO,CAAEwO,YAAa,SAAWgV,0CAK3C,IAAMC,EAAUtkB,KAAKJ,MAAMsH,gBAAiBhE,KAAKzC,OAAUG,EAAA,sBAAMC,MAAO,CAAEiR,UAAW,SAAUjQ,MAAO,SAA3C,0DAC3D,OACIjB,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,0BAEIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,gBACV,IAHL,qBAKKmjB,EALL,MASJ1jB,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOuC,eAAgB,WAAYtC,WAAY,WAE1G9O,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTiQ,KAAK,sBACL/Q,IAAI,SACJ6Q,UAAWrR,KAAKukB,QAAQpkB,KAAKH,MAC7BwR,SAAS,UAJb,QASA5Q,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTH,KAAK,SACLuQ,QAAS1R,KAAKwkB,uBAAuBzT,KAAK/Q,OAF9C,0BAMAY,EAAA,cAACwQ,EAAA,EAAD,CAAQa,MAAM,SAAS3Q,KAAK,OAAOoQ,QAAS1R,KAAKkS,WAAWnB,KAAK/Q,yDAQjF,OACIY,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,2FAUhB,OAAIZ,KAAKI,MAAM8hB,gBACJthB,EAAA,cAAC6jB,EAAA,EAAD,CAAUlN,MAAI,EAACzU,GAAG,mBAIzB9C,KAAKJ,MAAMuG,YAAcb,EAAUmB,MAC5B7F,EAAA,cAAC6jB,EAAA,EAAD,CAAUlN,MAAI,EAACzU,GAAI,qBAAuB9C,KAAKJ,MAAMsH,gBAAgBlE,GAAGvC,QAG9ET,KAAKJ,MAAMsH,gBASZtG,EAAA,qBAAK2B,UAAU,mBACVvC,KAAK4S,eACNhS,EAAA,qBAAK2B,UAAU,WACX3B,EAAA,qBAAK2B,UAAU,gBACX3B,EAAA,kCACCZ,KAAK0kB,cAEV9jB,EAAA,qBAAK2B,UAAU,iBACX3B,EAAA,mCACCZ,KAAK2kB,mBAhBd/jB,EAAA,qBAAK2B,UAAU,mBACVvC,KAAK4kB,8BAlTIhgB,cC4BfC,mBAhCR,SAAAoO,GAAyH,IAAA4R,EAAA5R,EAA9F/M,OAC9B,MAAO,CACHK,UAFwHse,EAApFte,UAGpCJ,UAHwH0e,EAAzE1e,UAI/Ca,gBAJwH6d,EAA9D7d,gBAK1DE,gBALwH2d,EAA7C3d,kBAS5E,SAA4BwX,GAC/B,MAAO,CACH6D,aAAc,WACV7D,EAASgC,OAEbwC,SAAU,WACNxE,EAASxY,OAEbkd,aAAc,SAAClgB,GACXwb,EAASkC,GAAiB1d,KAE9Byf,qBAAsB,SAAChiB,GACnB+d,EAASsC,GAAyBrgB,KAEtC2iB,WAAY,SAACtgB,GACT0b,EAAS2C,GAAere,KAE5BqgB,oBAAqB,SAACjc,GAClBsX,EAASiD,GAAwBva,OAK9BvC,CAA8Fod,ICV9F6C,8BAjCX,SAAAA,EAAYllB,GAAqB,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8kB,GAAAhlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAglB,GAAA3kB,KAAAH,KACvBJ,8EAGG0Z,GACT,OAAQA,EAAKmD,cAAgB,YACzB,IAAK,WACD,IAAME,EAAkBrD,EAAKqD,iBAAmB,YAC1Chc,EAAe2Y,EAAK3Y,aAC1B,OAAIA,EACO,mCAAqCA,EAAe,oBAAsBgc,EAE1E,kBAEf,IAAK,aACL,IAAK,aACL,QACI,MAAO,oDAKf,IAAMoI,EAAY/kB,KAAKiB,aAAajB,KAAKJ,MAAM0Z,MAC/C,OACI1Y,EAAA,qBACII,IAAK+jB,EACLlkB,MAAO,CAAEC,MAAOd,KAAKJ,MAAMolB,eA3BtBpgB,cC8BNqgB,uBA5BX,SAAAA,EAAYrlB,GAAmB,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAilB,GAAAnlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmlB,GAAA9kB,KAAAH,KACrBJ,0EAIN,OACIgB,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,aACX3B,EAAA,cAACskB,GAAD,CAAQ5L,KAAMtZ,KAAKJ,MAAM0Z,KAAM0L,KAAMhlB,KAAKJ,MAAMulB,YAAc,MAElEvkB,EAAA,qBAAK2B,UAAU,WACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,mBAAGuC,KAAM,WAAanD,KAAKJ,MAAM0Z,KAAKjW,SAAUC,OAAO,UAAUtD,KAAKJ,MAAM0Z,KAAK/V,UAChF,IAFL,SAGMvD,KAAKJ,MAAM0Z,KAAKjW,SAHtB,UAKAzC,EAAA,qBAAK2B,UAAU,gBACVvC,KAAKJ,MAAM0Z,KAAKlO,cAAgBxK,EAAA,2DAErCA,EAAA,qBAAK2B,UAAU,YACV,CAACvC,KAAKJ,MAAM0Z,KAAKgD,KAAMtc,KAAKJ,MAAM0Z,KAAKlZ,MAAOJ,KAAKJ,MAAM0Z,KAAKkD,SAAS3Q,OAAO,SAAAuZ,GAAC,OAAIA,IAAGC,KAAK,OAASzkB,EAAA,4EArB1GgE,cCmaJ0gB,eAtZX,SAAAA,EAAY1lB,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAslB,IACtCzlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwlB,GAAAnlB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT2P,UAAU,GAGdlQ,EAAKD,MAAM2lB,UAAU1lB,EAAKD,MAAMoD,IAPMnD,6EAWtCG,KAAKJ,MAAM4lB,0DAMX,GAFAtQ,QAAQC,IAAI,qBACZD,QAAQC,IAAInV,KAAKJ,MAAMwL,aAAclK,UAChClB,KAAKJ,MAAMwL,aAAhB,CAGA,IAAMlK,EAAWlB,KAAKJ,MAAMwL,aAAalK,SACzClB,KAAKJ,MAAM6lB,oBAAoBvkB,EAASoV,iDAKxCrG,IAAMC,KAAK,CACPvO,MAAO,yBACPb,MAAO,OACPqP,QACIvP,EAAA,yBACIA,EAAA,uGAOZ,OACIA,EAAA,yBACKZ,KAAK0lB,yDASd,GAAI1lB,KAAKJ,MAAMwL,aAAchI,MAAMC,WAAarD,KAAKJ,MAAMyD,SACvD,OACIzC,EAAA,mBAAGC,MAAO,CAAE8kB,UAAW,WAAvB,uCACwC/kB,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuB/C,KAAKJ,MAAMwL,aAAcpI,KAAMpC,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,QAAb,SADzG,mDAQR,GAAItB,KAAKJ,MAAMwL,aAAchI,MAAMC,WAAarD,KAAKJ,MAAMyD,SACvD,OACIzC,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAE,qBAAAC,OAAuB/C,KAAKJ,MAAMwL,aAAcpI,KAAMpC,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,QAAb,6CAOzE,GAAKtB,KAAKJ,MAAMwL,aAGhB,OACIxK,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,eACX3B,EAAA,qBAAK2B,UAAU,UACVvC,KAAKgkB,gBAAgBhkB,KAAKJ,MAAMwL,eAErCxK,EAAA,qBAAK2B,UAAU,eACX3B,EAAA,qBAAK2B,UAAU,QACVvC,KAAKJ,MAAMwL,aAAalI,MAE7BtC,EAAA,qBAAK2B,UAAU,MACX3B,EAAA,sBAAM2B,UAAU,SAAhB,aAAyC,IACzC3B,EAAA,sBAAM2B,UAAU,iBAAhB,oCAAwEvC,KAAKJ,MAAMwL,aAAapI,MAI5GpC,EAAA,qBAAK2B,UAAU,cACX0hB,wBAA0B,CAAEC,OAAQC,KAAOnkB,KAAKJ,MAAMwL,aAAahE,aAAe,gDAOlF1G,GAQZ,IAAKA,EAAIC,aACL,MAAO,iBAIX,MAAO,mCAAqCD,EAAIC,aAAe,qEAGnDD,GACZ,OACIE,EAAA,qBAAKC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,IAC7BC,IAAKhB,KAAK+jB,gBAAgBrjB,4CAKvBA,GACX,OAAQA,EAAIQ,SAASC,MACjB,KAAM4D,EAA2B1D,KAC7B,OACIT,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAAjB,QAER,KAAM4D,EAA2BxD,KAC7B,OACIX,EAAA,cAACY,EAAA,EAAD,CACIC,UAAU,cACVC,gBAAiB,GACjBC,MAAM,uFAENf,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,MAAMN,MAAO,CAAEwO,YAAa,SAA7C,WAGZ,KAAMtK,EAA2BnD,uBAC7B,OACIhB,EAAA,yBACIA,EAAA,yBAAKA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,OAAON,MAAO,CAAEgB,MAAO,UAAY+jB,MAAM,IAAzD,mBAAiFhlB,EAAA,kCAAjF,eACAA,EAAA,yBAAKA,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,SAASH,KAAK,SAASuQ,QAAS1R,KAAKylB,oBAAoB1U,KAAK/Q,OAA3E,oBAGjB,KAAM+E,EAA2BjD,0BAC7B,OAAQlB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,OAAON,MAAO,CAAEgB,MAAO,UAAxC,iBAAkEjB,EAAA,kCAAlE,YACZ,KAAMmE,EAA2BhD,OAC7B,OAAQnB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAAjB,UACZ,KAAM4D,EAA2B/C,MAC7B,OAAQpB,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,WAAjB,SACZ,KAAM4D,EAA2B9C,MAC7B,OACIrB,EAAA,cAACY,EAAA,EAAD,CACIC,UAAU,cACVC,gBAAiB,GACjBC,MAAM,oBAENf,EAAA,0BAAMA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SAASe,MAAM,SAASrB,MAAO,CAAEwO,YAAa,SAA/D,mDAUhB,IAAItL,EAHJ,GAAK/D,KAAKJ,MAAMwL,aAiBhB,OAZIrH,EAD2C,IAA3C/D,KAAKJ,MAAMwL,aAAarH,QAAQ1B,OAE5BzB,EAAA,mBAAGC,MAAO,CAAEiR,UAAW,SAAU6T,UAAW,WAA5C,oCAKM3lB,KAAKJ,MAAMwL,aAAarH,QAAQM,IAAI,SAACqV,GAC3C,OACI9Y,EAAA,cAACilB,GAAD,CAAMvM,KAAMI,MAKpB9Y,EAAA,qBAAK2B,UAAU,mBACX3B,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,yBACIA,EAAA,qBAAK2B,UAAU,SAAf,WACCwB,2CAUrB,GAAK/D,KAAKJ,MAAMwL,aAGhB,OACIxK,EAAA,qBAAK2B,UAAU,mBACX3B,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,yBACIA,EAAA,qBAAK2B,UAAU,SAAf,eAEJ3B,EAAA,qBAAK2B,UAAU,cACX3B,EAAA,qBAAK2B,UAAU,aACX3B,EAAA,cAACskB,GAAD,CAAQ5L,KAAMtZ,KAAKJ,MAAMwL,aAAahI,MAAO4hB,KAAM,MAEvDpkB,EAAA,qBAAK2B,UAAU,iBAEX3B,EAAA,qBAAK2B,UAAU,SACX3B,EAAA,mBAAGuC,KAAM,WAAanD,KAAKJ,MAAMwL,aAAahI,MAAMC,SAAUC,OAAO,UAAUtD,KAAKJ,MAAMwL,aAAahI,MAAMG,UAC5G,IAFL,SAGMvD,KAAKJ,MAAMwL,aAAahI,MAAMC,SAHpC,UAKAzC,EAAA,qBAAK2B,UAAU,uBACVvC,KAAKJ,MAAMwL,aAAahI,MAAMgI,cAEnCxK,EAAA,qBAAK2B,UAAU,uBACVvC,KAAKJ,MAAMwL,aAAahI,MAAMkZ,KADnC,KAC2Ctc,KAAKJ,MAAMwL,aAAahI,MAAMhD,MADzE,KACkFJ,KAAKJ,MAAMwL,aAAahI,MAAMoZ,aAMhI5b,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,sBAAM2B,UAAU,SAAhB,gBAEJ3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,aACViB,KAAKC,eAAe,QAAS,CAC1BC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAO7D,KAAKJ,MAAMwL,aAAatH,cAK9ClD,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,sBAAM2B,UAAU,SAAhB,iBAEJ3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,cACViB,KAAKC,eAAe,QAAS,CAC1BC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAO7D,KAAKJ,MAAMwL,aAAagN,+DAQnC1X,GACnB,GAAKA,GAGAA,EAAIQ,WAGHR,EAAIQ,SAASC,OAAS4D,EAA2B/C,OACnDtB,EAAIQ,SAASC,OAAS4D,EAA2B9C,OAGrD,OACIrB,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,sBAAM2B,UAAU,SAAhB,UAEJ3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,YACX3B,EAAA,yBACIA,EAAA,yBACIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,qBAAqBe,MAAM,UAAUI,aAAa,WADjE,aAEP,IACW1B,EAAA,sBAAMC,MAAO,CAAEgR,WAAY,SAAWnR,EAAI0B,cAAcC,QACvD,IAJL,kBAKoB3B,EAAI0B,cAAcC,OAAS,EAAI,IAAM,IAEzDzB,EAAA,yBACIA,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAI,wBAA0B9C,KAAKJ,MAAMwL,aAAcpI,IAC5DpC,EAAA,cAACwQ,EAAA,EAAD,+EAa5B,GAAKpR,KAAKJ,MAAMwL,aAGhB,OACIxK,EAAA,sBAAM2B,UAAU,mBACZ3B,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,sBAAM2B,UAAU,SAAhB,kBAEJ3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,YACVvC,KAAKiE,eAAejE,KAAKJ,MAAMwL,iBAI3CpL,KAAK8lB,uBAAuB9lB,KAAKJ,MAAMwL,0DAMhD,GAAKpL,KAAKJ,MAAMwL,eAGhB8J,QAAQC,IAAI,YAAanV,KAAKJ,MAAMwL,aAAalK,UAC7ClB,KAAKJ,MAAMwL,aAAalK,SAASC,OAAS4D,EAA2BxD,MAGzE,OACIX,EAAA,cAACwQ,EAAA,EAAD,CACIM,QAAS1R,KAAK+lB,YAAYhV,KAAK/Q,OADnC,iEASJ,OACIY,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,0CAEKZ,KAAKJ,MAAMwL,cAAgBpL,KAAKJ,MAAMwL,aAAalI,KAFxD,MAMJtC,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOuC,eAAgB,aACjFhS,KAAKgmB,mBACNplB,EAAA,cAACiC,EAAA,EAAD,CAASC,GAAE,kBAAoBlC,EAAA,cAACwQ,EAAA,EAAD,CAAQjQ,KAAK,SAASG,KAAK,QAA3B,mBAC9BtB,KAAKimB,mBACNrlB,EAAA,cAACwQ,EAAA,EAAD,CAAQa,MAAM,SAAS3Q,KAAK,OAAOoQ,QAAS1R,KAAKkS,WAAWnB,KAAK/Q,yDAQjF,OACIY,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,gFAUhB,MAAuC,qBAA5BZ,KAAKJ,MAAMwL,aAEdxK,EAAA,qBAAK2B,UAAU,oBACVvC,KAAK4S,eACNhS,EAAA,qBAAK2B,UAAU,WACX3B,EAAA,qBAAK2B,UAAU,cACVvC,KAAKsE,aAEV1D,EAAA,qBAAK2B,UAAU,cACX3B,EAAA,qBAAK2B,UAAU,WACVvC,KAAKkmB,0BAEVtlB,EAAA,qBAAK2B,UAAU,WACVvC,KAAKmmB,cAEVvlB,EAAA,qBAAK2B,UAAU,WACVvC,KAAKomB,oBAQ1BxlB,EAAA,qBAAK2B,UAAU,oBACVvC,KAAK4kB,sBADV,qBA/YmBhgB,aCiChBC,mBAtBf,SAAAoO,EAAAoC,GACkC,IAAAgR,EAAApT,EADPlI,QAAW3K,EACJimB,EADIjmB,MAAOgL,EACXib,EADWjb,aAAcvE,EACzBwf,EADyBxf,MAAkCxD,EAC3D4P,EADkCjH,KAAQC,cAAiB5I,SAGzF,MAAO,CACHL,GAH0BqS,EAA5BrS,GAGM5C,QAAOgL,eAAcvE,QAAOxD,aAIjC,SAA4Bqb,GAC/B,MAAO,CACH6G,UAAW,SAACviB,GACR0b,EAAS8B,GAAqBxd,KAElCwiB,UAAW,WACP9G,EAAS8B,OAEbiF,oBAAqB,SAACnP,GAClBoI,EAAS8B,GAAiClK,OAKvCzR,CAAoGygB,ICiH5G,SAASgB,KACZ,MAAO,CACHnlB,KAAMyE,EAAWgF,0BAwBlB,SAASf,GAAiBhD,GAC7B,MAAO,CACH1F,KAAMyE,EAAWgE,oBACjB/C,MAAOA,GAyER,SAAS0f,GAAYpd,GACxB,OAAO,SAACuV,EAAmDC,GA1IxD,IAAsB3b,EA2IrB0b,GA3IqB1b,EA2ICmG,EA1InB,CACHhI,KAAMyE,EAAWqD,oBACjBjG,GAAIA,KAuIkF,IAAA4b,EAMlFD,IANkFE,EAAAD,EAIlF5S,KAAQC,cAAiBgB,EAJyD4R,EAIzD5R,MAAO5J,EAJkDwb,EAIlDxb,SACzByK,EAL2E8Q,EAKlF/Q,IAAOC,OAUX,OAPc,IAAI2I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGtCiM,OAAOhW,GACfkL,KAAK,SAAC3T,GACH,IA9ImB0I,EA8Ibod,EAAoC,CACtCxjB,GAAI,CACAvC,MAAOC,EAAIsC,GACXmE,OAAQ3B,EAAWihB,YACnB5f,MAAO,CACH1F,KAAM2D,EAAYzD,KAClBqD,QAAS,KAGjBxB,KAAM,CACFzC,MAAOC,EAAIwC,KACXiE,OAAQ3B,EAAWihB,YACnB5f,MAAO,CACH1F,KAAM2D,EAAYzD,KAClBqD,QAAS,KAGjB/D,aAAc,CACVF,MAAOC,EAAIC,aACXwG,OAAQ3B,EAAWihB,YACnB5f,MAAO,CACH1F,KAAM2D,EAAYzD,KAClBqD,QAAS,KAGjB0C,YAAa,CACT3G,MAAOC,EAAI0G,YACXD,OAAQ3B,EAAWihB,YACnB5f,MAAO,CACH1F,KAAM2D,EAAYzD,KAClBqD,QAAS,MAIrBga,GAhLmBtV,EAgLSod,EA/KjC,CACHrlB,KAAMyE,EAAW0D,sBACjBF,mBAAoBA,OA+KfmU,MAAM,SAACC,GA3Kb,IAA0B3W,EA4KjBqO,QAAQrO,MAAM,iBAAkB2W,GAChCkB,GA7KiB7X,EA6KS,CACtBuY,KAAM5B,EAAIta,KACVwB,QAAS8Y,EAAI9Y,SA9KtB,CACHvD,KAAMyE,EAAW8gB,oBACjB7f,MAAOA,QAmLR,SAAS8f,KACZ,OAAO,SAACjI,EAAmDC,GACvDD,EA1JG,CACHvd,KAAMyE,EAAW4D,sBAwJqE,IAAA8V,EAK9DX,IAL8DY,EAAAD,EAG9EtT,KAAQC,cAAiBgB,EAHqDsS,EAGrDtS,MAAO5J,EAH8Ckc,EAG9Clc,SAH8CujB,EAAAtH,EAIlFpW,QAAWC,EAJuEyd,EAIvEzd,eAAgBC,EAJuDwd,EAIvDxd,mBACpB0E,EAL2EwR,EAKlFzR,IAAOC,OACL0R,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAGnD,GAAK9J,EAAL,CAQA,IAAMyd,EAAS,CACX3jB,KAAMkG,EAAmBlG,KAAKzC,MAC9BE,aAAcyI,EAAmBzI,aAAaF,MAC9C2G,YAAagC,EAAmBhC,YAAY3G,OAGhD+e,EAAMsH,UAAU3d,EAAgB0d,GAC3BxS,KAAK,WACFqK,EAhLL,CACHvd,KAAMyE,EAAW8D,0BAiLZ6T,MAAM,SAAC1W,GACJqO,QAAQrO,MAAM,eAAgBuC,EAAoBvC,GAClD6X,EAAS7U,GAAiB,CACtBuV,KAAM,UACN1a,QAASmC,EAAMnC,kBArBvBga,EAAS7U,GAAiB,CACtBuV,KAAM,MACN1a,QAAS,mDAyBlB,SAASqiB,KACZ,OAAO,SAACrI,EAAmDC,GAA+B,IACnEvV,EAAyBuV,IAApCzV,QAAWE,mBAEYuV,IAAvBzV,QAEHE,IAKCA,EAAmBlG,KAAKiE,SAAW3B,EAAWkC,WAChD0B,EAAmBlG,KAAKiE,SAAW3B,EAAWihB,eAU5Crd,EAAmBzI,aAAawG,SAAW3B,EAAWkC,WACxD0B,EAAmBzI,aAAawG,SAAW3B,EAAWihB,eAKpDrd,EAAmBhC,YAAYD,SAAW3B,EAAWkC,WACvD0B,EAAmBhC,YAAYD,SAAW3B,EAAWihB,aAKzD/H,EAxPG,CACHvd,KAAMyE,EAAW8E,uBA4NbgU,EAAS4H,OA+Bd,SAASU,GAAkB9jB,GAC9B,OAAO,SAACwb,GAAsD,IAAAmC,EAC3B9C,GAAWE,gBAAgB/a,GADA4d,EAAAhhB,OAAAkX,GAAA,EAAAlX,CAAA+gB,EAAA,GACnDE,EADmDD,EAAA,GACpCja,EADoCia,EAAA,GAGtDja,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EAlNL,SAAgCxb,EAAc2D,GACjD,MAAO,CACH1F,KAAMyE,EAAWoE,2BACjB9G,KAAMA,EACN2D,MAAOA,GA8MMoD,CAAuB8W,EAAela,IAE/C6X,EA3NL,SAAkCxb,GACrC,MAAO,CACH/B,KAAMyE,EAAWkE,6BACjB5G,KAAMA,GAwNO6G,CAAyBgX,IAEtCrC,EAASqI,OAIV,SAASE,GAA0B/jB,GACtC,OAAO,SAACwb,GAAsD,IA1MjB/d,EA0MiBsgB,EACpBlD,GAAWmD,wBAAwBhe,GADfie,EAAArhB,OAAAkX,GAAA,EAAAlX,CAAAmhB,EAAA,GACnDG,EADmDD,EAAA,GAC7Bta,EAD6Bsa,EAAA,GAGtDta,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EAvML,SAAwC/d,EAAsBkG,GACjE,MAAO,CACH1F,KAAMyE,EAAWwE,oCACjBzJ,aAAcA,EACdkG,MAAOA,GAmMMwD,CAA+B+W,EAAsBva,IAE9D6X,GAhNqC/d,EAgNKygB,EA/M3C,CACHjgB,KAAMyE,EAAWsE,sCACjBvJ,aAAcA,KA+Md+d,EAASqI,OAIV,SAASG,GAAyB9f,GACrC,OAAO,SAACsX,EACJC,GAA+B,IAAAwI,EAEPxI,IAFOyI,EAAAD,EACvBnb,KAAQC,cAAiBgB,EADFma,EACEna,MAAO5J,EADT+jB,EACS/jB,SAC7ByK,EAFoBqZ,EAE3BtZ,IAAOC,OAFoBgU,EAGjB,IAAIrL,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAEPgL,uBAAuB9W,GATpC2a,EAAAjiB,OAAAkX,GAAA,EAAAlX,CAAAgiB,EAAA,GASxBE,EATwBD,EAAA,GASFlb,EATEkb,EAAA,GAW3Blb,EAAM1F,OAAS2D,EAAYyG,MAC3BmT,EAnML,SAAuCtX,EAAqBP,GAC/D,MAAO,CACH1F,KAAMyE,EAAW4E,kCACjBpD,YAAaA,EACbP,MAAOA,GA+LM4D,CAA8BuX,EAAsBnb,IAE7D6X,EA5ML,SAAyCtX,GAC5C,MAAO,CACHjG,KAAMyE,EAAW0E,oCACjBlD,YAAaA,GAyMAmD,CAAgCyX,IAE7CtD,EAASqI,kBChCFM,eA1YX,SAAAA,EAAYznB,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqnB,IACtCxnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAunB,GAAAlnB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT8hB,iBAAiB,EACjBoF,gBAAgB,GAGpBznB,EAAKsiB,cAAgBvd,cAErB/E,EAAKuiB,OAASC,SAASC,SAAUF,OAEjCviB,EAAKD,MAAM2nB,cAAc1nB,EAAKD,MAAMoD,IAZEnD,4EAgBtCoQ,IAAMC,KAAK,CACPvO,MAAO,2BACPb,MAAO,OACPqP,QACIvP,EAAA,yBACIA,EAAA,+GAQZ,IAAI4hB,EAEAA,EADAxiB,KAAKmiB,cAAc/R,QACXpQ,KAAKmiB,cAAc/R,QAAQ3P,MAE3B,MAEZ,IAAMgiB,EAASC,KAAIF,GACnBxiB,KAAKJ,MAAM+iB,qBAAqBF,oDAGX,IAAAte,EAAAnE,KACrB,GAAKA,KAAK4iB,aAAV,CAUA3S,IAAM4S,QAAQ,CACVlhB,MAAO,oBACPwO,QACIvP,EAAA,yBACIA,EAAA,mEAEAA,EAAA,sEAA+CA,EAAA,oDAA/C,KAEAA,EAAA,uBAAGA,EAAA,0DAGXkiB,KAhBY,WACZ3e,EAAKoM,SAAS,CAAE2R,iBAAiB,KAgBjCa,SAdW,aAeXC,OAAQ,MACRC,WAAY,YAvBZjjB,KAAKuQ,SAAS,CAAE2R,iBAAiB,oDA2BjB,IAAA1J,EAAAxY,KACpB,GAAKA,KAAK4iB,aAAV,CAUA3S,IAAM4S,QAAQ,CACVlhB,MAAO,oBACPwO,QACIvP,EAAA,yBACIA,EAAA,mEAEAA,EAAA,sEAA+CA,EAAA,oDAA/C,KAEAA,EAAA,uBAAGA,EAAA,0DAGXkiB,KAhBY,WACZtK,EAAKjI,SAAS,CAAE+W,gBAAgB,KAgBhCvE,SAdW,aAeXC,OAAQ,MACRC,WAAY,YAvBZjjB,KAAKuQ,SAAS,CAAE+W,gBAAgB,qCA2B/B9W,GACLA,EAAEC,iBACFzQ,KAAKJ,MAAM4nB,qDAGFhX,GACTA,EAAE2S,UACFnjB,KAAKJ,MAAMwjB,aAAa5S,EAAElN,OAAO7C,oDAGhB+P,GACjBA,EAAE2S,UACFnjB,KAAKJ,MAAM+iB,qBAAqBnS,EAAElN,OAAO7C,mDAGzB+P,GAChBA,EAAE2S,UACFnjB,KAAKJ,MAAMyjB,oBAAoB7S,EAAElN,OAAO7C,0CAGjC+P,GACPA,EAAE2S,UAEFjO,QAAQyG,KAAK,8DAIb,OACI3b,KAAKJ,MAAM2G,YAAclB,EAAUoC,QACnCzH,KAAKJ,MAAMoH,kBAAoBzB,EAAgBqD,QAC9C5I,KAAKJ,MAAMuG,YAAcb,EAAU2B,KAChCjH,KAAKJ,MAAMuG,YAAcb,EAAU6F,OACnCnL,KAAKJ,MAAMuG,YAAcb,EAAUmB,4CAK3C,OACIzG,KAAKJ,MAAM2G,YAAclB,EAAUoC,SAClCzH,KAAKJ,MAAMuG,YAAcb,EAAU2B,KAChCjH,KAAKJ,MAAMuG,YAAcb,EAAU6F,4CAK3C,OACIvK,EAAA,sBAAMoC,GAAG,uBAAuBT,UAAU,SAASuO,SAAU9Q,KAAK8Q,SAASC,KAAK/Q,OAC5EY,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,oBAAf,QACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMwJ,mBAAmBlG,KAAKzC,OAAS,GACtDwQ,SAAUjR,KAAKujB,aAAaxS,KAAK/Q,QACpCA,KAAKJ,MAAMwJ,mBAAmBlG,KAAK2D,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMwJ,mBAAmBlG,KAAK2D,MAAMnC,SAAmB,KAGjJ9D,EAAA,qBAAK2B,UAAU,oBACX3B,EAAA,qBAAK2B,UAAU,oBAAf,iBACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAKC,MAAO,CAAE2O,QAAS,OAAQC,cAAe,MAAO+T,aAAc,QAC/D5iB,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,YAChB1O,EAAA,uBAAOuQ,IAAKnR,KAAKmiB,cAAenR,YAAY,wDAEhDpQ,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,cAACwQ,EAAA,EAAD,CACI9P,KAAK,aACLT,MAAO,CAAEE,OAAQ,QACjB2Q,QAAS1R,KAAKyjB,oBAAoB1S,KAAK/Q,UAInDY,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMwJ,mBAAmBzI,aAAaF,OAAS,GAC9DwQ,SAAUjR,KAAK0jB,qBAAqB3S,KAAK/Q,QAC5CA,KAAKJ,MAAMwJ,mBAAmBzI,aAAakG,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMwJ,mBAAmBzI,aAAakG,MAAMnC,SAAmB,KAGjK9D,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,oBAAf,MACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,uBAAOH,MAAOT,KAAKJ,MAAMwJ,mBAAmBpG,GAAGvC,OAAS,GACpDwQ,SAAUjR,KAAK2jB,WAAW5S,KAAK/Q,QAClCA,KAAKJ,MAAMwJ,mBAAmBpG,GAAG6D,MAASjG,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMwJ,mBAAmBpG,GAAG6D,MAAMnC,SAAmB,KAG7I9D,EAAA,qBAAK2B,UAAU,MAAM1B,MAAO,CAAEyO,KAAM,UAAWsU,UAAW,OAAQC,UAAW,SACzEjjB,EAAA,qBAAK2B,UAAU,oBAAf,eACA3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,0BAAUH,MAAOT,KAAKJ,MAAMwJ,mBAAmBhC,YAAY3G,OAAS,GAChEwQ,SAAUjR,KAAK8jB,oBAAoB/S,KAAK/Q,QAC3CA,KAAKJ,MAAMwJ,mBAAmBhC,YAAYP,MAASjG,EAAA,qBAAKC,MAAO,CAAEgB,MAAO,QAAU7B,KAAKJ,MAAMwJ,mBAAmBhC,YAAYP,MAAMnC,SAAkB,KAG7J9D,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,SACf3B,EAAA,qBAAK2B,UAAU,mDAcf7B,GAQZ,IAAKA,EAAIC,aAAaF,MAClB,MAAO,iBAIX,MAAO,mCAAqCC,EAAIC,aAAaF,MAAQ,qEAGzDC,GACZ,OACIE,EAAA,qBAAKC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,IAC7BC,IAAKhB,KAAK+jB,gBAAgBrjB,6CAKlC,OAAOE,EAAA,sBAAM2B,UAAU,WACnB3B,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,QACVvC,KAAKJ,MAAMwJ,mBAAmBlG,KAAKzC,OAAS,MAIzDG,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,gBACVvC,KAAKgkB,gBAAgBhkB,KAAKJ,MAAMwJ,uBAI7CxI,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,MACX3B,EAAA,sBAAMC,MAAO,CAAEgB,MAAO,WAAa7B,KAAKoiB,OAAxC,yBACCpiB,KAAKJ,MAAMwJ,mBAAmBpG,GAAGvC,OAAUG,EAAA,sBAAMC,MAAO,CAAEiR,UAAW,WAA1B,2BAIxDlR,EAAA,qBAAK2B,UAAU,MAAM1B,MAAO,CAAEyO,KAAM,YAChC1O,EAAA,qBAAK2B,UAAU,QACX3B,EAAA,qBAAK2B,UAAU,cACX0hB,wBAA0B,CAAEC,OAAQC,KAAOnkB,KAAKJ,MAAMwJ,mBAAmBhC,YAAY3G,OAAS,gDAOpG,IAAA2jB,EACwCpkB,KAAKJ,MACjDykB,EAAQ,SAFJD,EACF7d,UAC6B,YAF3B6d,EACSpd,gBACkD,WAF3Dod,EAC0Bje,UAEpC,OACIvF,EAAA,sBAAMC,MAAO,CAAEwO,YAAa,SAAWgV,0CAK3C,IAAMC,EAAUtkB,KAAKJ,MAAMwJ,mBAAmBlG,KAAKzC,OAAUG,EAAA,sBAAMC,MAAO,CAAEiR,UAAW,SAAUjQ,MAAO,SAA3C,0DAC7D,OACIjB,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,0BAEIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SACV,IAHL,gBAKKmjB,EALL,MASJ1jB,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOuC,eAAgB,WAAYtC,WAAY,WAE1G9O,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTiQ,KAAK,uBACL/Q,IAAI,SACJ6Q,UAAWrR,KAAKukB,QAAQpkB,KAAKH,MAC7BwR,SAAS,UAJb,QASA5Q,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTH,KAAK,SACLuQ,QAAS1R,KAAKynB,sBAAsB1W,KAAK/Q,OAF7C,sBAMAY,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTH,KAAK,SACLuQ,QAAS1R,KAAKwkB,uBAAuBzT,KAAK/Q,OAF9C,0BAMAY,EAAA,cAACwQ,EAAA,EAAD,CAAQa,MAAM,SAAS3Q,KAAK,OAAOoQ,QAAS1R,KAAKkS,WAAWnB,KAAK/Q,yDAiCjF,OACIY,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,uFAUhB,OAAIZ,KAAKI,MAAM8hB,gBACJthB,EAAA,cAAC6jB,EAAA,EAAD,CAAUlN,MAAI,EAACzU,GAAG,mBAGzB9C,KAAKI,MAAMknB,eACJ1mB,EAAA,cAAC6jB,EAAA,EAAD,CAAUlN,MAAI,EAACzU,GAAI,qBAAuB9C,KAAKJ,MAAMoD,KAQ3DhD,KAAKJ,MAAMwJ,mBASZxI,EAAA,qBAAK2B,UAAU,oBACVvC,KAAK4S,eACNhS,EAAA,qBAAK2B,UAAU,WACX3B,EAAA,qBAAK2B,UAAU,gBACX3B,EAAA,kCACCZ,KAAK0kB,cAEV9jB,EAAA,qBAAK2B,UAAU,iBACX3B,EAAA,mCACCZ,KAAK2kB,mBAhBd/jB,EAAA,qBAAK2B,UAAU,oBACVvC,KAAK4kB,8BAxXKhgB,aCiChBC,mBAhCR,SAAAoO,GAA6H,IAAAyU,EAAAzU,EAAlG/J,QAC9B,MAAO,CACH3C,UAF4HmhB,EAAvFnhB,UAGrCJ,UAH4HuhB,EAA5EvhB,UAIhDa,gBAJ4H0gB,EAAjE1gB,gBAK3DoC,mBAL4Hse,EAAhDte,qBAS7E,SAA4BsV,GAC/B,MAAO,CACH6I,cAAe,SAACvkB,GACZ0b,EAAS6H,GAAYvjB,KAEzBwkB,cAAe,WACX9I,EAASiI,OAEbvD,aAAc,SAAClgB,GACXwb,EAASsI,GAAkB9jB,KAE/Byf,qBAAsB,SAAChiB,GACnB+d,EAASuI,GAA0BtmB,KAKvC0iB,oBAAqB,SAACjc,GAClBsX,EAASwI,GAAyB9f,OAK/BvC,CAA8FwiB,IC2E9FM,uBA7HX,SAAAA,EAAY/nB,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2nB,IAChC9nB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6nB,GAAAxnB,KAAAH,KAAMJ,KAEDgoB,SAAWhjB,cAEhB/E,EAAKD,MAAMioB,YALqBhoB,+EAShCG,KAAKJ,MAAMkoB,+DAIX,GAA8B,OAA1B9nB,KAAK4nB,SAASxX,QAAlB,CAGA,IAAMnD,EAAQjN,KAAK4nB,SAASxX,QAAQ3P,MACf,IAAjBwM,EAAM5K,QAGVrC,KAAKJ,MAAMmoB,mBAAmB9a,4CAI9B,OACIrM,EAAA,qBAAK2B,UAAU,aAAf,UACW3B,EAAA,uBAAOuQ,IAAKnR,KAAK4nB,WACxBhnB,EAAA,cAACwQ,EAAA,EAAD,CACI9P,KAAK,OACLkQ,SAAS,SACTE,QAAS1R,KAAKgoB,aAAajX,KAAK/Q,OAHpC,4DAWR,OACIY,EAAA,qBAAK2B,UAAU,gBAAf,gBACiB3B,EAAA,uBAAGA,EAAA,0BAAOZ,KAAKJ,MAAMqM,cAAcA,cAAc1I,UAAjD,KAAmE3C,EAAA,0BAAOZ,KAAKJ,MAAMqM,cAAcA,cAAc5I,WADlI,IAEK,IACDzC,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,SAASoQ,QAAS1R,KAAKioB,cAAclX,KAAK/Q,OAAvD,oDAMR,OAAQA,KAAKJ,MAAMqM,cAAc9E,QAC7B,KAAK/F,EAAgBC,KACrB,KAAKD,EAAgB4L,SACjB,OACIpM,EAAA,0BAER,KAAKQ,EAAgBiM,WACjB,OACIzM,EAAA,qBAAK2B,UAAU,wBACVvC,KAAKkoB,mBACLloB,KAAKJ,MAAMqP,UAGxB,KAAK7N,EAAgBoM,aACjB,OACI5M,EAAA,qBAAK2B,UAAU,0BACX3B,EAAA,mEACCZ,KAAKmoB,iBAGlB,KAAK/mB,EAAgBmK,MACjB,OACI3K,EAAA,qBAAK2B,UAAU,0BACX3B,EAAA,gCACCZ,KAAKJ,MAAMqM,cAAcvH,SAGtC,QACI,OACI9D,EAAA,mEAMZ,OAAQZ,KAAKJ,MAAMqM,cAAc9E,QAC7B,KAAK/F,EAAgBC,KACrB,KAAKD,EAAgB4L,SACjB,OACIpM,EAAA,0BAER,KAAKQ,EAAgBiM,WACjB,OACIzM,EAAA,qBAAK2B,UAAU,wBACVvC,KAAKJ,MAAMqP,UAGxB,KAAK7N,EAAgBoM,aACjB,OACI5M,EAAA,qBAAK2B,UAAU,0BACX3B,EAAA,2CAGZ,KAAKQ,EAAgBmK,MACjB,OACI3K,EAAA,qBAAK2B,UAAU,mBACX3B,EAAA,qCAGZ,QACI,OACIA,EAAA,4DAOZ,OACIA,EAAA,qBAAK2B,UAAU,QACVvC,KAAKJ,MAAMwoB,OAASpoB,KAAKqoB,gBAAkBroB,KAAKsoB,uBA1H9C1jB,uBCoBb2jB,GACI,GADJA,GAES,eAFTA,GAGK,YAuDEC,GAAb,WAGI,SAAAA,EAAAvV,GAAsC,IAAxBC,EAAwBD,EAAxBC,IAAwBpT,OAAAC,EAAA,EAAAD,CAAAE,KAAAwoB,GAClCxoB,KAAKkT,IAAMA,EAJnB,OAAApT,OAAAS,EAAA,EAAAT,CAAA0oB,EAAA,EAAAhoB,IAAA,WAAAC,MAAA,SAOagoB,GACL,MAAoB,kBAATA,EACA,CAACzoB,KAAKkT,KAAKnQ,OAAO,CAAC0lB,IAAOpD,KAAK,KAEnC,CAACrlB,KAAKkT,KAAKnQ,OAAO0lB,GAAMpD,KAAK,OAX5C,CAAA7kB,IAAA,OAAAC,MAAA,WAgBQ,OAAOiT,MAAM1T,KAAK0oB,SAAS,CAACH,KAAkB,CAC1C1U,QAAS,CACLG,OAAQ,oBAEZL,KAAM,SAELU,KAAK,SAACC,GACH,OAAOA,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MA1BvB,CAAAnU,IAAA,eAAAC,MAAA,SA8BiBwM,GACT,OAAOyG,MAAM1T,KAAK0oB,SAAS,CAACH,KAAuB,CAC/C1U,QAAS,CACLG,OAAQ,mBACRF,cAAe7G,GAEnB0G,KAAM,SAELU,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAMD,EAASE,YAE7B,OAAOF,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,MA7CvB,CAAAnU,IAAA,QAAAC,MAAA,SAiDUwM,GACF,OAAOyG,MAAM1T,KAAK0oB,SAAS,CAACH,KAAmB,CAC3C1U,QAAS,CACLG,OAAQ,mBACRF,cAAe7G,GAEnB0G,KAAM,SAELU,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASnN,OACT,MAAM,IAAIoN,MAAMD,EAASE,YAE7B,OAAOF,EAASG,SAEnBJ,KAAK,SAACM,GACH,OAAOA,QAhEvB6T,EAAA,GCpCO,SAAS7a,GAAe9G,GAC3B,MAAO,CACH1F,KAAMyE,EAAW8H,iBACjB7G,SAID,SAASyG,GAAeL,EAAe5J,EAAkBE,EAAkB2J,GAC9E,MAAO,CACH/L,KAAMyE,EAAWwH,gBACjBH,QAAO5J,WAAUE,WAAU2J,SAI5B,SAASO,KACZ,MAAO,CACHtM,KAAMyE,EAAW2H,mBAmBlB,SAASsa,KACZ,OAAO,SAACnJ,EAAmDC,GACvDD,EA1CG,CACHvd,KAAMyE,EAAWmH,mBA6CjB,IAAME,EAAQ0b,OAAY,iBAC1B,GAAK1b,EAAL,CAIA,IAAMjB,EAAO,IAAIwc,GAAW,CAAEtV,IAAK,mBACnCoC,QAAQC,IAAI,CACRvJ,EAAK4c,aAAa3b,GAClBjB,EAAK6c,MAAM5b,KAEVoH,KAAK,SAAApB,GAA0B,IAAAoC,EAAAvV,OAAAkX,GAAA,EAAAlX,CAAAmT,EAAA,GAAb6V,GAAazT,EAAA,GAAAA,EAAA,IACtBnI,EAAQ4b,EAAQ5b,MAAM7I,IAAI,SAAAgS,GAAA,IAAGrT,EAAHqT,EAAGrT,GAAHqT,EAAO0S,KAAP,OAAkB/lB,IAClD0b,EAASpR,GAAeL,EAAO6b,EAAQxP,KAAMwP,EAAQtZ,QAAStC,MAEjEqQ,MAAM,SAACC,GACJtI,QAAQrO,MAAM,mBAAoB2W,GAClCkB,EAAS/Q,GAAe,CACpByR,KAAM,QACN1a,QAAS8Y,EAAI9Y,kBAhBrBga,EAASjR,OC9CN5I,mBAzBf,SAAyBzE,EAAmBR,GAExC,MAAO,CACHqM,cAFa7L,EAAT4L,OAUL,SAA4B0S,GAC/B,MAAO,CACHmJ,UAAW,WACPnJ,EAAS8B,OAEbsH,sBAAuB,WACnBpJ,ED6ED,SAACA,EAAmDC,GAEvDgK,UAAe,iBAGfjK,EAASjR,SChFTsa,mBAAoB,SAAC9a,GACjByR,EDmFL,SAA8BzR,GACjC,OAAO,SAACyR,EAAmDC,GAEvDgK,OAAY,gBAAiB1b,GAG7B,IAAMjB,EAAO,IAAIwc,GAAW,CAAEtV,IAAK,mBACnCoC,QAAQC,IAAI,CACRvJ,EAAK4c,aAAa3b,GAClBjB,EAAK6c,MAAM5b,KAEVoH,KAAK,SAAAkC,GAA0B,IAAAC,EAAA1W,OAAAkX,GAAA,EAAAlX,CAAAyW,EAAA,GAAbuS,GAAatS,EAAA,GAAAA,EAAA,IACtBtJ,EAAQ4b,EAAQ5b,MAAM7I,IAAI,SAAAwW,GAAA,IAAG7X,EAAH6X,EAAG7X,GAAH,OAAA6X,EAAOkO,KAAW/lB,IAClD0b,EAASpR,GAAeL,EAAO6b,EAAQxP,KAAMwP,EAAQtZ,QAAStC,MAEjEqQ,MAAM,SAACC,GACJtI,QAAQrO,MAAM,mBAAoB2W,GAClCkB,EAAS/Q,GAAe,CACpByR,KAAM,QACN1a,QAAS8Y,EAAI9Y,cCtGZ8b,CAA6BvT,OAKnCpI,CAA8F8iB,wBCzCvGqB,GAKF,SAAAA,EAAA/V,GAA0D,IAA5C/P,EAA4C+P,EAA5C/P,KAAM+lB,EAAsChW,EAAtCgW,UAAWC,EAA2BjW,EAA3BiW,QAA2BppB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgpB,GACtDhpB,KAAKkD,KAAOA,EACZlD,KAAKipB,UAAYA,EACjBjpB,KAAKkpB,QAAUA,GAUjBC,eAIF,SAAAA,EAAY1V,GAA+B,IAAA5T,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmpB,IACvCtpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqpB,GAAAhpB,KAAAH,KAAMyT,KACD2V,QAAU,IAAIpU,KACnBnV,EAAKwpB,QAAU5V,EAAO4V,SAAW,IAHMxpB,6BAJjBmpB,IAgBxBM,cAQF,SAAAA,EAAAjU,GAAsF,IAAxEnS,EAAwEmS,EAAxEnS,KAAMqmB,EAAkElU,EAAlEkU,QAASC,EAAyDnU,EAAzDmU,QAAyD1pB,OAAAC,EAAA,EAAAD,CAAAE,KAAAspB,GAClFtpB,KAAKkD,KAAOA,EACZlD,KAAKupB,QAAUA,EACfvpB,KAAKgD,GAAKymB,OACVzpB,KAAK0pB,QAAU,IAAI1U,KACnBhV,KAAKwpB,QAAUA,EACfxpB,KAAK2pB,SAAW,8DAIhB,MAAO,CACHA,SAAU,CACN3mB,GAAIhD,KAAKgD,GACT0mB,QAAS1pB,KAAK0pB,QACdF,QAASxpB,KAAKwpB,SAElBtmB,KAAMlD,KAAKkD,KACXqmB,QAASvpB,KAAKupB,kBAgBbK,GAAb,WAgBI,SAAAA,EAAYnW,GAKR,GALgC3T,OAAAC,EAAA,EAAAD,CAAAE,KAAA4pB,GAEhC5pB,KAAK6pB,OAASpW,EAAOoW,OAGQ,OAAzB7pB,KAAK6pB,OAAOxH,SACZ,MAAM,IAAI9N,MAAM,eAEpB,GAAsC,OAAlCvU,KAAK6pB,OAAOxH,SAASC,SACrB,MAAM,IAAI/N,MAAM,eAEpBvU,KAAK8pB,KAAOrW,EAAOqW,MAAQ9pB,KAAK6pB,OAAOxH,SAASC,SAASF,OAIzDpiB,KAAKgD,GAAKyQ,EAAOsW,WAAaN,OAG9BzpB,KAAKgqB,iBAAmB,IAAInR,IAC5B7Y,KAAKiqB,iBAAmB,IAAIpR,IAC5B7Y,KAAKkqB,UAAY,IAAIrR,IAErB7Y,KAAKmqB,OAAS,EACdnqB,KAAKoqB,UAAY,EACjBpqB,KAAKqqB,cAAgB,EAErBrqB,KAAKsqB,uBAAyB,EAC9BtqB,KAAKuqB,iCAAmC,IACxCvqB,KAAKwqB,yBAA0B,EAC/BxqB,KAAKyqB,6BAA+B,EACpCzqB,KAAK0qB,gBAAkB,KA9C/B,OAAA5qB,OAAAS,EAAA,EAAAT,CAAA8pB,EAAA,EAAAppB,IAAA,QAAAC,MAAA,WAmDQ,OADAT,KAAKmqB,QAAU,EACR,OAASvnB,OAAO5C,KAAKmqB,UAnDpC,CAAA3pB,IAAA,iBAAAC,MAAA,SAsDmBkqB,GACX,IAAMjmB,EAAUimB,EAAaC,KAC7B,IAAKlmB,EAKD,OAJA1E,KAAKsqB,8BACDtqB,KAAKwqB,yBACLtV,QAAQyG,KAAK,mCAAoCgP,IAIzD,IAAKjmB,EAAQilB,SAKT,OAJA3pB,KAAKsqB,8BACDtqB,KAAKwqB,yBACLtV,QAAQyG,KAAK,uDAAwDgP,IAI7E,GAAMjmB,EAAQilB,SAASI,YAAc/pB,KAAKgD,GAKtC,OAJAhD,KAAKsqB,8BACDtqB,KAAKwqB,yBACLtV,QAAQyG,KAAK,oDAAsDgP,IAoB3E,GAhBI3qB,KAAKyqB,6BAA+BzqB,KAAKuqB,mCACzCvqB,KAAKwqB,yBAA0B,EAC/BtV,QAAQyG,KAAK,4CAA8C3b,KAAKyqB,6BAA+B,gBAc/F/lB,EAAQilB,SAAS3mB,IAAMhD,KAAKgqB,iBAAiB9P,IAAIxV,EAAQilB,SAAS3mB,IAClE,IACI,IAAMsR,EAAWtU,KAAKgqB,iBAAiBxQ,IAAI9U,EAAQilB,SAAS3mB,IAC5DhD,KAAKgqB,iBAAiBa,OAAOnmB,EAAQilB,SAAS3mB,IAC1CsR,GACAA,EAASwW,QAAQpmB,EAAQ6kB,SAE/B,MAAOjP,GACLpF,QAAQrO,MAAM,uCAAwCnC,EAAS4V,GAMvE,GAAIta,KAAKiqB,iBAAiB/P,IAAIxV,EAAQxB,MAAO,CACzC,IAAM6nB,EAAW/qB,KAAKiqB,iBAAiBzQ,IAAI9U,EAAQxB,MACnDlD,KAAKiqB,iBAAiBY,OAAOnmB,EAAQxB,MACrC6nB,EAASjS,QAAQ,SAACkS,GACd,IACIA,EAAS/B,UAAUvkB,EAAQ6kB,SAC7B,MAAOjP,GACLpF,QAAQrO,MAAM,sCAAuCnC,EAAS4V,GAC1D0Q,EAAS9B,SACT8B,EAAS9B,QAAQ5O,MAQ7Bta,KAAKkqB,UAAUhQ,IAAIxV,EAAQxB,OAC3BlD,KAAKkqB,UAAU1Q,IAAI9U,EAAQxB,MAAO4V,QAAQ,SAACkS,GAClCA,EAAS/B,WACV/T,QAAQyG,KAAK,2BAA4BqP,GAE7C,IACIA,EAAS/B,UAAUvkB,EAAQ6kB,SAC7B,MAAOjP,GACLpF,QAAQrO,MAAM,sCAAuCnC,EAAS4V,GAC1D0Q,EAAS9B,SACT8B,EAAS9B,QAAQ5O,QAtIzC,CAAA9Z,IAAA,SAAAC,MAAA,SA6IWuqB,GACEhrB,KAAKkqB,UAAUhQ,IAAI8Q,EAAS9nB,OAC7BlD,KAAKkqB,UAAUlR,IAAIgS,EAAS9nB,KAAM,IAEtClD,KAAKkqB,UAAU1Q,IAAIwR,EAAS9nB,MAAOqU,KAAKyT,KAjJhD,CAAAxqB,IAAA,KAAAC,MAAA,SAoJOwqB,EAAmBC,EAAgCrkB,GAClD7G,KAAKmrB,OAAO,IAAInC,GAAS,CACrB9lB,KAAM+nB,EACNhC,UAAWiC,EACXhC,QAASriB,OAxJrB,CAAArG,IAAA,cAAAC,MAAA,SA4JgBiE,GACR1E,KAAK6pB,OAAOuB,YAAY1mB,EAAQ2mB,aAAcrrB,KAAK8pB,QA7J3D,CAAAtpB,IAAA,OAAAC,MAAA,SAgKSyC,EAAcqmB,GACf,IAAM7kB,EAAU,IAAI4kB,GAAQ,CAAEpmB,OAAMqmB,UAASC,QAASxpB,KAAKgD,KAC3DhD,KAAKsrB,YAAY5mB,KAlKzB,CAAAlE,IAAA,cAAAC,MAAA,SAqKgBiE,EAAkBomB,GAC1B9qB,KAAKgqB,iBAAiBhR,IAAI,aAAc,CACpCoQ,QAAS,IAAIpU,KACb8V,QAASA,IAGb9qB,KAAKsrB,YAAY5mB,KA3KzB,CAAAlE,IAAA,UAAAC,MAAA,SA8KYyC,EAAcqmB,GAAkB,IAAAplB,EAAAnE,KACpC,OAAO,IAAIsV,QAAQ,SAAC8E,EAASC,GACzB,IACIlW,EAAKonB,YAAY,IAAIjC,GAAQ,CAAEpmB,OAAMqmB,UAASC,QAASrlB,EAAKnB,KAAO,SAACsR,GAChE8F,EAAQ9F,KAEd,MAAOgG,GACLD,EAAOC,QArLvB,CAAA9Z,IAAA,eAAAC,MAAA,WA0LmB,IAAA+X,EAAAxY,KACX6pB,OAAO2B,WAAW,WACd,IAAMC,GAAM,IAAIzW,MAAOC,UADHyW,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIpB,IAJoB,IAIpBC,EAJoBC,EAAA,eAAA1V,EAAAyV,EAAArrB,MAIRuC,GAJQuT,EAAAzW,OAAAkX,GAAA,EAAAlX,CAAAuW,EAAA,OAwBY,IAxBZE,EAAA,GAKe1K,OAAO,SAACmf,GACnC,GAAIA,aAAoB7B,GAAiB,CACrC,IAAM6C,EAAUP,EAAMT,EAAS5B,QAAQnU,UACvC,GAAI+W,EAAUhB,EAAS3B,QAAS,CAC5B,IACQ2B,EAAS9B,SACT8B,EAAS9B,QAAQ,IAAI3U,MAAM,gBAAkByX,IAEnD,MAAO1R,GACLpF,QAAQrO,MAAM,8BAA+B7D,EAAIsX,GAErD,OAAO,EAEP,OAAO,EAGX,OAAO,IAGEjY,QACbmW,EAAKyR,iBAAiBY,OAAO7nB,IArBrCipB,EAA8BzT,EAAKyR,iBAAiBiC,UAApDC,OAAAC,cAAAV,GAAAI,EAAAG,EAAAI,QAAAC,MAAAZ,GAAA,EAA+D,KAAAnV,EAAAwV,KAJ3C,MAAAvO,GAAAmO,GAAA,EAAAC,EAAApO,EAAA,YAAAkO,GAAA,MAAAO,EAAAM,QAAAN,EAAAM,SAAA,WAAAZ,EAAA,MAAAC,GA6BhBpT,EAAKyR,iBAAiBjF,KAAO,GAC7BxM,EAAKgU,gBAEV,OA3NX,CAAAhsB,IAAA,aAAAC,MAAA,SA8NeuqB,GACFhrB,KAAKiqB,iBAAiB/P,IAAI8Q,EAAS9nB,OACpClD,KAAKiqB,iBAAiBjR,IAAIgS,EAAS9nB,KAAM,IAE7ClD,KAAKiqB,iBAAiBzQ,IAAIwR,EAAS9nB,MAAOqU,KAAKyT,GAC3CA,EAAS3B,SACTrpB,KAAKwsB,iBApOjB,CAAAhsB,IAAA,OAAAC,MAAA,SAwOSyC,EAAcgoB,EAAqCrkB,GACpD7G,KAAKysB,WAAW,IAAItD,GAAgB,CAChCjmB,KAAMA,EACN+lB,UAAWiC,EACXhC,QAASriB,OA5OrB,CAAArG,IAAA,OAAAC,MAAA,SAgPSyC,EAAcmmB,GAAiB,IAAA7O,EAAAxa,KAChC,OAAO,IAAIsV,QAAQ,SAAC8E,EAASC,GACzB,OAAOG,EAAKiS,WAAW,IAAItD,GAAgB,CACvCjmB,KAAMA,EACNmmB,QAASA,EACTJ,UAAW,SAACM,GACRnP,EAAQmP,IAEZL,QAAS,SAACriB,GACNwT,EAAOxT,WAzP3B,CAAArG,IAAA,QAAAC,MAAA,WAgQQ,MAAO,CACHisB,KAAM1sB,KAAKoqB,UACXuC,SAAU3sB,KAAKqqB,iBAlQ3B,CAAA7pB,IAAA,SAAAC,MAAA,SAsQWopB,GACH7pB,KAAK6pB,OAASA,IAvQtB,CAAArpB,IAAA,QAAAC,MAAA,WA0QY,IAAAia,EAAA1a,KACJA,KAAK0qB,gBAAkB,SAAChmB,GACpBgW,EAAKkS,eAAeloB,IAExB1E,KAAK6pB,OAAOgD,iBAAiB,UAAW7sB,KAAK0qB,iBAAiB,KA9QtE,CAAAlqB,IAAA,OAAAC,MAAA,WAkRYT,KAAK0qB,iBACL1qB,KAAK6pB,OAAOiD,oBAAoB,UAAW9sB,KAAK0qB,iBAAiB,OAnR7Ed,EAAA,GCtBemD,cA5BX,SAAAA,IAAejtB,OAAAC,EAAA,EAAAD,CAAAE,KAAA+sB,GACX/sB,KAAKyT,OAAS,KAIdzT,KAAKwpB,QAAU,IAAII,GAAQ,CACvBC,OAAQA,OACRC,KAAMzH,SAASC,SAAUF,2EAM7B,MAAO,CACH2H,UAAW/pB,KAAKwpB,QAAQxmB,GACxBgqB,QAASC,OACTxZ,OAAQ,CACJmD,iBAAkB,kBAClBQ,sBAAuB,4BACvB6H,oBAAqB,eAEzBiO,WAAY7K,SAASC,SAAUF,iBC5C9B+K,GAAb,oBAAAA,IAAArtB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmtB,GAAA,OAAArtB,OAAAS,EAAA,EAAAT,CAAAqtB,EAAA,EAAA3sB,IAAA,sBAAAC,MAAA,WAEQ,IAAKopB,OAAOuD,aACR,OAAO,KAEX,IAAKvD,OAAOuD,aAAaC,aAAa,eAElC,OAAO,KAEX,IAAM5Z,EAASoW,OAAOuD,aAAaE,aAAa,eAChD,OAAe,OAAX7Z,EAEO,KAEJS,KAAKqZ,MAAMC,mBAAmB/Z,QAd7C0Z,EAAA,GCgBO,SAASpf,GAAWD,GACvB,MAAO,CACH3M,KAAMyE,EAAWgI,YACjBE,OAAQA,cCyBD2f,eA5CX,SAAAA,EAAY7tB,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAytB,IACtC5tB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2tB,GAAAttB,KAAAH,KAAMJ,KAIDA,MAAM8tB,aAL2B7tB,wEAYtC,OAAIG,KAAKJ,MAAMuH,SAAWzB,EAASrE,KAE3BT,EAAA,qBAAK2B,UAAU,oBAAf,cAMA3B,EAAA,qBAAK2B,UAAU,oBACVvC,KAAKJ,MAAMqP,iBAtBDrK,aCyBhBC,mBAfR,SAAyBzE,EAAyBR,GAErD,MAAO,CACHuH,OAFwB/G,EAApByN,IAAO1G,SAMZ,SAA4BuX,GAC/B,MAAO,CACHgP,WAAY,WACRhP,EFcD,SAACA,EAAyDC,GAE7D,IAAMgP,GAAe,IAAIR,IAAoBS,sBAE7C,GAAID,EACAjP,EAAS3Q,GAAW,CAChB8f,QAAS,GACT/O,SAAU,CACNC,OAAQ,CACJ7L,IAAKya,EAAala,OAAOmD,kBAE7BoI,YAAa,CACT9L,IAAKya,EAAala,OAAO2D,uBAE7B8H,UAAW,CACPhM,IAAKya,EAAala,OAAO2D,+BAIlC,CACH,IAAM0W,GAAmB,IAAIf,IAAkBa,sBAC/ClP,EAAS3Q,GAAW,CAChB8f,QAAS,GACT/O,SAAU,CACNC,OAAQ,CACJ7L,IAAK4a,EAAiBra,OAAOmD,kBAEjCoI,YAAa,CACT9L,IAAK4a,EAAiBra,OAAO2D,uBAEjC8H,UAAW,CACPhM,IAAK4a,EAAiBra,OAAOwL,+BExCtCpa,CAAoG4oB,ICgH5G,SAAS1e,GAAoB+G,GAChC,OAAO,SAAC4I,EAAmDC,GAA+B,IAAAC,EAE9DD,IAF8DE,EAAAD,EAC9E5S,KAAQC,cAAiBgB,EADqD4R,EACrD5R,MAAO5J,EAD8Cwb,EAC9Cxb,SAC7ByK,EAF2E8Q,EAElF/Q,IAAOC,OACL0R,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAInDoC,QAAQC,IAAI,CACRiK,EAAML,OAAOrJ,GACb0J,EAAMrF,wBAAwBrE,KAE7BzB,KAAK,SAAApB,GAA8B,IAAAoC,EAAAvV,OAAAkX,GAAA,EAAAlX,CAAAmT,EAAA,GAA5B7H,EAA4BiK,EAAA,GAAdhH,EAAcgH,EAAA,GAChCH,QAAQC,IAAI,gBAAiB9G,GAC7BqQ,EAnCT,SAAoCtT,EAA4BiD,GACnE,MAAO,CACHlN,KAAMyE,EAAWsI,8BACjB9C,aAAcA,EACdiD,SAAUA,GA+BOC,CAA2BlD,EAAciD,MAErDkP,MAAM,SAACC,GA7Bb,IAAkC3W,EA8BzB6X,GA9ByB7X,EA8BS,CAC9BuY,KAAM5B,EAAIta,KACVwB,QAAS8Y,EAAI9Y,SA/BtB,CACHvD,KAAMyE,EAAW2I,4BACjB1H,MAAOA,QAmCR,SAASknB,GAAqCzX,GACjD,OAAO,SAACoI,EAAmDC,GAA+B,IAAAW,EAI9DX,IAJ8DY,EAAAD,EAElFtT,KAAQC,cAAiBgB,EAFyDsS,EAEzDtS,MAAO5J,EAFkDkc,EAElDlc,SAChC8K,EAHkFmR,EAGlFnR,wBACOL,EAJ2EwR,EAIlFzR,IAAOC,OACL0R,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAG9C/E,GAILmH,QAAQC,IAAI,CACRiK,EAAM5B,cAActH,KAEnBjC,KAAK,SAAAgC,GAAe,IAAba,EAAapX,OAAAkX,GAAA,EAAAlX,CAAAuW,EAAA,MACjBqI,EAzIT,SAAqDxH,GACxD,MAAO,CACH/V,KAAMyE,EAAWooB,kDACjB9W,QAASA,GAsIQ+W,CAA4C/W,IACjD/I,EAAwBC,MACxBsQ,EAAS3P,GAAoBZ,EAAwBC,KAAKhD,aAAapI,OAG9Eua,MAAM,SAACC,GAvIb,IAAmD3W,EAwI1C6X,GAxI0C7X,EAwIS,CAC/CuY,KAAM5B,EAAIta,KACVwB,QAAS8Y,EAAI9Y,SAzItB,CACHvD,KAAMyE,EAAWsoB,gDACjBrnB,MAAOA,QA6IR,SAASsnB,GAAmC7X,GAC/C,OAAO,SAACoI,EAAmDC,GAA+B,IAAAkB,EAI9DlB,IAJ8DmB,EAAAD,EAElF7T,KAAQC,cAAiBgB,EAFyD6S,EAEzD7S,MAAO5J,EAFkDyc,EAElDzc,SAChC8K,EAHkF0R,EAGlF1R,wBACOL,EAJ2E+R,EAIlFhS,IAAOC,OACL0R,EAAQ,IAAI/I,GAAM,CACpBxJ,QAAO5J,WACPuT,iBAAkB9I,EAAOgR,SAASC,OAAO7L,IACzCkE,sBAAuBtJ,EAAOgR,SAASE,YAAY9L,IACnD+L,oBAAqBnR,EAAOgR,SAASI,UAAUhM,MAG9C/E,GAILmH,QAAQC,IAAI,CACRiK,EAAM1B,YAAYxH,KAEjBjC,KAAK,SAAAmC,GAAe,IAAbU,EAAapX,OAAAkX,GAAA,EAAAlX,CAAA0W,EAAA,MACjBkI,EAhIT,SAAmDxH,GACtD,MAAO,CACH/V,KAAMyE,EAAWwoB,gDACjBlX,QAASA,GA6HQmX,CAA0CnX,IAC/C/I,EAAwBC,MACxBsQ,EAAS3P,GAAoBZ,EAAwBC,KAAKhD,aAAapI,OAG9Eua,MAAM,SAACC,GA9Hb,IAAiD3W,EA+HxC6X,GA/HwC7X,EA+HS,CAC7CuY,KAAM5B,EAAIta,KACVwB,QAAS8Y,EAAI9Y,SAhItB,CACHvD,KAAMyE,EAAW0oB,8CACjBznB,MAAOA,uCC2QA0nB,eArWX,SAAAA,EAAY3uB,GAAiC,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuuB,IACzC1uB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyuB,GAAApuB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT8hB,iBAAiB,EACjBoF,gBAAgB,GAGpBpS,QAAQC,IAAI,QAASvV,GACrBC,EAAKD,MAAM4uB,QAAQ3uB,EAAKD,MAAMuJ,gBATWtJ,wFAazCG,KAAKuQ,SAAS,CAAE2R,iBAAiB,oDAIjCliB,KAAKuQ,SAAS,CAAE+W,gBAAgB,gDAEhBhR,GACVtW,KAAKJ,MAAMuO,yBAA2BnO,KAAKJ,MAAMuO,wBAAwBC,MAG/EpO,KAAKJ,MAAM6uB,oBAAoBnY,6CAEjBA,GACRtW,KAAKJ,MAAMuO,yBAA2BnO,KAAKJ,MAAMuO,wBAAwBC,MAG/EpO,KAAKJ,MAAM8uB,kBAAkBpY,yCAEnBjT,GACVwmB,OAAO8E,KAAK,WAAatrB,EAAU,+CAGnC4M,IAAMC,KAAK,CACPvO,MAAO,uBACPb,MAAO,OACPqP,QACIvP,EAAA,yBACIA,EAAA,wGAMZ,IAAI0jB,EAMJ,OAJIA,EADAtkB,KAAKJ,MAAMuO,yBAA2BnO,KAAKJ,MAAMuO,wBAAwBC,KAC/DpO,KAAKJ,MAAMuO,wBAAwBC,KAAKhD,aAAalI,KAErD,aAGVtC,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,0BACIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SACV,IAFL,8BAIKmjB,EAJL,MAQJ1jB,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOuC,eAAgB,WAAYtC,WAAY,WAC1G9O,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTH,KAAK,SACLuQ,QAAS1R,KAAKynB,sBAAsB1W,KAAK/Q,OAF7C,sBAKAY,EAAA,cAACwQ,EAAA,EAAD,CAAQ9P,KAAK,OACTH,KAAK,SACLuQ,QAAS1R,KAAKwkB,uBAAuBzT,KAAK/Q,OAF9C,0BAKAY,EAAA,cAACwQ,EAAA,EAAD,CACIa,MAAM,SACN3Q,KAAK,OACLoQ,QAAS1R,KAAKkS,WAAWnB,KAAK/Q,yDASlD,OACIY,EAAA,cAACgR,GAAD,KACIhR,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,UAAWE,QAAS,OAAQC,cAAe,MAAOC,WAAY,WAC9E9O,EAAA,qBAAKC,MAAO,CAAEyO,KAAM,aAChB1O,EAAA,gGASFO,GACd,OAAQA,GACJ,KAAKC,EAAkBwW,mBACnB,MAAO,qBACX,KAAKxW,EAAkBwtB,kBACnB,MAAO,wBACX,KAAKxtB,EAAkBytB,sBACnB,MAAO,wBACX,KAAKztB,EAAkB0tB,qBACnB,MAAO,gEAIPC,GACR,IAKIC,EAASC,EAAYC,EALnBC,EAAU,IAAIna,KAEdgX,EAAU1Y,KAAK8b,OAAOD,EAAQla,UAAY8Z,EAAS9Z,WAAa,KAChEoa,EAAa/b,KAAKgc,IAAItD,GAI5B,GAAIqD,EAAa,OAAwB,CACrC,GAAmB,IAAfA,EACA,MAAO,MACAA,EAAa,IACpBL,EAAUhD,EACViD,EAAaI,EACbH,EAAO,UACAG,EAAa,MACpBL,EAAU1b,KAAK8b,MAAMpD,EAAU,IAC/BiD,EAAa3b,KAAK8b,MAAMC,EAAa,IACrCH,EAAO,UACAG,EAAa,OACpBL,EAAU1b,KAAK8b,MAAMpD,EAAU,MAC/BiD,EAAa3b,KAAK8b,MAAMC,EAAa,MACrCH,EAAO,SAEPF,EAAU1b,KAAK8b,MAAMpD,EAAO,OAC5BiD,EAAa3b,KAAK8b,MAAMC,EAAU,OAClCH,EAAO,OAGPD,EAAa,IACbC,GAAQ,KAGZ,IAAIK,EAAS,KACTC,EAAS,KAOb,OANIR,EAAU,EACVO,EAAS,KACFP,EAAU,IACjBQ,EAAS,QAGLD,EAASA,EAAS,IAAM,IAAMN,EAAa,IAAMC,GAAQM,EAAS,IAAMA,EAAS,IAGzF,OAAIL,EAAQM,gBAAkBN,EAAQM,cAC3BjsB,KAAKC,eAAe,QAAS,CAChCC,MAAO,QACPC,IAAK,YACNE,OAAOkrB,GAGHvrB,KAAKC,eAAe,QAAS,CAChCC,MAAO,QACPC,IAAK,UACLC,KAAM,YACPC,OAAOkrB,oDAMG7X,GAA6B,IAAA/S,EAAAnE,KAC5C2B,EACFf,EAAA,0BACIA,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SACXP,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,gBACXP,EAAA,cAACU,EAAA,EAAD,CAAMH,KAAK,SACV,IAJL,yBAQEqf,EAAU,CACZ5f,EAAA,cAACwQ,EAAA,EAAD,CACIjQ,KAAK,UACLN,MAAO,CAAE4D,OAAQ,SACjBiN,QAAS,kBAAMvN,EAAKsqB,oBAAoBtuB,KAAKgE,EAAM+S,EAAQlU,MAH/D,WAMApC,EAAA,cAACwQ,EAAA,EAAD,CACIjQ,KAAK,SACLN,MAAO,CAAE4D,OAAQ,SACjBiN,QAAS,kBAAMvN,EAAKuqB,kBAAkBvuB,KAAKgE,EAAM+S,EAAQlU,MAH7D,SAaJ,OACIpC,EAAA,cAAC8uB,GAAA,EAAD,CAAMlvB,IAAK0W,EAAQlU,GACfrB,MAAOA,EACPguB,WAAW,EACXnP,QAASA,EACToP,UAAW,CAAEC,gBAAiB,0BAC9BhvB,MAAO,CAAE2iB,aAAc,SACvB5iB,EAAA,uBAAO2B,UAAU,wBACb3B,EAAA,wBACIA,EAAA,gCACAA,EAAA,oBAAI2B,UAAU,aACV3B,EAAA,cAACilB,GAAD,CAAMvM,KAAMpC,EAAQG,UAAW8N,WAAY,OAGnDvkB,EAAA,wBACIA,EAAA,gCACAA,EAAA,oBAAI2B,UAAU,aAAaiB,KAAKC,eAAe,QAAS,CACpDC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAOqT,EAAQpT,aAEtBlD,EAAA,wBACIA,EAAA,mCACAA,EAAA,oBAAI2B,UAAU,aAAaiB,KAAKC,eAAe,QAAS,CACpDC,MAAO,OACPC,IAAK,UACLC,KAAM,YACPC,OAAOqT,EAAQgB,UAJlB,KAI+BlY,KAAK8vB,YAAY5Y,EAAQgB,UAJxD,wDAWIhB,GACpB,OACItW,EAAA,sGAIsBsW,GAC1B,OACItW,EAAA,qGAIqBsW,GACzB,OACItW,EAAA,sFAIMsW,GACV,OAAQA,EAAQ/V,MACZ,KAAKC,EAAkBwW,mBACnB,OAAO5X,KAAK+vB,yBAAyB7Y,GACzC,KAAK9V,EAAkBwtB,kBACnB,OAAO5uB,KAAKgwB,wBAAwB9Y,GACxC,KAAK9V,EAAkBytB,sBACnB,OAAO7uB,KAAKiwB,8BAA8B/Y,GAC9C,KAAK9V,EAAkB0tB,qBACnB,OAAO9uB,KAAKkwB,6BAA6BhZ,6CAyCpC,IAAAsB,EAAAxY,KACb,GAAMA,KAAKJ,MAAMuO,yBAA2BnO,KAAKJ,MAAMuO,wBAAwBC,KAG/E,OAAgE,IAA5DpO,KAAKJ,MAAMuO,wBAAwBC,KAAKC,SAAShM,OAE7CzB,EAAA,mBAAGC,MAAO,CAAE8kB,UAAW,SAAUwK,QAAS,SAA1C,6CAKDnwB,KAAKJ,MAAMuO,wBAAwBC,KAAKC,SAAShK,IAAI,SAAC6S,GACzD,OAAOsB,EAAK4X,cAAclZ,sCAM9B,OAAIlX,KAAKI,MAAM8hB,gBACJthB,EAAA,cAACyvB,GAAA,EAAD,CAAU9Y,MAAI,EAACzU,GAAG,mBAGzB9C,KAAKI,MAAMknB,eACJ1mB,EAAA,cAACyvB,GAAA,EAAD,CAAU9Y,MAAI,EAACzU,GAAI,qBAAuB9C,KAAKJ,MAAMuJ,iBAI5DvI,EAAA,qBAAK2B,UAAU,uBACVvC,KAAK4S,eACNhS,EAAA,qBAAK2B,UAAU,OACX3B,EAAA,qBAAK2B,UAAU,cACX3B,EAAA,oDACAA,EAAA,qBAAK2B,UAAU,mBACVvC,KAAKswB,mBAGd1vB,EAAA,qBAAK2B,UAAU,cACX3B,EAAA,2CACAA,EAAA,uCACAA,EAAA,sMA5VUgE,aCuBnBC,mBAvBf,SAAyBzE,EAAyBR,GAI9C,MAAO,CACHuO,wBAFA/N,EADA+N,0BAOD,SAA4BuQ,GAC/B,MAAO,CACH8P,QAAS,SAACrlB,GACNuV,EAAS8B,GAA4BrX,KAEzCslB,oBAAqB,SAACnY,GAClBoI,EAAS8B,GAA6ClK,KAE1DoY,kBAAmB,SAACpY,GAChBoI,EAAS8B,GAA2ClK,OAKjDzR,CAAoG0pB,IC1CtGgC,GAAb,oBAAAA,IAAAzwB,OAAAC,EAAA,EAAAD,CAAAE,KAAAuwB,GAAA,OAAAzwB,OAAAS,EAAA,EAAAT,CAAAywB,EAAA,OAAA/vB,IAAA,mBAAAC,MAAA,WAEQ,MAAO,CACHoF,WAAY,CACR2qB,iBAAkB,GAClBpsB,cAAe,GACfiI,WAAY,EACZC,cAAe,EACfR,OAAQ,OACRC,cAAepG,EAAc8M,UAC7B5G,OAAQ,MACRxL,YAAa,GACbowB,uBAAwB,KACxBvkB,WAAW,GAGfF,KAAM,CACF7E,OAAQjC,EAAU7D,KAClBqD,QAAS,GACTuH,cAAe,CACXgB,MAAO,GACP5J,SAAU,GACVE,SAAU,GACV2J,MAAO,KAGfrG,MAAO,KAEPgH,IAAK,CACD1G,OAAQzB,EAASrE,KACjByM,OAAQ,CACJ+f,QAAS,GACT/O,SAAU,CACNC,OAAQ,CACJ7L,IAAK,IAET8L,YAAa,CACT9L,IAAK,IAETgM,UAAW,CACPhM,IAAK,OAKrBhN,OAAQ,CACJK,UAAWlB,EAAUhE,KACrB8E,UAAWb,EAAUjE,KACrB2F,gBAAiBzB,EAAgBlE,KACjC6F,gBAAiBkX,GAAWsS,iCAEhC5J,UAAW,CACP6J,SAAS,GAEb5lB,QAAS,CACL3K,MAAOqF,EAAapE,MAExB6H,QAAS,CACLC,eAAgB,GAChB5C,UAAWlB,EAAUhE,KACrB8E,UAAWb,EAAUjE,KACrB2F,gBAAiBzB,EAAgBlE,KACjC+H,mBAAoBgV,GAAWsS,iCAEnCviB,wBAAyB,UAhErCoiB,EAAA,GCcAK,IAAQC,IAAIC,IAAWC,KAiBvB,IAAM3I,KAASyB,OAAOuD,aAIhB4D,GAAeT,GAAeU,mBAM9BC,GAAQC,YAAYC,EAAmBJ,GAAqBK,YAAQC,YAAgBC,OAgC3EC,eA7Bb,SAAAA,EAAY5xB,GAAa,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwxB,GAAA1xB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0xB,GAAArxB,KAAAH,KACjBJ,0EAIN,OACE6xB,EAAA5X,EAAA6X,cAACC,EAAA,EAAD,CAAUT,MAAOA,IACfO,EAAA5X,EAAA6X,cAACE,GAAD,CAAMxJ,OAAQA,IACZqJ,EAAA5X,EAAA6X,cAACG,GAAD,KACEJ,EAAA5X,EAAA6X,cAACI,EAAA,EAAD,CAAYC,SAAS,UACnBN,EAAA5X,EAAA6X,cAAA,OAAKnvB,UAAU,OACbkvB,EAAA5X,EAAA6X,cAAA,OAAKnvB,UAAU,YACbkvB,EAAA5X,EAAA6X,cAACM,EAAA,EAAD,CAAOvJ,KAAK,iBAAiBwJ,UAAWriB,KACxC6hB,EAAA5X,EAAA6X,cAACM,EAAA,EAAD,CAAOvJ,KAAK,mBAAmBwJ,UAAWhQ,KAE1CwP,EAAA5X,EAAA6X,cAACM,EAAA,EAAD,CAAOvJ,KAAK,wBAAwBwJ,UAAW,SAAAhf,GAAA,IAAsBjQ,EAAtBiQ,EAAGkL,MAAS1K,OAAUzQ,GAAtB,OAA0EyuB,EAAA5X,EAAA6X,cAACQ,GAAD,CAAkBlvB,GAAIA,OAC/IyuB,EAAA5X,EAAA6X,cAACM,EAAA,EAAD,CAAOvJ,KAAK,wBAAwBwJ,UAAW,SAAA5c,GAAA,IAAsBrS,EAAtBqS,EAAG8I,MAAS1K,OAAUzQ,GAAtB,OAA0EyuB,EAAA5X,EAAA6X,cAACS,GAAD,CAAkBnvB,GAAIA,OAC/IyuB,EAAA5X,EAAA6X,cAACM,EAAA,EAAD,CAAOvJ,KAAK,2BAA2BwJ,UAAW,SAAA5b,GAAA,IAAsBrT,EAAtBqT,EAAG8H,MAAS1K,OAAUzQ,GAAtB,OAA0EyuB,EAAA5X,EAAA6X,cAACU,GAAD,CAAqBjpB,eAAgBnG,OACjKyuB,EAAA5X,EAAA6X,cAACjN,EAAA,EAAD,CAAU1J,KAAK,IAAIjY,GAAG,iBAAiBuvB,OAAO,iBAnB9CC,kCCrClBC,IAASC,OAAOf,EAAA5X,EAAA6X,cAACe,GAAD,MAASpQ,SAASqQ,eAAe","file":"static/js/main.3e56a59e.chunk.js","sourcesContent":["import * as React from 'react';\nimport './Organizations.css';\nimport * as types from '../types';\nimport { NavLink } from 'react-router-dom';\nimport { Alert, Icon, Tooltip } from 'antd';\nimport { Organization } from '../types';\n\n// TODO: need more ergonomic way to resolve the common issue of data types interfering with \n// component types.\n\nexport interface OrganizationsProps {\n    organizations: Array<Organization>\n}\n\nexport interface OrganizationsState {\n    searchTerms: Array<string>\n}\n\nexport class Organizations extends React.Component<OrganizationsProps, OrganizationsState> {\n\n    constructor(props: OrganizationsProps) {\n        super(props)\n\n        this.state = {\n            searchTerms: []\n        }\n    }\n\n    getAvatarUrl(org: Organization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderAvatar(org: Organization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getAvatarUrl(org)} />\n        )\n    }\n\n    renderRelation(org: Organization) {\n        switch (org.relation.type) {\n            case (types.UserRelationToOrganization.NONE):\n                return (\n                    <span><Icon type=\"stop\" />None</span>\n                )\n            case (types.UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org, but you may access it; you may request membership\"\n                    >\n                        <span><Icon type=\"eye\" />View</span>\n                    </Tooltip>\n                )\n            case (types.UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (<span><Icon type=\"user\" style={{ color: 'orange' }} />Your membership request is pending</span>)\n            case (types.UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (<span><Icon type=\"user\" style={{ color: 'blue' }} />You have been invited to join</span>)\n            case (types.UserRelationToOrganization.MEMBER):\n                return (<span><Icon type=\"user\" />Member</span>)\n            case (types.UserRelationToOrganization.ADMIN):\n                return (<span><Icon type=\"unlock\" />Admin</span>)\n            case (types.UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You own this org\"\n                    >\n                        <span><Icon type=\"unlock\" theme=\"filled\" />Owner</span>\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderAdminInfo(org: Organization) {\n        if (!(org.relation.type === types.UserRelationToOrganization.OWNER ||\n            org.relation.type === types.UserRelationToOrganization.ADMIN)) {\n            return\n        }\n        let requestsPending\n        if (org.adminRequests.length > 0) {\n            requestsPending = (\n                <div>\n                    <Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"orange\" />  group has <b>{org.adminRequests.length} pending request{org.adminRequests.length > 1 ? 's' : ''}</b>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"admin\">\n                {requestsPending}\n            </div>\n        )\n    }\n\n    pluralize(count: number, singular: string, plural: string) {\n        if (count === 0 || count > 1) {\n            return plural\n        }\n        return singular\n    }\n\n    renderOrg(org: Organization, index: Number) {\n        return (\n            <div className=\"row organization\" key={String(index)}>\n                <div className=\"col2\">\n                    <NavLink to={`/viewOrganization/${org.id}`}>\n                        {this.renderAvatar(org)}\n                    </NavLink>\n                </div>\n                <div className=\"col1\">\n                    <div className=\"orgName\">\n                        <NavLink to={`/viewOrganization/${org.id}`}>\n                            {org.name}\n                        </NavLink>\n                    </div>\n                    <div className=\"orgOwner\">\n                        <span className=\"field-label\">owner</span>\n                        <span className=\"field-value\"><a href={\"/#people/\" + org.owner.username} target=\"_blank\">{org.owner.realname} ❨{org.owner.username}❩</a></span>\n\n                    </div>\n                    <div className=\"orgCreated\">\n                        <span className=\"field-label\">established</span>\n                        <span className=\"field-value\">{Intl.DateTimeFormat('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                        }).format(org.createdAt)}</span>\n                    </div>\n                    <div className=\"memberCount\">\n                        {org.members.length > 0 ? org.members.length : 'no'} {this.pluralize(org.members.length, 'member', 'members')}\n                    </div>\n                    <div className=\"relation\">\n                        <span className=\"field-label\">you</span>\n                        {this.renderRelation(org)}\n                    </div>\n                    {this.renderAdminInfo(org)}\n                </div>\n            </div>\n        )\n    }\n\n    renderOrgs() {\n        if (this.props.organizations.length > 0) {\n            return (\n                this.props.organizations.map((org: Organization, index) => {\n                    return (\n                        this.renderOrg(org, index)\n                    )\n                })\n            )\n        } else {\n            return (\n                <Alert type=\"warning\"\n                    style={{ maxWidth: '20em', margin: '20px auto 0 auto' }}\n                    message=\"Sorry, no organizations were found.\" />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Organizations\">\n                {this.renderOrgs()}\n            </div>\n        )\n    }\n}\n\nexport default Organizations;","import { Organizations, OrganizationsProps } from '../components/Organizations';\nimport { StoreState } from '../types';\nimport { connect } from 'react-redux';\n\nexport function mapStateToProps(state: StoreState): OrganizationsProps {\n    const { browseOrgs: { organizations } } = state;\n    return {\n        organizations\n    }\n}\n\nexport default connect(mapStateToProps)(Organizations);","import { ViewOrganizationState } from \"../components/ViewOrganization\";\nimport { types } from \"util\";\nimport Organizations from \"../containers/Organizations\";\n\n/* Types from the organization service (approximately) */\n\n/*\n    Organization\n*/\n\nexport interface OrganizationUpdate {\n    name: string\n    gravatarHash: string | null\n    description: string\n}\n\nexport enum UIErrorType {\n    NONE = 0,\n    INFO,\n    WARNING,\n    ERROR\n}\n\nexport interface UIError {\n    type: UIErrorType,\n    message?: string\n}\n\nexport interface EditableOrganization {\n    id: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    name: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n    gravatarHash: {\n        value: string | null\n        status: FieldState\n        error: UIError\n    }\n    description: {\n        value: string,\n        status: FieldState,\n        error: UIError\n    }\n}\n\nexport interface UserBase {\n    username: string\n    realname: string\n    organization: string\n    city: string\n    state: string\n    country: string\n    avatarOption: string\n    gravatarHash: string\n    gravatarDefault: string\n}\n\nexport interface User extends UserBase {\n\n}\n\nexport interface Owner extends UserBase {\n\n}\n\nexport interface Member extends UserBase {\n\n}\n\nexport interface Admin extends UserBase {\n\n}\n\nexport enum UserRelationToOrganization {\n    NONE = 0,\n    VIEW,\n    MEMBER_REQUEST_PENDING,\n    MEMBER_INVITATION_PENDING,\n    MEMBER,\n    ADMIN,\n    OWNER\n}\n\nexport interface UserOrgRelation {\n    type: UserRelationToOrganization\n}\n\nexport interface NoRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.NONE\n}\n\nexport interface ViewRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.VIEW\n}\n\nexport interface MembershipRequestPendingRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER_REQUEST_PENDING,\n    requestId: string\n}\n\nexport interface MembershipInvitationPendingRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER_INVITATION_PENDING,\n    requestId: string\n}\n\nexport interface MemberRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.MEMBER\n}\n\nexport interface AdminRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.ADMIN\n}\n\nexport interface OwnerRelation extends UserOrgRelation {\n    type: UserRelationToOrganization.OWNER\n}\n\nexport interface BriefOrganization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    owner: {\n        username: string\n        realname: string\n    },\n    relation: UserRelationToOrganization,\n    createdAt: Date\n    modifiedAt: Date\n}\n\nexport enum RequestType {\n    JOIN_GROUP_REQUEST = 0,\n    JOIN_GROUP_INVITE,\n    ADD_WORKSPACE_INVITE,\n    ADD_WORKSPACE_REQUEST\n}\n\nexport enum RequestStatus {\n    OPEN = 0,\n    CANCELED,\n    EXPIRED,\n    ACCEPTED,\n    DENIED\n}\n\nexport type Username = string\n\nexport interface GroupRequest {\n    id: string,\n    groupId: string,\n    requester: User,\n    type: RequestType,\n    status: RequestStatus,\n    subjectUser: User | null,\n    subjectWorkspaceId: number | null,\n    createdAt: Date,\n    expireAt: Date,\n    modifiedAt: Date\n}\n\nexport interface Organization {\n    id: string\n    name: string\n    gravatarHash: string | null\n    description: string\n    owner: Owner\n    relation: UserOrgRelation\n    createdAt: Date\n    modifiedAt: Date,\n    members: Array<Member>,\n    admins: Array<Admin>,\n    adminRequests: Array<GroupRequest>\n}\n\nexport interface EditedOrganization {\n    id: {\n        value: string,\n        error?: UIError\n    }\n    name: {\n        value: string,\n        error?: UIError\n    }\n    description: {\n        value: string,\n        error?: UIError\n    }\n}\n\n/*\n    Collection of organizations\n*/\n\nexport type Organizations = Array<Organization>\n\n\n/* REDUX */\n\nexport enum AuthState {\n    NONE = 0,\n    CHECKING,\n    AUTHORIZED,\n    UNAUTHORIZED,\n    ERROR\n}\n\nexport interface UserAuthorization {\n    token: string,\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\n\nexport interface Authorization {\n    status: AuthState,\n    message: string,\n    authorization: UserAuthorization\n}\n\n// export enum Filter {\n//     All = 1,\n//     Yours\n// }\n\n\nexport enum EditOrgState {\n    NONE = 0,\n    FETCHING,\n    READY,\n    EDITING_CAN_SAVE,\n    EDITING_ERRORS,\n    SAVING,\n    SAVED,\n    ERROR\n}\n\n// export enum AddOrgState {\n//     NONE = 0,\n//     READY,\n//     UNEDITED_OK,\n//     UNEDITED_\n//     EDITED_OK,\n//     EDITED_ERRORS,\n//     SAVING,\n//     SAVED,\n//     ERROR\n// }\n\nexport enum SyncState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    DIRTY = 'DIRTY',\n    CLEAN = 'CLEAN'\n}\n\nexport enum EditState {\n    NONE = 'NONE',\n    UNEDITED = 'UNEDITED',\n    EDITED = 'EDITED'\n}\n\n// TODO: or CLEAN to replace new and saved\nexport enum SaveState {\n    NONE = 'NONE',\n    NEW = 'NEW',\n    READY = 'READY',\n    SAVING = 'SAVING',\n    SAVED = 'SAVED',\n    SAVE_ERROR = 'SAVE_ERROR'\n}\n\nexport enum ValidationState {\n    NONE = 'NONE',\n    VALID = 'VALID',\n    INVALID = 'INVALID'\n}\n\nexport enum FieldState {\n    NONE = 0,\n    UNEDITED_OK,\n    UNEDITED_ERROR,\n    EDITED_OK,\n    EDITED_ERROR,\n    EDITED_WARNING\n}\n\nexport enum ViewOrgState {\n    NONE = 0,\n    INITIAL,\n    FETCHING,\n    READY,\n    ERROR\n}\n\nexport enum AppState {\n    NONE = 0,\n    LOADING,\n    READY,\n    ERROR\n}\n\nexport enum SortDirection {\n    ASCENDING = 'asc',\n    DESCENDING = 'desc'\n}\n\nexport interface ManageGroupRequestsView {\n    view: {\n        organization: Organization\n        requests: Array<GroupRequest>\n    } | null,\n    error: AppError | null\n}\nexport interface StoreState {\n    browseOrgs: {\n        rawOrganizations: Array<Organization>\n        organizations: Array<Organization>\n        totalCount: number\n        filteredCount: number\n        sortBy: string\n        sortDirection: SortDirection\n        filter: string\n        searchTerms: Array<string>\n        selectedOrganizationId: string | null\n        searching: boolean\n    }\n\n    auth: Authorization\n    error: AppError | null\n\n    app: {\n        status: AppState\n        config: AppConfig\n        error?: AppError\n    }\n    addOrg: {\n        editState: EditState\n        saveState: SaveState\n        validationState: ValidationState\n        newOrganization: EditableOrganization\n        error?: AppError\n    }\n    updateOrg: {\n        pending: boolean\n    }\n    viewOrg: {\n        state: ViewOrgState\n        organization?: Organization\n        error?: AppError\n    }\n    editOrg: {\n        organizationId: string\n        editState: EditState\n        saveState: SaveState\n        validationState: ValidationState\n        editedOrganization: EditableOrganization\n        error?: AppError\n    }\n    manageGroupRequestsView: ManageGroupRequestsView | null\n}\n\n/* COMPONENT PROPS */\n\n\n\n\n// ADD ORG\n\n\n\n\n// export interface EditOrganizationProps {\n//     id: string,\n//     state: EditOrgState\n//     organization?: Organization\n//     editedOrganization?: EditedOrganization\n//     error?: AppError\n//     onEditOrg: (id: string) => void\n//     onUpdateOrg: () => void\n//     onUpdateName: (name: string) => void,\n//     onUpdateDescription: (description: string) => void\n// }\n\n\nexport interface AppError {\n    code: string,\n    message: string\n}\n\nexport interface AppConfig {\n    baseUrl: string,\n    services: {\n        Groups: {\n            url: string\n        },\n        UserProfile: {\n            url: string\n        },\n        Workspace: {\n            url: string\n        }\n    }\n}\n\nexport interface AuthProps {\n    authorization: Authorization,\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n    hosted: boolean,\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport * as types from '../../types';\nimport { Model } from '../../data/model'\n\nexport enum ActionFlag {\n    APP = 1,\n    APP_START,\n    APP_SUCCESS,\n    // APP_SUCCESS_IFRAME,\n    // APP_SUCCESS_SOLO,\n    APP_ERROR,\n\n    SORT_ORGS,\n    SORT_ORGS_START,\n\n    FILTER_ORGS,\n    FILTER_ORGS_START,\n\n    SEARCH_ORGS,\n    SEARCH_ORGS_START,\n    SEARCH_ORGS_SUCCESS,\n    SEARCH_ORGS_ERROR,\n\n    UPDATE_ORG,\n    UPDATE_ORG_START,\n    UPDATE_ORG_SUCCESS,\n    UPDATE_ORG_ERROR,\n\n    // viewing org\n    VIEW_ORG_FETCH,\n    VIEW_ORG_FETCH_START,\n    VIEW_ORG_FETCH_SUCCESS,\n    VIEW_ORG_FETCH_ERROR,\n    VIEW_ORG_STOP,\n\n    // Joining and Such\n    VIEW_ORG_JOIN_REQUEST,\n    VIEW_ORG_JOIN_REQUEST_START,\n    VIEW_ORG_JOIN_REQUEST_SUCCESS,\n    VIEW_ORG_JOIN_REQUEST_ERROR,\n\n    VIEW_ORG_CANCEL_JOIN_REQUEST,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_START,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS,\n    VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n\n    // add org fields\n    ADD_ORG_EDIT,\n    ADD_ORG_EDIT_START,\n    ADD_ORG_EDIT_FINISH,\n\n    ADD_ORG_UPDATE_NAME,\n    ADD_ORG_UPDATE_NAME_SUCCESS,\n    ADD_ORG_UPDATE_NAME_ERROR,\n\n    ADD_ORG_UPDATE_GRAVATAR_HASH,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    ADD_ORG_UPDATE_ID,\n    ADD_ORG_UPDATE_ID_SUCCESS,\n    ADD_ORG_UPDATE_ID_ERROR,\n\n    ADD_ORG_UPDATE_DESCRIPTION,\n    ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    ADD_ORG_EVALUATE,\n    ADD_ORG_EVALUATE_OK,\n    ADD_ORG_EVALUATE_ERRORS,\n\n    ADD_ORG,\n    ADD_ORG_START,\n    ADD_ORG_SUCCESS,\n    ADD_ORG_ERROR,\n\n    // editing org\n    EDIT_ORG_EDIT,\n    EDIT_ORG_EDIT_START,\n    EDIT_ORG_EDIT_SUCCESS,\n    EDIT_ORG_EDIT_ERROR,\n\n    EDIT_ORG_SAVE,\n    EDIT_ORG_SAVE_START,\n    EDIT_ORG_SAVE_SUCCESS,\n    EDIT_ORG_SAVE_ERROR,\n\n    // edit org, field level updates\n    EDIT_ORG_UPDATE_NAME,\n    EDIT_ORG_UPDATE_NAME_SUCCESS,\n    EDIT_ORG_UPDATE_NAME_ERROR,\n\n    EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n\n    EDIT_ORG_UPDATE_DESCRIPTION,\n    EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n\n    EDIT_ORG_EVALUATE,\n    EDIT_ORG_EVALUATE_OK,\n    EDIT_ORG_EVALUATE_ERRORS,\n\n    // Auth\n    AUTH_CHECK,\n    AUTH_CHECK_START,\n    AUTH_CHECK_ERROR,\n    AUTH_AUTHORIZED,\n    AUTH_UNAUTHORIZED,\n    AUTH_REMOVE_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION,\n    AUTH_ADD_AUTHORIZATION_ERROR,\n\n    ADMIN_MANAGE_REQUESTS,\n    ADMIN_MANAGE_REQUESTS_START,\n    ADMIN_MANAGE_REQUESTS_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_START,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_ERROR,\n\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_START,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_SUCCESS,\n    ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_ERROR\n}\n\n\n","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    AddOrgEditStart, AddOrgEditFinish,\n    AddOrgUpdateNameSuccess, AddOrgUpdateNameError,\n    AddOrgUpdateIdSuccess, AddOrgUpdateIdError,\n    AddOrgUpdateDescriptionSuccess, AddOrgUpdateDescriptionError,\n    AddOrgError, AddOrgStart, AddOrgSuccess, AddOrgEvaluateOK, AddOrgEvaluateErrors, AddOrgUpdateGravatarHashError, AddOrgUpdateGravatarHashSuccess\n} from '../actions/addOrg'\n\n// ADD ORG\n\nexport function addOrgStart(state: StoreState, action: AddOrgStart): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function addOrgSuccess(state: StoreState, action: AddOrgSuccess): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function addOrgError(state: StoreState, action: AddOrgError): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function addOrgEvaluateOk(state: StoreState, action: AddOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function addOrgEvaluateErrors(state: StoreState, action: AddOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        addOrg: {\n            ...state.addOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\nexport function addOrgEditStart(state: StoreState, action: AddOrgEditStart) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            newOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgEditFinish(state: StoreState, action: AddOrgEditFinish) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// Name\nexport function addOrgUpdateNameSuccess(state: StoreState, action: AddOrgUpdateNameSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateNameError(state: StoreState, action: AddOrgUpdateNameError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function addOrgUpdateGravatarHashSuccess(state: StoreState, action: AddOrgUpdateGravatarHashSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(state: StoreState, action: AddOrgUpdateGravatarHashError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\nexport function addOrgUpdateIdSuccess(state: StoreState, action: AddOrgUpdateIdSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateIdError(state: StoreState, action: AddOrgUpdateIdError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                id: {\n                    value: action.id,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(state: StoreState, action: AddOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function addOrgUpdateDescriptionError(state: StoreState, action: AddOrgUpdateDescriptionError) {\n    return {\n        ...state, addOrg: {\n            ...state.addOrg,\n            editState: EditState.EDITED,\n            newOrganization: {\n                ...state.addOrg.newOrganization!,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.ADD_ORG_START:\n            return addOrgStart(state, action as AddOrgStart)\n        case ActionFlag.ADD_ORG_SUCCESS:\n            return addOrgSuccess(state, action as AddOrgSuccess)\n        case ActionFlag.ADD_ORG_ERROR:\n            return addOrgError(state, action as AddOrgError)\n        case ActionFlag.ADD_ORG_EDIT_START:\n            return addOrgEditStart(state, action as AddOrgEditStart)\n        case ActionFlag.ADD_ORG_EDIT_FINISH:\n            return addOrgEditFinish(state, action as AddOrgEditFinish)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS:\n            return addOrgUpdateNameSuccess(state, action as AddOrgUpdateNameSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_NAME_ERROR:\n            return addOrgUpdateNameError(state, action as AddOrgUpdateNameError)\n\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return addOrgUpdateGravatarHashSuccess(state, action as AddOrgUpdateGravatarHashSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return addOrgUpdateGravatarHashError(state, action as AddOrgUpdateGravatarHashError)\n\n        case ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS:\n            return addOrgUpdateIdSuccess(state, action as AddOrgUpdateIdSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_ID_ERROR:\n            return addOrgUpdateIdError(state, action as AddOrgUpdateIdError)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return addOrgUpdateDescriptionSuccess(state, action as AddOrgUpdateDescriptionSuccess)\n        case ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR:\n            return addOrgUpdateDescriptionError(state, action as AddOrgUpdateDescriptionError)\n        case ActionFlag.ADD_ORG_EVALUATE_OK:\n            return addOrgEvaluateOk(state, action as AddOrgEvaluateOK)\n        case ActionFlag.ADD_ORG_EVALUATE_ERRORS:\n            return addOrgEvaluateErrors(state, action as AddOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState, EditState, SaveState, UIErrorType, FieldState, ValidationState } from '../../types';\nimport { ActionFlag } from '../actions';\nimport {\n    EditOrgEditStart, EditOrgEditSuccess, EditOrgEditError,\n    EditOrgEvaluateOK, EditOrgEvaluateErrors,\n    EditOrgSave, EditOrgSaveStart, EditOrgSaveError, EditOrgSaveSuccess,\n    EditOrgUpdateNameSuccess, EditOrgUpdateNameError,\n    // EditOrgUpdateIdSuccess, EditOrgUpdateIdError,\n    EditOrgUpdateDescriptionSuccess, EditOrgUpdateDescriptionError,\n    EditOrgUpdateGravatarHashError, EditOrgUpdateGravatarHashSuccess\n} from '../actions/editOrg'\n\n\n\n// EDIT ORG\n\n// Edit session loading\n\nexport function editOrgEditStart(state: StoreState, action: EditOrgEditStart) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            validationState: ValidationState.NONE,\n            saveState: SaveState.NEW,\n            // TODO: get rid of this...\n            organizationId: action.id,\n            editedOrganization: {\n                id: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                name: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                gravatarHash: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                },\n                description: {\n                    value: '',\n                    status: FieldState.NONE,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgEditSuccess(state: StoreState, action: EditOrgEditSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editedOrganization: action.editedOrganization,\n            editState: EditState.UNEDITED\n        }\n    }\n}\n\n// save\n\nexport function editOrgSaveStart(state: StoreState, action: EditOrgSaveStart): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVING\n        }\n    }\n}\n\nexport function editOrgSaveSuccess(state: StoreState, action: EditOrgSaveSuccess): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            editState: EditState.UNEDITED,\n            saveState: SaveState.SAVED\n        }\n    }\n}\n\nexport function editOrgSaveError(state: StoreState, action: EditOrgSaveError): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            saveState: SaveState.SAVE_ERROR,\n            error: action.error\n        }\n    }\n}\n\n// Evaluate edit session\n\nexport function editOrgEvaluateOk(state: StoreState, action: EditOrgEvaluateOK): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.VALID\n        }\n    }\n}\n\nexport function editOrgEvaluateErrors(state: StoreState, action: EditOrgEvaluateErrors): StoreState {\n    return {\n        ...state,\n        editOrg: {\n            ...state.editOrg,\n            validationState: ValidationState.INVALID\n        }\n    }\n}\n\n\n\n// Name\nexport function editOrgUpdateNameSuccess(state: StoreState, action: EditOrgUpdateNameSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateNameError(state: StoreState, action: EditOrgUpdateNameError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                name: {\n                    value: action.name,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Gravatar hash\nexport function editOrgUpdateGravatarHashSuccess(state: StoreState, action: EditOrgUpdateGravatarHashSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(state: StoreState, action: EditOrgUpdateGravatarHashError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                gravatarHash: {\n                    value: action.gravatarHash,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\n// Id\n\n// export function editOrgUpdateIdSuccess(state: StoreState, action: EditOrgUpdateIdSuccess) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_OK,\n//                     error: {\n//                         type: UIErrorType.NONE\n//                     }\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// export function editOrgUpdateIdError(state: StoreState, action: EditOrgUpdateIdError) {\n//     return {\n//         ...state, editOrg: {\n//             ...state.editOrg,\n//             editState: EditState.EDITED,\n//             editedOrganization: {\n//                 ...state.editOrg.editedOrganization!,\n//                 id: {\n//                     value: action.id,\n//                     status: FieldState.EDITED_ERROR,\n//                     error: action.error\n//                 }\n//             }\n//         }\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(state: StoreState, action: EditOrgUpdateDescriptionSuccess) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_OK,\n                    error: {\n                        type: UIErrorType.NONE\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function editOrgUpdateDescriptionError(state: StoreState, action: EditOrgUpdateDescriptionError) {\n    return {\n        ...state, editOrg: {\n            ...state.editOrg,\n            editState: EditState.EDITED,\n            editedOrganization: {\n                ...state.editOrg.editedOrganization,\n                description: {\n                    value: action.description,\n                    status: FieldState.EDITED_ERROR,\n                    error: action.error\n                }\n            }\n        }\n    }\n}\n\nexport function reducer(state: StoreState, action: Action): StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.EDIT_ORG_EDIT_START:\n            return editOrgEditStart(state, action as EditOrgEditStart)\n        case ActionFlag.EDIT_ORG_EDIT_SUCCESS:\n            return editOrgEditSuccess(state, action as EditOrgEditSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_START:\n            return editOrgSaveStart(state, action as EditOrgSaveStart)\n        case ActionFlag.EDIT_ORG_SAVE_SUCCESS:\n            return editOrgSaveSuccess(state, action as EditOrgSaveSuccess)\n        case ActionFlag.EDIT_ORG_SAVE_ERROR:\n            return editOrgSaveError(state, action as EditOrgSaveError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS:\n            return editOrgUpdateNameSuccess(state, action as EditOrgUpdateNameSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR:\n            return editOrgUpdateNameError(state, action as EditOrgUpdateNameError)\n\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS:\n            return editOrgUpdateGravatarHashSuccess(state, action as EditOrgUpdateGravatarHashSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR:\n            return editOrgUpdateGravatarHashError(state, action as EditOrgUpdateGravatarHashError)\n\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS:\n        //     return editOrgUpdateIdSuccess(state, action as EditOrgUpdateIdSuccess)\n        // case ActionFlag.EDIT_ORG_UPDATE_ID_ERROR:\n        //     return editOrgUpdateIdError(state, action as EditOrgUpdateIdError)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS:\n            return editOrgUpdateDescriptionSuccess(state, action as EditOrgUpdateDescriptionSuccess)\n        case ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR:\n            return editOrgUpdateDescriptionError(state, action as EditOrgUpdateDescriptionError)\n        case ActionFlag.EDIT_ORG_EVALUATE_OK:\n            return editOrgEvaluateOk(state, action as EditOrgEvaluateOK)\n        case ActionFlag.EDIT_ORG_EVALUATE_ERRORS:\n            return editOrgEvaluateErrors(state, action as EditOrgEvaluateErrors)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/viewOrg'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\n\nexport function viewOrgStart(state: types.StoreState,\n    action: actions.ViewOrgStart): types.StoreState {\n    return {\n        ...state,\n        viewOrg: { ...state.viewOrg, state: types.ViewOrgState.FETCHING }\n    }\n}\n\nexport function viewOrgSuccess(state: types.StoreState,\n    action: actions.ViewOrgSuccess): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.READY,\n            organization: action.organization\n        }\n    }\n}\n\nexport function viewOrgError(state: types.StoreState,\n    action: actions.ViewOrgError): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            ...state.viewOrg,\n            state: types.ViewOrgState.ERROR,\n            error: action.error\n        }\n    }\n}\n\nexport function viewOrgStop(state: types.StoreState, action: actions.ViewOrgStop): types.StoreState {\n    return {\n        ...state,\n        viewOrg: {\n            state: types.ViewOrgState.NONE\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.VIEW_ORG_FETCH_START:\n            return viewOrgStart(state, action as actions.ViewOrgStart)\n        case ActionFlag.VIEW_ORG_FETCH_SUCCESS:\n            return viewOrgSuccess(state, action as actions.ViewOrgSuccess)\n        case ActionFlag.VIEW_ORG_FETCH_ERROR:\n            return viewOrgError(state, action as actions.ViewOrgError)\n        case ActionFlag.VIEW_ORG_STOP:\n            return viewOrgStop(state, action as actions.ViewOrgStop)\n        default:\n            return null\n    }\n}\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/searchOrgs'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\nimport { Organizations, Organization } from '../../types'\nimport { Model } from '../../data/model'\n\nexport function applyOrgSearch(orgs: Organizations, searchTerms: Array<string>) {\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTerms.every((term) => {\n            // todo : make more efficient!!!\n            return (new RegExp(term, 'i').test(org.name));\n        })\n    })\n\n    return {\n        organizations: filteredOrgs,\n        totalCount: orgs.length,\n        filteredCount: filteredOrgs.length\n    }\n}\n\n// TODO:\n// dispatch the start of the request\n// do the request\n// dispatch the success (will be same for all queries?)\n// dispatch the error\n// FOR NOW:\n// do it here...\nexport function searchOrgsStart(state: types.StoreState, action: actions.SearchOrgsStart): types.StoreState {\n\n    const { browseOrgs: { filter, sortBy, sortDirection } } = state\n    const query: Query = {\n        searchTerms: action.searchTerms,\n        filter: filter,\n        sortBy: sortBy,\n        sortDirection: sortDirection,\n        username: state.auth.authorization.username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        // organizations: result.organizations, \n        // totalCount: result.total, \n        // filteredCount: result.organizations.length,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            searchTerms: action.searchTerms\n        }\n    }\n}\n\nexport function searchOrgsSuccess(state: types.StoreState, action: actions.SearchOrgsSuccess): types.StoreState {\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: false,\n            organizations: action.organizations,\n            totalCount: action.totalCount,\n            filteredCount: action.organizations.length\n        }\n\n    }\n}\n\nexport function searchOrgsError(state: types.StoreState, action: actions.SearchOrgsError): types.StoreState {\n    return { ...state, error: action.error }\n}\n\n\nexport function sortOrgsStart(state: types.StoreState, action: actions.SortOrgsStart): types.StoreState {\n    const {\n        browseOrgs: { searchTerms, filter },\n        auth: { authorization: { username } }\n    } = state\n    const query: Query = {\n        searchTerms: searchTerms,\n        filter: filter,\n        sortBy: action.sortBy,\n        sortDirection: action.sortDirection,\n        username: username\n    }\n    // const result = queryOrgs(state.rawOrganizations, query)\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            sortBy: action.sortBy,\n            sortDirection: action.sortDirection\n        }\n    }\n}\n\n\ninterface Query {\n    searchTerms: Array<string>,\n    username: string,\n    sortBy: string,\n    sortDirection: types.SortDirection,\n    filter: string\n}\n\ninterface QueryResults {\n    organizations: Organizations,\n    total: number\n}\n\nexport function filterOrgsStart(state: types.StoreState,\n    action: actions.FilterOrgsStart): types.StoreState {\n    const { filter } = action\n\n    return {\n        ...state,\n        browseOrgs: {\n            ...state.browseOrgs,\n            searching: true,\n            filter\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    // NB using discriminant union nature of the ActionX types to narrow\n    // the type.\n\n    switch (action.type) {\n        case ActionFlag.SEARCH_ORGS_START:\n            return searchOrgsStart(state, action as actions.SearchOrgsStart)\n        case ActionFlag.SEARCH_ORGS_SUCCESS:\n            return searchOrgsSuccess(state, action as actions.SearchOrgsSuccess)\n        case ActionFlag.SEARCH_ORGS_ERROR:\n            return searchOrgsError(state, action as actions.SearchOrgsError)\n        // case ActionFlag.SORT_ORGS_STAR:\n        //     return sortOrgs(state, action as actions.SortOrgs)\n        case ActionFlag.SORT_ORGS_START:\n            return sortOrgsStart(state, action as actions.SortOrgsStart)\n        case ActionFlag.FILTER_ORGS_START:\n            return filterOrgsStart(state, action as actions.FilterOrgsStart)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\n\nimport { ActionFlag } from '../actions'\nimport { StoreState, AuthState } from '../../types'\nimport { AuthCheckStart, AuthAuthorized, AuthUnauthorized, AuthCheckError } from '../actions/auth';\n\nexport function authCheckStart(state: StoreState, action: AuthCheckStart): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.CHECKING,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authCheckError(state: StoreState, action: AuthCheckError): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.ERROR,\n            message: action.error.message,\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nexport function authAuthorized(state: StoreState, action: AuthAuthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.AUTHORIZED,\n            message: '',\n            authorization: {\n                token: action.token,\n                username: action.username,\n                realname: action.realname,\n                roles: action.roles\n            }\n        }\n    }\n}\n\nexport function authUnauthorized(state: StoreState, action: AuthUnauthorized): StoreState {\n    return {\n        ...state,\n        auth: {\n            status: AuthState.UNAUTHORIZED,\n            message: '',\n            authorization: {\n                token: '',\n                username: '',\n                realname: '',\n                roles: []\n            }\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.AUTH_CHECK_START:\n            return authCheckStart(state, action as AuthCheckStart)\n        case ActionFlag.AUTH_AUTHORIZED:\n            return authAuthorized(state, action as AuthAuthorized)\n        case ActionFlag.AUTH_UNAUTHORIZED:\n            return authUnauthorized(state, action as AuthUnauthorized)\n        case ActionFlag.AUTH_CHECK_ERROR:\n            return authCheckError(state, action as AuthCheckError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { ActionFlag } from '../actions'\nimport { AppSuccess } from '../actions/app';\nimport { StoreState, AppState } from '../../types';\n\nexport function appSuccess(state: StoreState, action: AppSuccess): StoreState {\n    return {\n        ...state,\n        app: {\n            status: AppState.READY,\n            config: action.config\n        }\n    }\n}\n\nfunction reducer(state: StoreState, action: Action): StoreState | null {\n    switch (action.type) {\n        case ActionFlag.APP_SUCCESS:\n            return appSuccess(state, action as AppSuccess)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport * as actions from '../actions/manageGroupRequests'\nimport * as types from '../../types'\nimport { ActionFlag } from '../actions'\n\nexport function manageGroupRequestsStart(\n    state: types.StoreState,\n    action: actions.ManageGroupRequestsStart): types.StoreState {\n    return state\n}\n\nexport function manageGroupRequestsSuccess(\n    state: types.StoreState,\n    action: actions.ManageGroupRequestsSuccess): types.StoreState {\n    return {\n        ...state,\n        manageGroupRequestsView: {\n            view: {\n                organization: action.organization,\n                requests: action.requests,\n            },\n            // TODO: wtf\n            error: null\n        }\n    }\n}\n\nexport function manageGroupRequestsError(\n    state: types.StoreState,\n    action: actions.ManageGroupRequestsError): types.StoreState {\n    return {\n        ...state,\n        manageGroupRequestsView: {\n            view: null,\n            // TODO: wtf\n            error: action.error\n        }\n    }\n}\n\n\nfunction reducer(state: types.StoreState, action: Action): types.StoreState | null {\n    switch (action.type) {\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_START:\n            return manageGroupRequestsStart(state, action as actions.ManageGroupRequestsStart)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_SUCCESS:\n            return manageGroupRequestsSuccess(state, action as actions.ManageGroupRequestsSuccess)\n        case ActionFlag.ADMIN_MANAGE_REQUESTS_ERROR:\n            return manageGroupRequestsError(state, action as actions.ManageGroupRequestsError)\n        default:\n            return null\n    }\n}\n\nexport default reducer","import { Action } from 'redux'\nimport { StoreState } from '../../types'\nimport addOrgReducer from './addOrg'\nimport editOrgReducer from './editOrg'\nimport viewOrgReducer from './viewOrg'\nimport searchOrgsReducer from './searchOrgs'\nimport authReducer from './auth'\nimport appReducer from './app'\nimport manageGroupRequests from './manageGroupRequests';\n\n\nexport function reducer(state: StoreState, action: Action): StoreState {\n    return addOrgReducer(state, action) ||\n        editOrgReducer(state, action) ||\n        searchOrgsReducer(state, action) ||\n        viewOrgReducer(state, action) ||\n        authReducer(state, action) ||\n        appReducer(state, action) ||\n        manageGroupRequests(state, action) ||\n        state;\n}\n\nexport default reducer","import { string, number } from \"prop-types\";\n\nexport interface GroupsServiceInfo {\n    servname: string;\n    version: string;\n    servertime: number;\n    gitcommithash: string\n}\n\nexport interface BriefGroup {\n    id: string;\n    name: string;\n    custom: {\n        gravatarhash?: string\n    }\n    owner: string;\n    type: string;\n    // createdAt: number;\n    // modifiedAt: number\n}\n\nexport type GroupList = Array<BriefGroup>\n\nexport type Username = string;\n\nexport interface WorkspaceInfo {\n    wsid: number\n    name: string\n    narrname: string\n    public: boolean\n    admin: boolean\n}\n\nexport interface Group {\n    id: string\n    name: string\n    owner: Username\n    type: string\n    admins: Array<Username>\n    members: Array<Username>\n    description: string\n    createdate: number\n    moddate: number\n    workspaces: Array<WorkspaceInfo>\n    custom: {\n        gravatarhash?: string\n    }\n}\n\nexport interface NewGroup {\n    id: string\n    name: string\n    gravatarhash: string | null\n    type: string\n    description: string\n}\n\nexport interface GroupUpdate {\n    name: string\n    gravatarhash: string | null\n    description: string\n}\n\nexport interface Request {\n    id: string\n    groupid: string\n    requester: Username\n    type: string\n    status: string\n    targetuser: Username\n    targetws: number\n    createddate: number\n    expireddate: number\n    moddate: number\n}\n\nexport interface ErrorInfo {\n    appcode: number\n    apperror: string\n    callid: string\n    httpcode: number\n    httpstatus: string\n    message: string\n    time: number\n}\n\nexport interface ErrorResult {\n    error: ErrorInfo\n}\n\n// Error types: (appcode)\n// 10000\tAuthentication failed\n// 10010\tNo authentication token\n// 10020\tInvalid token\n// 20000\tUnauthorized\n// 30000\tMissing input parameter\n// 30001\tIllegal input parameter\n// 30010\tIllegal user name\n// 40000\tGroup already exists\n// 40010\tRequest already exists\n// 40020\tUser already group member\n// 40030\tWorkspace already in group\n// 50000\tNo such group\n// 50010\tNo such request\n// 50020\tNo such user\n// 50030\tNo such workspace\n// 60000\tUnsupported operation\n\nexport interface GroupExists {\n    exists: boolean\n}\n\nexport interface GroupRequest {\n    id: string,\n    groupid: string,\n    requester: Username,\n    type: string,\n    status: string,\n    targetuser?: Username,\n    targetws?: number,\n    createdate: number,\n    expiredate: number,\n    moddate: number\n}\n\nexport enum SortDirection {\n    ASCENDING = 0,\n    DESCENDING\n}\n\nexport interface GetRequestsParams {\n    includeClosed?: boolean,\n    sortDirection?: SortDirection,\n    startAt?: Date\n}\n\nexport interface RequestMemebershipParams {\n    groupId: string\n}\n\nexport class GroupsClient {\n    token: string;\n    url: string;\n\n    constructor({ token, url }: { token: string, url: string }) {\n        this.token = token\n        this.url = url\n    }\n\n    getInfo(): Promise<GroupsServiceInfo> {\n        return fetch(this.url + '/', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((result) => {\n                return result as GroupsServiceInfo;\n            });\n    }\n\n    groupExists(id: string): Promise<GroupExists> {\n        return fetch(this.url + '/group/' + id + '/exists')\n            .then((response) => {\n                return response.json()\n            })\n            .then((exists) => {\n                return exists as GroupExists\n            })\n    }\n\n    // getGroups(): Promise<GroupList> {\n    //     return fetch(this.url + '/group', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json()\n    //         })\n    //         .then((result: GroupList) => {\n    //             return result.filter(({ type }) => type === 'Organization')\n    //         })\n    // }\n\n\n    getGroups(): Promise<Array<Group>> {\n        let start = new Date().getTime()\n        return fetch(this.url + '/group', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result: GroupList) => {\n                console.log('perf: just groups', new Date().getTime() - start)\n                start = new Date().getTime()\n                const orgs = result.filter(({ type }) => type === 'Organization')\n                return Promise.all(orgs.map((group) => (this.getGroupById(group.id))))\n            })\n            .then((result) => {\n                console.log('perf: full groups', new Date().getTime() - start)\n                return result;\n            })\n    }\n\n    getGroupById(id: string): Promise<Group> {\n        return fetch(this.url + '/group/' + id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    return null\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    createGroup(newGroup: NewGroup): Promise<Group> {\n        return fetch(this.url + '/group/' + newGroup.id, {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n            body: JSON.stringify({\n                name: newGroup.name,\n                custom: {\n                    gravatarhash: newGroup.gravatarhash\n                },\n                type: newGroup.type,\n                description: newGroup.description\n            })\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as Group\n            })\n    }\n\n    updateGroup(id: string, groupUpdate: GroupUpdate): Promise<void> {\n        return fetch(this.url + '/group/' + id + '/update', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT',\n\n            // TODO: build more intelligently\n            body: JSON.stringify({\n                name: groupUpdate.name,\n                custom: {\n                    gravatarhash: groupUpdate.gravatarhash\n                },\n                type: 'Organization',\n                description: groupUpdate.description\n            })\n        })\n            .then((response) => {\n                // response is an empty body.\n                if (response.status === 204) {\n                    return\n                }\n                throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n            })\n    }\n\n    getGroupRequests(groupId: string, params: GetRequestsParams): Promise<Array<GroupRequest>> {\n        const query = new URLSearchParams()\n        if (params.includeClosed) {\n            query.append('closed', 'closed')\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc')\n            } else {\n                query.append('order', 'asc')\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()))\n        }\n        return fetch(this.url + '/group/' + groupId + '/requests?' + params.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    getTargetedRequests(params: GetRequestsParams): Promise<Array<GroupRequest>> {\n        const query = new URLSearchParams()\n        if (params.includeClosed) {\n            query.append('closed', 'closed')\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc')\n            } else {\n                query.append('order', 'asc')\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()))\n        }\n        return fetch(this.url + '/request/targeted?' + params.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n    getCreatedRequests(params: GetRequestsParams): Promise<Array<GroupRequest>> {\n        const query = new URLSearchParams()\n        if (params.includeClosed) {\n            query.append('closed', 'closed')\n        }\n        if (params.sortDirection) {\n            if (params.sortDirection === SortDirection.DESCENDING) {\n                query.append('order', 'desc')\n            } else {\n                query.append('order', 'asc')\n            }\n        }\n        if (params.startAt) {\n            query.append('excludeupto', String(params.startAt.getTime()))\n        }\n        return fetch(this.url + '/request/created?' + params.toString(), {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'appcliation/json'\n            },\n            mode: 'cors',\n            method: 'GET'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    requestMembership(params: RequestMemebershipParams): Promise<GroupRequest> {\n        return fetch(this.url + '/group/' + params.groupId + '/requestmembership', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            method: 'POST'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status + ' : ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as GroupRequest\n            })\n    }\n\n    cancelRequest({ requestId }: { requestId: string }): Promise<GroupRequest> {\n        return fetch(this.url + '/request/id/' + requestId + '/cancel', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as GroupRequest\n            })\n    }\n\n    acceptRequest({ requestId }: { requestId: string }): Promise<GroupRequest> {\n        return fetch(this.url + '/request/id/' + requestId + '/accept', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as GroupRequest\n            })\n    }\n\n    denyRequest({ requestId }: { requestId: string }): Promise<GroupRequest> {\n        return fetch(this.url + '/request/id/' + requestId + '/deny', {\n            headers: {\n                Authorization: this.token,\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            method: 'PUT'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('Unexpected response: ' + response.status)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as GroupRequest\n            })\n    }\n}","import * as React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nimport { FaUsers, FaChevronRight } from 'react-icons/fa'\n\nexport interface HeaderProps {\n}\n\nclass Header extends React.Component<HeaderProps, object> {\n\n    buildSeparator() {\n        if (this.props.children) {\n            return (\n                <FaChevronRight style={{ verticalAlign: 'middle', marginLeft: '4px', marginRight: '4px' }} />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Header\">\n                <div style={{ flex: '0 0 auto' }}>\n                    <NavLink to=\"/organizations\">\n                        <FaUsers style={{ verticalAlign: 'middle' }} />\n                        {' '}\n                        <span data-test=\"orgs-label\">Orgs</span>\n                    </NavLink>\n                </div>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {this.buildSeparator()}\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import * as React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nimport Organizations from '../containers/Organizations';\nimport { SortDirection } from '../types';\n\nimport './OrganizationsBrowser.css';\nimport { Button, Icon, Radio, Select, Modal } from 'antd'\nimport Header from './Header';\nimport RadioGroup from 'antd/lib/radio/group';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nexport interface OrganizationsBrowserProps {\n    totalCount: number;\n    filteredCount: number;\n    sortBy: string;\n    sortDirection: SortDirection;\n    filter: string;\n    searching: boolean;\n    onSearchOrgs: (searchTerms: Array<string>) => void;\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void;\n    onFilterOrgs: (filter: string) => void;\n}\n\nexport interface OrganizationsBrowserState {\n    searchInput: string\n    showInfo: boolean\n}\nclass OrganizationsBrowser extends React.Component<OrganizationsBrowserProps, OrganizationsBrowserState> {\n\n    searchInput: React.RefObject<HTMLInputElement>;\n    searchButton: React.RefObject<Button>;\n\n    constructor(props: OrganizationsBrowserProps) {\n        super(props)\n\n        this.searchInput = React.createRef()\n        this.searchButton = React.createRef()\n\n        this.state = {\n            searchInput: '',\n            showInfo: false\n        }\n\n        this.props.onSearchOrgs([])\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'Organizations Browser Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations browser...</p>\n                </div>\n            )\n        })\n    }\n\n    doSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        const searchTerms = this.searchInput.current.value.split(/[\\s+]/)\n        // dispatch the search event\n        this.props.onSearchOrgs(searchTerms);\n    }\n\n    haveSearchInput() {\n        if (this.state.searchInput && this.state.searchInput.length > 0) {\n            return true\n        }\n        return false\n    }\n\n    onSearchInputChange() {\n        let currentSearchInputValue;\n        if (this.searchInput.current) {\n            currentSearchInputValue = this.searchInput.current.value\n        } else {\n            currentSearchInputValue = ''\n        }\n        this.setState({ searchInput: currentSearchInputValue })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        this.doSearch()\n    }\n\n    onSortByChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(e.target.value, this.props.sortDirection)\n    }\n\n    onSortByChange2(value: string) {\n        this.props.onSortOrgs(value, this.props.sortDirection)\n    }\n\n\n    onSortDirectionChange(e: RadioChangeEvent) {\n        this.props.onSortOrgs(this.props.sortBy, e.target.value)\n    }\n\n    onSortDirectionChange2(value: string) {\n        this.props.onSortOrgs(this.props.sortBy, value as SortDirection)\n    }\n\n    onFilterChange(e: RadioChangeEvent) {\n        this.props.onFilterOrgs(e.target.value)\n    }\n\n    onFilterChange2(value: string) {\n        this.props.onFilterOrgs(value)\n    }\n\n    onClearSearch() {\n        if (this.searchInput.current === null) {\n            return\n        }\n        this.searchInput.current.value = ''\n        this.onSearchInputChange()\n        // this.searchButton.current!.handleClick(new MouseEvent<HTMLButtonElement>('click'))\n        // const event = new Event('change', { bubbles: true })\n        // this.searchInput.current.dispatchEvent(event)\n        this.doSearch()\n    }\n\n    renderSearchFeedback() {\n        if (this.props.totalCount === 0) {\n            return (\n                <span>\n                    No organizations in the system\n                </span>\n            )\n        }\n        if (this.props.filteredCount === 0) {\n            return (\n                <span>\n                    No organizations found out of\n                    {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    available.\n                </span>\n            )\n\n        }\n        if (this.props.totalCount === this.props.filteredCount) {\n            return (\n                <span>\n                    Showing all\n                {' '}\n                    {this.props.totalCount}\n                    {' '}\n                    organizations\n                </span>\n            )\n        }\n\n        return (\n            <span>\n                Showing\n                {' '}\n                {this.props.filteredCount}\n                {' '}\n                out of\n                {' '}\n                {this.props.totalCount}\n                {' '}\n                organizations\n            </span>\n        )\n    }\n\n    renderSearchIcon() {\n        if (this.props.searching) {\n            return (<Icon type=\"loading\" />)\n        }\n        return (<Icon type=\"search\" />)\n    }\n\n    renderSearchBar() {\n        return (\n            <form id=\"searchForm\" className=\"OrganizationsBrowser-searchBar\" onSubmit={this.onSubmit.bind(this)}>\n                <input\n                    placeholder=\"Search Organizations\"\n                    onChange={this.onSearchInputChange.bind(this)}\n                    autoFocus\n                    ref={this.searchInput}></input>\n                {/* <Tooltip\n                    title=\"Enter one or more words to search organizations by name or owner\">\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{ alignSelf: 'end' }} />\n                </Tooltip> */}\n                <Button\n                    disabled={!this.haveSearchInput()}\n                    ref={this.searchButton}\n                    form=\"searchForm\"\n                    key=\"submit\"\n                    htmlType=\"submit\">\n                    {this.renderSearchIcon()}\n                    {/* Search */}\n                </Button>\n                <Button\n                    onClick={this.onClearSearch.bind(this)}\n                    disabled={!this.haveSearchInput()}\n                    icon=\"close\"\n                >\n\n                    {/* Show all */}\n                </Button>\n                {/* <div className=\"message\">\n                    {this.renderSearchFeedback()}\n                </div> */}\n            </form>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Browse and Search Organizations\n                        </span>\n                        <Icon type=\"right\" style={{ margin: '0 4px' }} />\n                        <span style={{ fontWeight: 'normal', fontStyle: 'italic' }}>\n                            {this.renderSearchFeedback()}\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <NavLink to=\"/newOrganization\"><Button icon=\"plus-circle\">Create Organization</Button></NavLink>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n\n                </div>\n            </Header>\n        )\n    }\n\n    renderSearchFilter() {\n        return (\n            <div>\n                <span className=\"field-label\">sort by</span>\n                <Select onChange={this.onSortByChange2.bind(this)}\n                    defaultValue={this.props.sortBy}\n                    style={{ width: '8em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"name\" key=\"name\">Org name</Select.Option>\n                    <Select.Option value=\"owner\" key=\"owner\">Owner</Select.Option>\n                    <Select.Option value=\"created\" key=\"created\">Date created</Select.Option>\n                </Select>\n                <Select onChange={this.onSortDirectionChange2.bind(this)}\n                    style={{ width: '10em' }}\n                    dropdownMatchSelectWidth={true}\n                    defaultValue={this.props.sortDirection}>\n                    <Select.Option value={SortDirection.ASCENDING} key=\"name\"><Icon type=\"sort-ascending\" />Ascending</Select.Option>\n                    <Select.Option value={SortDirection.DESCENDING} key=\"owner\"><Icon type=\"sort-descending\" />Descending</Select.Option>\n                </Select>\n                <span className=\"field-label\" style={{ marginLeft: '10px' }}>filter</span>\n                <Select onChange={this.onFilterChange2.bind(this)}\n                    defaultValue={this.props.filter}\n                    style={{ width: '16em' }}\n                    dropdownMatchSelectWidth={true}>\n                    <Select.Option value=\"all\" key=\"all\">All</Select.Option>\n                    <Select.Option value=\"owned\" key=\"owned\">Owned by you</Select.Option>\n                    <Select.Option value=\"notOwned\" key=\"notOwned\">Not owned by you</Select.Option>\n                    <Select.Option value=\"pending\" key=\"pending\">Pending request or invitation</Select.Option>\n                    <Select.Option value=\"groupPending\" key=\"groupPending\">Pending group requests</Select.Option>\n                </Select>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"OrganizationsBrowser\">\n                {this.renderHeader()}\n                <div className=\"searchBarRow\">\n                    <div className=\"searchBarCol\">\n                        {this.renderSearchBar()}\n                    </div>\n                    <div className=\"sortCol\">\n                        {this.renderSearchFilter()}\n                    </div>\n                </div>\n                <div className=\"bodyRow\">\n\n                    <div className=\"col2\">\n                        <Organizations />\n                    </div>\n                    {/* <div className=\"col1\">\n                        {this.renderControlArea()}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OrganizationsBrowser","\nexport interface User {\n    username: string,\n    realname: string,\n    thumbnail: string\n}\n\nexport interface UserProfile {\n    user: User,\n    profile: {\n        synced: {\n            gravatarHash: string\n        },\n        userdata: {\n            organization: string\n            city: string\n            state: string\n            country: string\n            avatarOption: string\n            gravatarDefault: string\n        }\n    }\n}\n\nexport interface JSONPayload {\n    version: string,\n    method: string,\n    id: string,\n    params: any\n}\n\nexport class UserProfileClient {\n    url: string;\n    token: string\n\n    constructor({ url, token }: { url: string, token: string }) {\n        this.url = url\n        this.token = token\n    }\n\n    makePayload(method: string, param: any): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: [param]\n        }\n    }\n\n    makeEmptyPayload(method: string): JSONPayload {\n        return {\n            version: '1.1',\n            method: 'UserProfile.' + method,\n            id: String(Math.random()).slice(2),\n            params: []\n        }\n    }\n\n    getVersion(): Promise<any> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makeEmptyPayload('version'))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n    }\n\n    getUserProfile(username: string): Promise<UserProfile> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', [username]))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0][0] as UserProfile\n            })\n    }\n\n    getUserProfiles(usernames: Array<string>): Promise<Array<UserProfile>> {\n        return fetch(this.url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-store',\n            headers: {\n                Authorization: this.token,\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(this.makePayload('get_user_profile', usernames))\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error('User profile request error: ' + response.status + ', ' + response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result.result[0] as Array<UserProfile>\n            })\n    }\n}","import {\n    Organization, OrganizationUpdate,\n    UIError,\n    UIErrorType,\n    SortDirection,\n    FieldState,\n    EditableOrganization,\n    UserRelationToOrganization,\n    UserBase,\n    Member,\n    Admin,\n    Owner,\n    GroupRequest,\n    RequestType,\n    RequestStatus,\n    OwnerRelation,\n    UserOrgRelation,\n    AdminRelation,\n    MemberRelation,\n    MembershipRequestPendingRelation,\n    MembershipInvitationPendingRelation,\n    ViewRelation\n} from '../types';\n// import { organizations } from './data';\nimport { UserProfileClient, UserProfile, User } from './userProfile'\nimport { GroupsClient, Group, GroupList, BriefGroup } from './groups'\nimport * as groups from './groups'\nimport { string } from 'prop-types';\n\nexport function applyOrgSearch(orgs: Array<Organization>, searchTerms: Array<string>): Array<Organization> {\n    const searchTermsRe = searchTerms.map((term) => {\n        return new RegExp(term, 'i')\n    })\n    const filteredOrgs = orgs.filter((org) => {\n        if (searchTerms.length === 0) {\n            return true;\n        }\n        return searchTermsRe.every((termRe) => {\n            return termRe.test(org.name) ||\n                termRe.test(org.owner.username) ||\n                termRe.test(org.owner.realname)\n        })\n    })\n\n    return filteredOrgs\n}\n\nfunction applySort(organizations: Array<Organization>, sortBy: string, sortDirection: SortDirection): Array<Organization> {\n    const direction = sortDirection === SortDirection.ASCENDING ? 1 : -1\n    switch (sortBy) {\n        case 'created':\n            return organizations.slice().sort((a, b) => {\n                return direction * (a.createdAt.getTime() - b.createdAt.getTime())\n            })\n        // case 'modifiedAt':\n        //     return organizations.slice().sort((a, b) => {\n        //         return direction * (a.modifiedAt.getTime() - b.modifiedAt.getTime())\n        //     })\n        case 'name':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.name.localeCompare(b.name)\n            })\n        case 'owner':\n            return organizations.slice().sort((a, b) => {\n                return direction * a.owner.username.localeCompare(b.owner.username)\n            })\n        default:\n            console.warn('unimplemented sort field: ' + sortBy)\n            return organizations;\n    }\n}\n\nfunction applyFilter(organizations: Array<Organization>, filter: string, username: string): Array<Organization> {\n    switch (filter) {\n        case 'all':\n            return organizations\n        case 'owned':\n            return organizations.filter((org) => (org.owner.username === username))\n        case 'notOwned':\n            return organizations.filter((org) => (org.owner.username !== username))\n        case 'pending':\n            return organizations.filter((org) => (\n                org.relation.type === UserRelationToOrganization.MEMBER_INVITATION_PENDING ||\n                org.relation.type === UserRelationToOrganization.MEMBER_REQUEST_PENDING\n            ))\n        case 'groupPending':\n            return organizations.filter((org) => (\n                (org.relation.type === UserRelationToOrganization.ADMIN ||\n                    org.relation.type === UserRelationToOrganization.OWNER) &&\n                (org.adminRequests && org.adminRequests.length > 0)\n            ))\n        default:\n            console.warn('unknown filter : ' + filter)\n            return organizations\n    }\n}\n\nexport interface Query {\n    searchTerms: Array<string>\n    username: string\n    sortBy: string\n    sortDirection: SortDirection\n    filter: string\n}\n\nexport interface QueryResults {\n    organizations: Array<Organization>\n    total: number\n}\n\nfunction wait(timeout: number) {\n    return new Promise((resolve) => {\n        window.setTimeout(() => {\n            resolve(true)\n        }, timeout)\n    })\n}\n\n// export function newOrg(state: StoreState, action: actions.AddOrg): StoreState {\n//     const {organizations, auth:{username}} = state;\n//     const org: Organization = {\n//         ...action.newOrg,\n//         createdAt: new Date(),\n//         modifiedAt: new Date(),\n//         owner: username\n//     }\n//     organizations.push(org)\n//     return {...state, organizations}\n// }\n\ninterface ModelParams {\n    token: string,\n    username: string,\n    groupsServiceURL: string,\n    userProfileServiceURL: string,\n    workspaceServiceURL: string\n}\n\nfunction promiseTry<T>(fun: () => Promise<T>) {\n    return new Promise<T>((resolve, reject) => {\n        try {\n            return resolve(fun())\n        } catch (ex) {\n            reject(ex)\n        }\n    })\n}\n\nexport class Model {\n    // organizations: Organizations\n    // token: string\n    // groupsServiceURL: string\n    // userProfileServiceURL: string\n    // workspaceServiceURL: string\n    params: ModelParams\n    cachedOrgs: Array<Organization> | null\n\n\n    constructor(params: ModelParams) {\n        // this.organizations = organizations;\n        this.params = params\n        this.cachedOrgs = null\n    }\n\n    getPendingRequests(): Promise<{ requests: Array<groups.GroupRequest>, invitations: Array<groups.GroupRequest> }> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return Promise.all([\n            groupsClient.getCreatedRequests({\n                includeClosed: false,\n                sortDirection: groups.SortDirection.DESCENDING,\n                startAt: new Date(0)\n            })\n                .then((requests) => {\n                    return requests\n                }),\n            groupsClient.getTargetedRequests({\n                includeClosed: false,\n                sortDirection: groups.SortDirection.DESCENDING,\n                startAt: new Date(0)\n            })\n                .then((requests) => {\n                    return requests\n                })\n        ])\n            .then(([createdRequests, targetedRequests]) => {\n                // here we just want to know ... does this user have any\n                // pending requests with this group!\n                return {\n                    requests: createdRequests,\n                    invitations: targetedRequests\n                }\n            })\n    }\n\n    groupRequestToGroupRequest(request: groups.GroupRequest): Promise<GroupRequest> {\n        function stringToRequestType(type: string): RequestType {\n            return RequestType.JOIN_GROUP_REQUEST\n        }\n\n        function stringToRequestStatus(status: string): RequestStatus {\n            return RequestStatus.OPEN\n        }\n\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n\n        const usernames = [request.requester]\n        if (request.targetuser) {\n            usernames.push(request.targetuser)\n        }\n\n        return userProfileClient.getUserProfiles(usernames)\n            .then((profiles) => {\n                return {\n                    id: request.id,\n                    groupId: request.groupid,\n                    requester: this.profileToUser(profiles[0]),\n                    type: stringToRequestType(request.type),\n                    status: stringToRequestStatus(request.status),\n                    subjectUser: profiles[1] ? this.profileToUser(profiles[1]) : null,\n                    subjectWorkspaceId: request.targetws || null,\n                    createdAt: new Date(request.createdate),\n                    expireAt: new Date(request.expiredate),\n                    modifiedAt: new Date(request.moddate)\n                }\n\n            })\n    }\n\n\n    getPendingGroupRequests(groupId: string): Promise<Array<GroupRequest>> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.getGroupRequests(groupId, {\n            includeClosed: false,\n            sortDirection: groups.SortDirection.DESCENDING,\n            startAt: new Date(0)\n        })\n            .then((requests) => {\n                return Promise.all(requests.map((request) => {\n                    return this.groupRequestToGroupRequest(request)\n                }))\n            })\n    }\n\n    groupToOrg(group: Group, username: string): Promise<Organization> {\n        const { id, name, owner, description, createdate, moddate } = group\n        let relation: UserRelationToOrganization\n        // TODO: when we have access to members, admins, and group publication status, we can \n        // flesh out all user relations.\n        if (username === group.owner) {\n            relation = UserRelationToOrganization.OWNER\n        } else {\n            relation = UserRelationToOrganization.VIEW\n        }\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n        let allUsers: Array<string> = []\n        if (group.members) {\n            allUsers = group.members.slice()\n        }\n        if (group.admins) {\n            allUsers = allUsers.concat(group.admins)\n        }\n        allUsers.push(group.owner)\n\n        return this.getPendingRequests()\n            .then(({ requests, invitations }) => {\n                // pending join requests\n                const pendingRequests = new Map<string, groups.GroupRequest>()\n                requests.forEach((req) => {\n                    if (req.type === 'Request group membership' && req.requester === username) {\n                        pendingRequests.set(req.groupid, req)\n                    }\n                })\n\n                // pending invitations to join\n                const pendingInvites = new Map<string, groups.GroupRequest>()\n                invitations.forEach((req) => {\n                    if (req.type === 'Invite to group' && req.targetuser === username) {\n                        pendingInvites.set(req.groupid, req)\n                    }\n                })\n\n                return userProfileClient.getUserProfiles(allUsers)\n                    .then((userProfiles) => {\n                        const userProfileMap = userProfiles.reduce((map, profile) => {\n                            map.set(profile.user.username, profile)\n                            return map\n                        }, new Map<string, UserProfile>())\n\n                        const ownerProfile = userProfileMap.get(group.owner)\n                        if (!ownerProfile) {\n                            throw new Error('No profile for owner!')\n                        }\n                        // TODO: if members really is always an array, we can skip this defaulting behavior\n                        const memberUsernames = group.members || []\n                        const members: Array<Member> = memberUsernames.map((member) => {\n                            const p = userProfileMap.get(member)\n                            if (typeof p === 'undefined') {\n                                throw new Error('Member without profile!')\n                            }\n                            return this.profileToUser(p)\n                        }).sort((a, b) => {\n                            return a.realname.localeCompare(b.realname);\n                        })\n\n                        const adminUsernames = group.admins || []\n                        const admins: Array<Admin> = adminUsernames.map((admin) => {\n                            const p = userProfileMap.get(admin)\n                            if (typeof p === 'undefined') {\n                                throw new Error('Admin without profile')\n                            }\n                            return this.profileToUser(p)\n                        })\n\n                        let relation: UserOrgRelation\n                        // TODO: when we have access to members, admins, and group publication status, we can \n                        // flesh out all user relations.\n                        if (this.params.username === group.owner) {\n                            relation = {\n                                type: UserRelationToOrganization.OWNER\n                            } as OwnerRelation\n                        } else if (group.admins.indexOf(this.params.username) >= 0) {\n                            relation = {\n                                type: UserRelationToOrganization.ADMIN\n                            } as AdminRelation\n                        } else if (group.members.indexOf(this.params.username) >= 0) {\n                            relation = {\n                                type: UserRelationToOrganization.MEMBER\n                            } as MemberRelation\n                        } else if (pendingRequests.has(group.id)) {\n                            relation = {\n                                type: UserRelationToOrganization.MEMBER_REQUEST_PENDING,\n                                requestId: pendingRequests.get(group.id)!.id\n                            } as MembershipRequestPendingRelation\n                        } else if (pendingInvites.has(group.id)) {\n                            relation = {\n                                type: UserRelationToOrganization.MEMBER_INVITATION_PENDING,\n                                requestId: pendingInvites.get(group.id)!.id\n                            } as MembershipInvitationPendingRelation\n                        } else {\n                            relation = {\n                                type: UserRelationToOrganization.VIEW\n                            } as ViewRelation\n                        }\n\n                        // perhaps get the pending admin requests\n                        return promiseTry<Organization>((): Promise<Organization> => {\n                            if (relation.type === UserRelationToOrganization.ADMIN ||\n                                relation.type === UserRelationToOrganization.OWNER) {\n                                return this.getPendingGroupRequests(group.id)\n                                    .then((requests) => {\n                                        return {\n                                            id: group.id,\n                                            name: group.name,\n                                            gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n                                            description: group.description,\n                                            createdAt: new Date(group.createdate),\n                                            modifiedAt: new Date(group.moddate),\n                                            owner: this.profileToUser(ownerProfile),\n                                            relation: relation,\n                                            members: members,\n                                            admins: admins,\n                                            adminRequests: requests\n                                        }\n                                    })\n                            } else {\n                                return Promise.resolve({\n                                    id: group.id,\n                                    name: group.name,\n                                    gravatarHash: group.custom ? (group.custom.gravatarhash || null) : null,\n                                    description: group.description,\n                                    createdAt: new Date(group.createdate),\n                                    modifiedAt: new Date(group.moddate),\n                                    owner: this.profileToUser(ownerProfile),\n                                    relation: relation,\n                                    members: members,\n                                    admins: admins,\n                                    adminRequests: []\n                                })\n                            }\n                        })\n\n                    })\n            })\n    }\n\n    getPendingAdminRequests(groupIds: Array<string>): Promise<Map<string, Array<GroupRequest>>> {\n        return Promise.all(groupIds.map((id) => {\n            return this.getPendingGroupRequests(id)\n                .then((requests) => {\n                    return {\n                        groupId: id,\n                        requests: requests\n                    }\n                })\n        }))\n            .then((allRequests) => {\n                const pendingRequests = new Map<string, Array<GroupRequest>>()\n                allRequests.forEach(({ groupId, requests }) => {\n                    pendingRequests.set(groupId, requests)\n                })\n                return pendingRequests\n            })\n    }\n\n    groupsToOrgs(groups: Array<Group>, username: string): Promise<Array<Organization>> {\n        const userProfileClient = new UserProfileClient({\n            url: this.params.userProfileServiceURL,\n            token: this.params.token\n        })\n\n        const allUsers = groups.reduce((allUsers, group) => {\n            allUsers.set(group.owner, true)\n            group.members.forEach((member) => allUsers.set(member, true))\n            group.admins.forEach((admin) => allUsers.set(admin, true))\n            return allUsers;\n        }, new Map<string, boolean>()).keys()\n        let start = new Date().getTime()\n\n        const adminGroupIds = groups\n            .filter(({ owner, admins }) => (owner === username || admins.indexOf(username) >= 0))\n            .map(({ id }) => id)\n\n        return Promise.all([\n            userProfileClient.getUserProfiles(Array.from(allUsers)),\n            this.getPendingRequests(),\n            this.getPendingAdminRequests(adminGroupIds)\n        ])\n            .then(([profiles, { requests, invitations }, pendingAdminRequests]) => {\n                console.log('perf: profiles', new Date().getTime() - start)\n                const profileMap = profiles.reduce((profileMap, profile) => {\n                    profileMap.set(profile.user.username, profile)\n                    return profileMap\n                }, new Map<string, UserProfile>())\n\n                // now make a per-group map out of this...\n                const pendingRequests = new Map<string, groups.GroupRequest>()\n                // console.log('pending reqeusts', pendingRequests)\n                requests.forEach((req) => {\n                    if (req.requester === username) {\n                        pendingRequests.set(req.groupid, req)\n                    }\n                })\n\n                const pendingInvites = new Map<string, groups.GroupRequest>()\n                // console.log('pending invites', pendingInvites)\n                invitations.forEach((req) => {\n                    if (req.targetuser === username) {\n                        pendingInvites.set(req.groupid, req)\n                    }\n                })\n\n                return Promise.all(groups.map((group) => {\n                    const { id, name, description, createdate, moddate, owner, members, admins, custom: { gravatarhash } } = group\n                    let relation: UserOrgRelation\n                    // TODO: when we have access to members, admins, and group publication status, we can \n                    // flesh out all user relations.\n                    if (this.params.username === group.owner) {\n                        relation = {\n                            type: UserRelationToOrganization.OWNER\n                        } as OwnerRelation\n                    } else if (group.admins.indexOf(this.params.username) >= 0) {\n                        relation = {\n                            type: UserRelationToOrganization.ADMIN\n                        } as AdminRelation\n                    } else if (group.members.indexOf(this.params.username) >= 0) {\n                        relation = {\n                            type: UserRelationToOrganization.MEMBER\n                        } as MemberRelation\n                    } else if (pendingRequests.has(group.id)) {\n                        relation = {\n                            type: UserRelationToOrganization.MEMBER_REQUEST_PENDING,\n                            requestId: pendingRequests.get(group.id)!.id\n                        } as MembershipRequestPendingRelation\n                    } else if (pendingInvites.has(group.id)) {\n                        relation = {\n                            type: UserRelationToOrganization.MEMBER_INVITATION_PENDING,\n                            requestId: pendingInvites.get(group.id)!.id\n                        } as MembershipInvitationPendingRelation\n                    } else {\n                        relation = {\n                            type: UserRelationToOrganization.VIEW\n                        } as ViewRelation\n                    }\n\n                    return {\n                        id, name, description,\n                        gravatarHash: gravatarhash || null,\n                        owner: this.profileToUser(profileMap.get(group.owner)!),\n                        createdAt: new Date(createdate),\n                        modifiedAt: new Date(moddate),\n                        relation: relation,\n                        members: members.map((username) => this.profileToUser(profileMap.get(username)!)),\n                        admins: admins.map((username) => this.profileToUser(profileMap.get(username)!)),\n                        adminRequests: (pendingAdminRequests.has(id) ? pendingAdminRequests.get(id)! : [])\n                    }\n                }))\n            })\n    }\n\n    getOrgs(username: string): Promise<Array<Organization>> {\n        if (this.cachedOrgs) {\n            return Promise.resolve(this.cachedOrgs)\n        }\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groupsClient.getGroups()\n            .then((groups) => {\n                return this.groupsToOrgs(groups, username)\n            })\n    }\n\n    queryOrgs(query: Query): Promise<QueryResults> {\n\n        let start = new Date().getTime()\n        return this.getOrgs(query.username)\n            .then((orgs) => {\n                const filtered = applyFilter(orgs, query.filter, query.username)\n                const searched = applyOrgSearch(filtered, query.searchTerms)\n                const sorted = applySort(searched, query.sortBy, query.sortDirection)\n\n                return {\n                    organizations: sorted,\n                    total: orgs.length\n                }\n            })\n    }\n\n    profileToUser(profile: UserProfile): UserBase {\n        return {\n            username: profile.user.username,\n            realname: profile.user.realname,\n            city: profile.profile.userdata.city,\n            state: profile.profile.userdata.state,\n            country: profile.profile.userdata.country,\n            organization: profile.profile.userdata.organization,\n            avatarOption: profile.profile.userdata.avatarOption,\n            gravatarHash: profile.profile.synced.gravatarHash,\n            gravatarDefault: profile.profile.userdata.gravatarDefault\n        }\n    }\n\n    getOrg(id: string): Promise<Organization> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groupsClient.getGroupById(id)\n            .then((group) => {\n                return this.groupToOrg(group, this.params.username)\n            })\n    }\n\n    getGroup(id: string): Promise<Group> {\n        if (id.length === 0) {\n            return Promise.reject(new Error('Group id may not be an empty string'))\n        }\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groupsClient.getGroupById(id)\n            .then((group) => {\n                return group\n            })\n    }\n\n    groupExists(id: string): Promise<boolean> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n        return groupsClient.groupExists(id)\n            .then(({ exists }) => {\n                return exists\n            })\n    }\n\n    addOrg(newOrg: EditableOrganization, username: string): Promise<Organization> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n        if ((newOrg.id.error && newOrg.id.error.type === UIErrorType.ERROR) ||\n            (newOrg.name.error && newOrg.name.error.type === UIErrorType.ERROR) ||\n            (newOrg.gravatarHash.error && newOrg.gravatarHash.error.type === UIErrorType.ERROR) ||\n            (newOrg.description.error && newOrg.description.error.type === UIErrorType.ERROR)) {\n            return Promise.reject(new Error('One or more fields are invalid'))\n        }\n\n        return groupsClient.createGroup({\n            id: newOrg.id.value,\n            name: newOrg.name.value,\n            gravatarhash: newOrg.gravatarHash.value,\n            description: newOrg.description.value,\n            type: 'Organization'\n        })\n            .then((group) => {\n                return this.groupToOrg(group, username)\n            })\n    }\n\n    // TODO this is fake until update is implemented on the back end\n    updateOrg(id: string, orgUpdate: OrganizationUpdate): Promise<void> {\n\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        // do record-level validation\n\n\n        return groupsClient.updateGroup(id, {\n            name: orgUpdate.name,\n            gravatarhash: orgUpdate.gravatarHash,\n            description: orgUpdate.description\n        })\n    }\n\n    requestMembershipToGroup(id: string): Promise<GroupRequest> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.requestMembership({\n            groupId: id\n        })\n            .then((request: groups.GroupRequest) => {\n                return this.groupRequestToGroupRequest(request)\n            })\n            .catch((err) => {\n                console.log('err???', err)\n                throw err;\n            })\n    }\n\n    cancelRequest(requestId: string): Promise<GroupRequest> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.cancelRequest({\n            requestId\n        })\n            .then((request: groups.GroupRequest) => {\n                return this.groupRequestToGroupRequest(request)\n            })\n    }\n\n    acceptRequest(requestId: string): Promise<GroupRequest> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.acceptRequest({\n            requestId\n        })\n            .then((request: groups.GroupRequest) => {\n                return this.groupRequestToGroupRequest(request)\n            })\n    }\n\n    denyRequest(requestId: string): Promise<GroupRequest> {\n        const groupsClient = new GroupsClient({\n            url: this.params.groupsServiceURL,\n            token: this.params.token\n        })\n\n        return groupsClient.denyRequest({\n            requestId\n        })\n            .then((request: groups.GroupRequest) => {\n                return this.groupRequestToGroupRequest(request)\n            })\n    }\n\n    validateOrgId(id: string): [string, UIError] {\n        return Validation.validateOrgId(id);\n    }\n\n    validateOrgName(name: string): [string, UIError] {\n        return Validation.validateOrgName(name)\n    }\n\n    validateOrgDescription(description: string): [string, UIError] {\n        return Validation.validateOrgDescription(description);\n    }\n}\n\nexport class Validation {\n    static validateOrgId(id: string): [string, UIError] {\n        // May not be empty\n        if (id.length === 0) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be empty'\n                }]\n        }\n        // No spaces\n        if (id.match(/\\s/)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not contain a space'\n                }]\n        }\n        // May not exceed maximum size\n        // todo: what is the real limit?\n        if (id.length > 100) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may not be longer than 100 characters'\n                }]\n        }\n\n        // May not contain non-alphanumeric and underscore\n        const alphaRe = /^[a-zA-Z0-9_]+$/\n        if (!id.match(alphaRe)) {\n            return [\n                id, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization id may only contain alphanumeric (a-z, A-Z, 0-9) and underscore (_)'\n                }\n            ]\n        }\n\n        return [id, {\n            type: UIErrorType.NONE\n        }]\n    }\n\n    static validateOrgName(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be empty'\n                }]\n        }\n        if (name.length > 256) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 256 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgGravatarHash(gravatarHash: string): [string, UIError] {\n        if (gravatarHash.length === 0) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.NONE\n                }]\n        }\n        if (gravatarHash.length > 32) {\n            return [\n                gravatarHash, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization gravatar hash may not be longer than 32 characters'\n                }]\n        }\n        return [\n            gravatarHash, {\n                type: UIErrorType.NONE\n            }]\n    }\n\n    static validateOrgDescription(name: string): [string, UIError] {\n        if (name.length === 0) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization description may not be empty'\n                }]\n        }\n        // TODO: Is there really a limit?\n        if (name.length > 4096) {\n            return [\n                name, {\n                    type: UIErrorType.ERROR,\n                    message: 'Organization name may not be longer than 4,096 characters'\n                }]\n        }\n        return [\n            name, {\n                type: UIErrorType.NONE\n            }]\n    }\n}\n\nexport class StaticData {\n    static makeEmptyEditableOrganization(): EditableOrganization {\n        return {\n            id: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            name: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            gravatarHash: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            },\n            description: {\n                value: '',\n                status: FieldState.NONE,\n                error: {\n                    type: UIErrorType.NONE\n                }\n            }\n        }\n    }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization,\n    AppError, SortDirection, UIError, UIErrorType\n} from '../../types'\nimport { Model } from '../../data/model'\n\n\n// Action Types\n\nexport interface ViewOrgStart extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_START\n}\n\nexport interface ViewOrgStop extends Action {\n    type: ActionFlag.VIEW_ORG_STOP\n}\n\nexport interface ViewOrgSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n    organization: Organization\n}\n\nexport interface ViewOrgError extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n    error: AppError\n}\n\nexport interface ViewOrgFetch extends Action {\n    type: ActionFlag.VIEW_ORG_FETCH,\n    id: string\n}\n\n// Join Requests\n\nexport interface ViewOrgJoinRequest extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST,\n    requestId: string\n}\n\nexport interface ViewOrgJoinRequestStart extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_START\n}\n\nexport interface ViewOrgJoinRequestSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_SUCCESS\n}\n\nexport interface ViewOrgJoinRequestError extends Action {\n    type: ActionFlag.VIEW_ORG_JOIN_REQUEST_ERROR,\n    error: UIError\n}\n\n// Join Request cancellation\n\nexport interface ViewOrgCancelJoinRequest extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST\n}\n\nexport interface ViewOrgCancelJoinRequestStart extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n}\n\nexport interface ViewOrgCancelJoinRequestSuccess extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS\n}\n\nexport interface ViewOrgCancelJoinRequestError extends Action {\n    type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n    error: UIError\n}\n\n\n// Generators\n\nexport function viewOrgStart() {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_START\n    }\n}\n\nexport function viewOrgStop(): ViewOrgStop {\n    return {\n        type: ActionFlag.VIEW_ORG_STOP\n    }\n}\n\nexport function viewOrgSuccess(org: Organization): ViewOrgSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_SUCCESS,\n        organization: org\n    }\n}\n\n\nexport function viewOrgError(error: AppError): ViewOrgError {\n    return {\n        type: ActionFlag.VIEW_ORG_FETCH_ERROR,\n        error: error\n    }\n}\n\n// Join requests\n\nexport function viewOrgJoinRequestStart(): ViewOrgJoinRequestStart {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_START\n    }\n}\n\nexport function viewOrgJoinRequestSuccess(): ViewOrgJoinRequestSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_SUCCESS\n    }\n}\n\nexport function viewOrgJoinRequestError(error: UIError): ViewOrgJoinRequestError {\n    return {\n        type: ActionFlag.VIEW_ORG_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n// Join Request Cancellation\n\nexport function viewOrgCancelJoinRequestStart(): ViewOrgCancelJoinRequestStart {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_START\n    }\n}\n\nexport function viewOrgCancelJoinRequestSuccess(): ViewOrgCancelJoinRequestSuccess {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_SUCCESS\n    }\n}\n\nexport function viewOrgCancelJoinRequestError(error: UIError): ViewOrgCancelJoinRequestError {\n    return {\n        type: ActionFlag.VIEW_ORG_CANCEL_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n// Thunks\n\nexport function viewOrgFetch(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        model.getOrg(id)\n            .then((org) => {\n                console.log('got org!', org)\n                dispatch(viewOrgSuccess(org))\n            })\n            .catch((err) => {\n                dispatch(viewOrgError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function viewOrgJoinRequest() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        //TODO: could do a start here...\n\n        const { auth: { authorization: { token, username } },\n            app: { config },\n            viewOrg: { organization } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (typeof organization === 'undefined') {\n            dispatch(viewOrgJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Org not currently defined'\n            }))\n            return\n        }\n\n        model.requestMembershipToGroup(organization.id)\n            .then(() => {\n                dispatch(viewOrgJoinRequestSuccess())\n                // quick 'n easy\n                dispatch(viewOrgFetch((organization.id)))\n            })\n            .catch((err) => {\n                dispatch(viewOrgJoinRequestError({\n                    type: UIErrorType.ERROR,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function viewOrgCancelJoinRequest(requestId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(viewOrgJoinRequestStart())\n\n        const { auth: { authorization: { token, username } },\n            app: { config },\n            viewOrg: { organization } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        if (typeof organization === 'undefined') {\n            dispatch(viewOrgCancelJoinRequestError({\n                type: UIErrorType.ERROR,\n                message: 'Org not currently defined'\n            }))\n            return\n        }\n\n        model.cancelRequest(requestId)\n            .then((newRequest) => {\n                dispatch(viewOrgCancelJoinRequestSuccess())\n                // quick 'n easy\n                dispatch(viewOrgFetch(newRequest.groupId))\n            })\n            .catch((err) => {\n                dispatch(viewOrgCancelJoinRequestError({\n                    type: UIErrorType.ERROR,\n                    message: err.message\n                }))\n            })\n\n    }\n}\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport {\n    StoreState, Organization,\n    AppError, SortDirection\n} from '../../types'\nimport { Model } from '../../data/model'\nimport { viewOrgStop } from './viewOrg'\n\n\nexport interface SortOrgs extends Action<ActionFlag.SORT_ORGS> {\n    type: ActionFlag.SORT_ORGS,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport interface SortOrgsStart extends Action<ActionFlag.SORT_ORGS_START> {\n    type: ActionFlag.SORT_ORGS_START,\n    sortBy: string,\n    sortDirection: SortDirection\n}\n\nexport function sortOrgsStart(sortBy: string, sortDirection: SortDirection): SortOrgsStart {\n    return {\n        type: ActionFlag.SORT_ORGS_START,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n    }\n}\n\n// SEARCH (FETCH) ORGS\n\n\n\n// Called upon the start of a search call\n// Sets the ui state to enable a spinner\n// and also search query data to be reflected in the ui\nexport interface SearchOrgsStart extends Action<ActionFlag.SEARCH_ORGS_START> {\n    type: ActionFlag.SEARCH_ORGS_START,\n    searchTerms: Array<string>\n}\n\nexport function searchOrgsStart(searchTerms: Array<string>): SearchOrgsStart {\n    return {\n        type: ActionFlag.SEARCH_ORGS_START,\n        searchTerms: searchTerms\n    }\n}\n\n// Called upon successful completion of a search\n// Sets the organizations found\nexport interface SearchOrgsSuccess extends Action<ActionFlag.SEARCH_ORGS_SUCCESS> {\n    type: ActionFlag.SEARCH_ORGS_SUCCESS,\n    organizations: Array<Organization>,\n    totalCount: number\n}\n\nexport function searchOrgsSuccess(organizations: Array<Organization>, totalCount: number): SearchOrgsSuccess {\n    return {\n        type: ActionFlag.SEARCH_ORGS_SUCCESS,\n        organizations: organizations,\n        totalCount: totalCount\n    }\n}\n\n// Called upon a search error\n// Sets error state\nexport interface SearchOrgsError extends Action<ActionFlag.SEARCH_ORGS_ERROR> {\n    type: ActionFlag.SEARCH_ORGS_ERROR,\n    error: AppError\n}\n\nexport function searchOrgsError(error: AppError): SearchOrgsError {\n    return {\n        type: ActionFlag.SEARCH_ORGS_ERROR,\n        error: error\n    }\n}\n\n\nexport interface SearchOrgs extends Action<ActionFlag.SEARCH_ORGS> {\n    type: ActionFlag.SEARCH_ORGS,\n    searchTerms: Array<string>\n}\n\n// TODO: proper typing here \nexport function searchOrgs(searchTerms: Array<string>) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(searchOrgsStart(searchTerms))\n        dispatch(viewOrgStop())\n\n        const {\n            browseOrgs: { sortBy, sortDirection, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms: searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function sortOrgs(sortBy: string, sortDirection: SortDirection) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(sortOrgsStart(sortBy, sortDirection))\n\n        const {\n            browseOrgs: { searchTerms, filter },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function filterOrgs(filter: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(filterOrgsStart(filter))\n\n        const {\n            browseOrgs: { searchTerms, sortBy, sortDirection },\n            auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.queryOrgs({\n            searchTerms,\n            sortBy, sortDirection, filter, username\n        })\n            .then(({ organizations, total }) => {\n                // TODO: also total.\n                dispatch(searchOrgsSuccess(organizations, total))\n            })\n            .catch((error) => {\n                dispatch(searchOrgsError({\n                    code: error.name,\n                    message: error.message\n                }))\n            })\n    }\n}\n\n\n\n\n// Filter orgs\nexport interface FilterOrgs extends Action<ActionFlag.FILTER_ORGS> {\n    type: ActionFlag.FILTER_ORGS,\n    filter: string\n}\n\nexport interface FilterOrgsStart extends Action<ActionFlag.FILTER_ORGS_START> {\n    type: ActionFlag.FILTER_ORGS_START,\n    filter: string\n}\n\nexport function filterOrgsStart(filter: string): FilterOrgsStart {\n    return {\n        type: ActionFlag.FILTER_ORGS_START,\n        filter: filter\n    }\n}\n\n","import OrganizationsBrowser from '../components/OrganizationsBrowser'\nimport { StoreState, SortDirection } from '../types'\nimport * as actions from '../redux/actions/searchOrgs'\nimport { Dispatch } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { Model, Query } from '../data/model'\n//\n// Typing for the mapState and mapDispatch\n//\nexport interface LinkStateProps {\n    totalCount: number,\n    filteredCount: number\n    sortBy: string,\n    sortDirection: SortDirection,\n    filter: string,\n    searching: boolean\n}\n\nexport interface LinkDispatchProps {\n    onSearchOrgs: (searchTerms: Array<string>) => void,\n    onSortOrgs: (sortBy: string, sortDirection: SortDirection) => void,\n    onFilterOrgs: (filter: string) => void\n}\n\n\n// note second arg is the component props, but we don't have any component props to merge in.\nexport function mapStateToProps(state: StoreState): LinkStateProps {\n    const { browseOrgs: { totalCount, filteredCount, sortBy, sortDirection, filter, searching } } = state\n    return {\n        totalCount,\n        filteredCount,\n        sortBy,\n        sortDirection,\n        filter,\n        searching\n    }\n}\n\n// function onSortOrgs(sortBy: string, sortDescending: boolean) : Dispatch<actions.SortOrgs> {\n//     dispatch(actions.sortOrgs(sortBy, sortDescending))\n// }\n\n// note second arg is the component props, but we don't have any to merge in.\n// export function mapDispatchToProps(dispatch: actions.SearchOrgs | Dispatch<actions.SortOrgs> | Dispatch<actions.FilterOrgs>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n\n//             dispatch(actions.searchOrgs(searchTerms))\n\n\n\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         },\n//         onFilterOrgs: (filter) => {\n//             dispatch(actions.filterOrgs(filter))\n//         }\n//     }\n// }\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.SearchOrgs | actions.SortOrgs | actions.FilterOrgs>): LinkDispatchProps {\n    return {\n        onSearchOrgs: (searchTerms: Array<string>) => {\n            // TODO proper typing here\n            dispatch(actions.searchOrgs(searchTerms) as any)\n        },\n        onSortOrgs: (sortBy: string, sortDirection: SortDirection) => {\n            // TODO proper typing here\n            dispatch(actions.sortOrgs(sortBy, sortDirection) as any)\n        },\n        onFilterOrgs: (filter: string) => {\n            dispatch(actions.filterOrgs(filter) as any)\n        }\n    }\n}\n\n// export function mapDispatchToProps(dispatch: Dispatch<any>) : LinkDispatchProps {\n//     return {\n//         onSearchOrgs: (searchTerms) => {\n//             dispatch(actions.searchOrgs(searchTerms))\n//         },\n//         onSortOrgs: (sortBy, sortDescending) => {\n//             dispatch(actions.sortOrgs(sortBy, sortDescending))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationsBrowser)","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\nexport interface AddOrg extends Action {\n    type: ActionFlag.ADD_ORG\n}\n\nexport interface AddOrgStart extends Action {\n    type: ActionFlag.ADD_ORG_START\n}\n\nexport interface AddOrgSuccess extends Action {\n    type: ActionFlag.ADD_ORG_SUCCESS,\n    organization: Organization\n}\n\nexport interface AddOrgError extends Action<ActionFlag.ADD_ORG_ERROR> {\n    type: ActionFlag.ADD_ORG_ERROR,\n    error: AppError\n}\n\n// Editing\n\nexport interface AddOrgEdit extends Action<ActionFlag.ADD_ORG_EDIT> {\n    type: ActionFlag.ADD_ORG_EDIT;\n}\n\nexport interface AddOrgEditStart {\n    type: ActionFlag.ADD_ORG_EDIT_START\n}\n\nexport interface AddOrgEditFinish {\n    type: ActionFlag.ADD_ORG_EDIT_FINISH\n}\n\n// Evaluating state of form \n\nexport interface AddOrgEvaluate extends Action<ActionFlag.ADD_ORG_EVALUATE> {\n    type: ActionFlag.ADD_ORG_EVALUATE\n}\n\nexport interface AddOrgEvaluateOK extends Action<ActionFlag.ADD_ORG_EVALUATE_OK> {\n    type: ActionFlag.ADD_ORG_EVALUATE_OK\n}\n\nexport interface AddOrgEvaluateErrors extends Action<ActionFlag.ADD_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n}\n\n// Updating name field\n\nexport interface AddOrgUpdateName extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface AddOrgUpdateNameSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface AddOrgUpdateNameError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface AddOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface AddOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface AddOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\nexport interface AddOrgUpdateId extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID,\n    id: string\n}\n\nexport interface AddOrgUpdateIdSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n    id: string\n}\n\nexport interface AddOrgUpdateIdError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n    id: string,\n    error: UIError\n}\n\n// Updating description field\n\nexport interface AddOrgUpdateDescription extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionSuccess {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface AddOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function addOrgStart(): AddOrgStart {\n    return {\n        type: ActionFlag.ADD_ORG_START\n    }\n}\n\nexport function addOrgSuccess(org: Organization): AddOrgSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_SUCCESS,\n        organization: org\n    }\n}\n\nexport function addOrgError(error: AppError): AddOrgError {\n    return {\n        type: ActionFlag.ADD_ORG_ERROR,\n        error: error\n    }\n}\n\nexport function addOrgEditStart() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_START\n    }\n}\n\nexport function addOrgEditFinish() {\n    return {\n        type: ActionFlag.ADD_ORG_EDIT_FINISH\n    }\n}\n\n// Evaluate\n\nexport function addOrgEvaluateOk(): AddOrgEvaluateOK {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_OK\n    }\n}\n\nexport function AddOrgEvaluateErrors(): AddOrgEvaluateErrors {\n    return {\n        type: ActionFlag.ADD_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Update Name\n\nexport function addOrgUpdateNameSuccess(name: string): AddOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function addOrgUpdateNameError(name: string, error: UIError): AddOrgUpdateNameError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\nexport function addOrgUpdateIdSuccess(id: string): AddOrgUpdateIdSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_SUCCESS,\n        id: id\n    }\n}\n\n// Update Gravatar Hash\n\nexport function addOrgUpdateGravatarHashSuccess(gravatarHash: string): AddOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function addOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): AddOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\nexport function addOrgUpdateIdError(id: string, error: UIError): AddOrgUpdateIdError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_ID_ERROR,\n        id: id,\n        error: error\n    }\n}\n\nexport function addOrgUpdateDescriptionSuccess(description: string): AddOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function addOrgUpdateDescriptionError(description: string, error: UIError): AddOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.ADD_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function addOrgEdit() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgEditStart())\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrg() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(addOrgStart())\n\n        const { auth: { authorization: { token, username } },\n            addOrg: { newOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!newOrganization) {\n            dispatch(addOrgError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        model.addOrg(newOrganization, username)\n            .then((org: Organization) => {\n                dispatch(addOrgSuccess(org))\n            })\n            .catch((error) => {\n                console.error('error adding', newOrganization, error)\n                dispatch(addOrgError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function addOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { addOrg: { newOrganization } } = getState()\n\n        const { addOrg: editState } = getState()\n\n        if (!newOrganization) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.name.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.id.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.gravatarHash.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        if (newOrganization.description.status !== FieldState.EDITED_OK) {\n            dispatch(AddOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(addOrgEvaluateOk())\n    }\n}\n\nfunction newModelFromState(state: StoreState) {\n    const { auth: { authorization: { token, username } },\n        app: { config } } = state\n    return new Model({\n        token, username,\n        groupsServiceURL: config.services.Groups.url,\n        userProfileServiceURL: config.services.UserProfile.url,\n        workspaceServiceURL: config.services.Workspace.url\n    })\n}\n\nexport function addOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(addOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(addOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}\n\nexport function addOrgUpdateId(id: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const [validatedId, error] = Validation.validateOrgId(id)\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateIdError(validatedId, error))\n            dispatch(addOrgEvaluate())\n            return\n        }\n        const model = newModelFromState(getState())\n        model.groupExists(validatedId)\n            .then((exists) => {\n                if (exists) {\n                    dispatch(addOrgUpdateIdError(validatedId, {\n                        type: UIErrorType.ERROR,\n                        message: 'This org id is already in use'\n                    }))\n                } else {\n                    dispatch(addOrgUpdateIdSuccess(validatedId))\n                }\n\n                dispatch(addOrgEvaluate())\n            })\n    }\n}\n\nexport function addOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(addOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(addOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(addOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon, Modal } from 'antd';\nimport md5 from 'md5'\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './NewOrganization.css'\n\nimport Header from './Header';\n\nexport interface NewOrganizationProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    newOrganization: EditableOrganization,\n    onAddOrgEdit: () => void,\n    onAddOrg: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface NewOrganizationState {\n    cancelToBrowser: boolean;\n}\n\nclass NewOrganization extends React.Component<NewOrganizationProps, NewOrganizationState> {\n\n    origin: string;\n    gravatarEmail: React.RefObject<HTMLInputElement>\n\n    constructor(props: NewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false\n        }\n\n        this.gravatarEmail = React.createRef()\n\n        this.origin = document.location!.origin\n\n        this.props.onAddOrgEdit()\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'New Organization Editor Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the new organizations editor...</p>\n                </div>\n            )\n        })\n    }\n\n    onGravatarEmailSync() {\n        let email;\n        if (this.gravatarEmail.current) {\n            email = this.gravatarEmail.current.value\n        } else {\n            email = 'n/a'\n        }\n        const hashed = md5(email)\n        this.props.onUpdateGravatarHash(hashed);\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have entered information for this new organization.</p>\n\n                    <p>If you leave the editor without first saving, the new organization <i>will not be created</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onAddOrg();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateId(e.target.value);\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.saveState === SaveState.NEW\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"newOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.newOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <div style={{ display: 'flex', flexDirection: 'row', marginBottom: '4px' }}>\n                            <div style={{ flex: '1 1 0px' }}>\n                                <input ref={this.gravatarEmail} placeholder=\"Provide your gravatar-linked email address, if any\" />\n                            </div>\n                            <div style={{ flex: '0 0 auto' }}>\n                                <Button\n                                    icon=\"arrow-down\"\n                                    style={{ height: '100%' }}\n                                    onClick={this.onGravatarEmailSync.bind(this)} />\n                            </div>\n                        </div>\n                        <input value={this.props.newOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.newOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.newOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.newOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.newOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.newOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.newOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.newOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.newOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.newOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.newOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.newOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.newOrganization!.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"plus-circle\" />\n                            {' '}\n                            Adding a New Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"newOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToBrowser.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs Browser\n                        </Button>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading New Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        // TODO: this is just a prop for today.\n        if (this.props.saveState === SaveState.SAVED) {\n            return <Redirect push to={\"/editOrganization/\" + this.props.newOrganization.id.value} />\n        }\n\n        if (!this.props.newOrganization) {\n            return (\n                <div className=\"NewOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"NewOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState } from '../types';\nimport {\n    AddOrg, addOrg,\n    addOrgUpdateName, addOrgUpdateId, addOrgUpdateDescription, addOrgEdit, addOrgUpdateGravatarHash\n} from '../redux/actions/addOrg';\n\nimport NewOrganization from '../components/NewOrganization';\n\ninterface OwnProps {\n}\n\nexport interface StateProps {\n}\n\nexport interface DispatchProps {\n    onAddOrg: () => void,\n    onAddOrgEdit: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ addOrg: { editState, saveState, validationState, newOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        newOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<AddOrg>): DispatchProps {\n    return {\n        onAddOrgEdit: () => {\n            dispatch(addOrgEdit() as any)\n        },\n        onAddOrg: () => {\n            dispatch(addOrg() as any)\n        },\n        onUpdateName: (name) => {\n            dispatch(addOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(addOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        onUpdateId: (id) => {\n            dispatch(addOrgUpdateId(id) as any)\n        },\n        onUpdateDescription: (description) => {\n            dispatch(addOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(NewOrganization)","import * as React from 'react'\nimport './Avatar.css'\n\nimport { UserBase } from '../types'\n\nexport interface AvatarProps {\n    user: UserBase,\n    size: number\n}\n\ninterface AvatarState {\n\n}\n\nclass Avatar extends React.Component<AvatarProps, AvatarState> {\n    constructor(props: AvatarProps) {\n        super(props)\n    }\n\n    getAvatarUrl(user: UserBase) {\n        switch (user.avatarOption || 'gravatar') {\n            case 'gravatar':\n                const gravatarDefault = user.gravatarDefault || 'identicon';\n                const gravatarHash = user.gravatarHash;\n                if (gravatarHash) {\n                    return 'https://www.gravatar.com/avatar/' + gravatarHash + '?s=60&amp;r=pg&d=' + gravatarDefault;\n                } else {\n                    return './nouserpic.png';\n                }\n            case 'silhouette':\n            case 'mysteryman':\n            default:\n                return './nouserpic.png';\n        }\n    }\n\n    render() {\n        const avatarUrl = this.getAvatarUrl(this.props.user)\n        return (\n            <img\n                src={avatarUrl}\n                style={{ width: this.props.size }}\n            />\n        )\n    }\n\n}\n\nexport default Avatar","import * as React from 'react'\nimport './User.css'\n\nimport Avatar from './Avatar'\nimport { UserBase } from '../types';\n\nexport interface UserProps {\n    user: UserBase\n    avatarSize?: number\n}\n\ninterface UserState {\n\n}\n\nclass User extends React.Component<UserProps, UserState> {\n    constructor(props: UserProps) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"User\">\n                <div className=\"avatarCol\">\n                    <Avatar user={this.props.user} size={this.props.avatarSize || 30} />\n                </div>\n                <div className=\"infoCol\">\n                    <div className=\"name\">\n                        <a href={\"#people/\" + this.props.user.username} target=\"_blank\">{this.props.user.realname}</a>\n                        {' '}\n                        ❨{this.props.user.username}❩\n                                </div>\n                    <div className=\"organization\">\n                        {this.props.user.organization || <i>no organization in user profile</i>}\n                    </div>\n                    <div className=\"location\">\n                        {[this.props.user.city, this.props.user.state, this.props.user.country].filter(x => x).join(', ') || <i>no location information in user profile</i>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default User","import * as React from 'react'\nimport marked from 'marked'\nimport { NavLink } from 'react-router-dom'\n\nimport './ViewOrganization.css'\n\nimport { ViewOrgState, Organization, AppError, UserRelationToOrganization, MembershipRequestPendingRelation } from '../types'\nimport { Button, Modal, Icon, Tooltip } from 'antd'\nimport Header from './Header'\nimport Avatar from './Avatar'\nimport User from './User';\n\nexport interface ViewOrganizationState {\n    showInfo: boolean\n}\n\nexport interface ViewOrganizationProps {\n    state: ViewOrgState\n    id: string,\n    organization?: Organization\n    error?: AppError\n    username: string,\n    onViewOrg: (id: string) => void,\n    onJoinOrg: () => void,\n    onCancelJoinRequest: (requestId: string) => void\n}\n\nclass ViewOrganization extends React.Component<ViewOrganizationProps, ViewOrganizationState> {\n    constructor(props: ViewOrganizationProps) {\n        super(props)\n\n        this.state = {\n            showInfo: false\n        }\n\n        this.props.onViewOrg(this.props.id)\n    }\n\n    onJoinClick() {\n        this.props.onJoinOrg()\n    }\n\n    onCancelJoinRequest() {\n        console.log('canceling join...')\n        console.log(this.props.organization!.relation)\n        if (!this.props.organization) {\n            return\n        }\n        const relation = this.props.organization.relation as MembershipRequestPendingRelation\n        this.props.onCancelJoinRequest(relation.requestId)\n    }\n\n    onShowInfo() {\n        // this.setState({ showInfo: true })\n        Modal.info({\n            title: 'View Organization Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations viewer...</p>\n                </div>\n            )\n        })\n    }\n\n    buildFooter() {\n        return (\n            <div>\n                {this.renderEditRow()}\n                {/* <p style={{ textAlign: 'center' }}>\n                    You may also  <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink> to the organizations browser.\n                </p> */}\n            </div>\n        )\n    }\n\n    renderEditRow() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <p style={{ textAlign: 'center' }}>\n                    As the owner of this group, you may <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink> it.\n                </p>\n            )\n        }\n    }\n\n    renderEditButton() {\n        if (this.props.organization!.owner.username === this.props.username) {\n            return (\n                <NavLink to={`/editOrganization/${this.props.organization!.id}`}><Button icon=\"edit\">Edit</Button></NavLink>\n            )\n        }\n    }\n\n    renderOrg() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <div className=\"org\">\n                <div className=\"nameAndLogo\">\n                    <div className=\"avatar\">\n                        {this.renderOrgAvatar(this.props.organization)}\n                    </div>\n                    <div className=\"nameAndLink\">\n                        <div className=\"name\">\n                            {this.props.organization.name}\n                        </div>\n                        <div className=\"id\">\n                            <span className=\"label\">permalink</span>{' '}\n                            <span className=\"permalinkBase\">https://narrative.kbase.us#orgs/</span>{this.props.organization.id}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"description\"\n                    dangerouslySetInnerHTML={({ __html: marked(this.props.organization.description || '') })}\n                />\n\n            </div>\n        )\n    }\n\n    getOrgAvatarUrl(org: Organization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: Organization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n\n    renderRelation(org: Organization) {\n        switch (org.relation.type) {\n            case (UserRelationToOrganization.NONE):\n                return (\n                    <span><Icon type=\"stop\" />None</span>\n                )\n            case (UserRelationToOrganization.VIEW):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You are not a member of this org, but you may access it; you may request membership\"\n                    >\n                        <span><Icon type=\"eye\" style={{ marginRight: '4px' }} />Viewer</span>\n                    </Tooltip>\n                )\n            case (UserRelationToOrganization.MEMBER_REQUEST_PENDING):\n                return (\n                    <div>\n                        <div><Icon type=\"user\" style={{ color: 'orange' }} spin={true} />Your membership <b>request</b> is pending</div>\n                        <div><Button icon=\"delete\" type=\"danger\" onClick={this.onCancelJoinRequest.bind(this)}>Cancel Request</Button></div>\n                    </div>\n                )\n            case (UserRelationToOrganization.MEMBER_INVITATION_PENDING):\n                return (<span><Icon type=\"user\" style={{ color: 'blue' }} />You have been <b>invited</b> to join</span>)\n            case (UserRelationToOrganization.MEMBER):\n                return (<span><Icon type=\"user\" />Member</span>)\n            case (UserRelationToOrganization.ADMIN):\n                return (<span><Icon type=\"unlock\" />Admin</span>)\n            case (UserRelationToOrganization.OWNER):\n                return (\n                    <Tooltip\n                        placement=\"bottomRight\"\n                        mouseEnterDelay={0.5}\n                        title=\"You own this org\"\n                    >\n                        <span><Icon type=\"unlock\" theme=\"filled\" style={{ marginRight: '4px' }} />Owner</span>\n                    </Tooltip>\n                )\n        }\n    }\n\n    renderMembers() {\n        if (!this.props.organization) {\n            return\n        }\n        let members;\n        if (this.props.organization.members.length === 0) {\n            members = (\n                <p style={{ fontStyle: 'italic', textAlign: 'center' }}>\n                    This organization has no members\n                </p>\n            )\n        } else {\n            members = this.props.organization.members.map((member) => {\n                return (\n                    <User user={member} />\n                )\n            })\n        }\n        return (\n            <div className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col0\">\n                        <div>\n                            <div className=\"label\">members</div>\n                            {members}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderInfo() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <div className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col0\">\n                        <div>\n                            <div className=\"label\">proprietor</div>\n                        </div>\n                        <div className=\"ownerTable\">\n                            <div className=\"avatarCol\">\n                                <Avatar user={this.props.organization.owner} size={60} />\n                            </div>\n                            <div className=\"proprietorCol\">\n\n                                <div className=\"owner\">\n                                    <a href={\"#people/\" + this.props.organization.owner.username} target=\"_blank\">{this.props.organization.owner.realname}</a>\n                                    {' '}\n                                    ❨{this.props.organization.owner.username}❩\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.organization}\n                                </div>\n                                <div className=\"profileOrganization\">\n                                    {this.props.organization.owner.city}, {this.props.organization.owner.state}, {this.props.organization.owner.country}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">established</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"createdAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.createdAt)}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">last updated</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"modifiedAt\">\n                            {Intl.DateTimeFormat('en-US', {\n                                month: 'long',\n                                day: 'numeric',\n                                year: 'numeric'\n                            }).format(this.props.organization.modifiedAt)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderAdminRequestsRow(org: Organization) {\n        if (!org) {\n            return\n        }\n        if (!org.relation) {\n            return\n        }\n        if (!(org.relation.type === UserRelationToOrganization.ADMIN ||\n            org.relation.type === UserRelationToOrganization.OWNER)) {\n            return\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col1\">\n                    <span className=\"label\">admin</span>\n                </div>\n                <div className=\"col2\">\n                    <div className=\"relation\">\n                        <div>\n                            <div>\n                                <Icon type=\"exclamation-circle\" theme=\"twoTone\" twoToneColor=\"orange\" /> group has\n                    {' '}\n                                <span style={{ fontWeight: 'bold' }}>{org.adminRequests.length}</span>\n                                {' '}\n                                pending request{org.adminRequests.length > 1 ? 's' : ''}\n                            </div>\n                            <div>\n                                <NavLink to={\"/manageGroupRequests/\" + this.props.organization!.id}>\n                                    <Button>Manage Requests</Button>\n                                </NavLink>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n\n    renderUserRelationship() {\n        // apparently TS is not smart enough to know this from the conditional branch in render()!\n        if (!this.props.organization) {\n            return\n        }\n        return (\n            <form className=\"table infoTable\">\n                <div className=\"row\">\n                    <div className=\"col1\">\n                        <span className=\"label\">your relation</span>\n                    </div>\n                    <div className=\"col2\">\n                        <div className=\"relation\">\n                            {this.renderRelation(this.props.organization)}\n                        </div>\n                    </div>\n                </div>\n                {this.renderAdminRequestsRow(this.props.organization)}\n            </form>\n        )\n    }\n\n    renderJoinButton() {\n        if (!this.props.organization) {\n            return\n        }\n        console.log('relation?', this.props.organization.relation)\n        if (this.props.organization.relation.type !== UserRelationToOrganization.VIEW) {\n            return\n        }\n        return (\n            <Button\n                onClick={this.onJoinClick.bind(this)}\n            >\n                Join this Organization\n                </Button>\n        )\n    }\n\n    renderHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Viewing Org \"\n                            {this.props.organization && this.props.organization.name}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        {this.renderEditButton()}\n                        <NavLink to={`/organizations`}><Button type=\"danger\" icon=\"undo\">Return to Orgs</Button></NavLink>\n                        {this.renderJoinButton()}\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (typeof this.props.organization !== 'undefined') {\n            return (\n                <div className=\"ViewOrganization\">\n                    {this.renderHeader()}\n                    <div className=\"mainRow\">\n                        <div className=\"mainColumn\">\n                            {this.renderOrg()}\n                        </div>\n                        <div className=\"infoColumn\">\n                            <div className=\"infoBox\">\n                                {this.renderUserRelationship()}\n                            </div>\n                            <div className=\"infoBox\">\n                                {this.renderInfo()}\n                            </div>\n                            <div className=\"infoBox\">\n                                {this.renderMembers()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div className=\"ViewOrganization\">\n                {this.renderLoadingHeader()}\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default ViewOrganization","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/viewOrg'\n\nimport ViewOrganization from '../components/ViewOrganization'\n\n// Props for this component\n\n// The interface for this container component\nexport interface OwnProps {\n    id: string\n}\n\n// the interface for mapStateTo props\ninterface StateProps {\n    id: string,\n    state: types.ViewOrgState\n    organization?: types.Organization\n    error?: types.AppError,\n    username: string\n}\n\n// the interface for mapDispatchToProps\ninterface DispatchProps {\n    onViewOrg: (id: string) => void,\n    onJoinOrg: () => void,\n    onCancelJoinRequest: (requestId: string) => void\n}\n\n// hmm this bit would be for the interface for the wrapped component.\n// can't really do that here, but _could_ export the interfaces above\n// and compose them thus in the wrapped component. But the wrapped component\n// should know nothing about this business\n// type Props = StateProps & DispatchProps & OwnProps\n\n\nfunction mapStateToProps({ viewOrg: { state, organization, error }, auth: { authorization: { username } } }: types.StoreState,\n    { id }: OwnProps): StateProps {\n    // TODO: of course this really needs to be an async fetch of the org info!\n    return {\n        id, state, organization, error, username\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.ViewOrgFetch>): DispatchProps {\n    return {\n        onViewOrg: (id: string) => {\n            dispatch(actions.viewOrgFetch(id) as any)\n        },\n        onJoinOrg: () => {\n            dispatch(actions.viewOrgJoinRequest() as any)\n        },\n        onCancelJoinRequest: (requestId: string) => {\n            dispatch(actions.viewOrgCancelJoinRequest(requestId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(ViewOrganization)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ViewOrganization) \n\n","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport { StoreState, Organization, AppError, UIError, UIErrorType, FieldState, EditableOrganization } from '../../types'\nimport { Model, Validation } from '../../data/model'\n\n// ACTIONS\n\n// Loading the editor\nexport interface EditOrgEdit extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT,\n    id: string\n}\n\nexport interface EditOrgEditStart extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_START,\n    id: string\n}\n\nexport interface EditOrgEditSuccess extends Action {\n    type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n    editedOrganization: EditableOrganization\n}\n\nexport interface EditOrgEditError extends Action<ActionFlag.EDIT_ORG_EDIT_ERROR> {\n    type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n    error: AppError\n}\n\n// Evaluating state of form \n\nexport interface EditOrgEvaluate extends Action<ActionFlag.EDIT_ORG_EVALUATE> {\n    type: ActionFlag.EDIT_ORG_EVALUATE\n}\n\nexport interface EditOrgEvaluateOK extends Action<ActionFlag.EDIT_ORG_EVALUATE_OK> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_OK\n}\n\nexport interface EditOrgEvaluateErrors extends Action<ActionFlag.EDIT_ORG_EVALUATE_ERRORS> {\n    type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n}\n\n// Saving\n\nexport interface EditOrgSave extends Action<ActionFlag.EDIT_ORG_SAVE> {\n    type: ActionFlag.EDIT_ORG_SAVE\n}\n\nexport interface EditOrgSaveStart extends Action<ActionFlag.EDIT_ORG_SAVE_START> {\n    type: ActionFlag.EDIT_ORG_SAVE_START\n}\n\nexport interface EditOrgSaveSuccess extends Action<ActionFlag.EDIT_ORG_SAVE_SUCCESS> {\n    type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n}\n\nexport interface EditOrgSaveError extends Action<ActionFlag.EDIT_ORG_SAVE_ERROR> {\n    type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n    error: AppError\n}\n\n// Updating name field\n\nexport interface EditOrgUpdateName extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME,\n    name: string\n}\n\nexport interface EditOrgUpdateNameSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n    name: string\n}\n\nexport interface EditOrgUpdateNameError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n    name: string,\n    error: UIError\n}\n\n// Updating gravatar hash field\n\nexport interface EditOrgUpdateGravatarHash extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH,\n    name: string\n}\n\nexport interface EditOrgUpdateGravatarHashSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n    gravatarHash: string\n}\n\nexport interface EditOrgUpdateGravatarHashError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n    gravatarHash: string,\n    error: UIError\n}\n\n// Updating id Field\n\n// export interface EditOrgUpdateId extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdSuccess {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//     id: string\n// }\n\n// export interface EditOrgUpdateIdError extends Action {\n//     type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//     id: string,\n//     error: UIError\n// }\n\n// Updating description field\n\nexport interface EditOrgUpdateDescription extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionSuccess {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n    description: string\n}\n\nexport interface EditOrgUpdateDescriptionError extends Action {\n    type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n    description: string,\n    error: UIError\n}\n\n\n// ACTION CREATORS\n\nexport function editOrgStart(id: string): EditOrgEditStart {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START,\n        id: id\n    }\n}\n\nexport function editOrgEditStart() {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_START\n    }\n}\n\nexport function editOrgEditSuccess(editedOrganization: EditableOrganization) {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_SUCCESS,\n        editedOrganization: editedOrganization\n    }\n}\n\nexport function editOrgEditError(error: AppError): EditOrgEditError {\n    return {\n        type: ActionFlag.EDIT_ORG_EDIT_ERROR,\n        error: error\n    }\n}\n\n// Evaluate\n\nexport function editOrgEvaluateOk(): EditOrgEvaluateOK {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_OK\n    }\n}\n\nexport function EditOrgEvaluateErrors(): EditOrgEvaluateErrors {\n    return {\n        type: ActionFlag.EDIT_ORG_EVALUATE_ERRORS\n    }\n}\n\n// Save\n\n// export function editOrgSave(): EditOrgSave {\n//     return {\n//         type: ActionFlag.EDIT_ORG_SAVE\n//     }\n// }\n\nexport function editOrgSaveStart(): EditOrgSaveStart {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_START\n    }\n}\n\nexport function editOrgSaveSuccess(): EditOrgSaveSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_SUCCESS\n    }\n}\n\nexport function editOrgSaveError(error: AppError): EditOrgSaveError {\n    return {\n        type: ActionFlag.EDIT_ORG_SAVE_ERROR,\n        error: error\n    }\n}\n\n// Update Name\n\nexport function editOrgUpdateNameSuccess(name: string): EditOrgUpdateNameSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_SUCCESS,\n        name: name\n    }\n}\n\nexport function editOrgUpdateNameError(name: string, error: UIError): EditOrgUpdateNameError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_NAME_ERROR,\n        name: name,\n        error: error\n    }\n}\n\n// export function editOrgUpdateIdSuccess(id: string): EditOrgUpdateIdSuccess {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_SUCCESS,\n//         id: id\n//     }\n// }\n\n// Update Gravatar Hash\n\nexport function editOrgUpdateGravatarHashSuccess(gravatarHash: string): EditOrgUpdateGravatarHashSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_SUCCESS,\n        gravatarHash: gravatarHash\n    }\n}\n\nexport function editOrgUpdateGravatarHashError(gravatarHash: string, error: UIError): EditOrgUpdateGravatarHashError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_GRAVATAR_HASH_ERROR,\n        gravatarHash: gravatarHash,\n        error: error\n    }\n}\n\n\n// Update Id\n\n// export function editOrgUpdateIdError(id: string, error: UIError): EditOrgUpdateIdError {\n//     return {\n//         type: ActionFlag.EDIT_ORG_UPDATE_ID_ERROR,\n//         id: id,\n//         error: error\n//     }\n// }\n\nexport function editOrgUpdateDescriptionSuccess(description: string): EditOrgUpdateDescriptionSuccess {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_SUCCESS,\n        description: description\n    }\n}\n\nexport function editOrgUpdateDescriptionError(description: string, error: UIError): EditOrgUpdateDescriptionError {\n    return {\n        type: ActionFlag.EDIT_ORG_UPDATE_DESCRIPTION_ERROR,\n        description: description,\n        error: error\n    }\n}\n\n// ACTION THUNKS\n\nexport function editOrgEdit(organizationId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgStart(organizationId))\n\n        const {\n            auth: { authorization: { token, username } },\n            app: { config }\n        } = getState()\n\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        return model.getOrg(organizationId)\n            .then((org) => {\n                const editableOrg: EditableOrganization = {\n                    id: {\n                        value: org.id,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    name: {\n                        value: org.name,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    gravatarHash: {\n                        value: org.gravatarHash,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    },\n                    description: {\n                        value: org.description,\n                        status: FieldState.UNEDITED_OK,\n                        error: {\n                            type: UIErrorType.NONE,\n                            message: ''\n                        }\n                    }\n                }\n                dispatch(editOrgEditSuccess(editableOrg))\n            })\n            .catch((err) => {\n                console.error('load org error', err)\n                dispatch(editOrgEditError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\n\nexport function editOrgSave() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(editOrgSaveStart())\n\n        const { auth: { authorization: { token, username } },\n            editOrg: { organizationId, editedOrganization },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!editedOrganization) {\n            dispatch(editOrgSaveError({\n                code: 'app',\n                message: 'The new organization data does not yet exist'\n            }))\n            return;\n        }\n\n        const update = {\n            name: editedOrganization.name.value,\n            gravatarHash: editedOrganization.gravatarHash.value,\n            description: editedOrganization.description.value\n        }\n\n        model.updateOrg(organizationId, update)\n            .then(() => {\n                dispatch(editOrgSaveSuccess())\n            })\n            .catch((error) => {\n                console.error('error adding', editedOrganization, error)\n                dispatch(editOrgSaveError({\n                    code: 'invalid',\n                    message: error.message\n                }))\n            })\n    }\n}\n\nexport function editOrgEvaluate() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { editOrg: { editedOrganization } } = getState()\n\n        const { editOrg: editState } = getState()\n\n        if (!editedOrganization) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.name.status === FieldState.EDITED_OK ||\n            editedOrganization.name.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        // if (editedOrganization.id.status !== FieldState.EDITED_OK) {\n        //     dispatch(EditOrgEvaluateErrors())\n        //     return\n        // }\n\n        if (!(editedOrganization.gravatarHash.status === FieldState.EDITED_OK ||\n            editedOrganization.gravatarHash.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        if (!(editedOrganization.description.status === FieldState.EDITED_OK ||\n            editedOrganization.description.status === FieldState.UNEDITED_OK)) {\n            dispatch(EditOrgEvaluateErrors())\n            return\n        }\n\n        dispatch(editOrgEvaluateOk())\n    }\n}\n\nexport function editOrgUpdateName(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validatedName, error] = Validation.validateOrgName(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateNameError(validatedName, error))\n        } else {\n            dispatch(editOrgUpdateNameSuccess(validatedName))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function editOrgUpdateGravatarHash(name: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>) => {\n        const [validateGravatarHash, error] = Validation.validateOrgGravatarHash(name)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateGravatarHashError(validateGravatarHash, error))\n        } else {\n            dispatch(editOrgUpdateGravatarHashSuccess(validateGravatarHash))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}\n\nexport function editOrgUpdateDescription(description: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>,\n        getState: () => StoreState) => {\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n        const [validatedDescription, error] = model.validateOrgDescription(description)\n\n        if (error.type === UIErrorType.ERROR) {\n            dispatch(editOrgUpdateDescriptionError(validatedDescription, error))\n        } else {\n            dispatch(editOrgUpdateDescriptionSuccess(validatedDescription))\n        }\n        dispatch(editOrgEvaluate())\n    }\n}","import * as React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport marked from 'marked';\nimport { Button, Icon, Modal } from 'antd';\nimport md5 from 'md5'\n\nimport { EditableOrganization, SaveState, ValidationState, EditState } from '../types';\n\nimport './EditOrganization.css'\n\nimport Header from './Header';\n\nexport interface EditOrganizationProps {\n    id: string,\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization,\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void;\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\n\nexport interface EditOrganizationState {\n    cancelToBrowser: boolean;\n    cancelToViewer: boolean;\n}\n\nclass EditOrganization extends React.Component<EditOrganizationProps, EditOrganizationState> {\n\n    origin: string;\n\n    gravatarEmail: React.RefObject<HTMLInputElement>\n\n    constructor(props: EditOrganizationProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false,\n            cancelToViewer: false\n        }\n\n        this.gravatarEmail = React.createRef()\n\n        this.origin = document.location!.origin\n\n        this.props.onEditOrgEdit(this.props.id)\n    }\n\n    onShowInfo() {\n        Modal.info({\n            title: 'Organization Editor Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the organizations editor...</p>\n                </div>\n            )\n        })\n    }\n\n\n    onGravatarEmailSync() {\n        let email;\n        if (this.gravatarEmail.current) {\n            email = this.gravatarEmail.current.value\n        } else {\n            email = 'n/a'\n        }\n        const hashed = md5(email)\n        this.props.onUpdateGravatarHash(hashed);\n    }\n\n    onClickCancelToBrowser() {\n        if (!this.isModified()) {\n            this.setState({ cancelToBrowser: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToBrowser: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onClickCancelToViewer() {\n        if (!this.isModified()) {\n            this.setState({ cancelToViewer: true })\n            return\n        }\n\n        const confirm = () => {\n            this.setState({ cancelToViewer: true })\n        }\n        const cancel = () => {\n        }\n        Modal.confirm({\n            title: 'Leave the editor?',\n            content: (\n                <div>\n                    <p>You have made changes on this edit form.</p>\n\n                    <p>If you leave the editor without saving, any <i>changes they will be lost</i>.</p>\n\n                    <p><b>Continue to leave the editor?</b></p>\n                </div>\n            ),\n            onOk: confirm,\n            onCancel: cancel,\n            okText: 'Yes',\n            cancelText: 'No'\n        })\n    }\n\n    onSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.props.onEditOrgSave();\n    }\n\n    onNameChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateName(e.target.value);\n    }\n\n    onGravatarHashChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        this.props.onUpdateGravatarHash(e.target.value);\n    }\n\n    onDescriptionChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\n        e.persist()\n        this.props.onUpdateDescription(e.target.value);\n    }\n\n    onIdChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.persist();\n        // this.props.onUpdateId(e.target.value);\n        console.warn('no updating id, naughty!')\n    }\n\n    canSave() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            this.props.validationState === ValidationState.VALID &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY ||\n                this.props.saveState === SaveState.SAVED)\n        )\n    }\n\n    isModified() {\n        return (\n            this.props.editState === EditState.EDITED &&\n            (this.props.saveState === SaveState.NEW ||\n                this.props.saveState === SaveState.READY)\n        )\n    }\n\n    renderForm() {\n        return (\n            <form id=\"editOrganizationForm\" className=\"editor\" onSubmit={this.onSubmit.bind(this)}>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">name</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.name.value || ''}\n                            onChange={this.onNameChange.bind(this)} />\n                        {this.props.editedOrganization.name.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.name.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row gravatarHash\">\n                    <div className=\"col1 field-label\">gravatar hash</div>\n                    <div className=\"col2\">\n                        <div style={{ display: 'flex', flexDirection: 'row', marginBottom: '4px' }}>\n                            <div style={{ flex: '1 1 0px' }}>\n                                <input ref={this.gravatarEmail} placeholder=\"Provide your gravatar-linked email address, if any\" />\n                            </div>\n                            <div style={{ flex: '0 0 auto' }}>\n                                <Button\n                                    icon=\"arrow-down\"\n                                    style={{ height: '100%' }}\n                                    onClick={this.onGravatarEmailSync.bind(this)} />\n                            </div>\n                        </div>\n\n                        <input value={this.props.editedOrganization.gravatarHash.value || ''}\n                            onChange={this.onGravatarHashChange.bind(this)} />\n                        {this.props.editedOrganization.gravatarHash.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.gravatarHash.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1 field-label\">id</div>\n                    <div className=\"col2\">\n                        <input value={this.props.editedOrganization.id.value || ''}\n                            onChange={this.onIdChange.bind(this)} />\n                        {this.props.editedOrganization.id.error ? (<span style={{ color: 'red' }}>{this.props.editedOrganization.id.error.message}</span>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\" style={{ flex: '1 1 0px', minHeight: '30em', maxHeight: '60em' }}>\n                    <div className=\"col1 field-label\">description</div>\n                    <div className=\"col2\">\n                        <textarea value={this.props.editedOrganization.description.value || ''}\n                            onChange={this.onDescriptionChange.bind(this)} />\n                        {this.props.editedOrganization.description.error ? (<div style={{ color: 'red' }}>{this.props.editedOrganization.description.error.message}</div>) : ''}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col1\"></div>\n                    <div className=\"col2\">\n                        {/* <div className=\"footer\">\n                            <Button form=\"newOrganizationForm\"\n                                key=\"submit\"\n                                htmlType=\"submit\">Save</Button>\n                            <Button type=\"danger\"\n                                onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n                        </div> */}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n\n    getOrgAvatarUrl(org: EditableOrganization) {\n        // const defaultImages = [\n        //     'orgs-64.png',\n        //     'unicorn-64.png'\n        // ]\n        // if (!org.gravatarHash.value) {\n        //     return defaultImages[Math.floor(Math.random() * 2)]\n        // }\n        if (!org.gravatarHash.value) {\n            return 'unicorn-64.png'\n        }\n        const gravatarDefault = 'identicon';\n\n        return 'https://www.gravatar.com/avatar/' + org.gravatarHash.value + '?s=64&amp;r=pg&d=' + gravatarDefault;\n    }\n\n    renderOrgAvatar(org: EditableOrganization) {\n        return (\n            <img style={{ width: 64, height: 64 }}\n                src={this.getOrgAvatarUrl(org)} />\n        )\n    }\n\n    renderPreview() {\n        return <form className=\"preview\">\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"name\">\n                        {this.props.editedOrganization.name.value || ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"gravatarHash\">\n                        {this.renderOrgAvatar(this.props.editedOrganization)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col2\">\n                    <div className=\"id\">\n                        <span style={{ color: 'silver' }}>{this.origin}/#orgs/organizations/</span>\n                        {this.props.editedOrganization.id.value || (<span style={{ fontStyle: 'italic' }}>organization id here</span>)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\" style={{ flex: '1 1 0px' }}>\n                <div className=\"col2\">\n                    <div className=\"description\"\n                        dangerouslySetInnerHTML={({ __html: marked(this.props.editedOrganization.description.value || '') })}\n                    />\n                </div>\n            </div>\n        </form>\n    }\n\n    renderState() {\n        const { editState, validationState, saveState } = this.props;\n        const label = 'edit: ' + editState + ', valid: ' + validationState + ', save: ' + saveState\n        return (\n            <span style={{ marginRight: '10px' }}>{label}</span>\n        )\n    }\n\n    renderHeader() {\n        const orgName = this.props.editedOrganization.name.value || (<span style={{ fontStyle: 'italic', color: 'gray' }}>org name will appear here when you edit the name field</span>)\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            {/* <FaPlusCircle style={{ verticalAlign: 'middle' }} /> */}\n                            <Icon type=\"edit\" />\n                            {' '}\n                            Editing Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        {/* {this.renderState()} */}\n                        <Button icon=\"save\"\n                            form=\"editOrganizationForm\"\n                            key=\"submit\"\n                            disabled={!this.canSave.call(this)}\n                            htmlType=\"submit\">\n                            {/* <Icon type=\"save\" /> */}\n                            {/* <FaSave style={{ verticalAlign: 'center' }} /> */}\n                            Save\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToViewer.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to this Org\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToBrowser.bind(this)}>\n                            {/* <FaUndo style={{ verticalAlign: 'center' }} />  */}\n                            Return to Orgs Browser\n                        </Button>\n                        <Button shape=\"circle\" icon=\"info\" onClick={this.onShowInfo.bind(this)}></Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    // renderFooter() {\n    //     return (\n    //         <div className=\"footerRow\">\n    //             <div className=\"editorColumn\">\n    //                 <div className=\"row\">\n    //                     <div className=\"col1\">\n    //                     </div>\n    //                     <div className=\"col2\">\n    //                         <div className=\"footer\">\n    //                             <Button form=\"editOrganizationForm\"\n    //                                 key=\"submit\"\n    //                                 htmlType=\"submit\">Save</Button>\n    //                             <Button type=\"danger\"\n    //                                 onClick={this.onClickCancel.bind(this)}>Cancel</Button>\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //             <div className=\"previewColumn\">\n\n    //             </div>\n    //         </div>\n    //     )\n    // }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    render() {\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        if (this.state.cancelToViewer) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.id} />\n        }\n\n        // // TODO: this is just a prop for today.\n        // if (this.props.saveState === SaveState.SAVED) {\n        //     return <Redirect push to={\"/editOrganization/\" + this.props.editedOrganization.id.value} />\n        // }\n\n        if (!this.props.editedOrganization) {\n            return (\n                <div className=\"EditOrganization\">\n                    {this.renderLoadingHeader()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"EditOrganization\">\n                {this.renderHeader()}\n                <div className=\"mainRow\">\n                    <div className=\"editorColumn\">\n                        <h3>Editor</h3>\n                        {this.renderForm()}\n                    </div>\n                    <div className=\"previewColumn\">\n                        <h3>Preview</h3>\n                        {this.renderPreview()}\n                    </div>\n                </div>\n                {/* {this.renderFooter()} */}\n            </div>\n        )\n    }\n}\n\nexport default EditOrganization","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { StoreState, EditableOrganization, EditState, SaveState, ValidationState } from '../types';\nimport {\n    EditOrgEdit, editOrgSave,\n    editOrgUpdateName,\n    // editOrgUpdateId, \n    editOrgUpdateDescription, editOrgEdit, editOrgUpdateGravatarHash\n} from '../redux/actions/editOrg';\n\nimport EditOrganization from '../components/EditOrganization';\n\ninterface OwnProps {\n    id: string\n}\n\nexport interface StateProps {\n    editState: EditState,\n    saveState: SaveState,\n    validationState: ValidationState,\n    editedOrganization: EditableOrganization\n}\n\nexport interface DispatchProps {\n    onEditOrgEdit: (id: string) => void,\n    onEditOrgSave: () => void,\n    onUpdateName: (name: string) => void,\n    onUpdateGravatarHash: (gravatarHash: string) => void,\n    // onUpdateId: (id: string) => void,\n    onUpdateDescription: (description: string) => void\n}\n\nexport function mapStateToProps({ editOrg: { editState, saveState, validationState, editedOrganization } }: StoreState): StateProps {\n    return {\n        editState,\n        saveState,\n        validationState,\n        editedOrganization\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<EditOrgEdit>): DispatchProps {\n    return {\n        onEditOrgEdit: (id: string) => {\n            dispatch(editOrgEdit(id) as any)\n        },\n        onEditOrgSave: () => {\n            dispatch(editOrgSave() as any)\n        },\n        onUpdateName: (name: string) => {\n            dispatch(editOrgUpdateName(name) as any)\n        },\n        onUpdateGravatarHash: (gravatarHash: string) => {\n            dispatch(editOrgUpdateGravatarHash(gravatarHash) as any)\n        },\n        // onUpdateId: (id) => {\n        //     dispatch(editOrgUpdateId(id) as any)\n        // },\n        onUpdateDescription: (description) => {\n            dispatch(editOrgUpdateDescription(description) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(EditOrganization)","import * as React from 'react'\nimport './Auth.css'\n\nimport * as types from '../types'\nimport { Button } from 'antd';\n\n\nexport interface AuthState {\n\n}\n\nclass Auth extends React.Component<types.AuthProps, AuthState> {\n\n    tokenRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: types.AuthProps) {\n        super(props)\n\n        this.tokenRef = React.createRef()\n\n        this.props.checkAuth()\n    }\n\n    onLogoutClick() {\n        this.props.onRemoveAuthorization()\n    }\n\n    onLoginClick() {\n        if (this.tokenRef.current === null) {\n            return\n        }\n        const token = this.tokenRef.current.value\n        if (token.length === 0) {\n            return\n        }\n        this.props.onAddAuthorization(token)\n    }\n\n    buildAuthForm() {\n        return (\n            <div className=\"Auth-form\">\n                Token: <input ref={this.tokenRef} />\n                <Button\n                    icon=\"save\"\n                    htmlType=\"submit\"\n                    onClick={this.onLoginClick.bind(this)} >\n                    Assign Token\n                </Button>\n            </div>\n        )\n    }\n\n    buildAuthToolbar() {\n        return (\n            <div className=\"Auth-toolbar\">\n                Logged in as <b><span>{this.props.authorization.authorization.realname}</span> (<span>{this.props.authorization.authorization.username}</span></b>)\n                {' '}\n                <Button icon=\"logout\" onClick={this.onLogoutClick.bind(this)}>Sign out</Button>\n            </div>\n        )\n    }\n\n    buildAuthDev() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.buildAuthToolbar()}\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized! Enter a user token below</p>\n                        {this.buildAuthForm()}\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Error</p>\n                        {this.props.authorization.message}\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n    }\n\n    buildAuthProd() {\n        switch (this.props.authorization.status) {\n            case types.AuthState.NONE:\n            case types.AuthState.CHECKING:\n                return (\n                    <div></div>\n                )\n            case types.AuthState.AUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-authorized\">\n                        {this.props.children}\n                    </div>\n                )\n            case types.AuthState.UNAUTHORIZED:\n                return (\n                    <div className=\"Auth Auth-unauthorized\">\n                        <p>Not authorized!</p>\n                    </div>\n                )\n            case types.AuthState.ERROR:\n                return (\n                    <div className=\"Auth Auth-error\">\n                        <p>Error: ??</p>\n                    </div>\n                )\n            default:\n                return (\n                    <div></div>\n                )\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"Auth\">\n                {this.props.hosted ? this.buildAuthProd() : this.buildAuthDev()}\n            </div>\n        )\n\n    }\n}\n\nexport default Auth","\nexport interface RootInfo {\n    version: string,\n    servertime: number\n}\n\ninterface AuthEndpoints {\n    root: string,\n    tokenInfo: string,\n    apiMe: string,\n    me: string,\n    loginStart: string,\n    loginChoice: string,\n    loginCreate: string,\n    loginUsernameSuggest: string,\n    loginPick: string,\n    loginCancel: string,\n    logout: string,\n    linkStart: string,\n    linkCancel: string,\n    linkChoice: string,\n    linkPick: string,\n    linkRemove: string,\n    tokens: string,\n    tokensRevoke: string,\n    tokensRevokeAll: string,\n    userSearch: string,\n    adminUserSearch: string,\n    adminUser: string\n}\n\nconst endpoints: AuthEndpoints = {\n    root: '',\n    tokenInfo: 'api/V2/token',\n    apiMe: 'api/V2/me',\n    me: 'me',\n    loginStart: 'login/start',\n    logout: 'logout',\n    loginChoice: 'login/choice',\n    loginCreate: 'login/create',\n    loginUsernameSuggest: 'login/suggestname',\n    loginPick: 'login/pick',\n    loginCancel: 'login/cancel',\n    linkStart: 'link/start',\n    linkCancel: 'link/cancel',\n    linkChoice: 'link/choice',\n    linkPick: 'link/pick',\n    linkRemove: 'me/unlink',\n    tokens: 'tokens',\n    tokensRevoke: 'tokens/revoke',\n    tokensRevokeAll: 'tokens/revokeall',\n    userSearch: 'api/V2/users/search',\n    adminUserSearch: 'api/V2/admin/search',\n    adminUser: 'api/V2/admin/user'\n}\n\nexport interface TokenInfo {\n    created: number,\n    expires: number,\n    id: string,\n    name: string | null,\n    token: string,\n    type: string,\n    user: string,\n    cachefor: number\n}\n\nexport interface Identity {\n    id: string,\n    provider: string,\n    username: string\n}\n\nexport interface Role {\n    id: string,\n    desc: string\n}\n\nexport interface Account {\n    created: number,\n    customroles: Array<string>,\n    display: string,\n    email: string,\n    idents: Array<Identity>,\n    lastLogin: number,\n    local: boolean,\n    roles: Array<Role>,\n    user: string\n}\nexport class AuthClient {\n    url: string;\n\n    constructor({ url }: { url: string }) {\n        this.url = url\n    }\n\n    makePath(path: Array<string> | string): string {\n        if (typeof path === 'string') {\n            return [this.url].concat([path]).join('/');\n        }\n        return [this.url].concat(path).join('/');\n    }\n\n\n    root(): Promise<RootInfo> {\n        return fetch(this.makePath([endpoints.root]), {\n            headers: {\n                Accept: 'application/json'\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                return response.json()\n            })\n            .then((result) => {\n                return result as RootInfo\n            })\n    }\n\n    getTokenInfo(token: string): Promise<TokenInfo> {\n        return fetch(this.makePath([endpoints.tokenInfo]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as TokenInfo\n            })\n    }\n\n    getMe(token: string): Promise<Account> {\n        return fetch(this.makePath([endpoints.apiMe]), {\n            headers: {\n                Accept: 'application/json',\n                Authorization: token\n            },\n            mode: 'cors'\n        })\n            .then((response) => {\n                if (response.status !== 200) {\n                    throw new Error(response.statusText)\n                }\n                return response.json()\n            })\n            .then((result) => {\n                return result as Account\n            })\n    }\n\n\n    // getInfo() : Promise<GroupsServiceInfo> {\n    //     return fetch(this.url + '/', {\n    //         headers: {\n    //             Authorization: this.token,\n    //             Accept: 'application/json'\n    //         },\n    //         mode: 'cors'\n    //     })\n    //         .then((response) => {\n    //             return response.json();\n    //         })\n    //         .then((result) => {\n    //             return result as GroupsServiceInfo;\n    //         });\n    // }\n\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport * as Cookies from 'es-cookie'\n\nimport { ActionFlag } from './index'\nimport { AppError, StoreState } from '../../types';\nimport { AuthClient, TokenInfo, Account } from '../../data/auth';\n\n// Action Definitions\n\nexport interface AuthCheck extends Action {\n    type: ActionFlag.AUTH_CHECK\n}\n\nexport interface AuthCheckStart extends Action {\n    type: ActionFlag.AUTH_CHECK_START\n}\n\nexport interface AuthCheckError extends Action {\n    type: ActionFlag.AUTH_CHECK_ERROR,\n    error: AppError\n}\n\nexport interface AuthAuthorized extends Action {\n    type: ActionFlag.AUTH_AUTHORIZED,\n    token: string\n    username: string,\n    realname: string,\n    roles: Array<string>\n}\n\nexport interface AuthUnauthorized extends Action {\n    type: ActionFlag.AUTH_UNAUTHORIZED\n}\n\nexport interface AuthRemoveAuthorization extends Action {\n    type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n}\n\nexport interface AuthAddAuthorization extends Action {\n    type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n    token: string\n}\n\n// Action Creators\n\n\nexport function authCheckStart(): AuthCheckStart {\n    return {\n        type: ActionFlag.AUTH_CHECK_START\n    }\n}\n\nexport function authCheckError(error: AppError): AuthCheckError {\n    return {\n        type: ActionFlag.AUTH_CHECK_ERROR,\n        error\n    }\n}\n\nexport function authAuthorized(token: string, username: string, realname: string, roles: Array<string>): AuthAuthorized {\n    return {\n        type: ActionFlag.AUTH_AUTHORIZED,\n        token, username, realname, roles\n    }\n}\n\nexport function authUnauthorized(): AuthUnauthorized {\n    return {\n        type: ActionFlag.AUTH_UNAUTHORIZED\n    }\n}\n\n// export function authRemoveAuthorization(): AuthRemoveAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_REMOVE_AUTHORIZATION\n//     }\n// }\n\n// export function authAddAuthorization(token: string): AuthAddAuthorization {\n//     return {\n//         type: ActionFlag.AUTH_ADD_AUTHORIZATION,\n//         token: token\n//     }\n// }\n\n// Action Thunks\n\nexport function checkAuth() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        dispatch(authCheckStart())\n\n        // TODO: get the auth from the kbase-ui integration api, perhaps a postmessage call\n\n        const token = Cookies.get('kbase_session')\n        if (!token) {\n            dispatch(authUnauthorized())\n            return\n        }\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function authRemoveAuthorization() {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // remove cookie\n        Cookies.remove('kbase_session')\n\n        // remove auth in state\n        dispatch(authUnauthorized())\n    }\n}\n\nexport function authAddAuthorization(token: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        // add cookie\n        Cookies.set('kbase_session', token)\n\n        // TODO: get auth info\n        const auth = new AuthClient({ url: '/services/auth' })\n        Promise.all([\n            auth.getTokenInfo(token),\n            auth.getMe(token)\n        ])\n            .then(([tokenInfo, account]) => {\n                const roles = account.roles.map(({ id, desc }) => id)\n                dispatch(authAuthorized(token, account.user, account.display, roles))\n            })\n            .catch((err) => {\n                console.error('auth check error', err)\n                dispatch(authCheckError({\n                    code: 'error',\n                    message: err.message\n                }))\n            })\n\n    }\n}","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { StoreState, AuthState, Authorization } from '../types'\nimport Auth from '../components/Auth'\nimport * as actions from '../redux/actions/auth'\n\nexport interface OwnProps {\n    hosted: boolean\n}\n\ninterface StateProps {\n    authorization: Authorization\n    // authStatus: AuthState,\n    // token: string | null,\n    // username: string | null,\n    // realname: string | null,\n}\n\ninterface DispatchProps {\n    checkAuth: () => void,\n    onRemoveAuthorization: () => void,\n    onAddAuthorization: (token: string) => void\n}\n\nfunction mapStateToProps(state: StoreState, props: OwnProps): StateProps {\n    const { auth } = state\n    return {\n        authorization: auth\n        // authStatus: status,\n        // token: authorization.token || null,\n        // username: authorization.username || null,\n        // realname: authorization.realname || null\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        checkAuth: () => {\n            dispatch(actions.checkAuth() as any)\n        },\n        onRemoveAuthorization: () => {\n            dispatch(actions.authRemoveAuthorization() as any)\n        },\n        onAddAuthorization: (token: string) => {\n            dispatch(actions.authAddAuthorization(token) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, StoreState>(mapStateToProps, mapDispatchToProps)(Auth)","\nimport uuidv4 from 'uuid/v4'\n\ninterface ListenerParams {\n    name: string,\n    onSuccess: (payload: Payload) => void,\n    onError: (error: Error) => void\n}\n\nclass Listener {\n    name: string;\n    onSuccess: (payload: Payload) => void;\n    onError: (error: Error) => void;\n\n    constructor({ name, onSuccess, onError }: ListenerParams) {\n        this.name = name;\n        this.onSuccess = onSuccess;\n        this.onError = onError;\n    }\n}\n\ntype Payload = any;\n\ninterface WaitingListenerParams extends ListenerParams {\n    timeout?: number\n}\n\nclass WaitingListener extends Listener {\n    started: Date;\n    timeout: number;\n\n    constructor(params: WaitingListenerParams) {\n        super(params);\n        this.started = new Date();\n        this.timeout = params.timeout || 5000;\n    }\n}\n\ninterface Envelope {\n    channelId: string\n    id: string\n}\n\nclass Message {\n    name: string;\n    payload: any;\n    id: string;\n    created: Date;\n    channel: any\n    envelope: Envelope | null\n\n    constructor({ name, payload, channel }: { name: string, payload: any, channel: any }) {\n        this.name = name\n        this.payload = payload\n        this.id = uuidv4()\n        this.created = new Date()\n        this.channel = channel\n        this.envelope = null;\n    }\n\n    getMessage() {\n        return {\n            envelope: {\n                id: this.id,\n                created: this.created,\n                channel: this.channel\n            },\n            name: this.name,\n            payload: this.payload\n        };\n    }\n}\n\ninterface Handler {\n    started: Date,\n    handler: (response: any) => any\n}\n\ninterface ChannelParams {\n    window: Window,\n    host: string,\n    channelId?: string\n}\n\nexport class Channel {\n    window: Window\n    host: string\n    id: string\n    awaitingResponse: Map<string, Handler>\n    waitingListeners: Map<string, Array<Listener>>\n    listeners: Map<string, Array<Listener>>\n    lastId: number\n    sentCount: number\n    receivedCount: number\n    unwelcomeReceivedCount: number\n    unwelcomeReceivedCountThreshhold: number\n    unwelcomeReceiptWarning: boolean\n    unwelcomeReceiptWarningCount: number\n    currentListener: ((message: MessageEvent) => void) | null\n\n    constructor(params: ChannelParams) {\n        // The given window upon which we will listen for messages.\n        this.window = params.window;\n\n        // The host for the window; required for postmessage\n        if (this.window.document === null) {\n            throw new Error('No document')\n        }\n        if (this.window.document.location === null) {\n            throw new Error('No location')\n        }\n        this.host = params.host || this.window.document.location.origin;\n\n        // The channel id. Used to filter all messages received to\n        // this channel.\n        this.id = params.channelId || uuidv4()\n\n\n        this.awaitingResponse = new Map<string, Handler>()\n        this.waitingListeners = new Map<string, Array<Listener>>()\n        this.listeners = new Map<string, Array<Listener>>()\n\n        this.lastId = 0\n        this.sentCount = 0\n        this.receivedCount = 0\n\n        this.unwelcomeReceivedCount = 0\n        this.unwelcomeReceivedCountThreshhold = 100\n        this.unwelcomeReceiptWarning = true\n        this.unwelcomeReceiptWarningCount = 0\n        this.currentListener = null\n    }\n\n    genId() {\n        this.lastId += 1;\n        return 'msg_' + String(this.lastId);\n    }\n\n    receiveMessage(messageEvent: MessageEvent) {\n        const message = messageEvent.data as Message;\n        if (!message) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message data; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!message.envelope) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('No message envelope, not from KBase; message ignored', messageEvent);\n            }\n            return;\n        }\n        if (!(message.envelope.channelId === this.id)) {\n            this.unwelcomeReceivedCount++;\n            if (this.unwelcomeReceiptWarning) {\n                console.warn('Message envelope does not match this channel\\'s id', messageEvent);\n            }\n            return;\n        }\n        if (this.unwelcomeReceiptWarningCount > this.unwelcomeReceivedCountThreshhold) {\n            this.unwelcomeReceiptWarning = false;\n            console.warn('Unwelcome message warning disabled after ' + this.unwelcomeReceiptWarningCount + ' instances.');\n        }\n\n        // A message sent as a request will have registered a response handler\n        // in the awaitingResponse hash, using a generated id as the key.\n        // TODO: to to rethink using the message id here. Perhaps somehting like a\n        // chain of ids, the root of which is the origination id, which is the one\n        // known here when it it is sent; the message \"id\" should be assigned whenver\n        // a message is sent, but a response  message would include the original\n        // message in the \"chain\"...\n\n        // We can also have awaiting responses without an originating request.\n        // These are useful for, e.g., a promise which awaits a message to be sent\n        // within some window...\n        if (message.envelope.id && this.awaitingResponse.has(message.envelope.id)) {\n            try {\n                const response = this.awaitingResponse.get(message.envelope.id)\n                this.awaitingResponse.delete(message.envelope.id)\n                if (response) {\n                    response.handler(message.payload)\n                }\n            } catch (ex) {\n                console.error('Error handling response for message ', message, ex);\n            }\n        }\n\n        // and also awaiting by message name. Like a listener, but they are only used\n        // once.\n        if (this.waitingListeners.has(message.name)) {\n            const awaiting = this.waitingListeners.get(message.name)!\n            this.waitingListeners.delete(message.name)\n            awaiting.forEach((listener) => {\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n\n        // Otherwise, permanently registered handlers are found in the listeners for the\n        // message name.\n        if (this.listeners.has(message.name)) {\n            this.listeners.get(message.name)!.forEach((listener) => {\n                if (!listener.onSuccess) {\n                    console.warn('no handler for listener!', listener);\n                }\n                try {\n                    listener.onSuccess(message.payload);\n                } catch (ex) {\n                    console.error('Error handling listener for message', message, ex);\n                    if (listener.onError) {\n                        listener.onError(ex);\n                    }\n                }\n            });\n        }\n    }\n\n    listen(listener: Listener) {\n        if (!this.listeners.has(listener.name)) {\n            this.listeners.set(listener.name, [])\n        }\n        this.listeners.get(listener.name)!.push(listener)\n    }\n\n    on(messageId: string, success: (payload: any) => any, error: (error: Error) => void) {\n        this.listen(new Listener({\n            name: messageId,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    sendMessage(message: Message) {\n        this.window.postMessage(message.getMessage(), this.host);\n    }\n\n    send(name: string, payload: Payload) {\n        const message = new Message({ name, payload, channel: this.id });\n        this.sendMessage(message);\n    }\n\n    sendRequest(message: Message, handler: (response: any) => any) {\n        this.awaitingResponse.set('message.id', {\n            started: new Date(),\n            handler: handler\n        })\n\n        this.sendMessage(message);\n    }\n\n    request(name: string, payload: Payload) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.sendRequest(new Message({ name, payload, channel: this.id }), (response: any) => {\n                    resolve(response);\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    startMonitor() {\n        window.setTimeout(() => {\n            const now = new Date().getTime();\n\n            // first take care of listeners awaiting a message.\n            for (const [id, listeners] of this.waitingListeners.entries()) {\n                const newListeners = listeners.filter((listener) => {\n                    if (listener instanceof WaitingListener) {\n                        const elapsed = now - listener.started.getTime();\n                        if (elapsed > listener.timeout) {\n                            try {\n                                if (listener.onError) {\n                                    listener.onError(new Error('timout after ' + elapsed));\n                                }\n                            } catch (ex) {\n                                console.error('Error calling error handler', id, ex);\n                            }\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                });\n                if (newListeners.length === 0) {\n                    this.waitingListeners.delete(id)\n                }\n            }\n\n            if (this.waitingListeners.size > 0) {\n                this.startMonitor()\n            }\n        }, 100);\n    }\n\n    listenOnce(listener: WaitingListener) {\n        if (!this.waitingListeners.has(listener.name)) {\n            this.waitingListeners.set(listener.name, [])\n        }\n        this.waitingListeners.get(listener.name)!.push(listener);\n        if (listener.timeout) {\n            this.startMonitor();\n        }\n    }\n\n    once(name: string, success: (payload: Payload) => void, error: (error: Error) => void) {\n        this.listenOnce(new WaitingListener({\n            name: name,\n            onSuccess: success,\n            onError: error\n        }));\n    }\n\n    when(name: string, timeout: number) {\n        return new Promise((resolve, reject) => {\n            return this.listenOnce(new WaitingListener({\n                name: name,\n                timeout: timeout,\n                onSuccess: (payload) => {\n                    resolve(payload);\n                },\n                onError: (error) => {\n                    reject(error);\n                }\n            }));\n        });\n    }\n\n    stats() {\n        return {\n            sent: this.sentCount,\n            received: this.receivedCount\n        };\n    }\n\n    attach(window: Window) {\n        this.window = window;\n    }\n\n    start() {\n        this.currentListener = (message: MessageEvent) => {\n            this.receiveMessage(message);\n        };\n        this.window.addEventListener('message', this.currentListener, false);\n    }\n\n    stop() {\n        if (this.currentListener) {\n            this.window.removeEventListener('message', this.currentListener, false);\n        }\n    }\n}\n","import uuid from 'uuid/v4'\nimport { Channel } from './windowChannel'\nimport { runInThisContext } from 'vm';\n\nexport interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n/*\n channelId: \"3b33179e-8a6d-4ae9-bc95-af4c0492eaa6\"\nframeId: \"frame_kb_html_be553ee5-645c-4737-80ba-dcb642632f0c\"\nhostId: \"host_kb_html_9a3b5d5d-bb92-43ff-a443-73267aa31323\"\nparams: {}\nparentHost: \"https://ci.kbase.us\"\n\n*/\n\n/*\nIFrameSimulator\nThis little doozey allows us to create a simulated iframe. We can query it for\n the params placed on the iframe, and talk to it via the window channel -- it has \n its own window channel.\n Good thing we designed the channel for multiple channels per window.\n*/\nclass IFrameSimulator {\n    params: IFrameParams | null\n    channel: Channel\n\n    constructor() {\n        this.params = null\n\n        // create a window channel.\n\n        this.channel = new Channel({\n            window: window,\n            host: document.location!.origin\n        })\n\n    }\n\n    getParamsFromIFrame(): IFrameParams {\n        return {\n            channelId: this.channel.id,\n            frameId: uuid(),\n            params: {\n                groupsServiceURL: 'services/groups',\n                userProfileServiceURL: 'services/user_profile/rpc',\n                workspaceServiceURL: 'services/ws'\n            },\n            parentHost: document.location!.origin\n        }\n    }\n}\n\n\n\nexport default IFrameSimulator","export interface IFrameParams {\n    channelId: string,\n    frameId: string,\n    params: {\n        groupsServiceURL: string,\n        userProfileServiceURL: string,\n        workspaceServiceURL: string\n    },\n    parentHost: string\n}\n\nexport class IFrameIntegration {\n    getParamsFromIFrame() {\n        if (!window.frameElement) {\n            return null\n        }\n        if (!window.frameElement.hasAttribute('data-params')) {\n            // throw new Error('No params found in window!!');\n            return null\n        }\n        const params = window.frameElement.getAttribute('data-params');\n        if (params === null) {\n            // throw new Error('No params found in window!')\n            return null\n        }\n        return JSON.parse(decodeURIComponent(params)) as IFrameParams\n    }\n}","import { Action } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { ActionFlag } from './index'\nimport * as types from '../../types'\nimport IFrameSimulator, { IFrameParams } from '../../lib/IFrameSimulator';\nimport { IFrameIntegration } from '../../lib/IFrameIntegration';\n\n// Action Definitions\n\n// export interface AppStart extends Action {\n//     type: ActionFlag.APP_START,\n\n// }\n\nexport interface AppSuccess extends Action {\n    type: ActionFlag.APP_SUCCESS,\n    config: types.AppConfig\n}\n\nexport interface AppError extends Action {\n    type: ActionFlag.APP_ERROR,\n    error: AppError\n}\n\n// Action Creators\n\nexport function appSuccess(config: types.AppConfig): AppSuccess {\n    return {\n        type: ActionFlag.APP_SUCCESS,\n        config: config\n    }\n}\n\nexport function appError(error: AppError): AppError {\n    return {\n        type: ActionFlag.APP_ERROR,\n        error: error\n    }\n}\n\n// Action Thunks\n\nexport function appStart() {\n    return (dispatch: ThunkDispatch<types.StoreState, void, Action>, getState: () => types.StoreState) => {\n        // check and see if we are in an iframe\n        const iframeParams = new IFrameIntegration().getParamsFromIFrame()\n\n        if (iframeParams) {\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: iframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: iframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: iframeParams.params.userProfileServiceURL\n                    }\n                }\n            }))\n        } else {\n            const fakeIframeParams = new IFrameSimulator().getParamsFromIFrame()\n            dispatch(appSuccess({\n                baseUrl: '',\n                services: {\n                    Groups: {\n                        url: fakeIframeParams.params.groupsServiceURL\n                    },\n                    UserProfile: {\n                        url: fakeIframeParams.params.userProfileServiceURL\n                    },\n                    Workspace: {\n                        url: fakeIframeParams.params.workspaceServiceURL\n                    }\n                }\n            }))\n        }\n\n\n        // if so, get the params\n\n        // if not, use the fake to get it\n    }\n}\n","import * as React from 'react'\nimport './KBaseIntegration.css'\n\nimport { AppState } from '../types'\nimport { } from '../lib/IFrameSimulator'\n\nexport interface KBaseIntegrationProps {\n    status: AppState,\n    onAppStart: () => void\n}\nclass KBaseIntegration extends React.Component<KBaseIntegrationProps, object> {\n    constructor(props: KBaseIntegrationProps) {\n        super(props)\n\n        // const params = this.getParamsFromIFrame()\n\n        this.props.onAppStart()\n    }\n\n    render() {\n        // TODO: some test like \n        // {this.props.env === 'dev' ? this.buildAuthDev() : this.buildAuthProd()}\n\n        if (this.props.status === AppState.NONE) {\n            return (\n                <div className=\"KBaseIntegration\">\n                    Loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"KBaseIntegration\">\n                    {this.props.children}\n                </div>\n            )\n        }\n    }\n\n    // getParamsFromIFrame() {\n    //     if (!window.frameElement) {\n    //         return null\n    //     }\n    //     if (!window.frameElement.hasAttribute('data-params')) {\n    //         // throw new Error('No params found in window!!');\n    //         return null\n    //     }\n    //     const params = window.frameElement.getAttribute('data-params');\n    //     if (params === null) {\n    //         // throw new Error('No params found in window!')\n    //         return null\n    //     }\n    //     return JSON.parse(decodeURIComponent(params));\n    // }\n}\n\nexport default KBaseIntegration","import { Dispatch, Action } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/app'\n\nimport KBaseIntegration from '../components/KBaseIntegration'\n\nexport interface OwnProps {\n\n}\n\ninterface StateProps {\n    status: types.AppState\n}\n\ninterface DispatchProps {\n    onAppStart: () => void\n}\n\nexport function mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const { app: { status } } = state\n    return {\n        status\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action>): DispatchProps {\n    return {\n        onAppStart: () => {\n            dispatch(actions.appStart() as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(KBaseIntegration)","import { ActionFlag } from './index'\nimport { Organization, GroupRequest, UIError, StoreState, UIErrorType, AppError } from '../../types'\nimport { Model } from '../../data/model'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\n\n// Action types\n\n\n// Start up requests manager\n\nexport interface ManageGroupRequests extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS\n}\n\nexport interface ManageGroupRequestsStart extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_START\n}\n\nexport interface ManageGroupRequestsSuccess extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_SUCCESS,\n    organization: Organization,\n    requests: Array<GroupRequest>\n}\n\nexport interface ManageGroupRequestsError extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_ERROR,\n    error: AppError\n}\n\n// Accept join requests\n\nexport interface ManageGroupRequestsAcceptJoinRequest extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST,\n    requestId: string\n}\n\nexport interface ManageGroupRequestsAcceptJoinRequestStart extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_START,\n    requestId: string\n}\n\nexport interface ManageGroupRequestsAcceptJoinRequestSuccess extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_SUCCESS,\n    request: GroupRequest\n}\n\nexport interface ManageGroupRequestsAcceptJoinRequestError extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_ERROR,\n    error: AppError\n}\n\n\nexport function manageGroupRequestsAcceptJoinRequestStart(requestId: string): ManageGroupRequestsAcceptJoinRequestStart {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_START,\n        requestId: requestId\n    }\n}\n\nexport function manageGroupRequestsAcceptJoinRequestSuccess(request: GroupRequest): ManageGroupRequestsAcceptJoinRequestSuccess {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_SUCCESS,\n        request: request\n    }\n}\n\nexport function manageGroupRequestsAcceptJoinRequestError(error: AppError): ManageGroupRequestsAcceptJoinRequestError {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_ACCEPT_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n// Deny join requests\n\nexport interface ManageGroupRequestsDenyJoinRequest extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST,\n    requestId: string\n}\n\nexport interface ManageGroupRequestsDenyJoinRequestStart extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_START,\n    requestId: string\n}\n\nexport interface ManageGroupRequestsDenyJoinRequestSuccess extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_SUCCESS,\n    request: GroupRequest\n}\n\nexport interface ManageGroupRequestsDenyJoinRequestError extends Action {\n    type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_ERROR,\n    error: AppError\n}\n\n\nexport function manageGroupRequestsDenyJoinRequestStart(requestId: string): ManageGroupRequestsDenyJoinRequestStart {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_START,\n        requestId: requestId\n    }\n}\n\nexport function manageGroupRequestsDenyJoinRequestSuccess(request: GroupRequest): ManageGroupRequestsDenyJoinRequestSuccess {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_SUCCESS,\n        request: request\n    }\n}\n\nexport function manageGroupRequestsDenyJoinRequestError(error: AppError): ManageGroupRequestsDenyJoinRequestError {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_DENY_JOIN_REQUEST_ERROR,\n        error: error\n    }\n}\n\n\n\n// Action generators\n\n\n\nexport function manageGroupRequestsStart(): ManageGroupRequestsStart {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_START\n    }\n}\n\nexport function manageGroupRequestsSuccess(organization: Organization, requests: Array<GroupRequest>): ManageGroupRequestsSuccess {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_SUCCESS,\n        organization: organization,\n        requests: requests\n    }\n}\n\nexport function manageGroupRequestsError(error: AppError): ManageGroupRequestsError {\n    return {\n        type: ActionFlag.ADMIN_MANAGE_REQUESTS_ERROR,\n        error: error\n    }\n}\n\n// Action thunks\n\nexport function manageGroupRequests(groupId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const { auth: { authorization: { token, username } },\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        // get requests \n        Promise.all([\n            model.getOrg(groupId),\n            model.getPendingGroupRequests(groupId)\n        ])\n            .then(([organization, requests]) => {\n                console.log('got requests?', requests)\n                dispatch(manageGroupRequestsSuccess(organization, requests))\n            })\n            .catch((err) => {\n                dispatch(manageGroupRequestsError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function manageGroupRequestsAcceptJoinRequest(requestId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const {\n            auth: { authorization: { token, username } },\n            manageGroupRequestsView,\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!manageGroupRequestsView) {\n            return\n        }\n\n        Promise.all([\n            model.acceptRequest(requestId),\n        ])\n            .then(([request]) => {\n                dispatch(manageGroupRequestsAcceptJoinRequestSuccess(request))\n                if (manageGroupRequestsView.view) {\n                    dispatch(manageGroupRequests(manageGroupRequestsView.view.organization.id))\n                }\n            })\n            .catch((err) => {\n                dispatch(manageGroupRequestsAcceptJoinRequestError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}\n\nexport function manageGroupRequestsDenyJoinRequest(requestId: string) {\n    return (dispatch: ThunkDispatch<StoreState, void, Action>, getState: () => StoreState) => {\n        const {\n            auth: { authorization: { token, username } },\n            manageGroupRequestsView,\n            app: { config } } = getState()\n        const model = new Model({\n            token, username,\n            groupsServiceURL: config.services.Groups.url,\n            userProfileServiceURL: config.services.UserProfile.url,\n            workspaceServiceURL: config.services.Workspace.url\n        })\n\n        if (!manageGroupRequestsView) {\n            return\n        }\n\n        Promise.all([\n            model.denyRequest(requestId),\n        ])\n            .then(([request]) => {\n                dispatch(manageGroupRequestsDenyJoinRequestSuccess(request))\n                if (manageGroupRequestsView.view) {\n                    dispatch(manageGroupRequests(manageGroupRequestsView.view.organization.id))\n                }\n            })\n            .catch((err) => {\n                dispatch(manageGroupRequestsDenyJoinRequestError({\n                    code: err.name,\n                    message: err.message\n                }))\n            })\n    }\n}","import * as React from 'react'\n\nimport './ManageGroupRequests.css'\nimport * as types from '../types';\nimport Header from './Header';\nimport { Icon, Button, Modal, Card } from 'antd';\nimport { Redirect } from 'react-router';\nimport User from './User';\n\nexport interface ManageGroupRequestsProps {\n    organizationId: string,\n    manageGroupRequestsView: types.ManageGroupRequestsView | null,\n    onStart: (organizationId: string) => void,\n    onAcceptJoinRequest: (requestId: string) => void,\n    onDenyJoinRequest: (requestId: string) => void\n}\n\nexport interface ManageGroupRequestsState {\n    cancelToBrowser: boolean\n    cancelToViewer: boolean\n}\n\nclass ManageGroupRequests extends React.Component<ManageGroupRequestsProps, ManageGroupRequestsState> {\n\n    constructor(props: ManageGroupRequestsProps) {\n        super(props)\n\n        this.state = {\n            cancelToBrowser: false,\n            cancelToViewer: false\n        }\n\n        console.log('props', props)\n        this.props.onStart(this.props.organizationId)\n    }\n\n    onClickCancelToBrowser() {\n        this.setState({ cancelToBrowser: true })\n    }\n\n    onClickCancelToViewer() {\n        this.setState({ cancelToViewer: true })\n    }\n    onAcceptJoinRequest(requestId: string) {\n        if (!(this.props.manageGroupRequestsView && this.props.manageGroupRequestsView.view)) {\n            return\n        }\n        this.props.onAcceptJoinRequest(requestId)\n    }\n    onDenyJoinRequest(requestId: string) {\n        if (!(this.props.manageGroupRequestsView && this.props.manageGroupRequestsView.view)) {\n            return\n        }\n        this.props.onDenyJoinRequest(requestId)\n    }\n    onViewProfile(username: string) {\n        window.open('#people/' + username, '_blank')\n    }\n    onShowInfo() {\n        Modal.info({\n            title: 'Manage Requests Help',\n            width: '50em',\n            content: (\n                <div>\n                    <p>This is the manage requests tool...</p>\n                </div>\n            )\n        })\n    }\n    renderHeader() {\n        let orgName: string\n        if (this.props.manageGroupRequestsView && this.props.manageGroupRequestsView.view) {\n            orgName = this.props.manageGroupRequestsView.view.organization.name\n        } else {\n            orgName = 'loading...'\n        }\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            <Icon type=\"tool\" />\n                            {' '}\n                            Managing Requests for Org \"\n                            {orgName}\n                            \"\n                        </span>\n                    </div>\n                    <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToViewer.bind(this)}>\n                            Return to this Org\n                        </Button>\n                        <Button icon=\"undo\"\n                            type=\"danger\"\n                            onClick={this.onClickCancelToBrowser.bind(this)}>\n                            Return to Orgs Browser\n                        </Button>\n                        <Button\n                            shape=\"circle\"\n                            icon=\"info\"\n                            onClick={this.onShowInfo.bind(this)}>\n                        </Button>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderLoadingHeader() {\n        return (\n            <Header>\n                <div style={{ flex: '1 1 0px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <div style={{ flex: '0 0 auto' }}>\n                        <span>\n                            Loading Org Editor...\n                        </span>\n                    </div>\n                </div>\n            </Header>\n        )\n    }\n\n    renderRequestType(type: types.RequestType) {\n        switch (type) {\n            case types.RequestType.JOIN_GROUP_REQUEST:\n                return 'Join Group Request'\n            case types.RequestType.JOIN_GROUP_INVITE:\n                return 'Join Group Invitation'\n            case types.RequestType.ADD_WORKSPACE_REQUEST:\n                return 'Add Workspace Request'\n            case types.RequestType.ADD_WORKSPACE_INVITE:\n                return 'Add Workspace Invitation'\n        }\n    }\n\n    niceElapsed(someDate: Date) {\n        const nowDate = new Date()\n\n        const elapsed = Math.round((nowDate.getTime() - someDate.getTime()) / 1000);\n        const elapsedAbs = Math.abs(elapsed);\n\n        let measure, measureAbs, unit;\n        const maxDays = 90\n        if (elapsedAbs < 60 * 60 * 24 * maxDays) {\n            if (elapsedAbs === 0) {\n                return 'now';\n            } else if (elapsedAbs < 60) {\n                measure = elapsed;\n                measureAbs = elapsedAbs;\n                unit = 'second';\n            } else if (elapsedAbs < 60 * 60) {\n                measure = Math.round(elapsed / 60);\n                measureAbs = Math.round(elapsedAbs / 60);\n                unit = 'minute';\n            } else if (elapsedAbs < 60 * 60 * 24) {\n                measure = Math.round(elapsed / 3600);\n                measureAbs = Math.round(elapsedAbs / 3600);\n                unit = 'hour';\n            } else {\n                measure = Math.round(elapsed / (3600 * 24));\n                measureAbs = Math.round(elapsedAbs / (3600 * 24));\n                unit = 'day';\n            }\n\n            if (measureAbs > 1) {\n                unit += 's';\n            }\n\n            let prefix = null;\n            let suffix = null;\n            if (measure < 0) {\n                prefix = 'in';\n            } else if (measure > 0) {\n                suffix = 'ago';\n            }\n\n            return (prefix ? prefix + ' ' : '') + measureAbs + ' ' + unit + (suffix ? ' ' + suffix : '');\n        } else {\n            // otherwise show the actual date, with or without the year.\n            if (nowDate.getFullYear() === nowDate.getFullYear()) {\n                return Intl.DateTimeFormat('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                }).format(someDate)\n                // return shortMonths[date.getMonth()] + ' ' + date.getDate();\n            } else {\n                return Intl.DateTimeFormat('en-US', {\n                    month: 'short',\n                    day: 'numeric',\n                    year: 'numeric'\n                }).format(someDate)\n                // return shortMonths[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n            }\n        }\n    }\n\n    renderRequestJoinRequest(request: types.GroupRequest) {\n        const title = (\n            <span>\n                <Icon type=\"user\" />\n                <Icon type=\"arrow-right\" />\n                <Icon type=\"team\" />\n                {' '}\n                Request to Join Group\n            </span>\n        )\n        const actions = [\n            <Button\n                type=\"primary\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onAcceptJoinRequest.call(this, request.id)}>\n                Approve\n            </Button>,\n            <Button\n                type=\"danger\"\n                style={{ margin: '0 5px' }}\n                onClick={() => this.onDenyJoinRequest.call(this, request.id)}>\n                Deny\n            </Button>\n            // <Button\n            //     style={{ margin: '0 5px' }}\n            //     onClick={() => this.onViewProfile.call(this, request.requester.username)}>\n            //     View Requester's User Profile\n            // </Button>\n        ]\n\n        return (\n            <Card key={request.id}\n                title={title}\n                hoverable={true}\n                actions={actions}\n                headStyle={{ backgroundColor: 'rgba(200, 200, 200,0.3' }}\n                style={{ marginBottom: '10px' }}>\n                <table className=\"pendingRequestsTable\">\n                    <tr>\n                        <th>from</th>\n                        <td className=\"requester\">\n                            <User user={request.requester} avatarSize={50} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>sent</th>\n                        <td className=\"createdAt\">{Intl.DateTimeFormat('en-US', {\n                            month: 'long',\n                            day: 'numeric',\n                            year: 'numeric'\n                        }).format(request.createdAt)}</td>\n                    </tr>\n                    <tr>\n                        <th>expires</th>\n                        <td className=\"expiresAt\">{Intl.DateTimeFormat('en-US', {\n                            month: 'long',\n                            day: 'numeric',\n                            year: 'numeric'\n                        }).format(request.expireAt)} ({this.niceElapsed(request.expireAt)})</td>\n                    </tr>\n                </table>\n            </Card>\n        )\n    }\n\n    renderInviteJoinRequest(request: types.GroupRequest) {\n        return (\n            <div>Not yet implemented</div>\n        )\n    }\n\n    renderRequestNarrativeRequest(request: types.GroupRequest) {\n        return (\n            <div>Not yet implemented</div>\n        )\n    }\n\n    renderInviteNarrativeRequest(request: types.GroupRequest) {\n        return (\n            <div>Not yet implemented</div>\n        )\n    }\n\n    renderRequest(request: types.GroupRequest) {\n        switch (request.type) {\n            case types.RequestType.JOIN_GROUP_REQUEST:\n                return this.renderRequestJoinRequest(request)\n            case types.RequestType.JOIN_GROUP_INVITE:\n                return this.renderInviteJoinRequest(request)\n            case types.RequestType.ADD_WORKSPACE_REQUEST:\n                return this.renderRequestNarrativeRequest(request)\n            case types.RequestType.ADD_WORKSPACE_INVITE:\n                return this.renderInviteNarrativeRequest(request)\n        }\n    }\n\n    // renderRequestxx(request: types.GroupRequest) {\n    //     const title = (\n    //         <span>\n    //             <Icon type=\"user\" />\n    //             <Icon type=\"arrow-right\" />\n    //             <Icon type=\"team\" />\n    //             {' '}\n    //             Request to Join Group\n    //         </span>\n    //     )\n    //     return (\n    //         <Card key={request.id}\n    //             title={title}\n    //             hoverable={true}\n    //             style={{ marginBottom: '10px' }}>\n    //             {this.renderRequestSpecificType(request)}\n    //         </Card>\n    //     )\n    // }\n\n    // renderRequestx(request: types.GroupRequest) {\n    //     return (\n    //         <div key={request.id} className=\"groupRequest\">\n    //             <div className=\"requestType\">{this.renderRequestType(request.type)}</div>\n    //             {/* <div className=\"field\">\n    //                 <span className=\"field-label\">type</span>\n    //                 <span className=\"requestType\">{this.renderRequestType(request.type)}</span>\n    //             </div> */}\n    //             {/* <div className=\"field\">\n    //                 <span className=\"field-label\">id</span>\n    //                 <span>{request.id}</span>\n    //             </div> */}\n    //             {this.renderRequestSpecificType(request)}\n    //         </div>\n    //     )\n    // }\n\n    renderRequests() {\n        if (!(this.props.manageGroupRequestsView && this.props.manageGroupRequestsView.view)) {\n            return\n        }\n        if (this.props.manageGroupRequestsView.view.requests.length === 0) {\n            return (\n                <p style={{ textAlign: 'center', padding: '10px' }}>\n                    No pending requests for this organization\n                </p>\n            )\n        }\n        return this.props.manageGroupRequestsView.view.requests.map((request) => {\n            return this.renderRequest(request)\n        })\n    }\n\n    render() {\n\n        if (this.state.cancelToBrowser) {\n            return <Redirect push to=\"/organizations\" />\n        }\n\n        if (this.state.cancelToViewer) {\n            return <Redirect push to={\"/viewOrganization/\" + this.props.organizationId} />\n        }\n\n        return (\n            <div className=\"ManageGroupRequests\">\n                {this.renderHeader()}\n                <div className=\"row\">\n                    <div className=\"pendingCol\">\n                        <h2>Current Pending Requests</h2>\n                        <div className=\"pendingRequests\">\n                            {this.renderRequests()}\n                        </div>\n                    </div>\n                    <div className=\"historyCol\">\n                        <h2>Request History</h2>\n                        <p>[to be done]</p>\n                        <p>This will show a browesable, searchable, filterable list\n                            of \"closed\" (canceled, accepted, denied) requests. Default shows\n                            all in descending date (modified) order\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ManageGroupRequests","import { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as types from '../types'\nimport * as actions from '../redux/actions/manageGroupRequests'\n\nimport ManageGroupRequests from '../components/ManageGroupRequests'\n\nexport interface OwnProps {\n    organizationId: string\n}\n\ninterface StateProps {\n    manageGroupRequestsView: types.ManageGroupRequestsView | null\n}\n\ninterface DispatchProps {\n    onStart: (organizationId: string) => void,\n    onAcceptJoinRequest: (requestId: string) => void,\n    onDenyJoinRequest: (requestId: string) => void\n}\n\nfunction mapStateToProps(state: types.StoreState, props: OwnProps): StateProps {\n    const {\n        manageGroupRequestsView\n    } = state\n    return {\n        manageGroupRequestsView\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.ManageGroupRequests>): DispatchProps {\n    return {\n        onStart: (organizationId: string) => {\n            dispatch(actions.manageGroupRequests(organizationId) as any)\n        },\n        onAcceptJoinRequest: (requestId: string) => {\n            dispatch(actions.manageGroupRequestsAcceptJoinRequest(requestId) as any)\n        },\n        onDenyJoinRequest: (requestId: string) => {\n            dispatch(actions.manageGroupRequestsDenyJoinRequest(requestId) as any)\n        }\n    }\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps, types.StoreState>(mapStateToProps, mapDispatchToProps)(ManageGroupRequests)\n\n","import { StoreState, SortDirection, AuthState, AppState, EditState, SaveState, ValidationState, ViewOrgState, EditOrgState } from \"../types\";\nimport { StaticData } from \"../data/model\";\n\nexport class StateInstances {\n    static makeInitialState(): StoreState {\n        return {\n            browseOrgs: {\n                rawOrganizations: [],\n                organizations: [],\n                totalCount: 0,\n                filteredCount: 0,\n                sortBy: 'name',\n                sortDirection: SortDirection.ASCENDING,\n                filter: 'all',\n                searchTerms: [],\n                selectedOrganizationId: null,\n                searching: false,\n            },\n\n            auth: {\n                status: AuthState.NONE,\n                message: '',\n                authorization: {\n                    token: '',\n                    username: '',\n                    realname: '',\n                    roles: []\n                }\n            },\n            error: null,\n\n            app: {\n                status: AppState.NONE,\n                config: {\n                    baseUrl: '',\n                    services: {\n                        Groups: {\n                            url: ''\n                        },\n                        UserProfile: {\n                            url: ''\n                        },\n                        Workspace: {\n                            url: ''\n                        }\n                    }\n                }\n            },\n            addOrg: {\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                newOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n            updateOrg: {\n                pending: false\n            },\n            viewOrg: {\n                state: ViewOrgState.NONE\n            },\n            editOrg: {\n                organizationId: '',\n                editState: EditState.NONE,\n                saveState: SaveState.NONE,\n                validationState: ValidationState.NONE,\n                editedOrganization: StaticData.makeEmptyEditableOrganization()\n            },\n            manageGroupRequestsView: null\n        }\n    }\n}","import React, { Component } from 'react'\nimport { Route } from 'react-router'\nimport { BrowserRouter, Redirect, HashRouter } from 'react-router-dom'\n\n// redux\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport theReducer from './redux/reducers'\n\n// the app and subcomponents\nimport './App.css';\n\n// fontawesome setup\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner, faSearch } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faSpinner, faSearch)\n\nimport OrganizationsBrowser from './containers/OrganizationsBrowser'\nimport NewOrganization from './containers/NewOrganization'\nimport ViewOrganization from './containers/ViewOrganization'\nimport EditOrganization from './containers/EditOrganization'\nimport Auth from './containers/Auth'\nimport KBaseIntegration from './containers/KBaseIntegration'\nimport ManageGroupRequests from './containers/ManageGroupRequests'\nimport { StateInstances } from './redux/state';\n\n// Put the redux store together\n// Just for prototyping --- This is super naive and will change!\n// import {organizations} from './data/temp';\n\n// TODO: determine the environment\n\nconst hosted = window.frameElement ? true : false\n\n// Set up initial state \n// TODO: move to own file\nconst initialState = StateInstances.makeInitialState()\n\n\n// TODO: remove the cast of reducer to any...\n// const middleware = [thunk]\n// const store = createStore<StoreState, SortOrgs, null, null>(theReducer as any, initialState, applyMiddleware(thunk));\nconst store = createStore(theReducer as any, initialState as any, compose(applyMiddleware(thunk)))\n\nclass App extends Component {\n  constructor(props: any) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Auth hosted={hosted}>\n          <KBaseIntegration>\n            <HashRouter basename=\"/orgs/\">\n              <div className=\"App\">\n                <div className=\"App-body\">\n                  <Route path=\"/organizations\" component={OrganizationsBrowser} />\n                  <Route path=\"/newOrganization\" component={NewOrganization} />\n                  {/* The destructuring below is ugly, but effective */}\n                  <Route path=\"/viewOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ViewOrganization id={id} />} />\n                  <Route path=\"/editOrganization/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <EditOrganization id={id} />} />\n                  <Route path=\"/manageGroupRequests/:id\" component={({ match: { params: { id } } }: { match: { params: { id: string } } }) => <ManageGroupRequests organizationId={id} />} />\n                  <Redirect from=\"/\" to=\"/organizations\" exact={true} />\n                </div>\n              </div>\n            </HashRouter>\n          </KBaseIntegration>\n        </Auth>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'typeface-oxygen';\nimport 'normalize.css';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}